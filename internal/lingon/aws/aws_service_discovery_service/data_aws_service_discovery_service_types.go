// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_service_discovery_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatadnsConfigAttributes struct {
	ref terra.Reference
}

func (dc DatadnsConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc DatadnsConfigAttributes) InternalWithRef(ref terra.Reference) DatadnsConfigAttributes {
	return DatadnsConfigAttributes{ref: ref}
}

func (dc DatadnsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc DatadnsConfigAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("namespace_id"))
}

func (dc DatadnsConfigAttributes) RoutingPolicy() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("routing_policy"))
}

func (dc DatadnsConfigAttributes) DnsRecords() terra.ListValue[DatadnsConfigDnsRecordsAttributes] {
	return terra.ReferenceAsList[DatadnsConfigDnsRecordsAttributes](dc.ref.Append("dns_records"))
}

type DatadnsConfigDnsRecordsAttributes struct {
	ref terra.Reference
}

func (dr DatadnsConfigDnsRecordsAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr DatadnsConfigDnsRecordsAttributes) InternalWithRef(ref terra.Reference) DatadnsConfigDnsRecordsAttributes {
	return DatadnsConfigDnsRecordsAttributes{ref: ref}
}

func (dr DatadnsConfigDnsRecordsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr DatadnsConfigDnsRecordsAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("ttl"))
}

func (dr DatadnsConfigDnsRecordsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("type"))
}

type DatahealthCheckConfigAttributes struct {
	ref terra.Reference
}

func (hcc DatahealthCheckConfigAttributes) InternalRef() (terra.Reference, error) {
	return hcc.ref, nil
}

func (hcc DatahealthCheckConfigAttributes) InternalWithRef(ref terra.Reference) DatahealthCheckConfigAttributes {
	return DatahealthCheckConfigAttributes{ref: ref}
}

func (hcc DatahealthCheckConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hcc.ref.InternalTokens()
}

func (hcc DatahealthCheckConfigAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hcc.ref.Append("failure_threshold"))
}

func (hcc DatahealthCheckConfigAttributes) ResourcePath() terra.StringValue {
	return terra.ReferenceAsString(hcc.ref.Append("resource_path"))
}

func (hcc DatahealthCheckConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(hcc.ref.Append("type"))
}

type DatahealthCheckCustomConfigAttributes struct {
	ref terra.Reference
}

func (hccc DatahealthCheckCustomConfigAttributes) InternalRef() (terra.Reference, error) {
	return hccc.ref, nil
}

func (hccc DatahealthCheckCustomConfigAttributes) InternalWithRef(ref terra.Reference) DatahealthCheckCustomConfigAttributes {
	return DatahealthCheckCustomConfigAttributes{ref: ref}
}

func (hccc DatahealthCheckCustomConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hccc.ref.InternalTokens()
}

func (hccc DatahealthCheckCustomConfigAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hccc.ref.Append("failure_threshold"))
}

type DataDnsConfigState struct {
	NamespaceId   string                         `json:"namespace_id"`
	RoutingPolicy string                         `json:"routing_policy"`
	DnsRecords    []DataDnsConfigDnsRecordsState `json:"dns_records"`
}

type DataDnsConfigDnsRecordsState struct {
	Ttl  float64 `json:"ttl"`
	Type string  `json:"type"`
}

type DataHealthCheckConfigState struct {
	FailureThreshold float64 `json:"failure_threshold"`
	ResourcePath     string  `json:"resource_path"`
	Type             string  `json:"type"`
}

type DataHealthCheckCustomConfigState struct {
	FailureThreshold float64 `json:"failure_threshold"`
}
