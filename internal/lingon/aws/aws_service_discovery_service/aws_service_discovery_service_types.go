// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_service_discovery_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DnsConfig struct {
	// NamespaceId is required.
	NamespaceId terra.StringValue `hcl:"namespace_id,attr" validate:"required"`
	// RoutingPolicy is optional.
	RoutingPolicy terra.StringValue `hcl:"routing_policy,attr"`
	// DnsConfigDnsRecords is min=1.
	DnsRecords []DnsConfigDnsRecords `hcl:"dns_records,block" validate:"min=1"`
}

type DnsConfigDnsRecords struct {
	// Ttl is required.
	Ttl terra.NumberValue `hcl:"ttl,attr" validate:"required"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type HealthCheckConfig struct {
	// FailureThreshold is optional.
	FailureThreshold terra.NumberValue `hcl:"failure_threshold,attr"`
	// ResourcePath is optional.
	ResourcePath terra.StringValue `hcl:"resource_path,attr"`
	// Type is optional.
	Type terra.StringValue `hcl:"type,attr"`
}

type HealthCheckCustomConfig struct {
	// FailureThreshold is optional.
	FailureThreshold terra.NumberValue `hcl:"failure_threshold,attr"`
}

type dnsConfigAttributes struct {
	ref terra.Reference
}

func (dc dnsConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc dnsConfigAttributes) InternalWithRef(ref terra.Reference) dnsConfigAttributes {
	return dnsConfigAttributes{ref: ref}
}

func (dc dnsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc dnsConfigAttributes) NamespaceId() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("namespace_id"))
}

func (dc dnsConfigAttributes) RoutingPolicy() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("routing_policy"))
}

func (dc dnsConfigAttributes) DnsRecords() terra.ListValue[dnsConfigDnsRecordsAttributes] {
	return terra.ReferenceAsList[dnsConfigDnsRecordsAttributes](dc.ref.Append("dns_records"))
}

type dnsConfigDnsRecordsAttributes struct {
	ref terra.Reference
}

func (dr dnsConfigDnsRecordsAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr dnsConfigDnsRecordsAttributes) InternalWithRef(ref terra.Reference) dnsConfigDnsRecordsAttributes {
	return dnsConfigDnsRecordsAttributes{ref: ref}
}

func (dr dnsConfigDnsRecordsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr dnsConfigDnsRecordsAttributes) Ttl() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("ttl"))
}

func (dr dnsConfigDnsRecordsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("type"))
}

type healthCheckConfigAttributes struct {
	ref terra.Reference
}

func (hcc healthCheckConfigAttributes) InternalRef() (terra.Reference, error) {
	return hcc.ref, nil
}

func (hcc healthCheckConfigAttributes) InternalWithRef(ref terra.Reference) healthCheckConfigAttributes {
	return healthCheckConfigAttributes{ref: ref}
}

func (hcc healthCheckConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hcc.ref.InternalTokens()
}

func (hcc healthCheckConfigAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hcc.ref.Append("failure_threshold"))
}

func (hcc healthCheckConfigAttributes) ResourcePath() terra.StringValue {
	return terra.ReferenceAsString(hcc.ref.Append("resource_path"))
}

func (hcc healthCheckConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(hcc.ref.Append("type"))
}

type healthCheckCustomConfigAttributes struct {
	ref terra.Reference
}

func (hccc healthCheckCustomConfigAttributes) InternalRef() (terra.Reference, error) {
	return hccc.ref, nil
}

func (hccc healthCheckCustomConfigAttributes) InternalWithRef(ref terra.Reference) healthCheckCustomConfigAttributes {
	return healthCheckCustomConfigAttributes{ref: ref}
}

func (hccc healthCheckCustomConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hccc.ref.InternalTokens()
}

func (hccc healthCheckCustomConfigAttributes) FailureThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hccc.ref.Append("failure_threshold"))
}

type DnsConfigState struct {
	NamespaceId   string                     `json:"namespace_id"`
	RoutingPolicy string                     `json:"routing_policy"`
	DnsRecords    []DnsConfigDnsRecordsState `json:"dns_records"`
}

type DnsConfigDnsRecordsState struct {
	Ttl  float64 `json:"ttl"`
	Type string  `json:"type"`
}

type HealthCheckConfigState struct {
	FailureThreshold float64 `json:"failure_threshold"`
	ResourcePath     string  `json:"resource_path"`
	Type             string  `json:"type"`
}

type HealthCheckCustomConfigState struct {
	FailureThreshold float64 `json:"failure_threshold"`
}
