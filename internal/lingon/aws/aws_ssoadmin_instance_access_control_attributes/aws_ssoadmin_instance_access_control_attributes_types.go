// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssoadmin_instance_access_control_attributes

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Attribute struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// AttributeValue is min=1.
	Value []AttributeValue `hcl:"value,block" validate:"min=1"`
}

type AttributeValue struct {
	// Source is required.
	Source terra.SetValue[terra.StringValue] `hcl:"source,attr" validate:"required"`
}

type attributeAttributes struct {
	ref terra.Reference
}

func (a attributeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a attributeAttributes) InternalWithRef(ref terra.Reference) attributeAttributes {
	return attributeAttributes{ref: ref}
}

func (a attributeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a attributeAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("key"))
}

func (a attributeAttributes) Value() terra.SetValue[attributeValueAttributes] {
	return terra.ReferenceAsSet[attributeValueAttributes](a.ref.Append("value"))
}

type attributeValueAttributes struct {
	ref terra.Reference
}

func (v attributeValueAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v attributeValueAttributes) InternalWithRef(ref terra.Reference) attributeValueAttributes {
	return attributeValueAttributes{ref: ref}
}

func (v attributeValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v attributeValueAttributes) Source() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](v.ref.Append("source"))
}

type AttributeState struct {
	Key   string                `json:"key"`
	Value []AttributeValueState `json:"value"`
}

type AttributeValueState struct {
	Source []string `json:"source"`
}
