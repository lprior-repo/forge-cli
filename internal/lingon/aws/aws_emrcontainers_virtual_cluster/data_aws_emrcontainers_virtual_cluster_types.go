// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_emrcontainers_virtual_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatacontainerProviderAttributes struct {
	ref terra.Reference
}

func (cp DatacontainerProviderAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp DatacontainerProviderAttributes) InternalWithRef(ref terra.Reference) DatacontainerProviderAttributes {
	return DatacontainerProviderAttributes{ref: ref}
}

func (cp DatacontainerProviderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp DatacontainerProviderAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("id"))
}

func (cp DatacontainerProviderAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("type"))
}

func (cp DatacontainerProviderAttributes) Info() terra.ListValue[DatacontainerProviderInfoAttributes] {
	return terra.ReferenceAsList[DatacontainerProviderInfoAttributes](cp.ref.Append("info"))
}

type DatacontainerProviderInfoAttributes struct {
	ref terra.Reference
}

func (i DatacontainerProviderInfoAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i DatacontainerProviderInfoAttributes) InternalWithRef(ref terra.Reference) DatacontainerProviderInfoAttributes {
	return DatacontainerProviderInfoAttributes{ref: ref}
}

func (i DatacontainerProviderInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i DatacontainerProviderInfoAttributes) EksInfo() terra.ListValue[DatacontainerProviderInfoEksInfoAttributes] {
	return terra.ReferenceAsList[DatacontainerProviderInfoEksInfoAttributes](i.ref.Append("eks_info"))
}

type DatacontainerProviderInfoEksInfoAttributes struct {
	ref terra.Reference
}

func (ei DatacontainerProviderInfoEksInfoAttributes) InternalRef() (terra.Reference, error) {
	return ei.ref, nil
}

func (ei DatacontainerProviderInfoEksInfoAttributes) InternalWithRef(ref terra.Reference) DatacontainerProviderInfoEksInfoAttributes {
	return DatacontainerProviderInfoEksInfoAttributes{ref: ref}
}

func (ei DatacontainerProviderInfoEksInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ei.ref.InternalTokens()
}

func (ei DatacontainerProviderInfoEksInfoAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(ei.ref.Append("namespace"))
}

type DataContainerProviderState struct {
	Id   string                           `json:"id"`
	Type string                           `json:"type"`
	Info []DataContainerProviderInfoState `json:"info"`
}

type DataContainerProviderInfoState struct {
	EksInfo []DataContainerProviderInfoEksInfoState `json:"eks_info"`
}

type DataContainerProviderInfoEksInfoState struct {
	Namespace string `json:"namespace"`
}
