// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_transfer_workflow

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type OnExceptionSteps struct {
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// OnExceptionStepsCopyStepDetails is optional.
	CopyStepDetails *OnExceptionStepsCopyStepDetails `hcl:"copy_step_details,block"`
	// OnExceptionStepsCustomStepDetails is optional.
	CustomStepDetails *OnExceptionStepsCustomStepDetails `hcl:"custom_step_details,block"`
	// OnExceptionStepsDecryptStepDetails is optional.
	DecryptStepDetails *OnExceptionStepsDecryptStepDetails `hcl:"decrypt_step_details,block"`
	// OnExceptionStepsDeleteStepDetails is optional.
	DeleteStepDetails *OnExceptionStepsDeleteStepDetails `hcl:"delete_step_details,block"`
	// OnExceptionStepsTagStepDetails is optional.
	TagStepDetails *OnExceptionStepsTagStepDetails `hcl:"tag_step_details,block"`
}

type OnExceptionStepsCopyStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// OverwriteExisting is optional.
	OverwriteExisting terra.StringValue `hcl:"overwrite_existing,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// OnExceptionStepsCopyStepDetailsDestinationFileLocation is optional.
	DestinationFileLocation *OnExceptionStepsCopyStepDetailsDestinationFileLocation `hcl:"destination_file_location,block"`
}

type OnExceptionStepsCopyStepDetailsDestinationFileLocation struct {
	// OnExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocation is optional.
	EfsFileLocation *OnExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocation `hcl:"efs_file_location,block"`
	// OnExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocation is optional.
	S3FileLocation *OnExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocation `hcl:"s3_file_location,block"`
}

type OnExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocation struct {
	// FileSystemId is optional.
	FileSystemId terra.StringValue `hcl:"file_system_id,attr"`
	// Path is optional.
	Path terra.StringValue `hcl:"path,attr"`
}

type OnExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocation struct {
	// Bucket is optional.
	Bucket terra.StringValue `hcl:"bucket,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
}

type OnExceptionStepsCustomStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// Target is optional.
	Target terra.StringValue `hcl:"target,attr"`
	// TimeoutSeconds is optional.
	TimeoutSeconds terra.NumberValue `hcl:"timeout_seconds,attr"`
}

type OnExceptionStepsDecryptStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// OverwriteExisting is optional.
	OverwriteExisting terra.StringValue `hcl:"overwrite_existing,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// OnExceptionStepsDecryptStepDetailsDestinationFileLocation is optional.
	DestinationFileLocation *OnExceptionStepsDecryptStepDetailsDestinationFileLocation `hcl:"destination_file_location,block"`
}

type OnExceptionStepsDecryptStepDetailsDestinationFileLocation struct {
	// OnExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocation is optional.
	EfsFileLocation *OnExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocation `hcl:"efs_file_location,block"`
	// OnExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocation is optional.
	S3FileLocation *OnExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocation `hcl:"s3_file_location,block"`
}

type OnExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocation struct {
	// FileSystemId is optional.
	FileSystemId terra.StringValue `hcl:"file_system_id,attr"`
	// Path is optional.
	Path terra.StringValue `hcl:"path,attr"`
}

type OnExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocation struct {
	// Bucket is optional.
	Bucket terra.StringValue `hcl:"bucket,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
}

type OnExceptionStepsDeleteStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
}

type OnExceptionStepsTagStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// OnExceptionStepsTagStepDetailsTags is min=0,max=10.
	Tags []OnExceptionStepsTagStepDetailsTags `hcl:"tags,block" validate:"min=0,max=10"`
}

type OnExceptionStepsTagStepDetailsTags struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Steps struct {
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// StepsCopyStepDetails is optional.
	CopyStepDetails *StepsCopyStepDetails `hcl:"copy_step_details,block"`
	// StepsCustomStepDetails is optional.
	CustomStepDetails *StepsCustomStepDetails `hcl:"custom_step_details,block"`
	// StepsDecryptStepDetails is optional.
	DecryptStepDetails *StepsDecryptStepDetails `hcl:"decrypt_step_details,block"`
	// StepsDeleteStepDetails is optional.
	DeleteStepDetails *StepsDeleteStepDetails `hcl:"delete_step_details,block"`
	// StepsTagStepDetails is optional.
	TagStepDetails *StepsTagStepDetails `hcl:"tag_step_details,block"`
}

type StepsCopyStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// OverwriteExisting is optional.
	OverwriteExisting terra.StringValue `hcl:"overwrite_existing,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// StepsCopyStepDetailsDestinationFileLocation is optional.
	DestinationFileLocation *StepsCopyStepDetailsDestinationFileLocation `hcl:"destination_file_location,block"`
}

type StepsCopyStepDetailsDestinationFileLocation struct {
	// StepsCopyStepDetailsDestinationFileLocationEfsFileLocation is optional.
	EfsFileLocation *StepsCopyStepDetailsDestinationFileLocationEfsFileLocation `hcl:"efs_file_location,block"`
	// StepsCopyStepDetailsDestinationFileLocationS3FileLocation is optional.
	S3FileLocation *StepsCopyStepDetailsDestinationFileLocationS3FileLocation `hcl:"s3_file_location,block"`
}

type StepsCopyStepDetailsDestinationFileLocationEfsFileLocation struct {
	// FileSystemId is optional.
	FileSystemId terra.StringValue `hcl:"file_system_id,attr"`
	// Path is optional.
	Path terra.StringValue `hcl:"path,attr"`
}

type StepsCopyStepDetailsDestinationFileLocationS3FileLocation struct {
	// Bucket is optional.
	Bucket terra.StringValue `hcl:"bucket,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
}

type StepsCustomStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// Target is optional.
	Target terra.StringValue `hcl:"target,attr"`
	// TimeoutSeconds is optional.
	TimeoutSeconds terra.NumberValue `hcl:"timeout_seconds,attr"`
}

type StepsDecryptStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// OverwriteExisting is optional.
	OverwriteExisting terra.StringValue `hcl:"overwrite_existing,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// StepsDecryptStepDetailsDestinationFileLocation is optional.
	DestinationFileLocation *StepsDecryptStepDetailsDestinationFileLocation `hcl:"destination_file_location,block"`
}

type StepsDecryptStepDetailsDestinationFileLocation struct {
	// StepsDecryptStepDetailsDestinationFileLocationEfsFileLocation is optional.
	EfsFileLocation *StepsDecryptStepDetailsDestinationFileLocationEfsFileLocation `hcl:"efs_file_location,block"`
	// StepsDecryptStepDetailsDestinationFileLocationS3FileLocation is optional.
	S3FileLocation *StepsDecryptStepDetailsDestinationFileLocationS3FileLocation `hcl:"s3_file_location,block"`
}

type StepsDecryptStepDetailsDestinationFileLocationEfsFileLocation struct {
	// FileSystemId is optional.
	FileSystemId terra.StringValue `hcl:"file_system_id,attr"`
	// Path is optional.
	Path terra.StringValue `hcl:"path,attr"`
}

type StepsDecryptStepDetailsDestinationFileLocationS3FileLocation struct {
	// Bucket is optional.
	Bucket terra.StringValue `hcl:"bucket,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
}

type StepsDeleteStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
}

type StepsTagStepDetails struct {
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// SourceFileLocation is optional.
	SourceFileLocation terra.StringValue `hcl:"source_file_location,attr"`
	// StepsTagStepDetailsTags is min=0,max=10.
	Tags []StepsTagStepDetailsTags `hcl:"tags,block" validate:"min=0,max=10"`
}

type StepsTagStepDetailsTags struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type onExceptionStepsAttributes struct {
	ref terra.Reference
}

func (oes onExceptionStepsAttributes) InternalRef() (terra.Reference, error) {
	return oes.ref, nil
}

func (oes onExceptionStepsAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsAttributes {
	return onExceptionStepsAttributes{ref: ref}
}

func (oes onExceptionStepsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oes.ref.InternalTokens()
}

func (oes onExceptionStepsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(oes.ref.Append("type"))
}

func (oes onExceptionStepsAttributes) CopyStepDetails() terra.ListValue[onExceptionStepsCopyStepDetailsAttributes] {
	return terra.ReferenceAsList[onExceptionStepsCopyStepDetailsAttributes](oes.ref.Append("copy_step_details"))
}

func (oes onExceptionStepsAttributes) CustomStepDetails() terra.ListValue[onExceptionStepsCustomStepDetailsAttributes] {
	return terra.ReferenceAsList[onExceptionStepsCustomStepDetailsAttributes](oes.ref.Append("custom_step_details"))
}

func (oes onExceptionStepsAttributes) DecryptStepDetails() terra.ListValue[onExceptionStepsDecryptStepDetailsAttributes] {
	return terra.ReferenceAsList[onExceptionStepsDecryptStepDetailsAttributes](oes.ref.Append("decrypt_step_details"))
}

func (oes onExceptionStepsAttributes) DeleteStepDetails() terra.ListValue[onExceptionStepsDeleteStepDetailsAttributes] {
	return terra.ReferenceAsList[onExceptionStepsDeleteStepDetailsAttributes](oes.ref.Append("delete_step_details"))
}

func (oes onExceptionStepsAttributes) TagStepDetails() terra.ListValue[onExceptionStepsTagStepDetailsAttributes] {
	return terra.ReferenceAsList[onExceptionStepsTagStepDetailsAttributes](oes.ref.Append("tag_step_details"))
}

type onExceptionStepsCopyStepDetailsAttributes struct {
	ref terra.Reference
}

func (csd onExceptionStepsCopyStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return csd.ref, nil
}

func (csd onExceptionStepsCopyStepDetailsAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsCopyStepDetailsAttributes {
	return onExceptionStepsCopyStepDetailsAttributes{ref: ref}
}

func (csd onExceptionStepsCopyStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csd.ref.InternalTokens()
}

func (csd onExceptionStepsCopyStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("name"))
}

func (csd onExceptionStepsCopyStepDetailsAttributes) OverwriteExisting() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("overwrite_existing"))
}

func (csd onExceptionStepsCopyStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("source_file_location"))
}

func (csd onExceptionStepsCopyStepDetailsAttributes) DestinationFileLocation() terra.ListValue[onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes] {
	return terra.ReferenceAsList[onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes](csd.ref.Append("destination_file_location"))
}

type onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes struct {
	ref terra.Reference
}

func (dfl onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return dfl.ref, nil
}

func (dfl onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes {
	return onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes{ref: ref}
}

func (dfl onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dfl.ref.InternalTokens()
}

func (dfl onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes) EfsFileLocation() terra.ListValue[onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes] {
	return terra.ReferenceAsList[onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes](dfl.ref.Append("efs_file_location"))
}

func (dfl onExceptionStepsCopyStepDetailsDestinationFileLocationAttributes) S3FileLocation() terra.ListValue[onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes] {
	return terra.ReferenceAsList[onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes](dfl.ref.Append("s3_file_location"))
}

type onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes struct {
	ref terra.Reference
}

func (efl onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return efl.ref, nil
}

func (efl onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes {
	return onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes{ref: ref}
}

func (efl onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return efl.ref.InternalTokens()
}

func (efl onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("file_system_id"))
}

func (efl onExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("path"))
}

type onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes struct {
	ref terra.Reference
}

func (sfl onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalRef() (terra.Reference, error) {
	return sfl.ref, nil
}

func (sfl onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes {
	return onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes{ref: ref}
}

func (sfl onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sfl.ref.InternalTokens()
}

func (sfl onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("bucket"))
}

func (sfl onExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("key"))
}

type onExceptionStepsCustomStepDetailsAttributes struct {
	ref terra.Reference
}

func (csd onExceptionStepsCustomStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return csd.ref, nil
}

func (csd onExceptionStepsCustomStepDetailsAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsCustomStepDetailsAttributes {
	return onExceptionStepsCustomStepDetailsAttributes{ref: ref}
}

func (csd onExceptionStepsCustomStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csd.ref.InternalTokens()
}

func (csd onExceptionStepsCustomStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("name"))
}

func (csd onExceptionStepsCustomStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("source_file_location"))
}

func (csd onExceptionStepsCustomStepDetailsAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("target"))
}

func (csd onExceptionStepsCustomStepDetailsAttributes) TimeoutSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(csd.ref.Append("timeout_seconds"))
}

type onExceptionStepsDecryptStepDetailsAttributes struct {
	ref terra.Reference
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return dsd.ref, nil
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsDecryptStepDetailsAttributes {
	return onExceptionStepsDecryptStepDetailsAttributes{ref: ref}
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsd.ref.InternalTokens()
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("name"))
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) OverwriteExisting() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("overwrite_existing"))
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("source_file_location"))
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("type"))
}

func (dsd onExceptionStepsDecryptStepDetailsAttributes) DestinationFileLocation() terra.ListValue[onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes] {
	return terra.ReferenceAsList[onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes](dsd.ref.Append("destination_file_location"))
}

type onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes struct {
	ref terra.Reference
}

func (dfl onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return dfl.ref, nil
}

func (dfl onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes {
	return onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes{ref: ref}
}

func (dfl onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dfl.ref.InternalTokens()
}

func (dfl onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes) EfsFileLocation() terra.ListValue[onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes] {
	return terra.ReferenceAsList[onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes](dfl.ref.Append("efs_file_location"))
}

func (dfl onExceptionStepsDecryptStepDetailsDestinationFileLocationAttributes) S3FileLocation() terra.ListValue[onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes] {
	return terra.ReferenceAsList[onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes](dfl.ref.Append("s3_file_location"))
}

type onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes struct {
	ref terra.Reference
}

func (efl onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return efl.ref, nil
}

func (efl onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes {
	return onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes{ref: ref}
}

func (efl onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return efl.ref.InternalTokens()
}

func (efl onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("file_system_id"))
}

func (efl onExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("path"))
}

type onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes struct {
	ref terra.Reference
}

func (sfl onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalRef() (terra.Reference, error) {
	return sfl.ref, nil
}

func (sfl onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes {
	return onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes{ref: ref}
}

func (sfl onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sfl.ref.InternalTokens()
}

func (sfl onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("bucket"))
}

func (sfl onExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("key"))
}

type onExceptionStepsDeleteStepDetailsAttributes struct {
	ref terra.Reference
}

func (dsd onExceptionStepsDeleteStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return dsd.ref, nil
}

func (dsd onExceptionStepsDeleteStepDetailsAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsDeleteStepDetailsAttributes {
	return onExceptionStepsDeleteStepDetailsAttributes{ref: ref}
}

func (dsd onExceptionStepsDeleteStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsd.ref.InternalTokens()
}

func (dsd onExceptionStepsDeleteStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("name"))
}

func (dsd onExceptionStepsDeleteStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("source_file_location"))
}

type onExceptionStepsTagStepDetailsAttributes struct {
	ref terra.Reference
}

func (tsd onExceptionStepsTagStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return tsd.ref, nil
}

func (tsd onExceptionStepsTagStepDetailsAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsTagStepDetailsAttributes {
	return onExceptionStepsTagStepDetailsAttributes{ref: ref}
}

func (tsd onExceptionStepsTagStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsd.ref.InternalTokens()
}

func (tsd onExceptionStepsTagStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tsd.ref.Append("name"))
}

func (tsd onExceptionStepsTagStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(tsd.ref.Append("source_file_location"))
}

func (tsd onExceptionStepsTagStepDetailsAttributes) Tags() terra.ListValue[onExceptionStepsTagStepDetailsTagsAttributes] {
	return terra.ReferenceAsList[onExceptionStepsTagStepDetailsTagsAttributes](tsd.ref.Append("tags"))
}

type onExceptionStepsTagStepDetailsTagsAttributes struct {
	ref terra.Reference
}

func (t onExceptionStepsTagStepDetailsTagsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t onExceptionStepsTagStepDetailsTagsAttributes) InternalWithRef(ref terra.Reference) onExceptionStepsTagStepDetailsTagsAttributes {
	return onExceptionStepsTagStepDetailsTagsAttributes{ref: ref}
}

func (t onExceptionStepsTagStepDetailsTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t onExceptionStepsTagStepDetailsTagsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t onExceptionStepsTagStepDetailsTagsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type stepsAttributes struct {
	ref terra.Reference
}

func (s stepsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s stepsAttributes) InternalWithRef(ref terra.Reference) stepsAttributes {
	return stepsAttributes{ref: ref}
}

func (s stepsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s stepsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("type"))
}

func (s stepsAttributes) CopyStepDetails() terra.ListValue[stepsCopyStepDetailsAttributes] {
	return terra.ReferenceAsList[stepsCopyStepDetailsAttributes](s.ref.Append("copy_step_details"))
}

func (s stepsAttributes) CustomStepDetails() terra.ListValue[stepsCustomStepDetailsAttributes] {
	return terra.ReferenceAsList[stepsCustomStepDetailsAttributes](s.ref.Append("custom_step_details"))
}

func (s stepsAttributes) DecryptStepDetails() terra.ListValue[stepsDecryptStepDetailsAttributes] {
	return terra.ReferenceAsList[stepsDecryptStepDetailsAttributes](s.ref.Append("decrypt_step_details"))
}

func (s stepsAttributes) DeleteStepDetails() terra.ListValue[stepsDeleteStepDetailsAttributes] {
	return terra.ReferenceAsList[stepsDeleteStepDetailsAttributes](s.ref.Append("delete_step_details"))
}

func (s stepsAttributes) TagStepDetails() terra.ListValue[stepsTagStepDetailsAttributes] {
	return terra.ReferenceAsList[stepsTagStepDetailsAttributes](s.ref.Append("tag_step_details"))
}

type stepsCopyStepDetailsAttributes struct {
	ref terra.Reference
}

func (csd stepsCopyStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return csd.ref, nil
}

func (csd stepsCopyStepDetailsAttributes) InternalWithRef(ref terra.Reference) stepsCopyStepDetailsAttributes {
	return stepsCopyStepDetailsAttributes{ref: ref}
}

func (csd stepsCopyStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csd.ref.InternalTokens()
}

func (csd stepsCopyStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("name"))
}

func (csd stepsCopyStepDetailsAttributes) OverwriteExisting() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("overwrite_existing"))
}

func (csd stepsCopyStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("source_file_location"))
}

func (csd stepsCopyStepDetailsAttributes) DestinationFileLocation() terra.ListValue[stepsCopyStepDetailsDestinationFileLocationAttributes] {
	return terra.ReferenceAsList[stepsCopyStepDetailsDestinationFileLocationAttributes](csd.ref.Append("destination_file_location"))
}

type stepsCopyStepDetailsDestinationFileLocationAttributes struct {
	ref terra.Reference
}

func (dfl stepsCopyStepDetailsDestinationFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return dfl.ref, nil
}

func (dfl stepsCopyStepDetailsDestinationFileLocationAttributes) InternalWithRef(ref terra.Reference) stepsCopyStepDetailsDestinationFileLocationAttributes {
	return stepsCopyStepDetailsDestinationFileLocationAttributes{ref: ref}
}

func (dfl stepsCopyStepDetailsDestinationFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dfl.ref.InternalTokens()
}

func (dfl stepsCopyStepDetailsDestinationFileLocationAttributes) EfsFileLocation() terra.ListValue[stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes] {
	return terra.ReferenceAsList[stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes](dfl.ref.Append("efs_file_location"))
}

func (dfl stepsCopyStepDetailsDestinationFileLocationAttributes) S3FileLocation() terra.ListValue[stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes] {
	return terra.ReferenceAsList[stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes](dfl.ref.Append("s3_file_location"))
}

type stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes struct {
	ref terra.Reference
}

func (efl stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return efl.ref, nil
}

func (efl stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalWithRef(ref terra.Reference) stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes {
	return stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes{ref: ref}
}

func (efl stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return efl.ref.InternalTokens()
}

func (efl stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("file_system_id"))
}

func (efl stepsCopyStepDetailsDestinationFileLocationEfsFileLocationAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("path"))
}

type stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes struct {
	ref terra.Reference
}

func (sfl stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalRef() (terra.Reference, error) {
	return sfl.ref, nil
}

func (sfl stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalWithRef(ref terra.Reference) stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes {
	return stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes{ref: ref}
}

func (sfl stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sfl.ref.InternalTokens()
}

func (sfl stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("bucket"))
}

func (sfl stepsCopyStepDetailsDestinationFileLocationS3FileLocationAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("key"))
}

type stepsCustomStepDetailsAttributes struct {
	ref terra.Reference
}

func (csd stepsCustomStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return csd.ref, nil
}

func (csd stepsCustomStepDetailsAttributes) InternalWithRef(ref terra.Reference) stepsCustomStepDetailsAttributes {
	return stepsCustomStepDetailsAttributes{ref: ref}
}

func (csd stepsCustomStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csd.ref.InternalTokens()
}

func (csd stepsCustomStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("name"))
}

func (csd stepsCustomStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("source_file_location"))
}

func (csd stepsCustomStepDetailsAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(csd.ref.Append("target"))
}

func (csd stepsCustomStepDetailsAttributes) TimeoutSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(csd.ref.Append("timeout_seconds"))
}

type stepsDecryptStepDetailsAttributes struct {
	ref terra.Reference
}

func (dsd stepsDecryptStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return dsd.ref, nil
}

func (dsd stepsDecryptStepDetailsAttributes) InternalWithRef(ref terra.Reference) stepsDecryptStepDetailsAttributes {
	return stepsDecryptStepDetailsAttributes{ref: ref}
}

func (dsd stepsDecryptStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsd.ref.InternalTokens()
}

func (dsd stepsDecryptStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("name"))
}

func (dsd stepsDecryptStepDetailsAttributes) OverwriteExisting() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("overwrite_existing"))
}

func (dsd stepsDecryptStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("source_file_location"))
}

func (dsd stepsDecryptStepDetailsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("type"))
}

func (dsd stepsDecryptStepDetailsAttributes) DestinationFileLocation() terra.ListValue[stepsDecryptStepDetailsDestinationFileLocationAttributes] {
	return terra.ReferenceAsList[stepsDecryptStepDetailsDestinationFileLocationAttributes](dsd.ref.Append("destination_file_location"))
}

type stepsDecryptStepDetailsDestinationFileLocationAttributes struct {
	ref terra.Reference
}

func (dfl stepsDecryptStepDetailsDestinationFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return dfl.ref, nil
}

func (dfl stepsDecryptStepDetailsDestinationFileLocationAttributes) InternalWithRef(ref terra.Reference) stepsDecryptStepDetailsDestinationFileLocationAttributes {
	return stepsDecryptStepDetailsDestinationFileLocationAttributes{ref: ref}
}

func (dfl stepsDecryptStepDetailsDestinationFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dfl.ref.InternalTokens()
}

func (dfl stepsDecryptStepDetailsDestinationFileLocationAttributes) EfsFileLocation() terra.ListValue[stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes] {
	return terra.ReferenceAsList[stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes](dfl.ref.Append("efs_file_location"))
}

func (dfl stepsDecryptStepDetailsDestinationFileLocationAttributes) S3FileLocation() terra.ListValue[stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes] {
	return terra.ReferenceAsList[stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes](dfl.ref.Append("s3_file_location"))
}

type stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes struct {
	ref terra.Reference
}

func (efl stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalRef() (terra.Reference, error) {
	return efl.ref, nil
}

func (efl stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalWithRef(ref terra.Reference) stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes {
	return stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes{ref: ref}
}

func (efl stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return efl.ref.InternalTokens()
}

func (efl stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) FileSystemId() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("file_system_id"))
}

func (efl stepsDecryptStepDetailsDestinationFileLocationEfsFileLocationAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(efl.ref.Append("path"))
}

type stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes struct {
	ref terra.Reference
}

func (sfl stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalRef() (terra.Reference, error) {
	return sfl.ref, nil
}

func (sfl stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalWithRef(ref terra.Reference) stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes {
	return stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes{ref: ref}
}

func (sfl stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sfl.ref.InternalTokens()
}

func (sfl stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("bucket"))
}

func (sfl stepsDecryptStepDetailsDestinationFileLocationS3FileLocationAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(sfl.ref.Append("key"))
}

type stepsDeleteStepDetailsAttributes struct {
	ref terra.Reference
}

func (dsd stepsDeleteStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return dsd.ref, nil
}

func (dsd stepsDeleteStepDetailsAttributes) InternalWithRef(ref terra.Reference) stepsDeleteStepDetailsAttributes {
	return stepsDeleteStepDetailsAttributes{ref: ref}
}

func (dsd stepsDeleteStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dsd.ref.InternalTokens()
}

func (dsd stepsDeleteStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("name"))
}

func (dsd stepsDeleteStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(dsd.ref.Append("source_file_location"))
}

type stepsTagStepDetailsAttributes struct {
	ref terra.Reference
}

func (tsd stepsTagStepDetailsAttributes) InternalRef() (terra.Reference, error) {
	return tsd.ref, nil
}

func (tsd stepsTagStepDetailsAttributes) InternalWithRef(ref terra.Reference) stepsTagStepDetailsAttributes {
	return stepsTagStepDetailsAttributes{ref: ref}
}

func (tsd stepsTagStepDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsd.ref.InternalTokens()
}

func (tsd stepsTagStepDetailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tsd.ref.Append("name"))
}

func (tsd stepsTagStepDetailsAttributes) SourceFileLocation() terra.StringValue {
	return terra.ReferenceAsString(tsd.ref.Append("source_file_location"))
}

func (tsd stepsTagStepDetailsAttributes) Tags() terra.ListValue[stepsTagStepDetailsTagsAttributes] {
	return terra.ReferenceAsList[stepsTagStepDetailsTagsAttributes](tsd.ref.Append("tags"))
}

type stepsTagStepDetailsTagsAttributes struct {
	ref terra.Reference
}

func (t stepsTagStepDetailsTagsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t stepsTagStepDetailsTagsAttributes) InternalWithRef(ref terra.Reference) stepsTagStepDetailsTagsAttributes {
	return stepsTagStepDetailsTagsAttributes{ref: ref}
}

func (t stepsTagStepDetailsTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t stepsTagStepDetailsTagsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t stepsTagStepDetailsTagsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type OnExceptionStepsState struct {
	Type               string                                    `json:"type"`
	CopyStepDetails    []OnExceptionStepsCopyStepDetailsState    `json:"copy_step_details"`
	CustomStepDetails  []OnExceptionStepsCustomStepDetailsState  `json:"custom_step_details"`
	DecryptStepDetails []OnExceptionStepsDecryptStepDetailsState `json:"decrypt_step_details"`
	DeleteStepDetails  []OnExceptionStepsDeleteStepDetailsState  `json:"delete_step_details"`
	TagStepDetails     []OnExceptionStepsTagStepDetailsState     `json:"tag_step_details"`
}

type OnExceptionStepsCopyStepDetailsState struct {
	Name                    string                                                        `json:"name"`
	OverwriteExisting       string                                                        `json:"overwrite_existing"`
	SourceFileLocation      string                                                        `json:"source_file_location"`
	DestinationFileLocation []OnExceptionStepsCopyStepDetailsDestinationFileLocationState `json:"destination_file_location"`
}

type OnExceptionStepsCopyStepDetailsDestinationFileLocationState struct {
	EfsFileLocation []OnExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationState `json:"efs_file_location"`
	S3FileLocation  []OnExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationState  `json:"s3_file_location"`
}

type OnExceptionStepsCopyStepDetailsDestinationFileLocationEfsFileLocationState struct {
	FileSystemId string `json:"file_system_id"`
	Path         string `json:"path"`
}

type OnExceptionStepsCopyStepDetailsDestinationFileLocationS3FileLocationState struct {
	Bucket string `json:"bucket"`
	Key    string `json:"key"`
}

type OnExceptionStepsCustomStepDetailsState struct {
	Name               string  `json:"name"`
	SourceFileLocation string  `json:"source_file_location"`
	Target             string  `json:"target"`
	TimeoutSeconds     float64 `json:"timeout_seconds"`
}

type OnExceptionStepsDecryptStepDetailsState struct {
	Name                    string                                                           `json:"name"`
	OverwriteExisting       string                                                           `json:"overwrite_existing"`
	SourceFileLocation      string                                                           `json:"source_file_location"`
	Type                    string                                                           `json:"type"`
	DestinationFileLocation []OnExceptionStepsDecryptStepDetailsDestinationFileLocationState `json:"destination_file_location"`
}

type OnExceptionStepsDecryptStepDetailsDestinationFileLocationState struct {
	EfsFileLocation []OnExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationState `json:"efs_file_location"`
	S3FileLocation  []OnExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationState  `json:"s3_file_location"`
}

type OnExceptionStepsDecryptStepDetailsDestinationFileLocationEfsFileLocationState struct {
	FileSystemId string `json:"file_system_id"`
	Path         string `json:"path"`
}

type OnExceptionStepsDecryptStepDetailsDestinationFileLocationS3FileLocationState struct {
	Bucket string `json:"bucket"`
	Key    string `json:"key"`
}

type OnExceptionStepsDeleteStepDetailsState struct {
	Name               string `json:"name"`
	SourceFileLocation string `json:"source_file_location"`
}

type OnExceptionStepsTagStepDetailsState struct {
	Name               string                                    `json:"name"`
	SourceFileLocation string                                    `json:"source_file_location"`
	Tags               []OnExceptionStepsTagStepDetailsTagsState `json:"tags"`
}

type OnExceptionStepsTagStepDetailsTagsState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type StepsState struct {
	Type               string                         `json:"type"`
	CopyStepDetails    []StepsCopyStepDetailsState    `json:"copy_step_details"`
	CustomStepDetails  []StepsCustomStepDetailsState  `json:"custom_step_details"`
	DecryptStepDetails []StepsDecryptStepDetailsState `json:"decrypt_step_details"`
	DeleteStepDetails  []StepsDeleteStepDetailsState  `json:"delete_step_details"`
	TagStepDetails     []StepsTagStepDetailsState     `json:"tag_step_details"`
}

type StepsCopyStepDetailsState struct {
	Name                    string                                             `json:"name"`
	OverwriteExisting       string                                             `json:"overwrite_existing"`
	SourceFileLocation      string                                             `json:"source_file_location"`
	DestinationFileLocation []StepsCopyStepDetailsDestinationFileLocationState `json:"destination_file_location"`
}

type StepsCopyStepDetailsDestinationFileLocationState struct {
	EfsFileLocation []StepsCopyStepDetailsDestinationFileLocationEfsFileLocationState `json:"efs_file_location"`
	S3FileLocation  []StepsCopyStepDetailsDestinationFileLocationS3FileLocationState  `json:"s3_file_location"`
}

type StepsCopyStepDetailsDestinationFileLocationEfsFileLocationState struct {
	FileSystemId string `json:"file_system_id"`
	Path         string `json:"path"`
}

type StepsCopyStepDetailsDestinationFileLocationS3FileLocationState struct {
	Bucket string `json:"bucket"`
	Key    string `json:"key"`
}

type StepsCustomStepDetailsState struct {
	Name               string  `json:"name"`
	SourceFileLocation string  `json:"source_file_location"`
	Target             string  `json:"target"`
	TimeoutSeconds     float64 `json:"timeout_seconds"`
}

type StepsDecryptStepDetailsState struct {
	Name                    string                                                `json:"name"`
	OverwriteExisting       string                                                `json:"overwrite_existing"`
	SourceFileLocation      string                                                `json:"source_file_location"`
	Type                    string                                                `json:"type"`
	DestinationFileLocation []StepsDecryptStepDetailsDestinationFileLocationState `json:"destination_file_location"`
}

type StepsDecryptStepDetailsDestinationFileLocationState struct {
	EfsFileLocation []StepsDecryptStepDetailsDestinationFileLocationEfsFileLocationState `json:"efs_file_location"`
	S3FileLocation  []StepsDecryptStepDetailsDestinationFileLocationS3FileLocationState  `json:"s3_file_location"`
}

type StepsDecryptStepDetailsDestinationFileLocationEfsFileLocationState struct {
	FileSystemId string `json:"file_system_id"`
	Path         string `json:"path"`
}

type StepsDecryptStepDetailsDestinationFileLocationS3FileLocationState struct {
	Bucket string `json:"bucket"`
	Key    string `json:"key"`
}

type StepsDeleteStepDetailsState struct {
	Name               string `json:"name"`
	SourceFileLocation string `json:"source_file_location"`
}

type StepsTagStepDetailsState struct {
	Name               string                         `json:"name"`
	SourceFileLocation string                         `json:"source_file_location"`
	Tags               []StepsTagStepDetailsTagsState `json:"tags"`
}

type StepsTagStepDetailsTagsState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}
