// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_mwaa_environment

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LoggingConfiguration struct {
	// LoggingConfigurationDagProcessingLogs is optional.
	DagProcessingLogs *LoggingConfigurationDagProcessingLogs `hcl:"dag_processing_logs,block"`
	// LoggingConfigurationSchedulerLogs is optional.
	SchedulerLogs *LoggingConfigurationSchedulerLogs `hcl:"scheduler_logs,block"`
	// LoggingConfigurationTaskLogs is optional.
	TaskLogs *LoggingConfigurationTaskLogs `hcl:"task_logs,block"`
	// LoggingConfigurationWebserverLogs is optional.
	WebserverLogs *LoggingConfigurationWebserverLogs `hcl:"webserver_logs,block"`
	// LoggingConfigurationWorkerLogs is optional.
	WorkerLogs *LoggingConfigurationWorkerLogs `hcl:"worker_logs,block"`
}

type LoggingConfigurationDagProcessingLogs struct {
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel is optional.
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationSchedulerLogs struct {
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel is optional.
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationTaskLogs struct {
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel is optional.
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationWebserverLogs struct {
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel is optional.
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type LoggingConfigurationWorkerLogs struct {
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// LogLevel is optional.
	LogLevel terra.StringValue `hcl:"log_level,attr"`
}

type NetworkConfiguration struct {
	// SecurityGroupIds is required.
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// SubnetIds is required.
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type lastUpdatedAttributes struct {
	ref terra.Reference
}

func (lu lastUpdatedAttributes) InternalRef() (terra.Reference, error) {
	return lu.ref, nil
}

func (lu lastUpdatedAttributes) InternalWithRef(ref terra.Reference) lastUpdatedAttributes {
	return lastUpdatedAttributes{ref: ref}
}

func (lu lastUpdatedAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lu.ref.InternalTokens()
}

func (lu lastUpdatedAttributes) CreatedAt() terra.StringValue {
	return terra.ReferenceAsString(lu.ref.Append("created_at"))
}

func (lu lastUpdatedAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(lu.ref.Append("status"))
}

func (lu lastUpdatedAttributes) Error() terra.ListValue[lastUpdatedErrorAttributes] {
	return terra.ReferenceAsList[lastUpdatedErrorAttributes](lu.ref.Append("error"))
}

type lastUpdatedErrorAttributes struct {
	ref terra.Reference
}

func (e lastUpdatedErrorAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e lastUpdatedErrorAttributes) InternalWithRef(ref terra.Reference) lastUpdatedErrorAttributes {
	return lastUpdatedErrorAttributes{ref: ref}
}

func (e lastUpdatedErrorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e lastUpdatedErrorAttributes) ErrorCode() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("error_code"))
}

func (e lastUpdatedErrorAttributes) ErrorMessage() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("error_message"))
}

type loggingConfigurationAttributes struct {
	ref terra.Reference
}

func (lc loggingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc loggingConfigurationAttributes) InternalWithRef(ref terra.Reference) loggingConfigurationAttributes {
	return loggingConfigurationAttributes{ref: ref}
}

func (lc loggingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc loggingConfigurationAttributes) DagProcessingLogs() terra.ListValue[loggingConfigurationDagProcessingLogsAttributes] {
	return terra.ReferenceAsList[loggingConfigurationDagProcessingLogsAttributes](lc.ref.Append("dag_processing_logs"))
}

func (lc loggingConfigurationAttributes) SchedulerLogs() terra.ListValue[loggingConfigurationSchedulerLogsAttributes] {
	return terra.ReferenceAsList[loggingConfigurationSchedulerLogsAttributes](lc.ref.Append("scheduler_logs"))
}

func (lc loggingConfigurationAttributes) TaskLogs() terra.ListValue[loggingConfigurationTaskLogsAttributes] {
	return terra.ReferenceAsList[loggingConfigurationTaskLogsAttributes](lc.ref.Append("task_logs"))
}

func (lc loggingConfigurationAttributes) WebserverLogs() terra.ListValue[loggingConfigurationWebserverLogsAttributes] {
	return terra.ReferenceAsList[loggingConfigurationWebserverLogsAttributes](lc.ref.Append("webserver_logs"))
}

func (lc loggingConfigurationAttributes) WorkerLogs() terra.ListValue[loggingConfigurationWorkerLogsAttributes] {
	return terra.ReferenceAsList[loggingConfigurationWorkerLogsAttributes](lc.ref.Append("worker_logs"))
}

type loggingConfigurationDagProcessingLogsAttributes struct {
	ref terra.Reference
}

func (dpl loggingConfigurationDagProcessingLogsAttributes) InternalRef() (terra.Reference, error) {
	return dpl.ref, nil
}

func (dpl loggingConfigurationDagProcessingLogsAttributes) InternalWithRef(ref terra.Reference) loggingConfigurationDagProcessingLogsAttributes {
	return loggingConfigurationDagProcessingLogsAttributes{ref: ref}
}

func (dpl loggingConfigurationDagProcessingLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dpl.ref.InternalTokens()
}

func (dpl loggingConfigurationDagProcessingLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(dpl.ref.Append("cloud_watch_log_group_arn"))
}

func (dpl loggingConfigurationDagProcessingLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(dpl.ref.Append("enabled"))
}

func (dpl loggingConfigurationDagProcessingLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(dpl.ref.Append("log_level"))
}

type loggingConfigurationSchedulerLogsAttributes struct {
	ref terra.Reference
}

func (sl loggingConfigurationSchedulerLogsAttributes) InternalRef() (terra.Reference, error) {
	return sl.ref, nil
}

func (sl loggingConfigurationSchedulerLogsAttributes) InternalWithRef(ref terra.Reference) loggingConfigurationSchedulerLogsAttributes {
	return loggingConfigurationSchedulerLogsAttributes{ref: ref}
}

func (sl loggingConfigurationSchedulerLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sl.ref.InternalTokens()
}

func (sl loggingConfigurationSchedulerLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("cloud_watch_log_group_arn"))
}

func (sl loggingConfigurationSchedulerLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sl.ref.Append("enabled"))
}

func (sl loggingConfigurationSchedulerLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("log_level"))
}

type loggingConfigurationTaskLogsAttributes struct {
	ref terra.Reference
}

func (tl loggingConfigurationTaskLogsAttributes) InternalRef() (terra.Reference, error) {
	return tl.ref, nil
}

func (tl loggingConfigurationTaskLogsAttributes) InternalWithRef(ref terra.Reference) loggingConfigurationTaskLogsAttributes {
	return loggingConfigurationTaskLogsAttributes{ref: ref}
}

func (tl loggingConfigurationTaskLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tl.ref.InternalTokens()
}

func (tl loggingConfigurationTaskLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(tl.ref.Append("cloud_watch_log_group_arn"))
}

func (tl loggingConfigurationTaskLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(tl.ref.Append("enabled"))
}

func (tl loggingConfigurationTaskLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(tl.ref.Append("log_level"))
}

type loggingConfigurationWebserverLogsAttributes struct {
	ref terra.Reference
}

func (wl loggingConfigurationWebserverLogsAttributes) InternalRef() (terra.Reference, error) {
	return wl.ref, nil
}

func (wl loggingConfigurationWebserverLogsAttributes) InternalWithRef(ref terra.Reference) loggingConfigurationWebserverLogsAttributes {
	return loggingConfigurationWebserverLogsAttributes{ref: ref}
}

func (wl loggingConfigurationWebserverLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wl.ref.InternalTokens()
}

func (wl loggingConfigurationWebserverLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("cloud_watch_log_group_arn"))
}

func (wl loggingConfigurationWebserverLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(wl.ref.Append("enabled"))
}

func (wl loggingConfigurationWebserverLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("log_level"))
}

type loggingConfigurationWorkerLogsAttributes struct {
	ref terra.Reference
}

func (wl loggingConfigurationWorkerLogsAttributes) InternalRef() (terra.Reference, error) {
	return wl.ref, nil
}

func (wl loggingConfigurationWorkerLogsAttributes) InternalWithRef(ref terra.Reference) loggingConfigurationWorkerLogsAttributes {
	return loggingConfigurationWorkerLogsAttributes{ref: ref}
}

func (wl loggingConfigurationWorkerLogsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wl.ref.InternalTokens()
}

func (wl loggingConfigurationWorkerLogsAttributes) CloudWatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("cloud_watch_log_group_arn"))
}

func (wl loggingConfigurationWorkerLogsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(wl.ref.Append("enabled"))
}

func (wl loggingConfigurationWorkerLogsAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(wl.ref.Append("log_level"))
}

type networkConfigurationAttributes struct {
	ref terra.Reference
}

func (nc networkConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc networkConfigurationAttributes) InternalWithRef(ref terra.Reference) networkConfigurationAttributes {
	return networkConfigurationAttributes{ref: ref}
}

func (nc networkConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc networkConfigurationAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nc.ref.Append("security_group_ids"))
}

func (nc networkConfigurationAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](nc.ref.Append("subnet_ids"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LastUpdatedState struct {
	CreatedAt string                  `json:"created_at"`
	Status    string                  `json:"status"`
	Error     []LastUpdatedErrorState `json:"error"`
}

type LastUpdatedErrorState struct {
	ErrorCode    string `json:"error_code"`
	ErrorMessage string `json:"error_message"`
}

type LoggingConfigurationState struct {
	DagProcessingLogs []LoggingConfigurationDagProcessingLogsState `json:"dag_processing_logs"`
	SchedulerLogs     []LoggingConfigurationSchedulerLogsState     `json:"scheduler_logs"`
	TaskLogs          []LoggingConfigurationTaskLogsState          `json:"task_logs"`
	WebserverLogs     []LoggingConfigurationWebserverLogsState     `json:"webserver_logs"`
	WorkerLogs        []LoggingConfigurationWorkerLogsState        `json:"worker_logs"`
}

type LoggingConfigurationDagProcessingLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationSchedulerLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationTaskLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationWebserverLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type LoggingConfigurationWorkerLogsState struct {
	CloudWatchLogGroupArn string `json:"cloud_watch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogLevel              string `json:"log_level"`
}

type NetworkConfigurationState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	SubnetIds        []string `json:"subnet_ids"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
