// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sesv2_configuration_set_event_destination

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type EventDestination struct {
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// MatchingEventTypes is required.
	MatchingEventTypes terra.ListValue[terra.StringValue] `hcl:"matching_event_types,attr" validate:"required"`
	// EventDestinationCloudWatchDestination is optional.
	CloudWatchDestination *EventDestinationCloudWatchDestination `hcl:"cloud_watch_destination,block"`
	// EventDestinationKinesisFirehoseDestination is optional.
	KinesisFirehoseDestination *EventDestinationKinesisFirehoseDestination `hcl:"kinesis_firehose_destination,block"`
	// EventDestinationPinpointDestination is optional.
	PinpointDestination *EventDestinationPinpointDestination `hcl:"pinpoint_destination,block"`
	// EventDestinationSnsDestination is optional.
	SnsDestination *EventDestinationSnsDestination `hcl:"sns_destination,block"`
}

type EventDestinationCloudWatchDestination struct {
	// EventDestinationCloudWatchDestinationDimensionConfiguration is min=1.
	DimensionConfiguration []EventDestinationCloudWatchDestinationDimensionConfiguration `hcl:"dimension_configuration,block" validate:"min=1"`
}

type EventDestinationCloudWatchDestinationDimensionConfiguration struct {
	// DefaultDimensionValue is required.
	DefaultDimensionValue terra.StringValue `hcl:"default_dimension_value,attr" validate:"required"`
	// DimensionName is required.
	DimensionName terra.StringValue `hcl:"dimension_name,attr" validate:"required"`
	// DimensionValueSource is required.
	DimensionValueSource terra.StringValue `hcl:"dimension_value_source,attr" validate:"required"`
}

type EventDestinationKinesisFirehoseDestination struct {
	// DeliveryStreamArn is required.
	DeliveryStreamArn terra.StringValue `hcl:"delivery_stream_arn,attr" validate:"required"`
	// IamRoleArn is required.
	IamRoleArn terra.StringValue `hcl:"iam_role_arn,attr" validate:"required"`
}

type EventDestinationPinpointDestination struct {
	// ApplicationArn is required.
	ApplicationArn terra.StringValue `hcl:"application_arn,attr" validate:"required"`
}

type EventDestinationSnsDestination struct {
	// TopicArn is required.
	TopicArn terra.StringValue `hcl:"topic_arn,attr" validate:"required"`
}

type eventDestinationAttributes struct {
	ref terra.Reference
}

func (ed eventDestinationAttributes) InternalRef() (terra.Reference, error) {
	return ed.ref, nil
}

func (ed eventDestinationAttributes) InternalWithRef(ref terra.Reference) eventDestinationAttributes {
	return eventDestinationAttributes{ref: ref}
}

func (ed eventDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ed.ref.InternalTokens()
}

func (ed eventDestinationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ed.ref.Append("enabled"))
}

func (ed eventDestinationAttributes) MatchingEventTypes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ed.ref.Append("matching_event_types"))
}

func (ed eventDestinationAttributes) CloudWatchDestination() terra.ListValue[eventDestinationCloudWatchDestinationAttributes] {
	return terra.ReferenceAsList[eventDestinationCloudWatchDestinationAttributes](ed.ref.Append("cloud_watch_destination"))
}

func (ed eventDestinationAttributes) KinesisFirehoseDestination() terra.ListValue[eventDestinationKinesisFirehoseDestinationAttributes] {
	return terra.ReferenceAsList[eventDestinationKinesisFirehoseDestinationAttributes](ed.ref.Append("kinesis_firehose_destination"))
}

func (ed eventDestinationAttributes) PinpointDestination() terra.ListValue[eventDestinationPinpointDestinationAttributes] {
	return terra.ReferenceAsList[eventDestinationPinpointDestinationAttributes](ed.ref.Append("pinpoint_destination"))
}

func (ed eventDestinationAttributes) SnsDestination() terra.ListValue[eventDestinationSnsDestinationAttributes] {
	return terra.ReferenceAsList[eventDestinationSnsDestinationAttributes](ed.ref.Append("sns_destination"))
}

type eventDestinationCloudWatchDestinationAttributes struct {
	ref terra.Reference
}

func (cwd eventDestinationCloudWatchDestinationAttributes) InternalRef() (terra.Reference, error) {
	return cwd.ref, nil
}

func (cwd eventDestinationCloudWatchDestinationAttributes) InternalWithRef(ref terra.Reference) eventDestinationCloudWatchDestinationAttributes {
	return eventDestinationCloudWatchDestinationAttributes{ref: ref}
}

func (cwd eventDestinationCloudWatchDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cwd.ref.InternalTokens()
}

func (cwd eventDestinationCloudWatchDestinationAttributes) DimensionConfiguration() terra.ListValue[eventDestinationCloudWatchDestinationDimensionConfigurationAttributes] {
	return terra.ReferenceAsList[eventDestinationCloudWatchDestinationDimensionConfigurationAttributes](cwd.ref.Append("dimension_configuration"))
}

type eventDestinationCloudWatchDestinationDimensionConfigurationAttributes struct {
	ref terra.Reference
}

func (dc eventDestinationCloudWatchDestinationDimensionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc eventDestinationCloudWatchDestinationDimensionConfigurationAttributes) InternalWithRef(ref terra.Reference) eventDestinationCloudWatchDestinationDimensionConfigurationAttributes {
	return eventDestinationCloudWatchDestinationDimensionConfigurationAttributes{ref: ref}
}

func (dc eventDestinationCloudWatchDestinationDimensionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc eventDestinationCloudWatchDestinationDimensionConfigurationAttributes) DefaultDimensionValue() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("default_dimension_value"))
}

func (dc eventDestinationCloudWatchDestinationDimensionConfigurationAttributes) DimensionName() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("dimension_name"))
}

func (dc eventDestinationCloudWatchDestinationDimensionConfigurationAttributes) DimensionValueSource() terra.StringValue {
	return terra.ReferenceAsString(dc.ref.Append("dimension_value_source"))
}

type eventDestinationKinesisFirehoseDestinationAttributes struct {
	ref terra.Reference
}

func (kfd eventDestinationKinesisFirehoseDestinationAttributes) InternalRef() (terra.Reference, error) {
	return kfd.ref, nil
}

func (kfd eventDestinationKinesisFirehoseDestinationAttributes) InternalWithRef(ref terra.Reference) eventDestinationKinesisFirehoseDestinationAttributes {
	return eventDestinationKinesisFirehoseDestinationAttributes{ref: ref}
}

func (kfd eventDestinationKinesisFirehoseDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kfd.ref.InternalTokens()
}

func (kfd eventDestinationKinesisFirehoseDestinationAttributes) DeliveryStreamArn() terra.StringValue {
	return terra.ReferenceAsString(kfd.ref.Append("delivery_stream_arn"))
}

func (kfd eventDestinationKinesisFirehoseDestinationAttributes) IamRoleArn() terra.StringValue {
	return terra.ReferenceAsString(kfd.ref.Append("iam_role_arn"))
}

type eventDestinationPinpointDestinationAttributes struct {
	ref terra.Reference
}

func (pd eventDestinationPinpointDestinationAttributes) InternalRef() (terra.Reference, error) {
	return pd.ref, nil
}

func (pd eventDestinationPinpointDestinationAttributes) InternalWithRef(ref terra.Reference) eventDestinationPinpointDestinationAttributes {
	return eventDestinationPinpointDestinationAttributes{ref: ref}
}

func (pd eventDestinationPinpointDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pd.ref.InternalTokens()
}

func (pd eventDestinationPinpointDestinationAttributes) ApplicationArn() terra.StringValue {
	return terra.ReferenceAsString(pd.ref.Append("application_arn"))
}

type eventDestinationSnsDestinationAttributes struct {
	ref terra.Reference
}

func (sd eventDestinationSnsDestinationAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd eventDestinationSnsDestinationAttributes) InternalWithRef(ref terra.Reference) eventDestinationSnsDestinationAttributes {
	return eventDestinationSnsDestinationAttributes{ref: ref}
}

func (sd eventDestinationSnsDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd eventDestinationSnsDestinationAttributes) TopicArn() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("topic_arn"))
}

type EventDestinationState struct {
	Enabled                    bool                                              `json:"enabled"`
	MatchingEventTypes         []string                                          `json:"matching_event_types"`
	CloudWatchDestination      []EventDestinationCloudWatchDestinationState      `json:"cloud_watch_destination"`
	KinesisFirehoseDestination []EventDestinationKinesisFirehoseDestinationState `json:"kinesis_firehose_destination"`
	PinpointDestination        []EventDestinationPinpointDestinationState        `json:"pinpoint_destination"`
	SnsDestination             []EventDestinationSnsDestinationState             `json:"sns_destination"`
}

type EventDestinationCloudWatchDestinationState struct {
	DimensionConfiguration []EventDestinationCloudWatchDestinationDimensionConfigurationState `json:"dimension_configuration"`
}

type EventDestinationCloudWatchDestinationDimensionConfigurationState struct {
	DefaultDimensionValue string `json:"default_dimension_value"`
	DimensionName         string `json:"dimension_name"`
	DimensionValueSource  string `json:"dimension_value_source"`
}

type EventDestinationKinesisFirehoseDestinationState struct {
	DeliveryStreamArn string `json:"delivery_stream_arn"`
	IamRoleArn        string `json:"iam_role_arn"`
}

type EventDestinationPinpointDestinationState struct {
	ApplicationArn string `json:"application_arn"`
}

type EventDestinationSnsDestinationState struct {
	TopicArn string `json:"topic_arn"`
}
