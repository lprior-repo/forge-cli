// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_wafregional_sql_injection_match_set

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SqlInjectionMatchTuple struct {
	// TextTransformation is required.
	TextTransformation terra.StringValue `hcl:"text_transformation,attr" validate:"required"`
	// SqlInjectionMatchTupleFieldToMatch is required.
	FieldToMatch *SqlInjectionMatchTupleFieldToMatch `hcl:"field_to_match,block" validate:"required"`
}

type SqlInjectionMatchTupleFieldToMatch struct {
	// Data is optional.
	Data terra.StringValue `hcl:"data,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type sqlInjectionMatchTupleAttributes struct {
	ref terra.Reference
}

func (simt sqlInjectionMatchTupleAttributes) InternalRef() (terra.Reference, error) {
	return simt.ref, nil
}

func (simt sqlInjectionMatchTupleAttributes) InternalWithRef(ref terra.Reference) sqlInjectionMatchTupleAttributes {
	return sqlInjectionMatchTupleAttributes{ref: ref}
}

func (simt sqlInjectionMatchTupleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return simt.ref.InternalTokens()
}

func (simt sqlInjectionMatchTupleAttributes) TextTransformation() terra.StringValue {
	return terra.ReferenceAsString(simt.ref.Append("text_transformation"))
}

func (simt sqlInjectionMatchTupleAttributes) FieldToMatch() terra.ListValue[sqlInjectionMatchTupleFieldToMatchAttributes] {
	return terra.ReferenceAsList[sqlInjectionMatchTupleFieldToMatchAttributes](simt.ref.Append("field_to_match"))
}

type sqlInjectionMatchTupleFieldToMatchAttributes struct {
	ref terra.Reference
}

func (ftm sqlInjectionMatchTupleFieldToMatchAttributes) InternalRef() (terra.Reference, error) {
	return ftm.ref, nil
}

func (ftm sqlInjectionMatchTupleFieldToMatchAttributes) InternalWithRef(ref terra.Reference) sqlInjectionMatchTupleFieldToMatchAttributes {
	return sqlInjectionMatchTupleFieldToMatchAttributes{ref: ref}
}

func (ftm sqlInjectionMatchTupleFieldToMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ftm.ref.InternalTokens()
}

func (ftm sqlInjectionMatchTupleFieldToMatchAttributes) Data() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("data"))
}

func (ftm sqlInjectionMatchTupleFieldToMatchAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("type"))
}

type SqlInjectionMatchTupleState struct {
	TextTransformation string                                    `json:"text_transformation"`
	FieldToMatch       []SqlInjectionMatchTupleFieldToMatchState `json:"field_to_match"`
}

type SqlInjectionMatchTupleFieldToMatchState struct {
	Data string `json:"data"`
	Type string `json:"type"`
}
