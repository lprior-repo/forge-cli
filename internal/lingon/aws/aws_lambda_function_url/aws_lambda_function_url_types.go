// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lambda_function_url

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Cors struct {
	// AllowCredentials is optional.
	AllowCredentials terra.BoolValue `hcl:"allow_credentials,attr"`
	// AllowHeaders is optional.
	AllowHeaders terra.SetValue[terra.StringValue] `hcl:"allow_headers,attr"`
	// AllowMethods is optional.
	AllowMethods terra.SetValue[terra.StringValue] `hcl:"allow_methods,attr"`
	// AllowOrigins is optional.
	AllowOrigins terra.SetValue[terra.StringValue] `hcl:"allow_origins,attr"`
	// ExposeHeaders is optional.
	ExposeHeaders terra.SetValue[terra.StringValue] `hcl:"expose_headers,attr"`
	// MaxAge is optional.
	MaxAge terra.NumberValue `hcl:"max_age,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
}

type corsAttributes struct {
	ref terra.Reference
}

func (c corsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c corsAttributes) InternalWithRef(ref terra.Reference) corsAttributes {
	return corsAttributes{ref: ref}
}

func (c corsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c corsAttributes) AllowCredentials() terra.BoolValue {
	return terra.ReferenceAsBool(c.ref.Append("allow_credentials"))
}

func (c corsAttributes) AllowHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("allow_headers"))
}

func (c corsAttributes) AllowMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("allow_methods"))
}

func (c corsAttributes) AllowOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("allow_origins"))
}

func (c corsAttributes) ExposeHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("expose_headers"))
}

func (c corsAttributes) MaxAge() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("max_age"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

type CorsState struct {
	AllowCredentials bool     `json:"allow_credentials"`
	AllowHeaders     []string `json:"allow_headers"`
	AllowMethods     []string `json:"allow_methods"`
	AllowOrigins     []string `json:"allow_origins"`
	ExposeHeaders    []string `json:"expose_headers"`
	MaxAge           float64  `json:"max_age"`
}

type TimeoutsState struct {
	Create string `json:"create"`
}
