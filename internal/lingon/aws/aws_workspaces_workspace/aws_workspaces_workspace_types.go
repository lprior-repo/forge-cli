// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_workspaces_workspace

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type WorkspaceProperties struct {
	// ComputeTypeName is optional.
	ComputeTypeName terra.StringValue `hcl:"compute_type_name,attr"`
	// RootVolumeSizeGib is optional.
	RootVolumeSizeGib terra.NumberValue `hcl:"root_volume_size_gib,attr"`
	// RunningMode is optional.
	RunningMode terra.StringValue `hcl:"running_mode,attr"`
	// RunningModeAutoStopTimeoutInMinutes is optional.
	RunningModeAutoStopTimeoutInMinutes terra.NumberValue `hcl:"running_mode_auto_stop_timeout_in_minutes,attr"`
	// UserVolumeSizeGib is optional.
	UserVolumeSizeGib terra.NumberValue `hcl:"user_volume_size_gib,attr"`
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type workspacePropertiesAttributes struct {
	ref terra.Reference
}

func (wp workspacePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return wp.ref, nil
}

func (wp workspacePropertiesAttributes) InternalWithRef(ref terra.Reference) workspacePropertiesAttributes {
	return workspacePropertiesAttributes{ref: ref}
}

func (wp workspacePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wp.ref.InternalTokens()
}

func (wp workspacePropertiesAttributes) ComputeTypeName() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("compute_type_name"))
}

func (wp workspacePropertiesAttributes) RootVolumeSizeGib() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("root_volume_size_gib"))
}

func (wp workspacePropertiesAttributes) RunningMode() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("running_mode"))
}

func (wp workspacePropertiesAttributes) RunningModeAutoStopTimeoutInMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("running_mode_auto_stop_timeout_in_minutes"))
}

func (wp workspacePropertiesAttributes) UserVolumeSizeGib() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("user_volume_size_gib"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type WorkspacePropertiesState struct {
	ComputeTypeName                     string  `json:"compute_type_name"`
	RootVolumeSizeGib                   float64 `json:"root_volume_size_gib"`
	RunningMode                         string  `json:"running_mode"`
	RunningModeAutoStopTimeoutInMinutes float64 `json:"running_mode_auto_stop_timeout_in_minutes"`
	UserVolumeSizeGib                   float64 `json:"user_volume_size_gib"`
}
