// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3_bucket_object_lock_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Rule struct {
	// RuleDefaultRetention is required.
	DefaultRetention *RuleDefaultRetention `hcl:"default_retention,block" validate:"required"`
}

type RuleDefaultRetention struct {
	// Days is optional.
	Days terra.NumberValue `hcl:"days,attr"`
	// Mode is optional.
	Mode terra.StringValue `hcl:"mode,attr"`
	// Years is optional.
	Years terra.NumberValue `hcl:"years,attr"`
}

type ruleAttributes struct {
	ref terra.Reference
}

func (r ruleAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r ruleAttributes) InternalWithRef(ref terra.Reference) ruleAttributes {
	return ruleAttributes{ref: ref}
}

func (r ruleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r ruleAttributes) DefaultRetention() terra.ListValue[ruleDefaultRetentionAttributes] {
	return terra.ReferenceAsList[ruleDefaultRetentionAttributes](r.ref.Append("default_retention"))
}

type ruleDefaultRetentionAttributes struct {
	ref terra.Reference
}

func (dr ruleDefaultRetentionAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr ruleDefaultRetentionAttributes) InternalWithRef(ref terra.Reference) ruleDefaultRetentionAttributes {
	return ruleDefaultRetentionAttributes{ref: ref}
}

func (dr ruleDefaultRetentionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr ruleDefaultRetentionAttributes) Days() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("days"))
}

func (dr ruleDefaultRetentionAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("mode"))
}

func (dr ruleDefaultRetentionAttributes) Years() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("years"))
}

type RuleState struct {
	DefaultRetention []RuleDefaultRetentionState `json:"default_retention"`
}

type RuleDefaultRetentionState struct {
	Days  float64 `json:"days"`
	Mode  string  `json:"mode"`
	Years float64 `json:"years"`
}
