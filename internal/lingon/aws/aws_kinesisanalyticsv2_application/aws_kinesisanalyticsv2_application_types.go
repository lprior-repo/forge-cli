// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kinesisanalyticsv2_application

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ApplicationConfiguration struct {
	// ApplicationConfigurationApplicationCodeConfiguration is required.
	ApplicationCodeConfiguration *ApplicationConfigurationApplicationCodeConfiguration `hcl:"application_code_configuration,block" validate:"required"`
	// ApplicationConfigurationApplicationSnapshotConfiguration is optional.
	ApplicationSnapshotConfiguration *ApplicationConfigurationApplicationSnapshotConfiguration `hcl:"application_snapshot_configuration,block"`
	// ApplicationConfigurationEnvironmentProperties is optional.
	EnvironmentProperties *ApplicationConfigurationEnvironmentProperties `hcl:"environment_properties,block"`
	// ApplicationConfigurationFlinkApplicationConfiguration is optional.
	FlinkApplicationConfiguration *ApplicationConfigurationFlinkApplicationConfiguration `hcl:"flink_application_configuration,block"`
	// ApplicationConfigurationRunConfiguration is optional.
	RunConfiguration *ApplicationConfigurationRunConfiguration `hcl:"run_configuration,block"`
	// ApplicationConfigurationSqlApplicationConfiguration is optional.
	SqlApplicationConfiguration *ApplicationConfigurationSqlApplicationConfiguration `hcl:"sql_application_configuration,block"`
	// ApplicationConfigurationVpcConfiguration is optional.
	VpcConfiguration *ApplicationConfigurationVpcConfiguration `hcl:"vpc_configuration,block"`
}

type ApplicationConfigurationApplicationCodeConfiguration struct {
	// CodeContentType is required.
	CodeContentType terra.StringValue `hcl:"code_content_type,attr" validate:"required"`
	// ApplicationConfigurationApplicationCodeConfigurationCodeContent is optional.
	CodeContent *ApplicationConfigurationApplicationCodeConfigurationCodeContent `hcl:"code_content,block"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContent struct {
	// TextContent is optional.
	TextContent terra.StringValue `hcl:"text_content,attr"`
	// ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation is optional.
	S3ContentLocation *ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation `hcl:"s3_content_location,block"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation struct {
	// BucketArn is required.
	BucketArn terra.StringValue `hcl:"bucket_arn,attr" validate:"required"`
	// FileKey is required.
	FileKey terra.StringValue `hcl:"file_key,attr" validate:"required"`
	// ObjectVersion is optional.
	ObjectVersion terra.StringValue `hcl:"object_version,attr"`
}

type ApplicationConfigurationApplicationSnapshotConfiguration struct {
	// SnapshotsEnabled is required.
	SnapshotsEnabled terra.BoolValue `hcl:"snapshots_enabled,attr" validate:"required"`
}

type ApplicationConfigurationEnvironmentProperties struct {
	// ApplicationConfigurationEnvironmentPropertiesPropertyGroup is min=1,max=50.
	PropertyGroup []ApplicationConfigurationEnvironmentPropertiesPropertyGroup `hcl:"property_group,block" validate:"min=1,max=50"`
}

type ApplicationConfigurationEnvironmentPropertiesPropertyGroup struct {
	// PropertyGroupId is required.
	PropertyGroupId terra.StringValue `hcl:"property_group_id,attr" validate:"required"`
	// PropertyMap is required.
	PropertyMap terra.MapValue[terra.StringValue] `hcl:"property_map,attr" validate:"required"`
}

type ApplicationConfigurationFlinkApplicationConfiguration struct {
	// ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration is optional.
	CheckpointConfiguration *ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration `hcl:"checkpoint_configuration,block"`
	// ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration is optional.
	MonitoringConfiguration *ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration `hcl:"monitoring_configuration,block"`
	// ApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration is optional.
	ParallelismConfiguration *ApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration `hcl:"parallelism_configuration,block"`
}

type ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration struct {
	// CheckpointInterval is optional.
	CheckpointInterval terra.NumberValue `hcl:"checkpoint_interval,attr"`
	// CheckpointingEnabled is optional.
	CheckpointingEnabled terra.BoolValue `hcl:"checkpointing_enabled,attr"`
	// ConfigurationType is required.
	ConfigurationType terra.StringValue `hcl:"configuration_type,attr" validate:"required"`
	// MinPauseBetweenCheckpoints is optional.
	MinPauseBetweenCheckpoints terra.NumberValue `hcl:"min_pause_between_checkpoints,attr"`
}

type ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration struct {
	// ConfigurationType is required.
	ConfigurationType terra.StringValue `hcl:"configuration_type,attr" validate:"required"`
	// LogLevel is optional.
	LogLevel terra.StringValue `hcl:"log_level,attr"`
	// MetricsLevel is optional.
	MetricsLevel terra.StringValue `hcl:"metrics_level,attr"`
}

type ApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration struct {
	// AutoScalingEnabled is optional.
	AutoScalingEnabled terra.BoolValue `hcl:"auto_scaling_enabled,attr"`
	// ConfigurationType is required.
	ConfigurationType terra.StringValue `hcl:"configuration_type,attr" validate:"required"`
	// Parallelism is optional.
	Parallelism terra.NumberValue `hcl:"parallelism,attr"`
	// ParallelismPerKpu is optional.
	ParallelismPerKpu terra.NumberValue `hcl:"parallelism_per_kpu,attr"`
}

type ApplicationConfigurationRunConfiguration struct {
	// ApplicationConfigurationRunConfigurationApplicationRestoreConfiguration is optional.
	ApplicationRestoreConfiguration *ApplicationConfigurationRunConfigurationApplicationRestoreConfiguration `hcl:"application_restore_configuration,block"`
	// ApplicationConfigurationRunConfigurationFlinkRunConfiguration is optional.
	FlinkRunConfiguration *ApplicationConfigurationRunConfigurationFlinkRunConfiguration `hcl:"flink_run_configuration,block"`
}

type ApplicationConfigurationRunConfigurationApplicationRestoreConfiguration struct {
	// ApplicationRestoreType is optional.
	ApplicationRestoreType terra.StringValue `hcl:"application_restore_type,attr"`
	// SnapshotName is optional.
	SnapshotName terra.StringValue `hcl:"snapshot_name,attr"`
}

type ApplicationConfigurationRunConfigurationFlinkRunConfiguration struct {
	// AllowNonRestoredState is optional.
	AllowNonRestoredState terra.BoolValue `hcl:"allow_non_restored_state,attr"`
}

type ApplicationConfigurationSqlApplicationConfiguration struct {
	// ApplicationConfigurationSqlApplicationConfigurationInput is optional.
	Input *ApplicationConfigurationSqlApplicationConfigurationInput `hcl:"input,block"`
	// ApplicationConfigurationSqlApplicationConfigurationOutput is min=0,max=3.
	Output []ApplicationConfigurationSqlApplicationConfigurationOutput `hcl:"output,block" validate:"min=0,max=3"`
	// ApplicationConfigurationSqlApplicationConfigurationReferenceDataSource is optional.
	ReferenceDataSource *ApplicationConfigurationSqlApplicationConfigurationReferenceDataSource `hcl:"reference_data_source,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationInput struct {
	// NamePrefix is required.
	NamePrefix terra.StringValue `hcl:"name_prefix,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputParallelism is optional.
	InputParallelism *ApplicationConfigurationSqlApplicationConfigurationInputInputParallelism `hcl:"input_parallelism,block"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration is optional.
	InputProcessingConfiguration *ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration `hcl:"input_processing_configuration,block"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputSchema is required.
	InputSchema *ApplicationConfigurationSqlApplicationConfigurationInputInputSchema `hcl:"input_schema,block" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration is min=0.
	InputStartingPositionConfiguration []ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration `hcl:"input_starting_position_configuration,block" validate:"min=0"`
	// ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput is optional.
	KinesisFirehoseInput *ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput `hcl:"kinesis_firehose_input,block"`
	// ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput is optional.
	KinesisStreamsInput *ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput `hcl:"kinesis_streams_input,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputParallelism struct {
	// Count is optional.
	Count terra.NumberValue `hcl:"count,attr"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration struct {
	// ApplicationConfigurationSqlApplicationConfigurationE5495824 is required.
	InputLambdaProcessor *ApplicationConfigurationSqlApplicationConfigurationE5495824 `hcl:"input_lambda_processor,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationE5495824 struct {
	// ResourceArn is required.
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputSchema struct {
	// RecordEncoding is optional.
	RecordEncoding terra.StringValue `hcl:"record_encoding,attr"`
	// ApplicationConfigurationSqlApplicationConfiguration204Adc8C is min=1,max=1000.
	RecordColumn []ApplicationConfigurationSqlApplicationConfiguration204Adc8C `hcl:"record_column,block" validate:"min=1,max=1000"`
	// ApplicationConfigurationSqlApplicationConfiguration2A04Ed58 is required.
	RecordFormat *ApplicationConfigurationSqlApplicationConfiguration2A04Ed58 `hcl:"record_format,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration204Adc8C struct {
	// Mapping is optional.
	Mapping terra.StringValue `hcl:"mapping,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SqlType is required.
	SqlType terra.StringValue `hcl:"sql_type,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration2A04Ed58 struct {
	// RecordFormatType is required.
	RecordFormatType terra.StringValue `hcl:"record_format_type,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfiguration7A87Fff5 is required.
	MappingParameters *ApplicationConfigurationSqlApplicationConfiguration7A87Fff5 `hcl:"mapping_parameters,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration7A87Fff5 struct {
	// ApplicationConfigurationSqlApplicationConfigurationC224A52E is optional.
	CsvMappingParameters *ApplicationConfigurationSqlApplicationConfigurationC224A52E `hcl:"csv_mapping_parameters,block"`
	// ApplicationConfigurationSqlApplicationConfiguration204F7F24 is optional.
	JsonMappingParameters *ApplicationConfigurationSqlApplicationConfiguration204F7F24 `hcl:"json_mapping_parameters,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationC224A52E struct {
	// RecordColumnDelimiter is required.
	RecordColumnDelimiter terra.StringValue `hcl:"record_column_delimiter,attr" validate:"required"`
	// RecordRowDelimiter is required.
	RecordRowDelimiter terra.StringValue `hcl:"record_row_delimiter,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration204F7F24 struct {
	// RecordRowPath is required.
	RecordRowPath terra.StringValue `hcl:"record_row_path,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration struct {
	// InputStartingPosition is optional.
	InputStartingPosition terra.StringValue `hcl:"input_starting_position,attr"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput struct {
	// ResourceArn is required.
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput struct {
	// ResourceArn is required.
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutput struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema is required.
	DestinationSchema *ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema `hcl:"destination_schema,block" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput is optional.
	KinesisFirehoseOutput *ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput `hcl:"kinesis_firehose_output,block"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput is optional.
	KinesisStreamsOutput *ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput `hcl:"kinesis_streams_output,block"`
	// ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput is optional.
	LambdaOutput *ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput `hcl:"lambda_output,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema struct {
	// RecordFormatType is required.
	RecordFormatType terra.StringValue `hcl:"record_format_type,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput struct {
	// ResourceArn is required.
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput struct {
	// ResourceArn is required.
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput struct {
	// ResourceArn is required.
	ResourceArn terra.StringValue `hcl:"resource_arn,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSource struct {
	// TableName is required.
	TableName terra.StringValue `hcl:"table_name,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema is required.
	ReferenceSchema *ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema `hcl:"reference_schema,block" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource is required.
	S3ReferenceDataSource *ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource `hcl:"s3_reference_data_source,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema struct {
	// RecordEncoding is optional.
	RecordEncoding terra.StringValue `hcl:"record_encoding,attr"`
	// ApplicationConfigurationSqlApplicationConfiguration19Cec7E2 is min=1,max=1000.
	RecordColumn []ApplicationConfigurationSqlApplicationConfiguration19Cec7E2 `hcl:"record_column,block" validate:"min=1,max=1000"`
	// ApplicationConfigurationSqlApplicationConfiguration2B9C949E is required.
	RecordFormat *ApplicationConfigurationSqlApplicationConfiguration2B9C949E `hcl:"record_format,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration19Cec7E2 struct {
	// Mapping is optional.
	Mapping terra.StringValue `hcl:"mapping,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SqlType is required.
	SqlType terra.StringValue `hcl:"sql_type,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration2B9C949E struct {
	// RecordFormatType is required.
	RecordFormatType terra.StringValue `hcl:"record_format_type,attr" validate:"required"`
	// ApplicationConfigurationSqlApplicationConfigurationEbc7091F is required.
	MappingParameters *ApplicationConfigurationSqlApplicationConfigurationEbc7091F `hcl:"mapping_parameters,block" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationEbc7091F struct {
	// ApplicationConfigurationSqlApplicationConfigurationF24D03Ed is optional.
	CsvMappingParameters *ApplicationConfigurationSqlApplicationConfigurationF24D03Ed `hcl:"csv_mapping_parameters,block"`
	// ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7 is optional.
	JsonMappingParameters *ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7 `hcl:"json_mapping_parameters,block"`
}

type ApplicationConfigurationSqlApplicationConfigurationF24D03Ed struct {
	// RecordColumnDelimiter is required.
	RecordColumnDelimiter terra.StringValue `hcl:"record_column_delimiter,attr" validate:"required"`
	// RecordRowDelimiter is required.
	RecordRowDelimiter terra.StringValue `hcl:"record_row_delimiter,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7 struct {
	// RecordRowPath is required.
	RecordRowPath terra.StringValue `hcl:"record_row_path,attr" validate:"required"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource struct {
	// BucketArn is required.
	BucketArn terra.StringValue `hcl:"bucket_arn,attr" validate:"required"`
	// FileKey is required.
	FileKey terra.StringValue `hcl:"file_key,attr" validate:"required"`
}

type ApplicationConfigurationVpcConfiguration struct {
	// SecurityGroupIds is required.
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// SubnetIds is required.
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
}

type CloudwatchLoggingOptions struct {
	// LogStreamArn is required.
	LogStreamArn terra.StringValue `hcl:"log_stream_arn,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type applicationConfigurationAttributes struct {
	ref terra.Reference
}

func (ac applicationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac applicationConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationAttributes {
	return applicationConfigurationAttributes{ref: ref}
}

func (ac applicationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac applicationConfigurationAttributes) ApplicationCodeConfiguration() terra.ListValue[applicationConfigurationApplicationCodeConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationApplicationCodeConfigurationAttributes](ac.ref.Append("application_code_configuration"))
}

func (ac applicationConfigurationAttributes) ApplicationSnapshotConfiguration() terra.ListValue[applicationConfigurationApplicationSnapshotConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationApplicationSnapshotConfigurationAttributes](ac.ref.Append("application_snapshot_configuration"))
}

func (ac applicationConfigurationAttributes) EnvironmentProperties() terra.ListValue[applicationConfigurationEnvironmentPropertiesAttributes] {
	return terra.ReferenceAsList[applicationConfigurationEnvironmentPropertiesAttributes](ac.ref.Append("environment_properties"))
}

func (ac applicationConfigurationAttributes) FlinkApplicationConfiguration() terra.ListValue[applicationConfigurationFlinkApplicationConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationFlinkApplicationConfigurationAttributes](ac.ref.Append("flink_application_configuration"))
}

func (ac applicationConfigurationAttributes) RunConfiguration() terra.ListValue[applicationConfigurationRunConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationRunConfigurationAttributes](ac.ref.Append("run_configuration"))
}

func (ac applicationConfigurationAttributes) SqlApplicationConfiguration() terra.ListValue[applicationConfigurationSqlApplicationConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationAttributes](ac.ref.Append("sql_application_configuration"))
}

func (ac applicationConfigurationAttributes) VpcConfiguration() terra.ListValue[applicationConfigurationVpcConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationVpcConfigurationAttributes](ac.ref.Append("vpc_configuration"))
}

type applicationConfigurationApplicationCodeConfigurationAttributes struct {
	ref terra.Reference
}

func (acc applicationConfigurationApplicationCodeConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return acc.ref, nil
}

func (acc applicationConfigurationApplicationCodeConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationApplicationCodeConfigurationAttributes {
	return applicationConfigurationApplicationCodeConfigurationAttributes{ref: ref}
}

func (acc applicationConfigurationApplicationCodeConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acc.ref.InternalTokens()
}

func (acc applicationConfigurationApplicationCodeConfigurationAttributes) CodeContentType() terra.StringValue {
	return terra.ReferenceAsString(acc.ref.Append("code_content_type"))
}

func (acc applicationConfigurationApplicationCodeConfigurationAttributes) CodeContent() terra.ListValue[applicationConfigurationApplicationCodeConfigurationCodeContentAttributes] {
	return terra.ReferenceAsList[applicationConfigurationApplicationCodeConfigurationCodeContentAttributes](acc.ref.Append("code_content"))
}

type applicationConfigurationApplicationCodeConfigurationCodeContentAttributes struct {
	ref terra.Reference
}

func (cc applicationConfigurationApplicationCodeConfigurationCodeContentAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc applicationConfigurationApplicationCodeConfigurationCodeContentAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationApplicationCodeConfigurationCodeContentAttributes {
	return applicationConfigurationApplicationCodeConfigurationCodeContentAttributes{ref: ref}
}

func (cc applicationConfigurationApplicationCodeConfigurationCodeContentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc applicationConfigurationApplicationCodeConfigurationCodeContentAttributes) TextContent() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("text_content"))
}

func (cc applicationConfigurationApplicationCodeConfigurationCodeContentAttributes) S3ContentLocation() terra.ListValue[applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes](cc.ref.Append("s3_content_location"))
}

type applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes struct {
	ref terra.Reference
}

func (scl applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) InternalRef() (terra.Reference, error) {
	return scl.ref, nil
}

func (scl applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes {
	return applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes{ref: ref}
}

func (scl applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scl.ref.InternalTokens()
}

func (scl applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) BucketArn() terra.StringValue {
	return terra.ReferenceAsString(scl.ref.Append("bucket_arn"))
}

func (scl applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) FileKey() terra.StringValue {
	return terra.ReferenceAsString(scl.ref.Append("file_key"))
}

func (scl applicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationAttributes) ObjectVersion() terra.StringValue {
	return terra.ReferenceAsString(scl.ref.Append("object_version"))
}

type applicationConfigurationApplicationSnapshotConfigurationAttributes struct {
	ref terra.Reference
}

func (asc applicationConfigurationApplicationSnapshotConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return asc.ref, nil
}

func (asc applicationConfigurationApplicationSnapshotConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationApplicationSnapshotConfigurationAttributes {
	return applicationConfigurationApplicationSnapshotConfigurationAttributes{ref: ref}
}

func (asc applicationConfigurationApplicationSnapshotConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return asc.ref.InternalTokens()
}

func (asc applicationConfigurationApplicationSnapshotConfigurationAttributes) SnapshotsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(asc.ref.Append("snapshots_enabled"))
}

type applicationConfigurationEnvironmentPropertiesAttributes struct {
	ref terra.Reference
}

func (ep applicationConfigurationEnvironmentPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return ep.ref, nil
}

func (ep applicationConfigurationEnvironmentPropertiesAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationEnvironmentPropertiesAttributes {
	return applicationConfigurationEnvironmentPropertiesAttributes{ref: ref}
}

func (ep applicationConfigurationEnvironmentPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ep.ref.InternalTokens()
}

func (ep applicationConfigurationEnvironmentPropertiesAttributes) PropertyGroup() terra.SetValue[applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes] {
	return terra.ReferenceAsSet[applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes](ep.ref.Append("property_group"))
}

type applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes struct {
	ref terra.Reference
}

func (pg applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) InternalRef() (terra.Reference, error) {
	return pg.ref, nil
}

func (pg applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes {
	return applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes{ref: ref}
}

func (pg applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pg.ref.InternalTokens()
}

func (pg applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) PropertyGroupId() terra.StringValue {
	return terra.ReferenceAsString(pg.ref.Append("property_group_id"))
}

func (pg applicationConfigurationEnvironmentPropertiesPropertyGroupAttributes) PropertyMap() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](pg.ref.Append("property_map"))
}

type applicationConfigurationFlinkApplicationConfigurationAttributes struct {
	ref terra.Reference
}

func (fac applicationConfigurationFlinkApplicationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return fac.ref, nil
}

func (fac applicationConfigurationFlinkApplicationConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationFlinkApplicationConfigurationAttributes {
	return applicationConfigurationFlinkApplicationConfigurationAttributes{ref: ref}
}

func (fac applicationConfigurationFlinkApplicationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fac.ref.InternalTokens()
}

func (fac applicationConfigurationFlinkApplicationConfigurationAttributes) CheckpointConfiguration() terra.ListValue[applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes](fac.ref.Append("checkpoint_configuration"))
}

func (fac applicationConfigurationFlinkApplicationConfigurationAttributes) MonitoringConfiguration() terra.ListValue[applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes](fac.ref.Append("monitoring_configuration"))
}

func (fac applicationConfigurationFlinkApplicationConfigurationAttributes) ParallelismConfiguration() terra.ListValue[applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes](fac.ref.Append("parallelism_configuration"))
}

type applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes struct {
	ref terra.Reference
}

func (cc applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes {
	return applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes{ref: ref}
}

func (cc applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) CheckpointInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("checkpoint_interval"))
}

func (cc applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) CheckpointingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("checkpointing_enabled"))
}

func (cc applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) ConfigurationType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("configuration_type"))
}

func (cc applicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationAttributes) MinPauseBetweenCheckpoints() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("min_pause_between_checkpoints"))
}

type applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes struct {
	ref terra.Reference
}

func (mc applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes {
	return applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes{ref: ref}
}

func (mc applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) ConfigurationType() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("configuration_type"))
}

func (mc applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) LogLevel() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("log_level"))
}

func (mc applicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationAttributes) MetricsLevel() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("metrics_level"))
}

type applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes struct {
	ref terra.Reference
}

func (pc applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes {
	return applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes{ref: ref}
}

func (pc applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) AutoScalingEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(pc.ref.Append("auto_scaling_enabled"))
}

func (pc applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) ConfigurationType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("configuration_type"))
}

func (pc applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) Parallelism() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("parallelism"))
}

func (pc applicationConfigurationFlinkApplicationConfigurationParallelismConfigurationAttributes) ParallelismPerKpu() terra.NumberValue {
	return terra.ReferenceAsNumber(pc.ref.Append("parallelism_per_kpu"))
}

type applicationConfigurationRunConfigurationAttributes struct {
	ref terra.Reference
}

func (rc applicationConfigurationRunConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc applicationConfigurationRunConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationRunConfigurationAttributes {
	return applicationConfigurationRunConfigurationAttributes{ref: ref}
}

func (rc applicationConfigurationRunConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc applicationConfigurationRunConfigurationAttributes) ApplicationRestoreConfiguration() terra.ListValue[applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes](rc.ref.Append("application_restore_configuration"))
}

func (rc applicationConfigurationRunConfigurationAttributes) FlinkRunConfiguration() terra.ListValue[applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes](rc.ref.Append("flink_run_configuration"))
}

type applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes struct {
	ref terra.Reference
}

func (arc applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return arc.ref, nil
}

func (arc applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes {
	return applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes{ref: ref}
}

func (arc applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return arc.ref.InternalTokens()
}

func (arc applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) ApplicationRestoreType() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("application_restore_type"))
}

func (arc applicationConfigurationRunConfigurationApplicationRestoreConfigurationAttributes) SnapshotName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("snapshot_name"))
}

type applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes struct {
	ref terra.Reference
}

func (frc applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return frc.ref, nil
}

func (frc applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes {
	return applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes{ref: ref}
}

func (frc applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return frc.ref.InternalTokens()
}

func (frc applicationConfigurationRunConfigurationFlinkRunConfigurationAttributes) AllowNonRestoredState() terra.BoolValue {
	return terra.ReferenceAsBool(frc.ref.Append("allow_non_restored_state"))
}

type applicationConfigurationSqlApplicationConfigurationAttributes struct {
	ref terra.Reference
}

func (sac applicationConfigurationSqlApplicationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sac.ref, nil
}

func (sac applicationConfigurationSqlApplicationConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationAttributes {
	return applicationConfigurationSqlApplicationConfigurationAttributes{ref: ref}
}

func (sac applicationConfigurationSqlApplicationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sac.ref.InternalTokens()
}

func (sac applicationConfigurationSqlApplicationConfigurationAttributes) Input() terra.ListValue[applicationConfigurationSqlApplicationConfigurationInputAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationInputAttributes](sac.ref.Append("input"))
}

func (sac applicationConfigurationSqlApplicationConfigurationAttributes) Output() terra.SetValue[applicationConfigurationSqlApplicationConfigurationOutputAttributes] {
	return terra.ReferenceAsSet[applicationConfigurationSqlApplicationConfigurationOutputAttributes](sac.ref.Append("output"))
}

func (sac applicationConfigurationSqlApplicationConfigurationAttributes) ReferenceDataSource() terra.ListValue[applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes](sac.ref.Append("reference_data_source"))
}

type applicationConfigurationSqlApplicationConfigurationInputAttributes struct {
	ref terra.Reference
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationInputAttributes {
	return applicationConfigurationSqlApplicationConfigurationInputAttributes{ref: ref}
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InAppStreamNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](i.ref.Append("in_app_stream_names"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InputId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("input_id"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) NamePrefix() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("name_prefix"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InputParallelism() terra.ListValue[applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes](i.ref.Append("input_parallelism"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InputProcessingConfiguration() terra.ListValue[applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes](i.ref.Append("input_processing_configuration"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InputSchema() terra.ListValue[applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes](i.ref.Append("input_schema"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) InputStartingPositionConfiguration() terra.ListValue[applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes](i.ref.Append("input_starting_position_configuration"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) KinesisFirehoseInput() terra.ListValue[applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes](i.ref.Append("kinesis_firehose_input"))
}

func (i applicationConfigurationSqlApplicationConfigurationInputAttributes) KinesisStreamsInput() terra.ListValue[applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes](i.ref.Append("kinesis_streams_input"))
}

type applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes struct {
	ref terra.Reference
}

func (ip applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) InternalRef() (terra.Reference, error) {
	return ip.ref, nil
}

func (ip applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes {
	return applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes{ref: ref}
}

func (ip applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ip.ref.InternalTokens()
}

func (ip applicationConfigurationSqlApplicationConfigurationInputInputParallelismAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(ip.ref.Append("count"))
}

type applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes struct {
	ref terra.Reference
}

func (ipc applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ipc.ref, nil
}

func (ipc applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes {
	return applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes{ref: ref}
}

func (ipc applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ipc.ref.InternalTokens()
}

func (ipc applicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationAttributes) InputLambdaProcessor() terra.ListValue[applicationConfigurationSqlApplicationConfigurationE5495824Attributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationE5495824Attributes](ipc.ref.Append("input_lambda_processor"))
}

type applicationConfigurationSqlApplicationConfigurationE5495824Attributes struct {
	ref terra.Reference
}

func (ilp applicationConfigurationSqlApplicationConfigurationE5495824Attributes) InternalRef() (terra.Reference, error) {
	return ilp.ref, nil
}

func (ilp applicationConfigurationSqlApplicationConfigurationE5495824Attributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationE5495824Attributes {
	return applicationConfigurationSqlApplicationConfigurationE5495824Attributes{ref: ref}
}

func (ilp applicationConfigurationSqlApplicationConfigurationE5495824Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ilp.ref.InternalTokens()
}

func (ilp applicationConfigurationSqlApplicationConfigurationE5495824Attributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(ilp.ref.Append("resource_arn"))
}

type applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes struct {
	ref terra.Reference
}

func (is applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes {
	return applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes{ref: ref}
}

func (is applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) RecordEncoding() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("record_encoding"))
}

func (is applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) RecordColumn() terra.ListValue[applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes](is.ref.Append("record_column"))
}

func (is applicationConfigurationSqlApplicationConfigurationInputInputSchemaAttributes) RecordFormat() terra.ListValue[applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes](is.ref.Append("record_format"))
}

type applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes struct {
	ref terra.Reference
}

func (rc applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes {
	return applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes{ref: ref}
}

func (rc applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) Mapping() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("mapping"))
}

func (rc applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("name"))
}

func (rc applicationConfigurationSqlApplicationConfiguration204Adc8CAttributes) SqlType() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("sql_type"))
}

type applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes struct {
	ref terra.Reference
}

func (rf applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) InternalRef() (terra.Reference, error) {
	return rf.ref, nil
}

func (rf applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes {
	return applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes{ref: ref}
}

func (rf applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return rf.ref.InternalTokens()
}

func (rf applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) RecordFormatType() terra.StringValue {
	return terra.ReferenceAsString(rf.ref.Append("record_format_type"))
}

func (rf applicationConfigurationSqlApplicationConfiguration2A04Ed58Attributes) MappingParameters() terra.ListValue[applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes](rf.ref.Append("mapping_parameters"))
}

type applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes struct {
	ref terra.Reference
}

func (mp applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes {
	return applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes{ref: ref}
}

func (mp applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) CsvMappingParameters() terra.ListValue[applicationConfigurationSqlApplicationConfigurationC224A52EAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationC224A52EAttributes](mp.ref.Append("csv_mapping_parameters"))
}

func (mp applicationConfigurationSqlApplicationConfiguration7A87Fff5Attributes) JsonMappingParameters() terra.ListValue[applicationConfigurationSqlApplicationConfiguration204F7F24Attributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfiguration204F7F24Attributes](mp.ref.Append("json_mapping_parameters"))
}

type applicationConfigurationSqlApplicationConfigurationC224A52EAttributes struct {
	ref terra.Reference
}

func (cmp applicationConfigurationSqlApplicationConfigurationC224A52EAttributes) InternalRef() (terra.Reference, error) {
	return cmp.ref, nil
}

func (cmp applicationConfigurationSqlApplicationConfigurationC224A52EAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationC224A52EAttributes {
	return applicationConfigurationSqlApplicationConfigurationC224A52EAttributes{ref: ref}
}

func (cmp applicationConfigurationSqlApplicationConfigurationC224A52EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmp.ref.InternalTokens()
}

func (cmp applicationConfigurationSqlApplicationConfigurationC224A52EAttributes) RecordColumnDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_column_delimiter"))
}

func (cmp applicationConfigurationSqlApplicationConfigurationC224A52EAttributes) RecordRowDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_row_delimiter"))
}

type applicationConfigurationSqlApplicationConfiguration204F7F24Attributes struct {
	ref terra.Reference
}

func (jmp applicationConfigurationSqlApplicationConfiguration204F7F24Attributes) InternalRef() (terra.Reference, error) {
	return jmp.ref, nil
}

func (jmp applicationConfigurationSqlApplicationConfiguration204F7F24Attributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfiguration204F7F24Attributes {
	return applicationConfigurationSqlApplicationConfiguration204F7F24Attributes{ref: ref}
}

func (jmp applicationConfigurationSqlApplicationConfiguration204F7F24Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return jmp.ref.InternalTokens()
}

func (jmp applicationConfigurationSqlApplicationConfiguration204F7F24Attributes) RecordRowPath() terra.StringValue {
	return terra.ReferenceAsString(jmp.ref.Append("record_row_path"))
}

type applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes struct {
	ref terra.Reference
}

func (ispc applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ispc.ref, nil
}

func (ispc applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes {
	return applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes{ref: ref}
}

func (ispc applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ispc.ref.InternalTokens()
}

func (ispc applicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationAttributes) InputStartingPosition() terra.StringValue {
	return terra.ReferenceAsString(ispc.ref.Append("input_starting_position"))
}

type applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes struct {
	ref terra.Reference
}

func (kfi applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) InternalRef() (terra.Reference, error) {
	return kfi.ref, nil
}

func (kfi applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes {
	return applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes{ref: ref}
}

func (kfi applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kfi.ref.InternalTokens()
}

func (kfi applicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(kfi.ref.Append("resource_arn"))
}

type applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes struct {
	ref terra.Reference
}

func (ksi applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) InternalRef() (terra.Reference, error) {
	return ksi.ref, nil
}

func (ksi applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes {
	return applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes{ref: ref}
}

func (ksi applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ksi.ref.InternalTokens()
}

func (ksi applicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(ksi.ref.Append("resource_arn"))
}

type applicationConfigurationSqlApplicationConfigurationOutputAttributes struct {
	ref terra.Reference
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationOutputAttributes {
	return applicationConfigurationSqlApplicationConfigurationOutputAttributes{ref: ref}
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("name"))
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) OutputId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("output_id"))
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) DestinationSchema() terra.ListValue[applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes](o.ref.Append("destination_schema"))
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) KinesisFirehoseOutput() terra.ListValue[applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes](o.ref.Append("kinesis_firehose_output"))
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) KinesisStreamsOutput() terra.ListValue[applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes](o.ref.Append("kinesis_streams_output"))
}

func (o applicationConfigurationSqlApplicationConfigurationOutputAttributes) LambdaOutput() terra.ListValue[applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes](o.ref.Append("lambda_output"))
}

type applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes struct {
	ref terra.Reference
}

func (ds applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes {
	return applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes{ref: ref}
}

func (ds applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds applicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaAttributes) RecordFormatType() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("record_format_type"))
}

type applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes struct {
	ref terra.Reference
}

func (kfo applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) InternalRef() (terra.Reference, error) {
	return kfo.ref, nil
}

func (kfo applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes {
	return applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes{ref: ref}
}

func (kfo applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kfo.ref.InternalTokens()
}

func (kfo applicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(kfo.ref.Append("resource_arn"))
}

type applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes struct {
	ref terra.Reference
}

func (kso applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) InternalRef() (terra.Reference, error) {
	return kso.ref, nil
}

func (kso applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes {
	return applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes{ref: ref}
}

func (kso applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kso.ref.InternalTokens()
}

func (kso applicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(kso.ref.Append("resource_arn"))
}

type applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes struct {
	ref terra.Reference
}

func (lo applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) InternalRef() (terra.Reference, error) {
	return lo.ref, nil
}

func (lo applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes {
	return applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes{ref: ref}
}

func (lo applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lo.ref.InternalTokens()
}

func (lo applicationConfigurationSqlApplicationConfigurationOutputLambdaOutputAttributes) ResourceArn() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("resource_arn"))
}

type applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes struct {
	ref terra.Reference
}

func (rds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) InternalRef() (terra.Reference, error) {
	return rds.ref, nil
}

func (rds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes {
	return applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes{ref: ref}
}

func (rds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rds.ref.InternalTokens()
}

func (rds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) ReferenceId() terra.StringValue {
	return terra.ReferenceAsString(rds.ref.Append("reference_id"))
}

func (rds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) TableName() terra.StringValue {
	return terra.ReferenceAsString(rds.ref.Append("table_name"))
}

func (rds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) ReferenceSchema() terra.ListValue[applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes](rds.ref.Append("reference_schema"))
}

func (rds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceAttributes) S3ReferenceDataSource() terra.ListValue[applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes](rds.ref.Append("s3_reference_data_source"))
}

type applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes struct {
	ref terra.Reference
}

func (rs applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes {
	return applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes{ref: ref}
}

func (rs applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) RecordEncoding() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("record_encoding"))
}

func (rs applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) RecordColumn() terra.ListValue[applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes](rs.ref.Append("record_column"))
}

func (rs applicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaAttributes) RecordFormat() terra.ListValue[applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes](rs.ref.Append("record_format"))
}

type applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes struct {
	ref terra.Reference
}

func (rc applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes {
	return applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes{ref: ref}
}

func (rc applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) Mapping() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("mapping"))
}

func (rc applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("name"))
}

func (rc applicationConfigurationSqlApplicationConfiguration19Cec7E2Attributes) SqlType() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("sql_type"))
}

type applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes struct {
	ref terra.Reference
}

func (rf applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) InternalRef() (terra.Reference, error) {
	return rf.ref, nil
}

func (rf applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes {
	return applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes{ref: ref}
}

func (rf applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rf.ref.InternalTokens()
}

func (rf applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) RecordFormatType() terra.StringValue {
	return terra.ReferenceAsString(rf.ref.Append("record_format_type"))
}

func (rf applicationConfigurationSqlApplicationConfiguration2B9C949EAttributes) MappingParameters() terra.ListValue[applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes](rf.ref.Append("mapping_parameters"))
}

type applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes struct {
	ref terra.Reference
}

func (mp applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes {
	return applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes{ref: ref}
}

func (mp applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) CsvMappingParameters() terra.ListValue[applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes](mp.ref.Append("csv_mapping_parameters"))
}

func (mp applicationConfigurationSqlApplicationConfigurationEbc7091FAttributes) JsonMappingParameters() terra.ListValue[applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes] {
	return terra.ReferenceAsList[applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes](mp.ref.Append("json_mapping_parameters"))
}

type applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes struct {
	ref terra.Reference
}

func (cmp applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) InternalRef() (terra.Reference, error) {
	return cmp.ref, nil
}

func (cmp applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes {
	return applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes{ref: ref}
}

func (cmp applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cmp.ref.InternalTokens()
}

func (cmp applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) RecordColumnDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_column_delimiter"))
}

func (cmp applicationConfigurationSqlApplicationConfigurationF24D03EdAttributes) RecordRowDelimiter() terra.StringValue {
	return terra.ReferenceAsString(cmp.ref.Append("record_row_delimiter"))
}

type applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes struct {
	ref terra.Reference
}

func (jmp applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) InternalRef() (terra.Reference, error) {
	return jmp.ref, nil
}

func (jmp applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes {
	return applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes{ref: ref}
}

func (jmp applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return jmp.ref.InternalTokens()
}

func (jmp applicationConfigurationSqlApplicationConfiguration53Fe9Ff7Attributes) RecordRowPath() terra.StringValue {
	return terra.ReferenceAsString(jmp.ref.Append("record_row_path"))
}

type applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes struct {
	ref terra.Reference
}

func (srds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) InternalRef() (terra.Reference, error) {
	return srds.ref, nil
}

func (srds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes {
	return applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes{ref: ref}
}

func (srds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srds.ref.InternalTokens()
}

func (srds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) BucketArn() terra.StringValue {
	return terra.ReferenceAsString(srds.ref.Append("bucket_arn"))
}

func (srds applicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceAttributes) FileKey() terra.StringValue {
	return terra.ReferenceAsString(srds.ref.Append("file_key"))
}

type applicationConfigurationVpcConfigurationAttributes struct {
	ref terra.Reference
}

func (vc applicationConfigurationVpcConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc applicationConfigurationVpcConfigurationAttributes) InternalWithRef(ref terra.Reference) applicationConfigurationVpcConfigurationAttributes {
	return applicationConfigurationVpcConfigurationAttributes{ref: ref}
}

func (vc applicationConfigurationVpcConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc applicationConfigurationVpcConfigurationAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc applicationConfigurationVpcConfigurationAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

func (vc applicationConfigurationVpcConfigurationAttributes) VpcConfigurationId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("vpc_configuration_id"))
}

func (vc applicationConfigurationVpcConfigurationAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("vpc_id"))
}

type cloudwatchLoggingOptionsAttributes struct {
	ref terra.Reference
}

func (clo cloudwatchLoggingOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clo.ref, nil
}

func (clo cloudwatchLoggingOptionsAttributes) InternalWithRef(ref terra.Reference) cloudwatchLoggingOptionsAttributes {
	return cloudwatchLoggingOptionsAttributes{ref: ref}
}

func (clo cloudwatchLoggingOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clo.ref.InternalTokens()
}

func (clo cloudwatchLoggingOptionsAttributes) CloudwatchLoggingOptionId() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_logging_option_id"))
}

func (clo cloudwatchLoggingOptionsAttributes) LogStreamArn() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("log_stream_arn"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ApplicationConfigurationState struct {
	ApplicationCodeConfiguration     []ApplicationConfigurationApplicationCodeConfigurationState     `json:"application_code_configuration"`
	ApplicationSnapshotConfiguration []ApplicationConfigurationApplicationSnapshotConfigurationState `json:"application_snapshot_configuration"`
	EnvironmentProperties            []ApplicationConfigurationEnvironmentPropertiesState            `json:"environment_properties"`
	FlinkApplicationConfiguration    []ApplicationConfigurationFlinkApplicationConfigurationState    `json:"flink_application_configuration"`
	RunConfiguration                 []ApplicationConfigurationRunConfigurationState                 `json:"run_configuration"`
	SqlApplicationConfiguration      []ApplicationConfigurationSqlApplicationConfigurationState      `json:"sql_application_configuration"`
	VpcConfiguration                 []ApplicationConfigurationVpcConfigurationState                 `json:"vpc_configuration"`
}

type ApplicationConfigurationApplicationCodeConfigurationState struct {
	CodeContentType string                                                                 `json:"code_content_type"`
	CodeContent     []ApplicationConfigurationApplicationCodeConfigurationCodeContentState `json:"code_content"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentState struct {
	TextContent       string                                                                                  `json:"text_content"`
	S3ContentLocation []ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationState `json:"s3_content_location"`
}

type ApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationState struct {
	BucketArn     string `json:"bucket_arn"`
	FileKey       string `json:"file_key"`
	ObjectVersion string `json:"object_version"`
}

type ApplicationConfigurationApplicationSnapshotConfigurationState struct {
	SnapshotsEnabled bool `json:"snapshots_enabled"`
}

type ApplicationConfigurationEnvironmentPropertiesState struct {
	PropertyGroup []ApplicationConfigurationEnvironmentPropertiesPropertyGroupState `json:"property_group"`
}

type ApplicationConfigurationEnvironmentPropertiesPropertyGroupState struct {
	PropertyGroupId string            `json:"property_group_id"`
	PropertyMap     map[string]string `json:"property_map"`
}

type ApplicationConfigurationFlinkApplicationConfigurationState struct {
	CheckpointConfiguration  []ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationState  `json:"checkpoint_configuration"`
	MonitoringConfiguration  []ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationState  `json:"monitoring_configuration"`
	ParallelismConfiguration []ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationState `json:"parallelism_configuration"`
}

type ApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationState struct {
	CheckpointInterval         float64 `json:"checkpoint_interval"`
	CheckpointingEnabled       bool    `json:"checkpointing_enabled"`
	ConfigurationType          string  `json:"configuration_type"`
	MinPauseBetweenCheckpoints float64 `json:"min_pause_between_checkpoints"`
}

type ApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationState struct {
	ConfigurationType string `json:"configuration_type"`
	LogLevel          string `json:"log_level"`
	MetricsLevel      string `json:"metrics_level"`
}

type ApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationState struct {
	AutoScalingEnabled bool    `json:"auto_scaling_enabled"`
	ConfigurationType  string  `json:"configuration_type"`
	Parallelism        float64 `json:"parallelism"`
	ParallelismPerKpu  float64 `json:"parallelism_per_kpu"`
}

type ApplicationConfigurationRunConfigurationState struct {
	ApplicationRestoreConfiguration []ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationState `json:"application_restore_configuration"`
	FlinkRunConfiguration           []ApplicationConfigurationRunConfigurationFlinkRunConfigurationState           `json:"flink_run_configuration"`
}

type ApplicationConfigurationRunConfigurationApplicationRestoreConfigurationState struct {
	ApplicationRestoreType string `json:"application_restore_type"`
	SnapshotName           string `json:"snapshot_name"`
}

type ApplicationConfigurationRunConfigurationFlinkRunConfigurationState struct {
	AllowNonRestoredState bool `json:"allow_non_restored_state"`
}

type ApplicationConfigurationSqlApplicationConfigurationState struct {
	Input               []ApplicationConfigurationSqlApplicationConfigurationInputState               `json:"input"`
	Output              []ApplicationConfigurationSqlApplicationConfigurationOutputState              `json:"output"`
	ReferenceDataSource []ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceState `json:"reference_data_source"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputState struct {
	InAppStreamNames                   []string                                                                                          `json:"in_app_stream_names"`
	InputId                            string                                                                                            `json:"input_id"`
	NamePrefix                         string                                                                                            `json:"name_prefix"`
	InputParallelism                   []ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismState                   `json:"input_parallelism"`
	InputProcessingConfiguration       []ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationState       `json:"input_processing_configuration"`
	InputSchema                        []ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaState                        `json:"input_schema"`
	InputStartingPositionConfiguration []ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationState `json:"input_starting_position_configuration"`
	KinesisFirehoseInput               []ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputState               `json:"kinesis_firehose_input"`
	KinesisStreamsInput                []ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputState                `json:"kinesis_streams_input"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputParallelismState struct {
	Count float64 `json:"count"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationState struct {
	InputLambdaProcessor []ApplicationConfigurationSqlApplicationConfigurationE5495824State `json:"input_lambda_processor"`
}

type ApplicationConfigurationSqlApplicationConfigurationE5495824State struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputSchemaState struct {
	RecordEncoding string                                                             `json:"record_encoding"`
	RecordColumn   []ApplicationConfigurationSqlApplicationConfiguration204Adc8CState `json:"record_column"`
	RecordFormat   []ApplicationConfigurationSqlApplicationConfiguration2A04Ed58State `json:"record_format"`
}

type ApplicationConfigurationSqlApplicationConfiguration204Adc8CState struct {
	Mapping string `json:"mapping"`
	Name    string `json:"name"`
	SqlType string `json:"sql_type"`
}

type ApplicationConfigurationSqlApplicationConfiguration2A04Ed58State struct {
	RecordFormatType  string                                                             `json:"record_format_type"`
	MappingParameters []ApplicationConfigurationSqlApplicationConfiguration7A87Fff5State `json:"mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfiguration7A87Fff5State struct {
	CsvMappingParameters  []ApplicationConfigurationSqlApplicationConfigurationC224A52EState `json:"csv_mapping_parameters"`
	JsonMappingParameters []ApplicationConfigurationSqlApplicationConfiguration204F7F24State `json:"json_mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfigurationC224A52EState struct {
	RecordColumnDelimiter string `json:"record_column_delimiter"`
	RecordRowDelimiter    string `json:"record_row_delimiter"`
}

type ApplicationConfigurationSqlApplicationConfiguration204F7F24State struct {
	RecordRowPath string `json:"record_row_path"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationState struct {
	InputStartingPosition string `json:"input_starting_position"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputState struct {
	Name                  string                                                                                `json:"name"`
	OutputId              string                                                                                `json:"output_id"`
	DestinationSchema     []ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaState     `json:"destination_schema"`
	KinesisFirehoseOutput []ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputState `json:"kinesis_firehose_output"`
	KinesisStreamsOutput  []ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputState  `json:"kinesis_streams_output"`
	LambdaOutput          []ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputState          `json:"lambda_output"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaState struct {
	RecordFormatType string `json:"record_format_type"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputState struct {
	ResourceArn string `json:"resource_arn"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceState struct {
	ReferenceId           string                                                                                             `json:"reference_id"`
	TableName             string                                                                                             `json:"table_name"`
	ReferenceSchema       []ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaState       `json:"reference_schema"`
	S3ReferenceDataSource []ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceState `json:"s3_reference_data_source"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaState struct {
	RecordEncoding string                                                             `json:"record_encoding"`
	RecordColumn   []ApplicationConfigurationSqlApplicationConfiguration19Cec7E2State `json:"record_column"`
	RecordFormat   []ApplicationConfigurationSqlApplicationConfiguration2B9C949EState `json:"record_format"`
}

type ApplicationConfigurationSqlApplicationConfiguration19Cec7E2State struct {
	Mapping string `json:"mapping"`
	Name    string `json:"name"`
	SqlType string `json:"sql_type"`
}

type ApplicationConfigurationSqlApplicationConfiguration2B9C949EState struct {
	RecordFormatType  string                                                             `json:"record_format_type"`
	MappingParameters []ApplicationConfigurationSqlApplicationConfigurationEbc7091FState `json:"mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfigurationEbc7091FState struct {
	CsvMappingParameters  []ApplicationConfigurationSqlApplicationConfigurationF24D03EdState `json:"csv_mapping_parameters"`
	JsonMappingParameters []ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7State `json:"json_mapping_parameters"`
}

type ApplicationConfigurationSqlApplicationConfigurationF24D03EdState struct {
	RecordColumnDelimiter string `json:"record_column_delimiter"`
	RecordRowDelimiter    string `json:"record_row_delimiter"`
}

type ApplicationConfigurationSqlApplicationConfiguration53Fe9Ff7State struct {
	RecordRowPath string `json:"record_row_path"`
}

type ApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceState struct {
	BucketArn string `json:"bucket_arn"`
	FileKey   string `json:"file_key"`
}

type ApplicationConfigurationVpcConfigurationState struct {
	SecurityGroupIds   []string `json:"security_group_ids"`
	SubnetIds          []string `json:"subnet_ids"`
	VpcConfigurationId string   `json:"vpc_configuration_id"`
	VpcId              string   `json:"vpc_id"`
}

type CloudwatchLoggingOptionsState struct {
	CloudwatchLoggingOptionId string `json:"cloudwatch_logging_option_id"`
	LogStreamArn              string `json:"log_stream_arn"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
