// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_redshiftserverless_credentials

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_redshiftserverless_credentials.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (arc *DataSource) DataSource() string {
	return "aws_redshiftserverless_credentials"
}

// LocalName returns the local name for [DataSource].
func (arc *DataSource) LocalName() string {
	return arc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (arc *DataSource) Configuration() interface{} {
	return arc.Args
}

// Attributes returns the attributes for [DataSource].
func (arc *DataSource) Attributes() dataAwsRedshiftserverlessCredentialsAttributes {
	return dataAwsRedshiftserverlessCredentialsAttributes{ref: terra.ReferenceDataSource(arc)}
}

// DataArgs contains the configurations for aws_redshiftserverless_credentials.
type DataArgs struct {
	// DbName is optional.
	DbName terra.StringValue `hcl:"db_name,attr"`
	// DurationSeconds is optional.
	DurationSeconds terra.NumberValue `hcl:"duration_seconds,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// WorkgroupName is required.
	WorkgroupName terra.StringValue `hcl:"workgroup_name,attr" validate:"required"`
}

type dataAwsRedshiftserverlessCredentialsAttributes struct {
	ref terra.Reference
}

// DbName returns a reference to field db_name of aws_redshiftserverless_credentials.
func (arc dataAwsRedshiftserverlessCredentialsAttributes) DbName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("db_name"))
}

// DbPassword returns a reference to field db_password of aws_redshiftserverless_credentials.
func (arc dataAwsRedshiftserverlessCredentialsAttributes) DbPassword() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("db_password"))
}

// DbUser returns a reference to field db_user of aws_redshiftserverless_credentials.
func (arc dataAwsRedshiftserverlessCredentialsAttributes) DbUser() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("db_user"))
}

// DurationSeconds returns a reference to field duration_seconds of aws_redshiftserverless_credentials.
func (arc dataAwsRedshiftserverlessCredentialsAttributes) DurationSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(arc.ref.Append("duration_seconds"))
}

// Expiration returns a reference to field expiration of aws_redshiftserverless_credentials.
func (arc dataAwsRedshiftserverlessCredentialsAttributes) Expiration() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("expiration"))
}

// Id returns a reference to field id of aws_redshiftserverless_credentials.
func (arc dataAwsRedshiftserverlessCredentialsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("id"))
}

// WorkgroupName returns a reference to field workgroup_name of aws_redshiftserverless_credentials.
func (arc dataAwsRedshiftserverlessCredentialsAttributes) WorkgroupName() terra.StringValue {
	return terra.ReferenceAsString(arc.ref.Append("workgroup_name"))
}
