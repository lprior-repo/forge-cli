// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lex_bot

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AbortStatement struct {
	// ResponseCard is optional.
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// AbortStatementMessage is min=1,max=15.
	Message []AbortStatementMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type AbortStatementMessage struct {
	// Content is required.
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType is required.
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber is optional.
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type ClarificationPrompt struct {
	// MaxAttempts is required.
	MaxAttempts terra.NumberValue `hcl:"max_attempts,attr" validate:"required"`
	// ResponseCard is optional.
	ResponseCard terra.StringValue `hcl:"response_card,attr"`
	// ClarificationPromptMessage is min=1,max=15.
	Message []ClarificationPromptMessage `hcl:"message,block" validate:"min=1,max=15"`
}

type ClarificationPromptMessage struct {
	// Content is required.
	Content terra.StringValue `hcl:"content,attr" validate:"required"`
	// ContentType is required.
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// GroupNumber is optional.
	GroupNumber terra.NumberValue `hcl:"group_number,attr"`
}

type Intent struct {
	// IntentName is required.
	IntentName terra.StringValue `hcl:"intent_name,attr" validate:"required"`
	// IntentVersion is required.
	IntentVersion terra.StringValue `hcl:"intent_version,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type abortStatementAttributes struct {
	ref terra.Reference
}

func (as abortStatementAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as abortStatementAttributes) InternalWithRef(ref terra.Reference) abortStatementAttributes {
	return abortStatementAttributes{ref: ref}
}

func (as abortStatementAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as abortStatementAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("response_card"))
}

func (as abortStatementAttributes) Message() terra.SetValue[abortStatementMessageAttributes] {
	return terra.ReferenceAsSet[abortStatementMessageAttributes](as.ref.Append("message"))
}

type abortStatementMessageAttributes struct {
	ref terra.Reference
}

func (m abortStatementMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m abortStatementMessageAttributes) InternalWithRef(ref terra.Reference) abortStatementMessageAttributes {
	return abortStatementMessageAttributes{ref: ref}
}

func (m abortStatementMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m abortStatementMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m abortStatementMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m abortStatementMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type clarificationPromptAttributes struct {
	ref terra.Reference
}

func (cp clarificationPromptAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp clarificationPromptAttributes) InternalWithRef(ref terra.Reference) clarificationPromptAttributes {
	return clarificationPromptAttributes{ref: ref}
}

func (cp clarificationPromptAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp clarificationPromptAttributes) MaxAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(cp.ref.Append("max_attempts"))
}

func (cp clarificationPromptAttributes) ResponseCard() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("response_card"))
}

func (cp clarificationPromptAttributes) Message() terra.SetValue[clarificationPromptMessageAttributes] {
	return terra.ReferenceAsSet[clarificationPromptMessageAttributes](cp.ref.Append("message"))
}

type clarificationPromptMessageAttributes struct {
	ref terra.Reference
}

func (m clarificationPromptMessageAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m clarificationPromptMessageAttributes) InternalWithRef(ref terra.Reference) clarificationPromptMessageAttributes {
	return clarificationPromptMessageAttributes{ref: ref}
}

func (m clarificationPromptMessageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m clarificationPromptMessageAttributes) Content() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content"))
}

func (m clarificationPromptMessageAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("content_type"))
}

func (m clarificationPromptMessageAttributes) GroupNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("group_number"))
}

type intentAttributes struct {
	ref terra.Reference
}

func (i intentAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i intentAttributes) InternalWithRef(ref terra.Reference) intentAttributes {
	return intentAttributes{ref: ref}
}

func (i intentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i intentAttributes) IntentName() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("intent_name"))
}

func (i intentAttributes) IntentVersion() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("intent_version"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type AbortStatementState struct {
	ResponseCard string                       `json:"response_card"`
	Message      []AbortStatementMessageState `json:"message"`
}

type AbortStatementMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type ClarificationPromptState struct {
	MaxAttempts  float64                           `json:"max_attempts"`
	ResponseCard string                            `json:"response_card"`
	Message      []ClarificationPromptMessageState `json:"message"`
}

type ClarificationPromptMessageState struct {
	Content     string  `json:"content"`
	ContentType string  `json:"content_type"`
	GroupNumber float64 `json:"group_number"`
}

type IntentState struct {
	IntentName    string `json:"intent_name"`
	IntentVersion string `json:"intent_version"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
