// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_dms_certificate

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_dms_certificate.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (adc *DataSource) DataSource() string {
	return "aws_dms_certificate"
}

// LocalName returns the local name for [DataSource].
func (adc *DataSource) LocalName() string {
	return adc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (adc *DataSource) Configuration() interface{} {
	return adc.Args
}

// Attributes returns the attributes for [DataSource].
func (adc *DataSource) Attributes() dataAwsDmsCertificateAttributes {
	return dataAwsDmsCertificateAttributes{ref: terra.ReferenceDataSource(adc)}
}

// DataArgs contains the configurations for aws_dms_certificate.
type DataArgs struct {
	// CertificateId is required.
	CertificateId terra.StringValue `hcl:"certificate_id,attr" validate:"required"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsDmsCertificateAttributes struct {
	ref terra.Reference
}

// CertificateArn returns a reference to field certificate_arn of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) CertificateArn() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("certificate_arn"))
}

// CertificateCreationDate returns a reference to field certificate_creation_date of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) CertificateCreationDate() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("certificate_creation_date"))
}

// CertificateId returns a reference to field certificate_id of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) CertificateId() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("certificate_id"))
}

// CertificateOwner returns a reference to field certificate_owner of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) CertificateOwner() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("certificate_owner"))
}

// CertificatePem returns a reference to field certificate_pem of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) CertificatePem() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("certificate_pem"))
}

// CertificateWallet returns a reference to field certificate_wallet of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) CertificateWallet() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("certificate_wallet"))
}

// Id returns a reference to field id of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("id"))
}

// KeyLength returns a reference to field key_length of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) KeyLength() terra.NumberValue {
	return terra.ReferenceAsNumber(adc.ref.Append("key_length"))
}

// SigningAlgorithm returns a reference to field signing_algorithm of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) SigningAlgorithm() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("signing_algorithm"))
}

// Tags returns a reference to field tags of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adc.ref.Append("tags"))
}

// ValidFromDate returns a reference to field valid_from_date of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) ValidFromDate() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("valid_from_date"))
}

// ValidToDate returns a reference to field valid_to_date of aws_dms_certificate.
func (adc dataAwsDmsCertificateAttributes) ValidToDate() terra.StringValue {
	return terra.ReferenceAsString(adc.ref.Append("valid_to_date"))
}
