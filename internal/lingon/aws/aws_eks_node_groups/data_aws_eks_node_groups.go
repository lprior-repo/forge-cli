// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_eks_node_groups

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_eks_node_groups.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aeng *DataSource) DataSource() string {
	return "aws_eks_node_groups"
}

// LocalName returns the local name for [DataSource].
func (aeng *DataSource) LocalName() string {
	return aeng.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aeng *DataSource) Configuration() interface{} {
	return aeng.Args
}

// Attributes returns the attributes for [DataSource].
func (aeng *DataSource) Attributes() dataAwsEksNodeGroupsAttributes {
	return dataAwsEksNodeGroupsAttributes{ref: terra.ReferenceDataSource(aeng)}
}

// DataArgs contains the configurations for aws_eks_node_groups.
type DataArgs struct {
	// ClusterName is required.
	ClusterName terra.StringValue `hcl:"cluster_name,attr" validate:"required"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
}

type dataAwsEksNodeGroupsAttributes struct {
	ref terra.Reference
}

// ClusterName returns a reference to field cluster_name of aws_eks_node_groups.
func (aeng dataAwsEksNodeGroupsAttributes) ClusterName() terra.StringValue {
	return terra.ReferenceAsString(aeng.ref.Append("cluster_name"))
}

// Id returns a reference to field id of aws_eks_node_groups.
func (aeng dataAwsEksNodeGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aeng.ref.Append("id"))
}

// Names returns a reference to field names of aws_eks_node_groups.
func (aeng dataAwsEksNodeGroupsAttributes) Names() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aeng.ref.Append("names"))
}
