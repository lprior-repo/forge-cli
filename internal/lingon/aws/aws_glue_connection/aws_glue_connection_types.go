// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_glue_connection

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type PhysicalConnectionRequirements struct {
	// AvailabilityZone is optional.
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// SecurityGroupIdList is optional.
	SecurityGroupIdList terra.SetValue[terra.StringValue] `hcl:"security_group_id_list,attr"`
	// SubnetId is optional.
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
}

type physicalConnectionRequirementsAttributes struct {
	ref terra.Reference
}

func (pcr physicalConnectionRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return pcr.ref, nil
}

func (pcr physicalConnectionRequirementsAttributes) InternalWithRef(ref terra.Reference) physicalConnectionRequirementsAttributes {
	return physicalConnectionRequirementsAttributes{ref: ref}
}

func (pcr physicalConnectionRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pcr.ref.InternalTokens()
}

func (pcr physicalConnectionRequirementsAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(pcr.ref.Append("availability_zone"))
}

func (pcr physicalConnectionRequirementsAttributes) SecurityGroupIdList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](pcr.ref.Append("security_group_id_list"))
}

func (pcr physicalConnectionRequirementsAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(pcr.ref.Append("subnet_id"))
}

type PhysicalConnectionRequirementsState struct {
	AvailabilityZone    string   `json:"availability_zone"`
	SecurityGroupIdList []string `json:"security_group_id_list"`
	SubnetId            string   `json:"subnet_id"`
}
