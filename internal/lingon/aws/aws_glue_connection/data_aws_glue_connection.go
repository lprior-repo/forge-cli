// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_glue_connection

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_glue_connection.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (agc *DataSource) DataSource() string {
	return "aws_glue_connection"
}

// LocalName returns the local name for [DataSource].
func (agc *DataSource) LocalName() string {
	return agc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (agc *DataSource) Configuration() interface{} {
	return agc.Args
}

// Attributes returns the attributes for [DataSource].
func (agc *DataSource) Attributes() dataAwsGlueConnectionAttributes {
	return dataAwsGlueConnectionAttributes{ref: terra.ReferenceDataSource(agc)}
}

// DataArgs contains the configurations for aws_glue_connection.
type DataArgs struct {
	// Id is required.
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsGlueConnectionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(agc.ref.Append("arn"))
}

// CatalogId returns a reference to field catalog_id of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) CatalogId() terra.StringValue {
	return terra.ReferenceAsString(agc.ref.Append("catalog_id"))
}

// ConnectionProperties returns a reference to field connection_properties of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) ConnectionProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](agc.ref.Append("connection_properties"))
}

// ConnectionType returns a reference to field connection_type of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) ConnectionType() terra.StringValue {
	return terra.ReferenceAsString(agc.ref.Append("connection_type"))
}

// Description returns a reference to field description of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(agc.ref.Append("description"))
}

// Id returns a reference to field id of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(agc.ref.Append("id"))
}

// MatchCriteria returns a reference to field match_criteria of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) MatchCriteria() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](agc.ref.Append("match_criteria"))
}

// Name returns a reference to field name of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(agc.ref.Append("name"))
}

// Tags returns a reference to field tags of aws_glue_connection.
func (agc dataAwsGlueConnectionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](agc.ref.Append("tags"))
}

func (agc dataAwsGlueConnectionAttributes) PhysicalConnectionRequirements() terra.ListValue[DataphysicalConnectionRequirementsAttributes] {
	return terra.ReferenceAsList[DataphysicalConnectionRequirementsAttributes](agc.ref.Append("physical_connection_requirements"))
}
