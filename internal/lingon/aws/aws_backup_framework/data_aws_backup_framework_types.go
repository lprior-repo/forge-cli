// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_backup_framework

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatacontrolAttributes struct {
	ref terra.Reference
}

func (c DatacontrolAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DatacontrolAttributes) InternalWithRef(ref terra.Reference) DatacontrolAttributes {
	return DatacontrolAttributes{ref: ref}
}

func (c DatacontrolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DatacontrolAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

func (c DatacontrolAttributes) InputParameter() terra.SetValue[DatacontrolInputParameterAttributes] {
	return terra.ReferenceAsSet[DatacontrolInputParameterAttributes](c.ref.Append("input_parameter"))
}

func (c DatacontrolAttributes) Scope() terra.ListValue[DatacontrolScopeAttributes] {
	return terra.ReferenceAsList[DatacontrolScopeAttributes](c.ref.Append("scope"))
}

type DatacontrolInputParameterAttributes struct {
	ref terra.Reference
}

func (ip DatacontrolInputParameterAttributes) InternalRef() (terra.Reference, error) {
	return ip.ref, nil
}

func (ip DatacontrolInputParameterAttributes) InternalWithRef(ref terra.Reference) DatacontrolInputParameterAttributes {
	return DatacontrolInputParameterAttributes{ref: ref}
}

func (ip DatacontrolInputParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ip.ref.InternalTokens()
}

func (ip DatacontrolInputParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("name"))
}

func (ip DatacontrolInputParameterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ip.ref.Append("value"))
}

type DatacontrolScopeAttributes struct {
	ref terra.Reference
}

func (s DatacontrolScopeAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DatacontrolScopeAttributes) InternalWithRef(ref terra.Reference) DatacontrolScopeAttributes {
	return DatacontrolScopeAttributes{ref: ref}
}

func (s DatacontrolScopeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DatacontrolScopeAttributes) ComplianceResourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("compliance_resource_ids"))
}

func (s DatacontrolScopeAttributes) ComplianceResourceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](s.ref.Append("compliance_resource_types"))
}

func (s DatacontrolScopeAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](s.ref.Append("tags"))
}

type DataControlState struct {
	Name           string                           `json:"name"`
	InputParameter []DataControlInputParameterState `json:"input_parameter"`
	Scope          []DataControlScopeState          `json:"scope"`
}

type DataControlInputParameterState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataControlScopeState struct {
	ComplianceResourceIds   []string          `json:"compliance_resource_ids"`
	ComplianceResourceTypes []string          `json:"compliance_resource_types"`
	Tags                    map[string]string `json:"tags"`
}
