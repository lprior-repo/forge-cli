// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ssm_resource_data_sync

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type S3Destination struct {
	// BucketName is required.
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// KmsKeyArn is optional.
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
	// Prefix is optional.
	Prefix terra.StringValue `hcl:"prefix,attr"`
	// Region is required.
	Region terra.StringValue `hcl:"region,attr" validate:"required"`
	// SyncFormat is optional.
	SyncFormat terra.StringValue `hcl:"sync_format,attr"`
}

type s3DestinationAttributes struct {
	ref terra.Reference
}

func (sd s3DestinationAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd s3DestinationAttributes) InternalWithRef(ref terra.Reference) s3DestinationAttributes {
	return s3DestinationAttributes{ref: ref}
}

func (sd s3DestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd s3DestinationAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("bucket_name"))
}

func (sd s3DestinationAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("kms_key_arn"))
}

func (sd s3DestinationAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("prefix"))
}

func (sd s3DestinationAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("region"))
}

func (sd s3DestinationAttributes) SyncFormat() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("sync_format"))
}

type S3DestinationState struct {
	BucketName string `json:"bucket_name"`
	KmsKeyArn  string `json:"kms_key_arn"`
	Prefix     string `json:"prefix"`
	Region     string `json:"region"`
	SyncFormat string `json:"sync_format"`
}
