// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appflow_connector_profile

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ConnectorProfileConfig struct {
	// ConnectorProfileConfigConnectorProfileCredentials is required.
	ConnectorProfileCredentials *ConnectorProfileConfigConnectorProfileCredentials `hcl:"connector_profile_credentials,block" validate:"required"`
	// ConnectorProfileConfigConnectorProfileProperties is required.
	ConnectorProfileProperties *ConnectorProfileConfigConnectorProfileProperties `hcl:"connector_profile_properties,block" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentials struct {
	// ConnectorProfileConfigConnectorProfileCredentialsAmplitude is optional.
	Amplitude *ConnectorProfileConfigConnectorProfileCredentialsAmplitude `hcl:"amplitude,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsCustomConnector is optional.
	CustomConnector *ConnectorProfileConfigConnectorProfileCredentialsCustomConnector `hcl:"custom_connector,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsDatadog is optional.
	Datadog *ConnectorProfileConfigConnectorProfileCredentialsDatadog `hcl:"datadog,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsDynatrace is optional.
	Dynatrace *ConnectorProfileConfigConnectorProfileCredentialsDynatrace `hcl:"dynatrace,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics is optional.
	GoogleAnalytics *ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics `hcl:"google_analytics,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsHoneycode is optional.
	Honeycode *ConnectorProfileConfigConnectorProfileCredentialsHoneycode `hcl:"honeycode,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsInforNexus is optional.
	InforNexus *ConnectorProfileConfigConnectorProfileCredentialsInforNexus `hcl:"infor_nexus,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsMarketo is optional.
	Marketo *ConnectorProfileConfigConnectorProfileCredentialsMarketo `hcl:"marketo,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsRedshift is optional.
	Redshift *ConnectorProfileConfigConnectorProfileCredentialsRedshift `hcl:"redshift,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsSalesforce is optional.
	Salesforce *ConnectorProfileConfigConnectorProfileCredentialsSalesforce `hcl:"salesforce,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsSapoData is optional.
	SapoData *ConnectorProfileConfigConnectorProfileCredentialsSapoData `hcl:"sapo_data,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsServiceNow is optional.
	ServiceNow *ConnectorProfileConfigConnectorProfileCredentialsServiceNow `hcl:"service_now,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsSingular is optional.
	Singular *ConnectorProfileConfigConnectorProfileCredentialsSingular `hcl:"singular,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsSlack is optional.
	Slack *ConnectorProfileConfigConnectorProfileCredentialsSlack `hcl:"slack,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsSnowflake is optional.
	Snowflake *ConnectorProfileConfigConnectorProfileCredentialsSnowflake `hcl:"snowflake,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsTrendmicro is optional.
	Trendmicro *ConnectorProfileConfigConnectorProfileCredentialsTrendmicro `hcl:"trendmicro,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsVeeva is optional.
	Veeva *ConnectorProfileConfigConnectorProfileCredentialsVeeva `hcl:"veeva,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsZendesk is optional.
	Zendesk *ConnectorProfileConfigConnectorProfileCredentialsZendesk `hcl:"zendesk,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsAmplitude struct {
	// ApiKey is required.
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// SecretKey is required.
	SecretKey terra.StringValue `hcl:"secret_key,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnector struct {
	// AuthenticationType is required.
	AuthenticationType terra.StringValue `hcl:"authentication_type,attr" validate:"required"`
	// ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey is optional.
	ApiKey *ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey `hcl:"api_key,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic is optional.
	Basic *ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic `hcl:"basic,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom is optional.
	Custom *ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom `hcl:"custom,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 is optional.
	Oauth2 *ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 `hcl:"oauth2,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKey struct {
	// ApiKey is required.
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// ApiSecretKey is optional.
	ApiSecretKey terra.StringValue `hcl:"api_secret_key,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasic struct {
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustom struct {
	// CredentialsMap is optional.
	CredentialsMap terra.MapValue[terra.StringValue] `hcl:"credentials_map,attr"`
	// CustomAuthenticationType is required.
	CustomAuthenticationType terra.StringValue `hcl:"custom_authentication_type,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2 struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId is optional.
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ClientSecret is optional.
	ClientSecret terra.StringValue `hcl:"client_secret,attr"`
	// RefreshToken is optional.
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// ConnectorProfileConfigConnectorProfileCredentials2Baa85Ee is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentials2Baa85Ee `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentials2Baa85Ee struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsDatadog struct {
	// ApiKey is required.
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
	// ApplicationKey is required.
	ApplicationKey terra.StringValue `hcl:"application_key,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsDynatrace struct {
	// ApiToken is required.
	ApiToken terra.StringValue `hcl:"api_token,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId is required.
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret is required.
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// RefreshToken is optional.
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsHoneycode struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// RefreshToken is optional.
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// ConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequest struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsInforNexus struct {
	// AccessKeyId is required.
	AccessKeyId terra.StringValue `hcl:"access_key_id,attr" validate:"required"`
	// Datakey is required.
	Datakey terra.StringValue `hcl:"datakey,attr" validate:"required"`
	// SecretAccessKey is required.
	SecretAccessKey terra.StringValue `hcl:"secret_access_key,attr" validate:"required"`
	// UserId is required.
	UserId terra.StringValue `hcl:"user_id,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsMarketo struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId is required.
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret is required.
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// ConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequest struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsRedshift struct {
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSalesforce struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientCredentialsArn is optional.
	ClientCredentialsArn terra.StringValue `hcl:"client_credentials_arn,attr"`
	// RefreshToken is optional.
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// ConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSapoData struct {
	// ConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials is optional.
	BasicAuthCredentials *ConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials `hcl:"basic_auth_credentials,block"`
	// ConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials is optional.
	OauthCredentials *ConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials `hcl:"oauth_credentials,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentials struct {
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId is required.
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret is required.
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// RefreshToken is optional.
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
	// ConnectorProfileConfigConnectorProfileCredentials97Bdc99D is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentials97Bdc99D `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentials97Bdc99D struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsServiceNow struct {
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSingular struct {
	// ApiKey is required.
	ApiKey terra.StringValue `hcl:"api_key,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSlack struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId is required.
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret is required.
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// ConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequest struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSnowflake struct {
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsTrendmicro struct {
	// ApiSecretKey is required.
	ApiSecretKey terra.StringValue `hcl:"api_secret_key,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsVeeva struct {
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfileCredentialsZendesk struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// ClientId is required.
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret is required.
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// ConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest is optional.
	OauthRequest *ConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest `hcl:"oauth_request,block"`
}

type ConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequest struct {
	// AuthCode is optional.
	AuthCode terra.StringValue `hcl:"auth_code,attr"`
	// RedirectUri is optional.
	RedirectUri terra.StringValue `hcl:"redirect_uri,attr"`
}

type ConnectorProfileConfigConnectorProfileProperties struct {
	// ConnectorProfileConfigConnectorProfilePropertiesAmplitude is optional.
	Amplitude *ConnectorProfileConfigConnectorProfilePropertiesAmplitude `hcl:"amplitude,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesCustomConnector is optional.
	CustomConnector *ConnectorProfileConfigConnectorProfilePropertiesCustomConnector `hcl:"custom_connector,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesDatadog is optional.
	Datadog *ConnectorProfileConfigConnectorProfilePropertiesDatadog `hcl:"datadog,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesDynatrace is optional.
	Dynatrace *ConnectorProfileConfigConnectorProfilePropertiesDynatrace `hcl:"dynatrace,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics is optional.
	GoogleAnalytics *ConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics `hcl:"google_analytics,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesHoneycode is optional.
	Honeycode *ConnectorProfileConfigConnectorProfilePropertiesHoneycode `hcl:"honeycode,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesInforNexus is optional.
	InforNexus *ConnectorProfileConfigConnectorProfilePropertiesInforNexus `hcl:"infor_nexus,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesMarketo is optional.
	Marketo *ConnectorProfileConfigConnectorProfilePropertiesMarketo `hcl:"marketo,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesRedshift is optional.
	Redshift *ConnectorProfileConfigConnectorProfilePropertiesRedshift `hcl:"redshift,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesSalesforce is optional.
	Salesforce *ConnectorProfileConfigConnectorProfilePropertiesSalesforce `hcl:"salesforce,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesSapoData is optional.
	SapoData *ConnectorProfileConfigConnectorProfilePropertiesSapoData `hcl:"sapo_data,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesServiceNow is optional.
	ServiceNow *ConnectorProfileConfigConnectorProfilePropertiesServiceNow `hcl:"service_now,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesSingular is optional.
	Singular *ConnectorProfileConfigConnectorProfilePropertiesSingular `hcl:"singular,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesSlack is optional.
	Slack *ConnectorProfileConfigConnectorProfilePropertiesSlack `hcl:"slack,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesSnowflake is optional.
	Snowflake *ConnectorProfileConfigConnectorProfilePropertiesSnowflake `hcl:"snowflake,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesTrendmicro is optional.
	Trendmicro *ConnectorProfileConfigConnectorProfilePropertiesTrendmicro `hcl:"trendmicro,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesVeeva is optional.
	Veeva *ConnectorProfileConfigConnectorProfilePropertiesVeeva `hcl:"veeva,block"`
	// ConnectorProfileConfigConnectorProfilePropertiesZendesk is optional.
	Zendesk *ConnectorProfileConfigConnectorProfilePropertiesZendesk `hcl:"zendesk,block"`
}

type ConnectorProfileConfigConnectorProfilePropertiesAmplitude struct{}

type ConnectorProfileConfigConnectorProfilePropertiesCustomConnector struct {
	// ProfileProperties is optional.
	ProfileProperties terra.MapValue[terra.StringValue] `hcl:"profile_properties,attr"`
	// ConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties is optional.
	Oauth2Properties *ConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties `hcl:"oauth2_properties,block"`
}

type ConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2Properties struct {
	// Oauth2GrantType is required.
	Oauth2GrantType terra.StringValue `hcl:"oauth2_grant_type,attr" validate:"required"`
	// TokenUrl is required.
	TokenUrl terra.StringValue `hcl:"token_url,attr" validate:"required"`
	// TokenUrlCustomProperties is optional.
	TokenUrlCustomProperties terra.MapValue[terra.StringValue] `hcl:"token_url_custom_properties,attr"`
}

type ConnectorProfileConfigConnectorProfilePropertiesDatadog struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesDynatrace struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesGoogleAnalytics struct{}

type ConnectorProfileConfigConnectorProfilePropertiesHoneycode struct{}

type ConnectorProfileConfigConnectorProfilePropertiesInforNexus struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesMarketo struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesRedshift struct {
	// BucketName is required.
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// ClusterIdentifier is optional.
	ClusterIdentifier terra.StringValue `hcl:"cluster_identifier,attr"`
	// DataApiRoleArn is optional.
	DataApiRoleArn terra.StringValue `hcl:"data_api_role_arn,attr"`
	// DatabaseName is optional.
	DatabaseName terra.StringValue `hcl:"database_name,attr"`
	// DatabaseUrl is optional.
	DatabaseUrl terra.StringValue `hcl:"database_url,attr"`
	// RoleArn is required.
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSalesforce struct {
	// InstanceUrl is optional.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr"`
	// IsSandboxEnvironment is optional.
	IsSandboxEnvironment terra.BoolValue `hcl:"is_sandbox_environment,attr"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSapoData struct {
	// ApplicationHostUrl is required.
	ApplicationHostUrl terra.StringValue `hcl:"application_host_url,attr" validate:"required"`
	// ApplicationServicePath is required.
	ApplicationServicePath terra.StringValue `hcl:"application_service_path,attr" validate:"required"`
	// ClientNumber is required.
	ClientNumber terra.StringValue `hcl:"client_number,attr" validate:"required"`
	// LogonLanguage is optional.
	LogonLanguage terra.StringValue `hcl:"logon_language,attr"`
	// PortNumber is required.
	PortNumber terra.NumberValue `hcl:"port_number,attr" validate:"required"`
	// PrivateLinkServiceName is optional.
	PrivateLinkServiceName terra.StringValue `hcl:"private_link_service_name,attr"`
	// ConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties is optional.
	OauthProperties *ConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties `hcl:"oauth_properties,block"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties struct {
	// AuthCodeUrl is required.
	AuthCodeUrl terra.StringValue `hcl:"auth_code_url,attr" validate:"required"`
	// OauthScopes is required.
	OauthScopes terra.ListValue[terra.StringValue] `hcl:"oauth_scopes,attr" validate:"required"`
	// TokenUrl is required.
	TokenUrl terra.StringValue `hcl:"token_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesServiceNow struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSingular struct{}

type ConnectorProfileConfigConnectorProfilePropertiesSlack struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSnowflake struct {
	// AccountName is optional.
	AccountName terra.StringValue `hcl:"account_name,attr"`
	// BucketName is required.
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// PrivateLinkServiceName is optional.
	PrivateLinkServiceName terra.StringValue `hcl:"private_link_service_name,attr"`
	// Region is optional.
	Region terra.StringValue `hcl:"region,attr"`
	// Stage is required.
	Stage terra.StringValue `hcl:"stage,attr" validate:"required"`
	// Warehouse is required.
	Warehouse terra.StringValue `hcl:"warehouse,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesTrendmicro struct{}

type ConnectorProfileConfigConnectorProfilePropertiesVeeva struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type ConnectorProfileConfigConnectorProfilePropertiesZendesk struct {
	// InstanceUrl is required.
	InstanceUrl terra.StringValue `hcl:"instance_url,attr" validate:"required"`
}

type connectorProfileConfigAttributes struct {
	ref terra.Reference
}

func (cpc connectorProfileConfigAttributes) InternalRef() (terra.Reference, error) {
	return cpc.ref, nil
}

func (cpc connectorProfileConfigAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigAttributes {
	return connectorProfileConfigAttributes{ref: ref}
}

func (cpc connectorProfileConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpc.ref.InternalTokens()
}

func (cpc connectorProfileConfigAttributes) ConnectorProfileCredentials() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsAttributes](cpc.ref.Append("connector_profile_credentials"))
}

func (cpc connectorProfileConfigAttributes) ConnectorProfileProperties() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesAttributes](cpc.ref.Append("connector_profile_properties"))
}

type connectorProfileConfigConnectorProfileCredentialsAttributes struct {
	ref terra.Reference
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) InternalRef() (terra.Reference, error) {
	return cpc.ref, nil
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsAttributes {
	return connectorProfileConfigConnectorProfileCredentialsAttributes{ref: ref}
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpc.ref.InternalTokens()
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Amplitude() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes](cpc.ref.Append("amplitude"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) CustomConnector() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes](cpc.ref.Append("custom_connector"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Datadog() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsDatadogAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsDatadogAttributes](cpc.ref.Append("datadog"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Dynatrace() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes](cpc.ref.Append("dynatrace"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) GoogleAnalytics() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes](cpc.ref.Append("google_analytics"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Honeycode() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes](cpc.ref.Append("honeycode"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) InforNexus() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes](cpc.ref.Append("infor_nexus"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Marketo() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsMarketoAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsMarketoAttributes](cpc.ref.Append("marketo"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Redshift() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes](cpc.ref.Append("redshift"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Salesforce() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes](cpc.ref.Append("salesforce"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) SapoData() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes](cpc.ref.Append("sapo_data"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) ServiceNow() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes](cpc.ref.Append("service_now"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Singular() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSingularAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSingularAttributes](cpc.ref.Append("singular"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Slack() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSlackAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSlackAttributes](cpc.ref.Append("slack"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Snowflake() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes](cpc.ref.Append("snowflake"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Trendmicro() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes](cpc.ref.Append("trendmicro"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Veeva() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsVeevaAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsVeevaAttributes](cpc.ref.Append("veeva"))
}

func (cpc connectorProfileConfigConnectorProfileCredentialsAttributes) Zendesk() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsZendeskAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsZendeskAttributes](cpc.ref.Append("zendesk"))
}

type connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes struct {
	ref terra.Reference
}

func (a connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes {
	return connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes{ref: ref}
}

func (a connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("api_key"))
}

func (a connectorProfileConfigConnectorProfileCredentialsAmplitudeAttributes) SecretKey() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("secret_key"))
}

type connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes {
	return connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes{ref: ref}
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) AuthenticationType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("authentication_type"))
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) ApiKey() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes](cc.ref.Append("api_key"))
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) Basic() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes](cc.ref.Append("basic"))
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) Custom() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes](cc.ref.Append("custom"))
}

func (cc connectorProfileConfigConnectorProfileCredentialsCustomConnectorAttributes) Oauth2() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes](cc.ref.Append("oauth2"))
}

type connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes struct {
	ref terra.Reference
}

func (ak connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes) InternalRef() (terra.Reference, error) {
	return ak.ref, nil
}

func (ak connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes {
	return connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes{ref: ref}
}

func (ak connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ak.ref.InternalTokens()
}

func (ak connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("api_key"))
}

func (ak connectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyAttributes) ApiSecretKey() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("api_secret_key"))
}

type connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes struct {
	ref terra.Reference
}

func (b connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes {
	return connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes{ref: ref}
}

func (b connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("password"))
}

func (b connectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("username"))
}

type connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes struct {
	ref terra.Reference
}

func (c connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes {
	return connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes{ref: ref}
}

func (c connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes) CredentialsMap() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](c.ref.Append("credentials_map"))
}

func (c connectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomAttributes) CustomAuthenticationType() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("custom_authentication_type"))
}

type connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes struct {
	ref terra.Reference
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes {
	return connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes{ref: ref}
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("access_token"))
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("client_id"))
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("client_secret"))
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("refresh_token"))
}

func (o connectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Attributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes](o.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes {
	return connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentials2Baa85EeAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfileCredentialsDatadogAttributes struct {
	ref terra.Reference
}

func (d connectorProfileConfigConnectorProfileCredentialsDatadogAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d connectorProfileConfigConnectorProfileCredentialsDatadogAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsDatadogAttributes {
	return connectorProfileConfigConnectorProfileCredentialsDatadogAttributes{ref: ref}
}

func (d connectorProfileConfigConnectorProfileCredentialsDatadogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d connectorProfileConfigConnectorProfileCredentialsDatadogAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("api_key"))
}

func (d connectorProfileConfigConnectorProfileCredentialsDatadogAttributes) ApplicationKey() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("application_key"))
}

type connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes struct {
	ref terra.Reference
}

func (d connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes {
	return connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes{ref: ref}
}

func (d connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d connectorProfileConfigConnectorProfileCredentialsDynatraceAttributes) ApiToken() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("api_token"))
}

type connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes struct {
	ref terra.Reference
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) InternalRef() (terra.Reference, error) {
	return ga.ref, nil
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes {
	return connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes{ref: ref}
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ga.ref.InternalTokens()
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("access_token"))
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("client_id"))
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("client_secret"))
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("refresh_token"))
}

func (ga connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsAttributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes](ga.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes {
	return connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes struct {
	ref terra.Reference
}

func (h connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes {
	return connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes{ref: ref}
}

func (h connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("access_token"))
}

func (h connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("refresh_token"))
}

func (h connectorProfileConfigConnectorProfileCredentialsHoneycodeAttributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes](h.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes {
	return connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes struct {
	ref terra.Reference
}

func (in connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes) InternalRef() (terra.Reference, error) {
	return in.ref, nil
}

func (in connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes {
	return connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes{ref: ref}
}

func (in connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return in.ref.InternalTokens()
}

func (in connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes) AccessKeyId() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("access_key_id"))
}

func (in connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes) Datakey() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("datakey"))
}

func (in connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes) SecretAccessKey() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("secret_access_key"))
}

func (in connectorProfileConfigConnectorProfileCredentialsInforNexusAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("user_id"))
}

type connectorProfileConfigConnectorProfileCredentialsMarketoAttributes struct {
	ref terra.Reference
}

func (m connectorProfileConfigConnectorProfileCredentialsMarketoAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m connectorProfileConfigConnectorProfileCredentialsMarketoAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsMarketoAttributes {
	return connectorProfileConfigConnectorProfileCredentialsMarketoAttributes{ref: ref}
}

func (m connectorProfileConfigConnectorProfileCredentialsMarketoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m connectorProfileConfigConnectorProfileCredentialsMarketoAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("access_token"))
}

func (m connectorProfileConfigConnectorProfileCredentialsMarketoAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("client_id"))
}

func (m connectorProfileConfigConnectorProfileCredentialsMarketoAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("client_secret"))
}

func (m connectorProfileConfigConnectorProfileCredentialsMarketoAttributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes](m.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes {
	return connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes struct {
	ref terra.Reference
}

func (r connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes {
	return connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes{ref: ref}
}

func (r connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("password"))
}

func (r connectorProfileConfigConnectorProfileCredentialsRedshiftAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("username"))
}

type connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("access_token"))
}

func (s connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes) ClientCredentialsArn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("client_credentials_arn"))
}

func (s connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("refresh_token"))
}

func (s connectorProfileConfigConnectorProfileCredentialsSalesforceAttributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes](s.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes struct {
	ref terra.Reference
}

func (sd connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes{ref: ref}
}

func (sd connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes) BasicAuthCredentials() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes](sd.ref.Append("basic_auth_credentials"))
}

func (sd connectorProfileConfigConnectorProfileCredentialsSapoDataAttributes) OauthCredentials() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes](sd.ref.Append("oauth_credentials"))
}

type connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes struct {
	ref terra.Reference
}

func (bac connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes) InternalRef() (terra.Reference, error) {
	return bac.ref, nil
}

func (bac connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes{ref: ref}
}

func (bac connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bac.ref.InternalTokens()
}

func (bac connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(bac.ref.Append("password"))
}

func (bac connectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(bac.ref.Append("username"))
}

type connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes struct {
	ref terra.Reference
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes{ref: ref}
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("access_token"))
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("client_id"))
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("client_secret"))
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("refresh_token"))
}

func (oc connectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsAttributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes](oc.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes {
	return connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentials97Bdc99DAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes struct {
	ref terra.Reference
}

func (sn connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes) InternalRef() (terra.Reference, error) {
	return sn.ref, nil
}

func (sn connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes {
	return connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes{ref: ref}
}

func (sn connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sn.ref.InternalTokens()
}

func (sn connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("password"))
}

func (sn connectorProfileConfigConnectorProfileCredentialsServiceNowAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("username"))
}

type connectorProfileConfigConnectorProfileCredentialsSingularAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfileCredentialsSingularAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfileCredentialsSingularAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSingularAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSingularAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfileCredentialsSingularAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s connectorProfileConfigConnectorProfileCredentialsSingularAttributes) ApiKey() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("api_key"))
}

type connectorProfileConfigConnectorProfileCredentialsSlackAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfileCredentialsSlackAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfileCredentialsSlackAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSlackAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSlackAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfileCredentialsSlackAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s connectorProfileConfigConnectorProfileCredentialsSlackAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("access_token"))
}

func (s connectorProfileConfigConnectorProfileCredentialsSlackAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("client_id"))
}

func (s connectorProfileConfigConnectorProfileCredentialsSlackAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("client_secret"))
}

func (s connectorProfileConfigConnectorProfileCredentialsSlackAttributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes](s.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentialsSlackOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes {
	return connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("password"))
}

func (s connectorProfileConfigConnectorProfileCredentialsSnowflakeAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("username"))
}

type connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes struct {
	ref terra.Reference
}

func (t connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes {
	return connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes{ref: ref}
}

func (t connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t connectorProfileConfigConnectorProfileCredentialsTrendmicroAttributes) ApiSecretKey() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("api_secret_key"))
}

type connectorProfileConfigConnectorProfileCredentialsVeevaAttributes struct {
	ref terra.Reference
}

func (v connectorProfileConfigConnectorProfileCredentialsVeevaAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v connectorProfileConfigConnectorProfileCredentialsVeevaAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsVeevaAttributes {
	return connectorProfileConfigConnectorProfileCredentialsVeevaAttributes{ref: ref}
}

func (v connectorProfileConfigConnectorProfileCredentialsVeevaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v connectorProfileConfigConnectorProfileCredentialsVeevaAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("password"))
}

func (v connectorProfileConfigConnectorProfileCredentialsVeevaAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("username"))
}

type connectorProfileConfigConnectorProfileCredentialsZendeskAttributes struct {
	ref terra.Reference
}

func (z connectorProfileConfigConnectorProfileCredentialsZendeskAttributes) InternalRef() (terra.Reference, error) {
	return z.ref, nil
}

func (z connectorProfileConfigConnectorProfileCredentialsZendeskAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsZendeskAttributes {
	return connectorProfileConfigConnectorProfileCredentialsZendeskAttributes{ref: ref}
}

func (z connectorProfileConfigConnectorProfileCredentialsZendeskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return z.ref.InternalTokens()
}

func (z connectorProfileConfigConnectorProfileCredentialsZendeskAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("access_token"))
}

func (z connectorProfileConfigConnectorProfileCredentialsZendeskAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("client_id"))
}

func (z connectorProfileConfigConnectorProfileCredentialsZendeskAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("client_secret"))
}

func (z connectorProfileConfigConnectorProfileCredentialsZendeskAttributes) OauthRequest() terra.ListValue[connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes](z.ref.Append("oauth_request"))
}

type connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes struct {
	ref terra.Reference
}

func (or connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes {
	return connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes{ref: ref}
}

func (or connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes) AuthCode() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("auth_code"))
}

func (or connectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestAttributes) RedirectUri() terra.StringValue {
	return terra.ReferenceAsString(or.ref.Append("redirect_uri"))
}

type connectorProfileConfigConnectorProfilePropertiesAttributes struct {
	ref terra.Reference
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) InternalRef() (terra.Reference, error) {
	return cpp.ref, nil
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesAttributes {
	return connectorProfileConfigConnectorProfilePropertiesAttributes{ref: ref}
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cpp.ref.InternalTokens()
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Amplitude() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes](cpp.ref.Append("amplitude"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) CustomConnector() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes](cpp.ref.Append("custom_connector"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Datadog() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesDatadogAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesDatadogAttributes](cpp.ref.Append("datadog"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Dynatrace() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes](cpp.ref.Append("dynatrace"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) GoogleAnalytics() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes](cpp.ref.Append("google_analytics"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Honeycode() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes](cpp.ref.Append("honeycode"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) InforNexus() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes](cpp.ref.Append("infor_nexus"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Marketo() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesMarketoAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesMarketoAttributes](cpp.ref.Append("marketo"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Redshift() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes](cpp.ref.Append("redshift"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Salesforce() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes](cpp.ref.Append("salesforce"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) SapoData() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes](cpp.ref.Append("sapo_data"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) ServiceNow() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes](cpp.ref.Append("service_now"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Singular() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesSingularAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesSingularAttributes](cpp.ref.Append("singular"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Slack() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesSlackAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesSlackAttributes](cpp.ref.Append("slack"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Snowflake() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes](cpp.ref.Append("snowflake"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Trendmicro() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes](cpp.ref.Append("trendmicro"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Veeva() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesVeevaAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesVeevaAttributes](cpp.ref.Append("veeva"))
}

func (cpp connectorProfileConfigConnectorProfilePropertiesAttributes) Zendesk() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesZendeskAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesZendeskAttributes](cpp.ref.Append("zendesk"))
}

type connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes struct {
	ref terra.Reference
}

func (a connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes {
	return connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes{ref: ref}
}

func (a connectorProfileConfigConnectorProfilePropertiesAmplitudeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

type connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes {
	return connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes{ref: ref}
}

func (cc connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes) ProfileProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cc.ref.Append("profile_properties"))
}

func (cc connectorProfileConfigConnectorProfilePropertiesCustomConnectorAttributes) Oauth2Properties() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes](cc.ref.Append("oauth2_properties"))
}

type connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes struct {
	ref terra.Reference
}

func (op connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes) InternalRef() (terra.Reference, error) {
	return op.ref, nil
}

func (op connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes {
	return connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes{ref: ref}
}

func (op connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return op.ref.InternalTokens()
}

func (op connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes) Oauth2GrantType() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("oauth2_grant_type"))
}

func (op connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes) TokenUrl() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("token_url"))
}

func (op connectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesAttributes) TokenUrlCustomProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](op.ref.Append("token_url_custom_properties"))
}

type connectorProfileConfigConnectorProfilePropertiesDatadogAttributes struct {
	ref terra.Reference
}

func (d connectorProfileConfigConnectorProfilePropertiesDatadogAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d connectorProfileConfigConnectorProfilePropertiesDatadogAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesDatadogAttributes {
	return connectorProfileConfigConnectorProfilePropertiesDatadogAttributes{ref: ref}
}

func (d connectorProfileConfigConnectorProfilePropertiesDatadogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d connectorProfileConfigConnectorProfilePropertiesDatadogAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("instance_url"))
}

type connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes struct {
	ref terra.Reference
}

func (d connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes {
	return connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes{ref: ref}
}

func (d connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d connectorProfileConfigConnectorProfilePropertiesDynatraceAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("instance_url"))
}

type connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes struct {
	ref terra.Reference
}

func (ga connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes) InternalRef() (terra.Reference, error) {
	return ga.ref, nil
}

func (ga connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes {
	return connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes{ref: ref}
}

func (ga connectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ga.ref.InternalTokens()
}

type connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes struct {
	ref terra.Reference
}

func (h connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes {
	return connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes{ref: ref}
}

func (h connectorProfileConfigConnectorProfilePropertiesHoneycodeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

type connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes struct {
	ref terra.Reference
}

func (in connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes) InternalRef() (terra.Reference, error) {
	return in.ref, nil
}

func (in connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes {
	return connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes{ref: ref}
}

func (in connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return in.ref.InternalTokens()
}

func (in connectorProfileConfigConnectorProfilePropertiesInforNexusAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("instance_url"))
}

type connectorProfileConfigConnectorProfilePropertiesMarketoAttributes struct {
	ref terra.Reference
}

func (m connectorProfileConfigConnectorProfilePropertiesMarketoAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m connectorProfileConfigConnectorProfilePropertiesMarketoAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesMarketoAttributes {
	return connectorProfileConfigConnectorProfilePropertiesMarketoAttributes{ref: ref}
}

func (m connectorProfileConfigConnectorProfilePropertiesMarketoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m connectorProfileConfigConnectorProfilePropertiesMarketoAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("instance_url"))
}

type connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes struct {
	ref terra.Reference
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes {
	return connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes{ref: ref}
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket_name"))
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket_prefix"))
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) ClusterIdentifier() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("cluster_identifier"))
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) DataApiRoleArn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("data_api_role_arn"))
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) DatabaseName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("database_name"))
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) DatabaseUrl() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("database_url"))
}

func (r connectorProfileConfigConnectorProfilePropertiesRedshiftAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("role_arn"))
}

type connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes {
	return connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("instance_url"))
}

func (s connectorProfileConfigConnectorProfilePropertiesSalesforceAttributes) IsSandboxEnvironment() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("is_sandbox_environment"))
}

type connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes struct {
	ref terra.Reference
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes {
	return connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes{ref: ref}
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) ApplicationHostUrl() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("application_host_url"))
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) ApplicationServicePath() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("application_service_path"))
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) ClientNumber() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("client_number"))
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) LogonLanguage() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("logon_language"))
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) PortNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(sd.ref.Append("port_number"))
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) PrivateLinkServiceName() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("private_link_service_name"))
}

func (sd connectorProfileConfigConnectorProfilePropertiesSapoDataAttributes) OauthProperties() terra.ListValue[connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes] {
	return terra.ReferenceAsList[connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes](sd.ref.Append("oauth_properties"))
}

type connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes struct {
	ref terra.Reference
}

func (op connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return op.ref, nil
}

func (op connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes {
	return connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes{ref: ref}
}

func (op connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return op.ref.InternalTokens()
}

func (op connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes) AuthCodeUrl() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("auth_code_url"))
}

func (op connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes) OauthScopes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](op.ref.Append("oauth_scopes"))
}

func (op connectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesAttributes) TokenUrl() terra.StringValue {
	return terra.ReferenceAsString(op.ref.Append("token_url"))
}

type connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes struct {
	ref terra.Reference
}

func (sn connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes) InternalRef() (terra.Reference, error) {
	return sn.ref, nil
}

func (sn connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes {
	return connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes{ref: ref}
}

func (sn connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sn.ref.InternalTokens()
}

func (sn connectorProfileConfigConnectorProfilePropertiesServiceNowAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("instance_url"))
}

type connectorProfileConfigConnectorProfilePropertiesSingularAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfilePropertiesSingularAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfilePropertiesSingularAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesSingularAttributes {
	return connectorProfileConfigConnectorProfilePropertiesSingularAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfilePropertiesSingularAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

type connectorProfileConfigConnectorProfilePropertiesSlackAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfilePropertiesSlackAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfilePropertiesSlackAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesSlackAttributes {
	return connectorProfileConfigConnectorProfilePropertiesSlackAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfilePropertiesSlackAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s connectorProfileConfigConnectorProfilePropertiesSlackAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("instance_url"))
}

type connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes struct {
	ref terra.Reference
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes {
	return connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes{ref: ref}
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) AccountName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("account_name"))
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_name"))
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) PrivateLinkServiceName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("private_link_service_name"))
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("region"))
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) Stage() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("stage"))
}

func (s connectorProfileConfigConnectorProfilePropertiesSnowflakeAttributes) Warehouse() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("warehouse"))
}

type connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes struct {
	ref terra.Reference
}

func (t connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes {
	return connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes{ref: ref}
}

func (t connectorProfileConfigConnectorProfilePropertiesTrendmicroAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

type connectorProfileConfigConnectorProfilePropertiesVeevaAttributes struct {
	ref terra.Reference
}

func (v connectorProfileConfigConnectorProfilePropertiesVeevaAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v connectorProfileConfigConnectorProfilePropertiesVeevaAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesVeevaAttributes {
	return connectorProfileConfigConnectorProfilePropertiesVeevaAttributes{ref: ref}
}

func (v connectorProfileConfigConnectorProfilePropertiesVeevaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v connectorProfileConfigConnectorProfilePropertiesVeevaAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("instance_url"))
}

type connectorProfileConfigConnectorProfilePropertiesZendeskAttributes struct {
	ref terra.Reference
}

func (z connectorProfileConfigConnectorProfilePropertiesZendeskAttributes) InternalRef() (terra.Reference, error) {
	return z.ref, nil
}

func (z connectorProfileConfigConnectorProfilePropertiesZendeskAttributes) InternalWithRef(ref terra.Reference) connectorProfileConfigConnectorProfilePropertiesZendeskAttributes {
	return connectorProfileConfigConnectorProfilePropertiesZendeskAttributes{ref: ref}
}

func (z connectorProfileConfigConnectorProfilePropertiesZendeskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return z.ref.InternalTokens()
}

func (z connectorProfileConfigConnectorProfilePropertiesZendeskAttributes) InstanceUrl() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("instance_url"))
}

type ConnectorProfileConfigState struct {
	ConnectorProfileCredentials []ConnectorProfileConfigConnectorProfileCredentialsState `json:"connector_profile_credentials"`
	ConnectorProfileProperties  []ConnectorProfileConfigConnectorProfilePropertiesState  `json:"connector_profile_properties"`
}

type ConnectorProfileConfigConnectorProfileCredentialsState struct {
	Amplitude       []ConnectorProfileConfigConnectorProfileCredentialsAmplitudeState       `json:"amplitude"`
	CustomConnector []ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorState `json:"custom_connector"`
	Datadog         []ConnectorProfileConfigConnectorProfileCredentialsDatadogState         `json:"datadog"`
	Dynatrace       []ConnectorProfileConfigConnectorProfileCredentialsDynatraceState       `json:"dynatrace"`
	GoogleAnalytics []ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsState `json:"google_analytics"`
	Honeycode       []ConnectorProfileConfigConnectorProfileCredentialsHoneycodeState       `json:"honeycode"`
	InforNexus      []ConnectorProfileConfigConnectorProfileCredentialsInforNexusState      `json:"infor_nexus"`
	Marketo         []ConnectorProfileConfigConnectorProfileCredentialsMarketoState         `json:"marketo"`
	Redshift        []ConnectorProfileConfigConnectorProfileCredentialsRedshiftState        `json:"redshift"`
	Salesforce      []ConnectorProfileConfigConnectorProfileCredentialsSalesforceState      `json:"salesforce"`
	SapoData        []ConnectorProfileConfigConnectorProfileCredentialsSapoDataState        `json:"sapo_data"`
	ServiceNow      []ConnectorProfileConfigConnectorProfileCredentialsServiceNowState      `json:"service_now"`
	Singular        []ConnectorProfileConfigConnectorProfileCredentialsSingularState        `json:"singular"`
	Slack           []ConnectorProfileConfigConnectorProfileCredentialsSlackState           `json:"slack"`
	Snowflake       []ConnectorProfileConfigConnectorProfileCredentialsSnowflakeState       `json:"snowflake"`
	Trendmicro      []ConnectorProfileConfigConnectorProfileCredentialsTrendmicroState      `json:"trendmicro"`
	Veeva           []ConnectorProfileConfigConnectorProfileCredentialsVeevaState           `json:"veeva"`
	Zendesk         []ConnectorProfileConfigConnectorProfileCredentialsZendeskState         `json:"zendesk"`
}

type ConnectorProfileConfigConnectorProfileCredentialsAmplitudeState struct {
	ApiKey    string `json:"api_key"`
	SecretKey string `json:"secret_key"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorState struct {
	AuthenticationType string                                                                        `json:"authentication_type"`
	ApiKey             []ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyState `json:"api_key"`
	Basic              []ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicState  `json:"basic"`
	Custom             []ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomState `json:"custom"`
	Oauth2             []ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2State `json:"oauth2"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyState struct {
	ApiKey       string `json:"api_key"`
	ApiSecretKey string `json:"api_secret_key"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomState struct {
	CredentialsMap           map[string]string `json:"credentials_map"`
	CustomAuthenticationType string            `json:"custom_authentication_type"`
}

type ConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2State struct {
	AccessToken  string                                                           `json:"access_token"`
	ClientId     string                                                           `json:"client_id"`
	ClientSecret string                                                           `json:"client_secret"`
	RefreshToken string                                                           `json:"refresh_token"`
	OauthRequest []ConnectorProfileConfigConnectorProfileCredentials2Baa85EeState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentials2Baa85EeState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfileCredentialsDatadogState struct {
	ApiKey         string `json:"api_key"`
	ApplicationKey string `json:"application_key"`
}

type ConnectorProfileConfigConnectorProfileCredentialsDynatraceState struct {
	ApiToken string `json:"api_token"`
}

type ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsState struct {
	AccessToken  string                                                                              `json:"access_token"`
	ClientId     string                                                                              `json:"client_id"`
	ClientSecret string                                                                              `json:"client_secret"`
	RefreshToken string                                                                              `json:"refresh_token"`
	OauthRequest []ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfileCredentialsHoneycodeState struct {
	AccessToken  string                                                                        `json:"access_token"`
	RefreshToken string                                                                        `json:"refresh_token"`
	OauthRequest []ConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentialsHoneycodeOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfileCredentialsInforNexusState struct {
	AccessKeyId     string `json:"access_key_id"`
	Datakey         string `json:"datakey"`
	SecretAccessKey string `json:"secret_access_key"`
	UserId          string `json:"user_id"`
}

type ConnectorProfileConfigConnectorProfileCredentialsMarketoState struct {
	AccessToken  string                                                                      `json:"access_token"`
	ClientId     string                                                                      `json:"client_id"`
	ClientSecret string                                                                      `json:"client_secret"`
	OauthRequest []ConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentialsMarketoOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfileCredentialsRedshiftState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSalesforceState struct {
	AccessToken          string                                                                         `json:"access_token"`
	ClientCredentialsArn string                                                                         `json:"client_credentials_arn"`
	RefreshToken         string                                                                         `json:"refresh_token"`
	OauthRequest         []ConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSapoDataState struct {
	BasicAuthCredentials []ConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsState `json:"basic_auth_credentials"`
	OauthCredentials     []ConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsState     `json:"oauth_credentials"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSapoDataBasicAuthCredentialsState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsState struct {
	AccessToken  string                                                           `json:"access_token"`
	ClientId     string                                                           `json:"client_id"`
	ClientSecret string                                                           `json:"client_secret"`
	RefreshToken string                                                           `json:"refresh_token"`
	OauthRequest []ConnectorProfileConfigConnectorProfileCredentials97Bdc99DState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentials97Bdc99DState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfileCredentialsServiceNowState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSingularState struct {
	ApiKey string `json:"api_key"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSlackState struct {
	AccessToken  string                                                                    `json:"access_token"`
	ClientId     string                                                                    `json:"client_id"`
	ClientSecret string                                                                    `json:"client_secret"`
	OauthRequest []ConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSlackOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfileCredentialsSnowflakeState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileConfigConnectorProfileCredentialsTrendmicroState struct {
	ApiSecretKey string `json:"api_secret_key"`
}

type ConnectorProfileConfigConnectorProfileCredentialsVeevaState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type ConnectorProfileConfigConnectorProfileCredentialsZendeskState struct {
	AccessToken  string                                                                      `json:"access_token"`
	ClientId     string                                                                      `json:"client_id"`
	ClientSecret string                                                                      `json:"client_secret"`
	OauthRequest []ConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestState `json:"oauth_request"`
}

type ConnectorProfileConfigConnectorProfileCredentialsZendeskOauthRequestState struct {
	AuthCode    string `json:"auth_code"`
	RedirectUri string `json:"redirect_uri"`
}

type ConnectorProfileConfigConnectorProfilePropertiesState struct {
	Amplitude       []ConnectorProfileConfigConnectorProfilePropertiesAmplitudeState       `json:"amplitude"`
	CustomConnector []ConnectorProfileConfigConnectorProfilePropertiesCustomConnectorState `json:"custom_connector"`
	Datadog         []ConnectorProfileConfigConnectorProfilePropertiesDatadogState         `json:"datadog"`
	Dynatrace       []ConnectorProfileConfigConnectorProfilePropertiesDynatraceState       `json:"dynatrace"`
	GoogleAnalytics []ConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsState `json:"google_analytics"`
	Honeycode       []ConnectorProfileConfigConnectorProfilePropertiesHoneycodeState       `json:"honeycode"`
	InforNexus      []ConnectorProfileConfigConnectorProfilePropertiesInforNexusState      `json:"infor_nexus"`
	Marketo         []ConnectorProfileConfigConnectorProfilePropertiesMarketoState         `json:"marketo"`
	Redshift        []ConnectorProfileConfigConnectorProfilePropertiesRedshiftState        `json:"redshift"`
	Salesforce      []ConnectorProfileConfigConnectorProfilePropertiesSalesforceState      `json:"salesforce"`
	SapoData        []ConnectorProfileConfigConnectorProfilePropertiesSapoDataState        `json:"sapo_data"`
	ServiceNow      []ConnectorProfileConfigConnectorProfilePropertiesServiceNowState      `json:"service_now"`
	Singular        []ConnectorProfileConfigConnectorProfilePropertiesSingularState        `json:"singular"`
	Slack           []ConnectorProfileConfigConnectorProfilePropertiesSlackState           `json:"slack"`
	Snowflake       []ConnectorProfileConfigConnectorProfilePropertiesSnowflakeState       `json:"snowflake"`
	Trendmicro      []ConnectorProfileConfigConnectorProfilePropertiesTrendmicroState      `json:"trendmicro"`
	Veeva           []ConnectorProfileConfigConnectorProfilePropertiesVeevaState           `json:"veeva"`
	Zendesk         []ConnectorProfileConfigConnectorProfilePropertiesZendeskState         `json:"zendesk"`
}

type ConnectorProfileConfigConnectorProfilePropertiesAmplitudeState struct{}

type ConnectorProfileConfigConnectorProfilePropertiesCustomConnectorState struct {
	ProfileProperties map[string]string                                                                      `json:"profile_properties"`
	Oauth2Properties  []ConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesState `json:"oauth2_properties"`
}

type ConnectorProfileConfigConnectorProfilePropertiesCustomConnectorOauth2PropertiesState struct {
	Oauth2GrantType          string            `json:"oauth2_grant_type"`
	TokenUrl                 string            `json:"token_url"`
	TokenUrlCustomProperties map[string]string `json:"token_url_custom_properties"`
}

type ConnectorProfileConfigConnectorProfilePropertiesDatadogState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesDynatraceState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsState struct{}

type ConnectorProfileConfigConnectorProfilePropertiesHoneycodeState struct{}

type ConnectorProfileConfigConnectorProfilePropertiesInforNexusState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesMarketoState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesRedshiftState struct {
	BucketName        string `json:"bucket_name"`
	BucketPrefix      string `json:"bucket_prefix"`
	ClusterIdentifier string `json:"cluster_identifier"`
	DataApiRoleArn    string `json:"data_api_role_arn"`
	DatabaseName      string `json:"database_name"`
	DatabaseUrl       string `json:"database_url"`
	RoleArn           string `json:"role_arn"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSalesforceState struct {
	InstanceUrl          string `json:"instance_url"`
	IsSandboxEnvironment bool   `json:"is_sandbox_environment"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSapoDataState struct {
	ApplicationHostUrl     string                                                                         `json:"application_host_url"`
	ApplicationServicePath string                                                                         `json:"application_service_path"`
	ClientNumber           string                                                                         `json:"client_number"`
	LogonLanguage          string                                                                         `json:"logon_language"`
	PortNumber             float64                                                                        `json:"port_number"`
	PrivateLinkServiceName string                                                                         `json:"private_link_service_name"`
	OauthProperties        []ConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesState `json:"oauth_properties"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesState struct {
	AuthCodeUrl string   `json:"auth_code_url"`
	OauthScopes []string `json:"oauth_scopes"`
	TokenUrl    string   `json:"token_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesServiceNowState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSingularState struct{}

type ConnectorProfileConfigConnectorProfilePropertiesSlackState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesSnowflakeState struct {
	AccountName            string `json:"account_name"`
	BucketName             string `json:"bucket_name"`
	BucketPrefix           string `json:"bucket_prefix"`
	PrivateLinkServiceName string `json:"private_link_service_name"`
	Region                 string `json:"region"`
	Stage                  string `json:"stage"`
	Warehouse              string `json:"warehouse"`
}

type ConnectorProfileConfigConnectorProfilePropertiesTrendmicroState struct{}

type ConnectorProfileConfigConnectorProfilePropertiesVeevaState struct {
	InstanceUrl string `json:"instance_url"`
}

type ConnectorProfileConfigConnectorProfilePropertiesZendeskState struct {
	InstanceUrl string `json:"instance_url"`
}
