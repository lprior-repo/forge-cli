// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_stage

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccessLogSettings struct {
	// DestinationArn is required.
	DestinationArn terra.StringValue `hcl:"destination_arn,attr" validate:"required"`
	// Format is required.
	Format terra.StringValue `hcl:"format,attr" validate:"required"`
}

type CanarySettings struct {
	// PercentTraffic is optional.
	PercentTraffic terra.NumberValue `hcl:"percent_traffic,attr"`
	// StageVariableOverrides is optional.
	StageVariableOverrides terra.MapValue[terra.StringValue] `hcl:"stage_variable_overrides,attr"`
	// UseStageCache is optional.
	UseStageCache terra.BoolValue `hcl:"use_stage_cache,attr"`
}

type accessLogSettingsAttributes struct {
	ref terra.Reference
}

func (als accessLogSettingsAttributes) InternalRef() (terra.Reference, error) {
	return als.ref, nil
}

func (als accessLogSettingsAttributes) InternalWithRef(ref terra.Reference) accessLogSettingsAttributes {
	return accessLogSettingsAttributes{ref: ref}
}

func (als accessLogSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return als.ref.InternalTokens()
}

func (als accessLogSettingsAttributes) DestinationArn() terra.StringValue {
	return terra.ReferenceAsString(als.ref.Append("destination_arn"))
}

func (als accessLogSettingsAttributes) Format() terra.StringValue {
	return terra.ReferenceAsString(als.ref.Append("format"))
}

type canarySettingsAttributes struct {
	ref terra.Reference
}

func (cs canarySettingsAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs canarySettingsAttributes) InternalWithRef(ref terra.Reference) canarySettingsAttributes {
	return canarySettingsAttributes{ref: ref}
}

func (cs canarySettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs canarySettingsAttributes) PercentTraffic() terra.NumberValue {
	return terra.ReferenceAsNumber(cs.ref.Append("percent_traffic"))
}

func (cs canarySettingsAttributes) StageVariableOverrides() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cs.ref.Append("stage_variable_overrides"))
}

func (cs canarySettingsAttributes) UseStageCache() terra.BoolValue {
	return terra.ReferenceAsBool(cs.ref.Append("use_stage_cache"))
}

type AccessLogSettingsState struct {
	DestinationArn string `json:"destination_arn"`
	Format         string `json:"format"`
}

type CanarySettingsState struct {
	PercentTraffic         float64           `json:"percent_traffic"`
	StageVariableOverrides map[string]string `json:"stage_variable_overrides"`
	UseStageCache          bool              `json:"use_stage_cache"`
}
