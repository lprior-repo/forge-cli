// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_elastictranscoder_pipeline

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_elastictranscoder_pipeline.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsElastictranscoderPipelineState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aep *Resource) Type() string {
	return "aws_elastictranscoder_pipeline"
}

// LocalName returns the local name for [Resource].
func (aep *Resource) LocalName() string {
	return aep.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aep *Resource) Configuration() interface{} {
	return aep.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aep *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aep)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aep *Resource) Dependencies() terra.Dependencies {
	return aep.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aep *Resource) LifecycleManagement() *terra.Lifecycle {
	return aep.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aep *Resource) Attributes() awsElastictranscoderPipelineAttributes {
	return awsElastictranscoderPipelineAttributes{ref: terra.ReferenceResource(aep)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aep *Resource) ImportState(state io.Reader) error {
	aep.state = &awsElastictranscoderPipelineState{}
	if err := json.NewDecoder(state).Decode(aep.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aep.Type(), aep.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aep *Resource) State() (*awsElastictranscoderPipelineState, bool) {
	return aep.state, aep.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aep *Resource) StateMust() *awsElastictranscoderPipelineState {
	if aep.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aep.Type(), aep.LocalName()))
	}
	return aep.state
}

// Args contains the configurations for aws_elastictranscoder_pipeline.
type Args struct {
	// AwsKmsKeyArn is optional.
	AwsKmsKeyArn terra.StringValue `hcl:"aws_kms_key_arn,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// InputBucket is required.
	InputBucket terra.StringValue `hcl:"input_bucket,attr" validate:"required"`
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// OutputBucket is optional.
	OutputBucket terra.StringValue `hcl:"output_bucket,attr"`
	// Role is required.
	Role terra.StringValue `hcl:"role,attr" validate:"required"`
	// ContentConfig is optional.
	ContentConfig *ContentConfig `hcl:"content_config,block"`
	// ContentConfigPermissions is min=0.
	ContentConfigPermissions []ContentConfigPermissions `hcl:"content_config_permissions,block" validate:"min=0"`
	// Notifications is optional.
	Notifications *Notifications `hcl:"notifications,block"`
	// ThumbnailConfig is optional.
	ThumbnailConfig *ThumbnailConfig `hcl:"thumbnail_config,block"`
	// ThumbnailConfigPermissions is min=0.
	ThumbnailConfigPermissions []ThumbnailConfigPermissions `hcl:"thumbnail_config_permissions,block" validate:"min=0"`
}

type awsElastictranscoderPipelineAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_elastictranscoder_pipeline.
func (aep awsElastictranscoderPipelineAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aep.ref.Append("arn"))
}

// AwsKmsKeyArn returns a reference to field aws_kms_key_arn of aws_elastictranscoder_pipeline.
func (aep awsElastictranscoderPipelineAttributes) AwsKmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(aep.ref.Append("aws_kms_key_arn"))
}

// Id returns a reference to field id of aws_elastictranscoder_pipeline.
func (aep awsElastictranscoderPipelineAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aep.ref.Append("id"))
}

// InputBucket returns a reference to field input_bucket of aws_elastictranscoder_pipeline.
func (aep awsElastictranscoderPipelineAttributes) InputBucket() terra.StringValue {
	return terra.ReferenceAsString(aep.ref.Append("input_bucket"))
}

// Name returns a reference to field name of aws_elastictranscoder_pipeline.
func (aep awsElastictranscoderPipelineAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aep.ref.Append("name"))
}

// OutputBucket returns a reference to field output_bucket of aws_elastictranscoder_pipeline.
func (aep awsElastictranscoderPipelineAttributes) OutputBucket() terra.StringValue {
	return terra.ReferenceAsString(aep.ref.Append("output_bucket"))
}

// Role returns a reference to field role of aws_elastictranscoder_pipeline.
func (aep awsElastictranscoderPipelineAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(aep.ref.Append("role"))
}

func (aep awsElastictranscoderPipelineAttributes) ContentConfig() terra.ListValue[contentConfigAttributes] {
	return terra.ReferenceAsList[contentConfigAttributes](aep.ref.Append("content_config"))
}

func (aep awsElastictranscoderPipelineAttributes) ContentConfigPermissions() terra.SetValue[contentConfigPermissionsAttributes] {
	return terra.ReferenceAsSet[contentConfigPermissionsAttributes](aep.ref.Append("content_config_permissions"))
}

func (aep awsElastictranscoderPipelineAttributes) Notifications() terra.ListValue[notificationsAttributes] {
	return terra.ReferenceAsList[notificationsAttributes](aep.ref.Append("notifications"))
}

func (aep awsElastictranscoderPipelineAttributes) ThumbnailConfig() terra.ListValue[thumbnailConfigAttributes] {
	return terra.ReferenceAsList[thumbnailConfigAttributes](aep.ref.Append("thumbnail_config"))
}

func (aep awsElastictranscoderPipelineAttributes) ThumbnailConfigPermissions() terra.SetValue[thumbnailConfigPermissionsAttributes] {
	return terra.ReferenceAsSet[thumbnailConfigPermissionsAttributes](aep.ref.Append("thumbnail_config_permissions"))
}

type awsElastictranscoderPipelineState struct {
	Arn                        string                            `json:"arn"`
	AwsKmsKeyArn               string                            `json:"aws_kms_key_arn"`
	Id                         string                            `json:"id"`
	InputBucket                string                            `json:"input_bucket"`
	Name                       string                            `json:"name"`
	OutputBucket               string                            `json:"output_bucket"`
	Role                       string                            `json:"role"`
	ContentConfig              []ContentConfigState              `json:"content_config"`
	ContentConfigPermissions   []ContentConfigPermissionsState   `json:"content_config_permissions"`
	Notifications              []NotificationsState              `json:"notifications"`
	ThumbnailConfig            []ThumbnailConfigState            `json:"thumbnail_config"`
	ThumbnailConfigPermissions []ThumbnailConfigPermissionsState `json:"thumbnail_config_permissions"`
}
