// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_elastictranscoder_pipeline

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ContentConfig struct {
	// Bucket is optional.
	Bucket terra.StringValue `hcl:"bucket,attr"`
	// StorageClass is optional.
	StorageClass terra.StringValue `hcl:"storage_class,attr"`
}

type ContentConfigPermissions struct {
	// Access is optional.
	Access terra.ListValue[terra.StringValue] `hcl:"access,attr"`
	// Grantee is optional.
	Grantee terra.StringValue `hcl:"grantee,attr"`
	// GranteeType is optional.
	GranteeType terra.StringValue `hcl:"grantee_type,attr"`
}

type Notifications struct {
	// Completed is optional.
	Completed terra.StringValue `hcl:"completed,attr"`
	// Error is optional.
	Error terra.StringValue `hcl:"error,attr"`
	// Progressing is optional.
	Progressing terra.StringValue `hcl:"progressing,attr"`
	// Warning is optional.
	Warning terra.StringValue `hcl:"warning,attr"`
}

type ThumbnailConfig struct {
	// Bucket is optional.
	Bucket terra.StringValue `hcl:"bucket,attr"`
	// StorageClass is optional.
	StorageClass terra.StringValue `hcl:"storage_class,attr"`
}

type ThumbnailConfigPermissions struct {
	// Access is optional.
	Access terra.ListValue[terra.StringValue] `hcl:"access,attr"`
	// Grantee is optional.
	Grantee terra.StringValue `hcl:"grantee,attr"`
	// GranteeType is optional.
	GranteeType terra.StringValue `hcl:"grantee_type,attr"`
}

type contentConfigAttributes struct {
	ref terra.Reference
}

func (cc contentConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc contentConfigAttributes) InternalWithRef(ref terra.Reference) contentConfigAttributes {
	return contentConfigAttributes{ref: ref}
}

func (cc contentConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc contentConfigAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("bucket"))
}

func (cc contentConfigAttributes) StorageClass() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("storage_class"))
}

type contentConfigPermissionsAttributes struct {
	ref terra.Reference
}

func (ccp contentConfigPermissionsAttributes) InternalRef() (terra.Reference, error) {
	return ccp.ref, nil
}

func (ccp contentConfigPermissionsAttributes) InternalWithRef(ref terra.Reference) contentConfigPermissionsAttributes {
	return contentConfigPermissionsAttributes{ref: ref}
}

func (ccp contentConfigPermissionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ccp.ref.InternalTokens()
}

func (ccp contentConfigPermissionsAttributes) Access() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ccp.ref.Append("access"))
}

func (ccp contentConfigPermissionsAttributes) Grantee() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("grantee"))
}

func (ccp contentConfigPermissionsAttributes) GranteeType() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("grantee_type"))
}

type notificationsAttributes struct {
	ref terra.Reference
}

func (n notificationsAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n notificationsAttributes) InternalWithRef(ref terra.Reference) notificationsAttributes {
	return notificationsAttributes{ref: ref}
}

func (n notificationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n notificationsAttributes) Completed() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("completed"))
}

func (n notificationsAttributes) Error() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("error"))
}

func (n notificationsAttributes) Progressing() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("progressing"))
}

func (n notificationsAttributes) Warning() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("warning"))
}

type thumbnailConfigAttributes struct {
	ref terra.Reference
}

func (tc thumbnailConfigAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc thumbnailConfigAttributes) InternalWithRef(ref terra.Reference) thumbnailConfigAttributes {
	return thumbnailConfigAttributes{ref: ref}
}

func (tc thumbnailConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc thumbnailConfigAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("bucket"))
}

func (tc thumbnailConfigAttributes) StorageClass() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("storage_class"))
}

type thumbnailConfigPermissionsAttributes struct {
	ref terra.Reference
}

func (tcp thumbnailConfigPermissionsAttributes) InternalRef() (terra.Reference, error) {
	return tcp.ref, nil
}

func (tcp thumbnailConfigPermissionsAttributes) InternalWithRef(ref terra.Reference) thumbnailConfigPermissionsAttributes {
	return thumbnailConfigPermissionsAttributes{ref: ref}
}

func (tcp thumbnailConfigPermissionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tcp.ref.InternalTokens()
}

func (tcp thumbnailConfigPermissionsAttributes) Access() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](tcp.ref.Append("access"))
}

func (tcp thumbnailConfigPermissionsAttributes) Grantee() terra.StringValue {
	return terra.ReferenceAsString(tcp.ref.Append("grantee"))
}

func (tcp thumbnailConfigPermissionsAttributes) GranteeType() terra.StringValue {
	return terra.ReferenceAsString(tcp.ref.Append("grantee_type"))
}

type ContentConfigState struct {
	Bucket       string `json:"bucket"`
	StorageClass string `json:"storage_class"`
}

type ContentConfigPermissionsState struct {
	Access      []string `json:"access"`
	Grantee     string   `json:"grantee"`
	GranteeType string   `json:"grantee_type"`
}

type NotificationsState struct {
	Completed   string `json:"completed"`
	Error       string `json:"error"`
	Progressing string `json:"progressing"`
	Warning     string `json:"warning"`
}

type ThumbnailConfigState struct {
	Bucket       string `json:"bucket"`
	StorageClass string `json:"storage_class"`
}

type ThumbnailConfigPermissionsState struct {
	Access      []string `json:"access"`
	Grantee     string   `json:"grantee"`
	GranteeType string   `json:"grantee_type"`
}
