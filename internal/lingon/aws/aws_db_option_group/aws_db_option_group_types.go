// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_db_option_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Option struct {
	// DbSecurityGroupMemberships is optional.
	DbSecurityGroupMemberships terra.SetValue[terra.StringValue] `hcl:"db_security_group_memberships,attr"`
	// OptionName is required.
	OptionName terra.StringValue `hcl:"option_name,attr" validate:"required"`
	// Port is optional.
	Port terra.NumberValue `hcl:"port,attr"`
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
	// VpcSecurityGroupMemberships is optional.
	VpcSecurityGroupMemberships terra.SetValue[terra.StringValue] `hcl:"vpc_security_group_memberships,attr"`
	// OptionOptionSettings is min=0.
	OptionSettings []OptionOptionSettings `hcl:"option_settings,block" validate:"min=0"`
}

type OptionOptionSettings struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Timeouts struct {
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
}

type optionAttributes struct {
	ref terra.Reference
}

func (o optionAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o optionAttributes) InternalWithRef(ref terra.Reference) optionAttributes {
	return optionAttributes{ref: ref}
}

func (o optionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o optionAttributes) DbSecurityGroupMemberships() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](o.ref.Append("db_security_group_memberships"))
}

func (o optionAttributes) OptionName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("option_name"))
}

func (o optionAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("port"))
}

func (o optionAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("version"))
}

func (o optionAttributes) VpcSecurityGroupMemberships() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](o.ref.Append("vpc_security_group_memberships"))
}

func (o optionAttributes) OptionSettings() terra.SetValue[optionOptionSettingsAttributes] {
	return terra.ReferenceAsSet[optionOptionSettingsAttributes](o.ref.Append("option_settings"))
}

type optionOptionSettingsAttributes struct {
	ref terra.Reference
}

func (os optionOptionSettingsAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os optionOptionSettingsAttributes) InternalWithRef(ref terra.Reference) optionOptionSettingsAttributes {
	return optionOptionSettingsAttributes{ref: ref}
}

func (os optionOptionSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os optionOptionSettingsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("name"))
}

func (os optionOptionSettingsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("value"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type OptionState struct {
	DbSecurityGroupMemberships  []string                    `json:"db_security_group_memberships"`
	OptionName                  string                      `json:"option_name"`
	Port                        float64                     `json:"port"`
	Version                     string                      `json:"version"`
	VpcSecurityGroupMemberships []string                    `json:"vpc_security_group_memberships"`
	OptionSettings              []OptionOptionSettingsState `json:"option_settings"`
}

type OptionOptionSettingsState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type TimeoutsState struct {
	Delete string `json:"delete"`
}
