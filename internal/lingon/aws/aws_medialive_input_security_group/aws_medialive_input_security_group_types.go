// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_medialive_input_security_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type WhitelistRules struct {
	// Cidr is required.
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type whitelistRulesAttributes struct {
	ref terra.Reference
}

func (wr whitelistRulesAttributes) InternalRef() (terra.Reference, error) {
	return wr.ref, nil
}

func (wr whitelistRulesAttributes) InternalWithRef(ref terra.Reference) whitelistRulesAttributes {
	return whitelistRulesAttributes{ref: ref}
}

func (wr whitelistRulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wr.ref.InternalTokens()
}

func (wr whitelistRulesAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(wr.ref.Append("cidr"))
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type WhitelistRulesState struct {
	Cidr string `json:"cidr"`
}
