// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kms_key

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatamultiRegionConfigurationAttributes struct {
	ref terra.Reference
}

func (mrc DatamultiRegionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return mrc.ref, nil
}

func (mrc DatamultiRegionConfigurationAttributes) InternalWithRef(ref terra.Reference) DatamultiRegionConfigurationAttributes {
	return DatamultiRegionConfigurationAttributes{ref: ref}
}

func (mrc DatamultiRegionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrc.ref.InternalTokens()
}

func (mrc DatamultiRegionConfigurationAttributes) MultiRegionKeyType() terra.StringValue {
	return terra.ReferenceAsString(mrc.ref.Append("multi_region_key_type"))
}

func (mrc DatamultiRegionConfigurationAttributes) PrimaryKey() terra.ListValue[DatamultiRegionConfigurationPrimaryKeyAttributes] {
	return terra.ReferenceAsList[DatamultiRegionConfigurationPrimaryKeyAttributes](mrc.ref.Append("primary_key"))
}

func (mrc DatamultiRegionConfigurationAttributes) ReplicaKeys() terra.ListValue[DatamultiRegionConfigurationReplicaKeysAttributes] {
	return terra.ReferenceAsList[DatamultiRegionConfigurationReplicaKeysAttributes](mrc.ref.Append("replica_keys"))
}

type DatamultiRegionConfigurationPrimaryKeyAttributes struct {
	ref terra.Reference
}

func (pk DatamultiRegionConfigurationPrimaryKeyAttributes) InternalRef() (terra.Reference, error) {
	return pk.ref, nil
}

func (pk DatamultiRegionConfigurationPrimaryKeyAttributes) InternalWithRef(ref terra.Reference) DatamultiRegionConfigurationPrimaryKeyAttributes {
	return DatamultiRegionConfigurationPrimaryKeyAttributes{ref: ref}
}

func (pk DatamultiRegionConfigurationPrimaryKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pk.ref.InternalTokens()
}

func (pk DatamultiRegionConfigurationPrimaryKeyAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(pk.ref.Append("arn"))
}

func (pk DatamultiRegionConfigurationPrimaryKeyAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(pk.ref.Append("region"))
}

type DatamultiRegionConfigurationReplicaKeysAttributes struct {
	ref terra.Reference
}

func (rk DatamultiRegionConfigurationReplicaKeysAttributes) InternalRef() (terra.Reference, error) {
	return rk.ref, nil
}

func (rk DatamultiRegionConfigurationReplicaKeysAttributes) InternalWithRef(ref terra.Reference) DatamultiRegionConfigurationReplicaKeysAttributes {
	return DatamultiRegionConfigurationReplicaKeysAttributes{ref: ref}
}

func (rk DatamultiRegionConfigurationReplicaKeysAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rk.ref.InternalTokens()
}

func (rk DatamultiRegionConfigurationReplicaKeysAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(rk.ref.Append("arn"))
}

func (rk DatamultiRegionConfigurationReplicaKeysAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(rk.ref.Append("region"))
}

type DataxksKeyConfigurationAttributes struct {
	ref terra.Reference
}

func (xkc DataxksKeyConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return xkc.ref, nil
}

func (xkc DataxksKeyConfigurationAttributes) InternalWithRef(ref terra.Reference) DataxksKeyConfigurationAttributes {
	return DataxksKeyConfigurationAttributes{ref: ref}
}

func (xkc DataxksKeyConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return xkc.ref.InternalTokens()
}

func (xkc DataxksKeyConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(xkc.ref.Append("id"))
}

type DataMultiRegionConfigurationState struct {
	MultiRegionKeyType string                                         `json:"multi_region_key_type"`
	PrimaryKey         []DataMultiRegionConfigurationPrimaryKeyState  `json:"primary_key"`
	ReplicaKeys        []DataMultiRegionConfigurationReplicaKeysState `json:"replica_keys"`
}

type DataMultiRegionConfigurationPrimaryKeyState struct {
	Arn    string `json:"arn"`
	Region string `json:"region"`
}

type DataMultiRegionConfigurationReplicaKeysState struct {
	Arn    string `json:"arn"`
	Region string `json:"region"`
}

type DataXksKeyConfigurationState struct {
	Id string `json:"id"`
}
