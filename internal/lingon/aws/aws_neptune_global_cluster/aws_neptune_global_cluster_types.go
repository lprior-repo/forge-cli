// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_neptune_global_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type globalClusterMembersAttributes struct {
	ref terra.Reference
}

func (gcm globalClusterMembersAttributes) InternalRef() (terra.Reference, error) {
	return gcm.ref, nil
}

func (gcm globalClusterMembersAttributes) InternalWithRef(ref terra.Reference) globalClusterMembersAttributes {
	return globalClusterMembersAttributes{ref: ref}
}

func (gcm globalClusterMembersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gcm.ref.InternalTokens()
}

func (gcm globalClusterMembersAttributes) DbClusterArn() terra.StringValue {
	return terra.ReferenceAsString(gcm.ref.Append("db_cluster_arn"))
}

func (gcm globalClusterMembersAttributes) IsWriter() terra.BoolValue {
	return terra.ReferenceAsBool(gcm.ref.Append("is_writer"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type GlobalClusterMembersState struct {
	DbClusterArn string `json:"db_cluster_arn"`
	IsWriter     bool   `json:"is_writer"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
