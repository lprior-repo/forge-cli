// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import "github.com/golingon/lingon/pkg/terra"

var _ terra.Provider = (*Provider)(nil)

/*
Provider is the provider for hashicorp/aws.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Provider struct {
	/*
	   AccessKey is optional. The access key for API operations. You can retrieve this
	   from the 'Security & Credentials' section of the AWS console.
	*/
	AccessKey terra.StringValue `hcl:"access_key,attr"`
	// AllowedAccountIds is optional.
	AllowedAccountIds terra.SetValue[terra.StringValue] `hcl:"allowed_account_ids,attr"`
	// CustomCaBundle is optional. File containing custom root and intermediate certificates. Can also be configured using the `AWS_CA_BUNDLE` environment variable. (Setting `ca_bundle` in the shared config file is not supported.)
	CustomCaBundle terra.StringValue `hcl:"custom_ca_bundle,attr"`
	// Ec2MetadataServiceEndpoint is optional. Address of the EC2 metadata service endpoint to use. Can also be configured using the `AWS_EC2_METADATA_SERVICE_ENDPOINT` environment variable.
	Ec2MetadataServiceEndpoint terra.StringValue `hcl:"ec2_metadata_service_endpoint,attr"`
	// Ec2MetadataServiceEndpointMode is optional. Protocol to use with EC2 metadata service endpoint.Valid values are `IPv4` and `IPv6`. Can also be configured using the `AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE` environment variable.
	Ec2MetadataServiceEndpointMode terra.StringValue `hcl:"ec2_metadata_service_endpoint_mode,attr"`
	// ForbiddenAccountIds is optional.
	ForbiddenAccountIds terra.SetValue[terra.StringValue] `hcl:"forbidden_account_ids,attr"`
	// HttpProxy is optional. The address of an HTTP proxy to use when accessing the AWS API. Can also be configured using the `HTTP_PROXY` or `HTTPS_PROXY` environment variables.
	HttpProxy terra.StringValue `hcl:"http_proxy,attr"`
	// Insecure is optional. Explicitly allow the provider to perform "insecure" SSL requests. If omitted, default value is `false`
	Insecure terra.BoolValue `hcl:"insecure,attr"`
	/*
	   MaxRetries is optional. The maximum number of times an AWS API request is
	   being executed. If the API request still fails, an error is
	   thrown.
	*/
	MaxRetries terra.NumberValue `hcl:"max_retries,attr"`
	/*
	   Profile is optional. The profile for API operations. If not set, the default profile
	   created with `aws configure` will be used.
	*/
	Profile terra.StringValue `hcl:"profile,attr"`
	/*
	   Region is optional. The region where AWS operations will take place. Examples
	   are us-east-1, us-west-2, etc.
	*/
	Region terra.StringValue `hcl:"region,attr"`
	/*
	   S3UsePathStyle is optional. Set this to true to enable the request to use path-style addressing,
	   i.e., https://s3.amazonaws.com/BUCKET/KEY. By default, the S3 client will
	   use virtual hosted bucket addressing when possible
	   (https://BUCKET.s3.amazonaws.com/KEY). Specific to the Amazon S3 service.
	*/
	S3UsePathStyle terra.BoolValue `hcl:"s3_use_path_style,attr"`
	/*
	   SecretKey is optional. The secret key for API operations. You can retrieve this
	   from the 'Security & Credentials' section of the AWS console.
	*/
	SecretKey terra.StringValue `hcl:"secret_key,attr"`
	// SharedConfigFiles is optional. List of paths to shared config files. If not set, defaults to [~/.aws/config].
	SharedConfigFiles terra.ListValue[terra.StringValue] `hcl:"shared_config_files,attr"`
	// SharedCredentialsFiles is optional. List of paths to shared credentials files. If not set, defaults to [~/.aws/credentials].
	SharedCredentialsFiles terra.ListValue[terra.StringValue] `hcl:"shared_credentials_files,attr"`
	// SkipCredentialsValidation is optional. Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS available/implemented.
	SkipCredentialsValidation terra.BoolValue `hcl:"skip_credentials_validation,attr"`
	// SkipMetadataApiCheck is optional. Skip the AWS Metadata API check. Used for AWS API implementations that do not have a metadata api endpoint.
	SkipMetadataApiCheck terra.StringValue `hcl:"skip_metadata_api_check,attr"`
	// SkipRegionValidation is optional. Skip static validation of region name. Used by users of alternative AWS-like APIs or users w/ access to regions that are not public (yet).
	SkipRegionValidation terra.BoolValue `hcl:"skip_region_validation,attr"`
	// SkipRequestingAccountId is optional. Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.
	SkipRequestingAccountId terra.BoolValue `hcl:"skip_requesting_account_id,attr"`
	/*
	   StsRegion is optional. The region where AWS STS operations will take place. Examples
	   are us-east-1 and us-west-2.
	*/
	StsRegion terra.StringValue `hcl:"sts_region,attr"`
	/*
	   Token is optional. session token. A session token is only required if you are
	   using temporary security credentials.
	*/
	Token terra.StringValue `hcl:"token,attr"`
	// UseDualstackEndpoint is optional. Resolve an endpoint with DualStack capability
	UseDualstackEndpoint terra.BoolValue `hcl:"use_dualstack_endpoint,attr"`
	// UseFipsEndpoint is optional. Resolve an endpoint with FIPS capability
	UseFipsEndpoint terra.BoolValue `hcl:"use_fips_endpoint,attr"`
	// AssumeRole is min=0.
	AssumeRole []AssumeRole `hcl:"assume_role,block" validate:"min=0"`
	// AssumeRoleWithWebIdentity is min=0.
	AssumeRoleWithWebIdentity []AssumeRoleWithWebIdentity `hcl:"assume_role_with_web_identity,block" validate:"min=0"`
	// DefaultTags is min=0. Configuration block with settings to default resource tags across all resources.
	DefaultTags []DefaultTags `hcl:"default_tags,block" validate:"min=0"`
	// Endpoints is min=0.
	Endpoints []Endpoints `hcl:"endpoints,block" validate:"min=0"`
	// IgnoreTags is min=0. Configuration block with settings to ignore resource tags across all resources.
	IgnoreTags []IgnoreTags `hcl:"ignore_tags,block" validate:"min=0"`
}

// LocalName returns the provider local name for [Provider].
func (p *Provider) LocalName() string {
	return "aws"
}

// Source returns the provider source for [Provider].
func (p *Provider) Source() string {
	return "hashicorp/aws"
}

// Version returns the provider version for [Provider].
func (p *Provider) Version() string {
	return "5.0.0"
}

// Configuration returns the provider configuration for [Provider].
func (p *Provider) Configuration() interface{} {
	return p
}
