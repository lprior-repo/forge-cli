// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_mq_broker_instance_type_offerings

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatabrokerInstanceOptionsAttributes struct {
	ref terra.Reference
}

func (bio DatabrokerInstanceOptionsAttributes) InternalRef() (terra.Reference, error) {
	return bio.ref, nil
}

func (bio DatabrokerInstanceOptionsAttributes) InternalWithRef(ref terra.Reference) DatabrokerInstanceOptionsAttributes {
	return DatabrokerInstanceOptionsAttributes{ref: ref}
}

func (bio DatabrokerInstanceOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bio.ref.InternalTokens()
}

func (bio DatabrokerInstanceOptionsAttributes) EngineType() terra.StringValue {
	return terra.ReferenceAsString(bio.ref.Append("engine_type"))
}

func (bio DatabrokerInstanceOptionsAttributes) HostInstanceType() terra.StringValue {
	return terra.ReferenceAsString(bio.ref.Append("host_instance_type"))
}

func (bio DatabrokerInstanceOptionsAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(bio.ref.Append("storage_type"))
}

func (bio DatabrokerInstanceOptionsAttributes) SupportedDeploymentModes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](bio.ref.Append("supported_deployment_modes"))
}

func (bio DatabrokerInstanceOptionsAttributes) SupportedEngineVersions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](bio.ref.Append("supported_engine_versions"))
}

func (bio DatabrokerInstanceOptionsAttributes) AvailabilityZones() terra.SetValue[DatabrokerInstanceOptionsAvailabilityZonesAttributes] {
	return terra.ReferenceAsSet[DatabrokerInstanceOptionsAvailabilityZonesAttributes](bio.ref.Append("availability_zones"))
}

type DatabrokerInstanceOptionsAvailabilityZonesAttributes struct {
	ref terra.Reference
}

func (az DatabrokerInstanceOptionsAvailabilityZonesAttributes) InternalRef() (terra.Reference, error) {
	return az.ref, nil
}

func (az DatabrokerInstanceOptionsAvailabilityZonesAttributes) InternalWithRef(ref terra.Reference) DatabrokerInstanceOptionsAvailabilityZonesAttributes {
	return DatabrokerInstanceOptionsAvailabilityZonesAttributes{ref: ref}
}

func (az DatabrokerInstanceOptionsAvailabilityZonesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return az.ref.InternalTokens()
}

func (az DatabrokerInstanceOptionsAvailabilityZonesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(az.ref.Append("name"))
}

type DataBrokerInstanceOptionsState struct {
	EngineType               string                                            `json:"engine_type"`
	HostInstanceType         string                                            `json:"host_instance_type"`
	StorageType              string                                            `json:"storage_type"`
	SupportedDeploymentModes []string                                          `json:"supported_deployment_modes"`
	SupportedEngineVersions  []string                                          `json:"supported_engine_versions"`
	AvailabilityZones        []DataBrokerInstanceOptionsAvailabilityZonesState `json:"availability_zones"`
}

type DataBrokerInstanceOptionsAvailabilityZonesState struct {
	Name string `json:"name"`
}
