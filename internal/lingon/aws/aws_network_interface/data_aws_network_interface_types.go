// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_network_interface

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFilter struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values is required.
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataTimeouts struct {
	// Read is optional.
	Read terra.StringValue `hcl:"read,attr"`
}

type DataassociationAttributes struct {
	ref terra.Reference
}

func (a DataassociationAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataassociationAttributes) InternalWithRef(ref terra.Reference) DataassociationAttributes {
	return DataassociationAttributes{ref: ref}
}

func (a DataassociationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataassociationAttributes) AllocationId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("allocation_id"))
}

func (a DataassociationAttributes) AssociationId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("association_id"))
}

func (a DataassociationAttributes) CarrierIp() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("carrier_ip"))
}

func (a DataassociationAttributes) CustomerOwnedIp() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("customer_owned_ip"))
}

func (a DataassociationAttributes) IpOwnerId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("ip_owner_id"))
}

func (a DataassociationAttributes) PublicDnsName() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("public_dns_name"))
}

func (a DataassociationAttributes) PublicIp() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("public_ip"))
}

type DataattachmentAttributes struct {
	ref terra.Reference
}

func (a DataattachmentAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataattachmentAttributes) InternalWithRef(ref terra.Reference) DataattachmentAttributes {
	return DataattachmentAttributes{ref: ref}
}

func (a DataattachmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataattachmentAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("attachment_id"))
}

func (a DataattachmentAttributes) DeviceIndex() terra.NumberValue {
	return terra.ReferenceAsNumber(a.ref.Append("device_index"))
}

func (a DataattachmentAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("instance_id"))
}

func (a DataattachmentAttributes) InstanceOwnerId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("instance_owner_id"))
}

type DatafilterAttributes struct {
	ref terra.Reference
}

func (f DatafilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DatafilterAttributes) InternalWithRef(ref terra.Reference) DatafilterAttributes {
	return DatafilterAttributes{ref: ref}
}

func (f DatafilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DatafilterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

func (f DatafilterAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](f.ref.Append("values"))
}

type DatatimeoutsAttributes struct {
	ref terra.Reference
}

func (t DatatimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DatatimeoutsAttributes) InternalWithRef(ref terra.Reference) DatatimeoutsAttributes {
	return DatatimeoutsAttributes{ref: ref}
}

func (t DatatimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DatatimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAssociationState struct {
	AllocationId    string `json:"allocation_id"`
	AssociationId   string `json:"association_id"`
	CarrierIp       string `json:"carrier_ip"`
	CustomerOwnedIp string `json:"customer_owned_ip"`
	IpOwnerId       string `json:"ip_owner_id"`
	PublicDnsName   string `json:"public_dns_name"`
	PublicIp        string `json:"public_ip"`
}

type DataAttachmentState struct {
	AttachmentId    string  `json:"attachment_id"`
	DeviceIndex     float64 `json:"device_index"`
	InstanceId      string  `json:"instance_id"`
	InstanceOwnerId string  `json:"instance_owner_id"`
}

type DataFilterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
