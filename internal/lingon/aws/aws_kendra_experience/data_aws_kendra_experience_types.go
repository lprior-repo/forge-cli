// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kendra_experience

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataconfigurationAttributes struct {
	ref terra.Reference
}

func (c DataconfigurationAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataconfigurationAttributes) InternalWithRef(ref terra.Reference) DataconfigurationAttributes {
	return DataconfigurationAttributes{ref: ref}
}

func (c DataconfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataconfigurationAttributes) ContentSourceConfiguration() terra.ListValue[DataconfigurationContentSourceConfigurationAttributes] {
	return terra.ReferenceAsList[DataconfigurationContentSourceConfigurationAttributes](c.ref.Append("content_source_configuration"))
}

func (c DataconfigurationAttributes) UserIdentityConfiguration() terra.ListValue[DataconfigurationUserIdentityConfigurationAttributes] {
	return terra.ReferenceAsList[DataconfigurationUserIdentityConfigurationAttributes](c.ref.Append("user_identity_configuration"))
}

type DataconfigurationContentSourceConfigurationAttributes struct {
	ref terra.Reference
}

func (csc DataconfigurationContentSourceConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return csc.ref, nil
}

func (csc DataconfigurationContentSourceConfigurationAttributes) InternalWithRef(ref terra.Reference) DataconfigurationContentSourceConfigurationAttributes {
	return DataconfigurationContentSourceConfigurationAttributes{ref: ref}
}

func (csc DataconfigurationContentSourceConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csc.ref.InternalTokens()
}

func (csc DataconfigurationContentSourceConfigurationAttributes) DataSourceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](csc.ref.Append("data_source_ids"))
}

func (csc DataconfigurationContentSourceConfigurationAttributes) DirectPutContent() terra.BoolValue {
	return terra.ReferenceAsBool(csc.ref.Append("direct_put_content"))
}

func (csc DataconfigurationContentSourceConfigurationAttributes) FaqIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](csc.ref.Append("faq_ids"))
}

type DataconfigurationUserIdentityConfigurationAttributes struct {
	ref terra.Reference
}

func (uic DataconfigurationUserIdentityConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return uic.ref, nil
}

func (uic DataconfigurationUserIdentityConfigurationAttributes) InternalWithRef(ref terra.Reference) DataconfigurationUserIdentityConfigurationAttributes {
	return DataconfigurationUserIdentityConfigurationAttributes{ref: ref}
}

func (uic DataconfigurationUserIdentityConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uic.ref.InternalTokens()
}

func (uic DataconfigurationUserIdentityConfigurationAttributes) IdentityAttributeName() terra.StringValue {
	return terra.ReferenceAsString(uic.ref.Append("identity_attribute_name"))
}

type DataendpointsAttributes struct {
	ref terra.Reference
}

func (e DataendpointsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DataendpointsAttributes) InternalWithRef(ref terra.Reference) DataendpointsAttributes {
	return DataendpointsAttributes{ref: ref}
}

func (e DataendpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DataendpointsAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("endpoint"))
}

func (e DataendpointsAttributes) EndpointType() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("endpoint_type"))
}

type DataConfigurationState struct {
	ContentSourceConfiguration []DataConfigurationContentSourceConfigurationState `json:"content_source_configuration"`
	UserIdentityConfiguration  []DataConfigurationUserIdentityConfigurationState  `json:"user_identity_configuration"`
}

type DataConfigurationContentSourceConfigurationState struct {
	DataSourceIds    []string `json:"data_source_ids"`
	DirectPutContent bool     `json:"direct_put_content"`
	FaqIds           []string `json:"faq_ids"`
}

type DataConfigurationUserIdentityConfigurationState struct {
	IdentityAttributeName string `json:"identity_attribute_name"`
}

type DataEndpointsState struct {
	Endpoint     string `json:"endpoint"`
	EndpointType string `json:"endpoint_type"`
}
