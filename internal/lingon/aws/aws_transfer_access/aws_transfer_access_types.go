// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_transfer_access

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type HomeDirectoryMappings struct {
	// Entry is required.
	Entry terra.StringValue `hcl:"entry,attr" validate:"required"`
	// Target is required.
	Target terra.StringValue `hcl:"target,attr" validate:"required"`
}

type PosixProfile struct {
	// Gid is required.
	Gid terra.NumberValue `hcl:"gid,attr" validate:"required"`
	// SecondaryGids is optional.
	SecondaryGids terra.SetValue[terra.NumberValue] `hcl:"secondary_gids,attr"`
	// Uid is required.
	Uid terra.NumberValue `hcl:"uid,attr" validate:"required"`
}

type homeDirectoryMappingsAttributes struct {
	ref terra.Reference
}

func (hdm homeDirectoryMappingsAttributes) InternalRef() (terra.Reference, error) {
	return hdm.ref, nil
}

func (hdm homeDirectoryMappingsAttributes) InternalWithRef(ref terra.Reference) homeDirectoryMappingsAttributes {
	return homeDirectoryMappingsAttributes{ref: ref}
}

func (hdm homeDirectoryMappingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hdm.ref.InternalTokens()
}

func (hdm homeDirectoryMappingsAttributes) Entry() terra.StringValue {
	return terra.ReferenceAsString(hdm.ref.Append("entry"))
}

func (hdm homeDirectoryMappingsAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(hdm.ref.Append("target"))
}

type posixProfileAttributes struct {
	ref terra.Reference
}

func (pp posixProfileAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp posixProfileAttributes) InternalWithRef(ref terra.Reference) posixProfileAttributes {
	return posixProfileAttributes{ref: ref}
}

func (pp posixProfileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp posixProfileAttributes) Gid() terra.NumberValue {
	return terra.ReferenceAsNumber(pp.ref.Append("gid"))
}

func (pp posixProfileAttributes) SecondaryGids() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](pp.ref.Append("secondary_gids"))
}

func (pp posixProfileAttributes) Uid() terra.NumberValue {
	return terra.ReferenceAsNumber(pp.ref.Append("uid"))
}

type HomeDirectoryMappingsState struct {
	Entry  string `json:"entry"`
	Target string `json:"target"`
}

type PosixProfileState struct {
	Gid           float64   `json:"gid"`
	SecondaryGids []float64 `json:"secondary_gids"`
	Uid           float64   `json:"uid"`
}
