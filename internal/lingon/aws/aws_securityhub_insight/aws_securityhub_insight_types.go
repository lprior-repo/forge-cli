// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_securityhub_insight

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Filters struct {
	// FiltersAwsAccountId is min=0,max=20.
	AwsAccountId []FiltersAwsAccountId `hcl:"aws_account_id,block" validate:"min=0,max=20"`
	// FiltersCompanyName is min=0,max=20.
	CompanyName []FiltersCompanyName `hcl:"company_name,block" validate:"min=0,max=20"`
	// FiltersComplianceStatus is min=0,max=20.
	ComplianceStatus []FiltersComplianceStatus `hcl:"compliance_status,block" validate:"min=0,max=20"`
	// FiltersConfidence is min=0,max=20.
	Confidence []FiltersConfidence `hcl:"confidence,block" validate:"min=0,max=20"`
	// FiltersCreatedAt is min=0,max=20.
	CreatedAt []FiltersCreatedAt `hcl:"created_at,block" validate:"min=0,max=20"`
	// FiltersCriticality is min=0,max=20.
	Criticality []FiltersCriticality `hcl:"criticality,block" validate:"min=0,max=20"`
	// FiltersDescription is min=0,max=20.
	Description []FiltersDescription `hcl:"description,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsConfidence is min=0,max=20.
	FindingProviderFieldsConfidence []FiltersFindingProviderFieldsConfidence `hcl:"finding_provider_fields_confidence,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsCriticality is min=0,max=20.
	FindingProviderFieldsCriticality []FiltersFindingProviderFieldsCriticality `hcl:"finding_provider_fields_criticality,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsRelatedFindingsId is min=0,max=20.
	FindingProviderFieldsRelatedFindingsId []FiltersFindingProviderFieldsRelatedFindingsId `hcl:"finding_provider_fields_related_findings_id,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsRelatedFindingsProductArn is min=0,max=20.
	FindingProviderFieldsRelatedFindingsProductArn []FiltersFindingProviderFieldsRelatedFindingsProductArn `hcl:"finding_provider_fields_related_findings_product_arn,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsSeverityLabel is min=0,max=20.
	FindingProviderFieldsSeverityLabel []FiltersFindingProviderFieldsSeverityLabel `hcl:"finding_provider_fields_severity_label,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsSeverityOriginal is min=0,max=20.
	FindingProviderFieldsSeverityOriginal []FiltersFindingProviderFieldsSeverityOriginal `hcl:"finding_provider_fields_severity_original,block" validate:"min=0,max=20"`
	// FiltersFindingProviderFieldsTypes is min=0,max=20.
	FindingProviderFieldsTypes []FiltersFindingProviderFieldsTypes `hcl:"finding_provider_fields_types,block" validate:"min=0,max=20"`
	// FiltersFirstObservedAt is min=0,max=20.
	FirstObservedAt []FiltersFirstObservedAt `hcl:"first_observed_at,block" validate:"min=0,max=20"`
	// FiltersGeneratorId is min=0,max=20.
	GeneratorId []FiltersGeneratorId `hcl:"generator_id,block" validate:"min=0,max=20"`
	// FiltersId is min=0,max=20.
	Id []FiltersId `hcl:"id,block" validate:"min=0,max=20"`
	// FiltersKeyword is min=0,max=20.
	Keyword []FiltersKeyword `hcl:"keyword,block" validate:"min=0,max=20"`
	// FiltersLastObservedAt is min=0,max=20.
	LastObservedAt []FiltersLastObservedAt `hcl:"last_observed_at,block" validate:"min=0,max=20"`
	// FiltersMalwareName is min=0,max=20.
	MalwareName []FiltersMalwareName `hcl:"malware_name,block" validate:"min=0,max=20"`
	// FiltersMalwarePath is min=0,max=20.
	MalwarePath []FiltersMalwarePath `hcl:"malware_path,block" validate:"min=0,max=20"`
	// FiltersMalwareState is min=0,max=20.
	MalwareState []FiltersMalwareState `hcl:"malware_state,block" validate:"min=0,max=20"`
	// FiltersMalwareType is min=0,max=20.
	MalwareType []FiltersMalwareType `hcl:"malware_type,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationDomain is min=0,max=20.
	NetworkDestinationDomain []FiltersNetworkDestinationDomain `hcl:"network_destination_domain,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationIpv4 is min=0,max=20.
	NetworkDestinationIpv4 []FiltersNetworkDestinationIpv4 `hcl:"network_destination_ipv4,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationIpv6 is min=0,max=20.
	NetworkDestinationIpv6 []FiltersNetworkDestinationIpv6 `hcl:"network_destination_ipv6,block" validate:"min=0,max=20"`
	// FiltersNetworkDestinationPort is min=0,max=20.
	NetworkDestinationPort []FiltersNetworkDestinationPort `hcl:"network_destination_port,block" validate:"min=0,max=20"`
	// FiltersNetworkDirection is min=0,max=20.
	NetworkDirection []FiltersNetworkDirection `hcl:"network_direction,block" validate:"min=0,max=20"`
	// FiltersNetworkProtocol is min=0,max=20.
	NetworkProtocol []FiltersNetworkProtocol `hcl:"network_protocol,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceDomain is min=0,max=20.
	NetworkSourceDomain []FiltersNetworkSourceDomain `hcl:"network_source_domain,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceIpv4 is min=0,max=20.
	NetworkSourceIpv4 []FiltersNetworkSourceIpv4 `hcl:"network_source_ipv4,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceIpv6 is min=0,max=20.
	NetworkSourceIpv6 []FiltersNetworkSourceIpv6 `hcl:"network_source_ipv6,block" validate:"min=0,max=20"`
	// FiltersNetworkSourceMac is min=0,max=20.
	NetworkSourceMac []FiltersNetworkSourceMac `hcl:"network_source_mac,block" validate:"min=0,max=20"`
	// FiltersNetworkSourcePort is min=0,max=20.
	NetworkSourcePort []FiltersNetworkSourcePort `hcl:"network_source_port,block" validate:"min=0,max=20"`
	// FiltersNoteText is min=0,max=20.
	NoteText []FiltersNoteText `hcl:"note_text,block" validate:"min=0,max=20"`
	// FiltersNoteUpdatedAt is min=0,max=20.
	NoteUpdatedAt []FiltersNoteUpdatedAt `hcl:"note_updated_at,block" validate:"min=0,max=20"`
	// FiltersNoteUpdatedBy is min=0,max=20.
	NoteUpdatedBy []FiltersNoteUpdatedBy `hcl:"note_updated_by,block" validate:"min=0,max=20"`
	// FiltersProcessLaunchedAt is min=0,max=20.
	ProcessLaunchedAt []FiltersProcessLaunchedAt `hcl:"process_launched_at,block" validate:"min=0,max=20"`
	// FiltersProcessName is min=0,max=20.
	ProcessName []FiltersProcessName `hcl:"process_name,block" validate:"min=0,max=20"`
	// FiltersProcessParentPid is min=0,max=20.
	ProcessParentPid []FiltersProcessParentPid `hcl:"process_parent_pid,block" validate:"min=0,max=20"`
	// FiltersProcessPath is min=0,max=20.
	ProcessPath []FiltersProcessPath `hcl:"process_path,block" validate:"min=0,max=20"`
	// FiltersProcessPid is min=0,max=20.
	ProcessPid []FiltersProcessPid `hcl:"process_pid,block" validate:"min=0,max=20"`
	// FiltersProcessTerminatedAt is min=0,max=20.
	ProcessTerminatedAt []FiltersProcessTerminatedAt `hcl:"process_terminated_at,block" validate:"min=0,max=20"`
	// FiltersProductArn is min=0,max=20.
	ProductArn []FiltersProductArn `hcl:"product_arn,block" validate:"min=0,max=20"`
	// FiltersProductFields is min=0,max=20.
	ProductFields []FiltersProductFields `hcl:"product_fields,block" validate:"min=0,max=20"`
	// FiltersProductName is min=0,max=20.
	ProductName []FiltersProductName `hcl:"product_name,block" validate:"min=0,max=20"`
	// FiltersRecommendationText is min=0,max=20.
	RecommendationText []FiltersRecommendationText `hcl:"recommendation_text,block" validate:"min=0,max=20"`
	// FiltersRecordState is min=0,max=20.
	RecordState []FiltersRecordState `hcl:"record_state,block" validate:"min=0,max=20"`
	// FiltersRelatedFindingsId is min=0,max=20.
	RelatedFindingsId []FiltersRelatedFindingsId `hcl:"related_findings_id,block" validate:"min=0,max=20"`
	// FiltersRelatedFindingsProductArn is min=0,max=20.
	RelatedFindingsProductArn []FiltersRelatedFindingsProductArn `hcl:"related_findings_product_arn,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceIamInstanceProfileArn is min=0,max=20.
	ResourceAwsEc2InstanceIamInstanceProfileArn []FiltersResourceAwsEc2InstanceIamInstanceProfileArn `hcl:"resource_aws_ec2_instance_iam_instance_profile_arn,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceImageId is min=0,max=20.
	ResourceAwsEc2InstanceImageId []FiltersResourceAwsEc2InstanceImageId `hcl:"resource_aws_ec2_instance_image_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceIpv4Addresses is min=0,max=20.
	ResourceAwsEc2InstanceIpv4Addresses []FiltersResourceAwsEc2InstanceIpv4Addresses `hcl:"resource_aws_ec2_instance_ipv4_addresses,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceIpv6Addresses is min=0,max=20.
	ResourceAwsEc2InstanceIpv6Addresses []FiltersResourceAwsEc2InstanceIpv6Addresses `hcl:"resource_aws_ec2_instance_ipv6_addresses,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceKeyName is min=0,max=20.
	ResourceAwsEc2InstanceKeyName []FiltersResourceAwsEc2InstanceKeyName `hcl:"resource_aws_ec2_instance_key_name,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceLaunchedAt is min=0,max=20.
	ResourceAwsEc2InstanceLaunchedAt []FiltersResourceAwsEc2InstanceLaunchedAt `hcl:"resource_aws_ec2_instance_launched_at,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceSubnetId is min=0,max=20.
	ResourceAwsEc2InstanceSubnetId []FiltersResourceAwsEc2InstanceSubnetId `hcl:"resource_aws_ec2_instance_subnet_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceType is min=0,max=20.
	ResourceAwsEc2InstanceType []FiltersResourceAwsEc2InstanceType `hcl:"resource_aws_ec2_instance_type,block" validate:"min=0,max=20"`
	// FiltersResourceAwsEc2InstanceVpcId is min=0,max=20.
	ResourceAwsEc2InstanceVpcId []FiltersResourceAwsEc2InstanceVpcId `hcl:"resource_aws_ec2_instance_vpc_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsIamAccessKeyCreatedAt is min=0,max=20.
	ResourceAwsIamAccessKeyCreatedAt []FiltersResourceAwsIamAccessKeyCreatedAt `hcl:"resource_aws_iam_access_key_created_at,block" validate:"min=0,max=20"`
	// FiltersResourceAwsIamAccessKeyStatus is min=0,max=20.
	ResourceAwsIamAccessKeyStatus []FiltersResourceAwsIamAccessKeyStatus `hcl:"resource_aws_iam_access_key_status,block" validate:"min=0,max=20"`
	// FiltersResourceAwsIamAccessKeyUserName is min=0,max=20.
	ResourceAwsIamAccessKeyUserName []FiltersResourceAwsIamAccessKeyUserName `hcl:"resource_aws_iam_access_key_user_name,block" validate:"min=0,max=20"`
	// FiltersResourceAwsS3BucketOwnerId is min=0,max=20.
	ResourceAwsS3BucketOwnerId []FiltersResourceAwsS3BucketOwnerId `hcl:"resource_aws_s3_bucket_owner_id,block" validate:"min=0,max=20"`
	// FiltersResourceAwsS3BucketOwnerName is min=0,max=20.
	ResourceAwsS3BucketOwnerName []FiltersResourceAwsS3BucketOwnerName `hcl:"resource_aws_s3_bucket_owner_name,block" validate:"min=0,max=20"`
	// FiltersResourceContainerImageId is min=0,max=20.
	ResourceContainerImageId []FiltersResourceContainerImageId `hcl:"resource_container_image_id,block" validate:"min=0,max=20"`
	// FiltersResourceContainerImageName is min=0,max=20.
	ResourceContainerImageName []FiltersResourceContainerImageName `hcl:"resource_container_image_name,block" validate:"min=0,max=20"`
	// FiltersResourceContainerLaunchedAt is min=0,max=20.
	ResourceContainerLaunchedAt []FiltersResourceContainerLaunchedAt `hcl:"resource_container_launched_at,block" validate:"min=0,max=20"`
	// FiltersResourceContainerName is min=0,max=20.
	ResourceContainerName []FiltersResourceContainerName `hcl:"resource_container_name,block" validate:"min=0,max=20"`
	// FiltersResourceDetailsOther is min=0,max=20.
	ResourceDetailsOther []FiltersResourceDetailsOther `hcl:"resource_details_other,block" validate:"min=0,max=20"`
	// FiltersResourceId is min=0,max=20.
	ResourceId []FiltersResourceId `hcl:"resource_id,block" validate:"min=0,max=20"`
	// FiltersResourcePartition is min=0,max=20.
	ResourcePartition []FiltersResourcePartition `hcl:"resource_partition,block" validate:"min=0,max=20"`
	// FiltersResourceRegion is min=0,max=20.
	ResourceRegion []FiltersResourceRegion `hcl:"resource_region,block" validate:"min=0,max=20"`
	// FiltersResourceTags is min=0,max=20.
	ResourceTags []FiltersResourceTags `hcl:"resource_tags,block" validate:"min=0,max=20"`
	// FiltersResourceType is min=0,max=20.
	ResourceType []FiltersResourceType `hcl:"resource_type,block" validate:"min=0,max=20"`
	// FiltersSeverityLabel is min=0,max=20.
	SeverityLabel []FiltersSeverityLabel `hcl:"severity_label,block" validate:"min=0,max=20"`
	// FiltersSourceUrl is min=0,max=20.
	SourceUrl []FiltersSourceUrl `hcl:"source_url,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorCategory is min=0,max=20.
	ThreatIntelIndicatorCategory []FiltersThreatIntelIndicatorCategory `hcl:"threat_intel_indicator_category,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorLastObservedAt is min=0,max=20.
	ThreatIntelIndicatorLastObservedAt []FiltersThreatIntelIndicatorLastObservedAt `hcl:"threat_intel_indicator_last_observed_at,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorSource is min=0,max=20.
	ThreatIntelIndicatorSource []FiltersThreatIntelIndicatorSource `hcl:"threat_intel_indicator_source,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorSourceUrl is min=0,max=20.
	ThreatIntelIndicatorSourceUrl []FiltersThreatIntelIndicatorSourceUrl `hcl:"threat_intel_indicator_source_url,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorType is min=0,max=20.
	ThreatIntelIndicatorType []FiltersThreatIntelIndicatorType `hcl:"threat_intel_indicator_type,block" validate:"min=0,max=20"`
	// FiltersThreatIntelIndicatorValue is min=0,max=20.
	ThreatIntelIndicatorValue []FiltersThreatIntelIndicatorValue `hcl:"threat_intel_indicator_value,block" validate:"min=0,max=20"`
	// FiltersTitle is min=0,max=20.
	Title []FiltersTitle `hcl:"title,block" validate:"min=0,max=20"`
	// FiltersType is min=0,max=20.
	Type []FiltersType `hcl:"type,block" validate:"min=0,max=20"`
	// FiltersUpdatedAt is min=0,max=20.
	UpdatedAt []FiltersUpdatedAt `hcl:"updated_at,block" validate:"min=0,max=20"`
	// FiltersUserDefinedValues is min=0,max=20.
	UserDefinedValues []FiltersUserDefinedValues `hcl:"user_defined_values,block" validate:"min=0,max=20"`
	// FiltersVerificationState is min=0,max=20.
	VerificationState []FiltersVerificationState `hcl:"verification_state,block" validate:"min=0,max=20"`
	// FiltersWorkflowStatus is min=0,max=20.
	WorkflowStatus []FiltersWorkflowStatus `hcl:"workflow_status,block" validate:"min=0,max=20"`
}

type FiltersAwsAccountId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersCompanyName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersComplianceStatus struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersConfidence struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersCreatedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersCreatedAtDateRange is optional.
	DateRange *FiltersCreatedAtDateRange `hcl:"date_range,block"`
}

type FiltersCreatedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersCriticality struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersDescription struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsConfidence struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersFindingProviderFieldsCriticality struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersFindingProviderFieldsRelatedFindingsId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsRelatedFindingsProductArn struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsSeverityLabel struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsSeverityOriginal struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFindingProviderFieldsTypes struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersFirstObservedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersFirstObservedAtDateRange is optional.
	DateRange *FiltersFirstObservedAtDateRange `hcl:"date_range,block"`
}

type FiltersFirstObservedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersGeneratorId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersKeyword struct {
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersLastObservedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersLastObservedAtDateRange is optional.
	DateRange *FiltersLastObservedAtDateRange `hcl:"date_range,block"`
}

type FiltersLastObservedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwareName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwarePath struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwareState struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersMalwareType struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkDestinationDomain struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkDestinationIpv4 struct {
	// Cidr is required.
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkDestinationIpv6 struct {
	// Cidr is required.
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkDestinationPort struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersNetworkDirection struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkProtocol struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkSourceDomain struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkSourceIpv4 struct {
	// Cidr is required.
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkSourceIpv6 struct {
	// Cidr is required.
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersNetworkSourceMac struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNetworkSourcePort struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersNoteText struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersNoteUpdatedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersNoteUpdatedAtDateRange is optional.
	DateRange *FiltersNoteUpdatedAtDateRange `hcl:"date_range,block"`
}

type FiltersNoteUpdatedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersNoteUpdatedBy struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessLaunchedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersProcessLaunchedAtDateRange is optional.
	DateRange *FiltersProcessLaunchedAtDateRange `hcl:"date_range,block"`
}

type FiltersProcessLaunchedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessParentPid struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersProcessPath struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProcessPid struct {
	// Eq is optional.
	Eq terra.StringValue `hcl:"eq,attr"`
	// Gte is optional.
	Gte terra.StringValue `hcl:"gte,attr"`
	// Lte is optional.
	Lte terra.StringValue `hcl:"lte,attr"`
}

type FiltersProcessTerminatedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersProcessTerminatedAtDateRange is optional.
	DateRange *FiltersProcessTerminatedAtDateRange `hcl:"date_range,block"`
}

type FiltersProcessTerminatedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersProductArn struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProductFields struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersProductName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRecommendationText struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRecordState struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRelatedFindingsId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersRelatedFindingsProductArn struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceIamInstanceProfileArn struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceImageId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceIpv4Addresses struct {
	// Cidr is required.
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceIpv6Addresses struct {
	// Cidr is required.
	Cidr terra.StringValue `hcl:"cidr,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceKeyName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceLaunchedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersResourceAwsEc2InstanceLaunchedAtDateRange is optional.
	DateRange *FiltersResourceAwsEc2InstanceLaunchedAtDateRange `hcl:"date_range,block"`
}

type FiltersResourceAwsEc2InstanceLaunchedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceSubnetId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceType struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsEc2InstanceVpcId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsIamAccessKeyCreatedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersResourceAwsIamAccessKeyCreatedAtDateRange is optional.
	DateRange *FiltersResourceAwsIamAccessKeyCreatedAtDateRange `hcl:"date_range,block"`
}

type FiltersResourceAwsIamAccessKeyCreatedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsIamAccessKeyStatus struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsIamAccessKeyUserName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsS3BucketOwnerId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceAwsS3BucketOwnerName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerImageId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerImageName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerLaunchedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersResourceContainerLaunchedAtDateRange is optional.
	DateRange *FiltersResourceContainerLaunchedAtDateRange `hcl:"date_range,block"`
}

type FiltersResourceContainerLaunchedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceContainerName struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceDetailsOther struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceId struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourcePartition struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceRegion struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceTags struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersResourceType struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersSeverityLabel struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersSourceUrl struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorCategory struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorLastObservedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersThreatIntelIndicatorLastObservedAtDateRange is optional.
	DateRange *FiltersThreatIntelIndicatorLastObservedAtDateRange `hcl:"date_range,block"`
}

type FiltersThreatIntelIndicatorLastObservedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorSource struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorSourceUrl struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorType struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersThreatIntelIndicatorValue struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersTitle struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersType struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersUpdatedAt struct {
	// End is optional.
	End terra.StringValue `hcl:"end,attr"`
	// Start is optional.
	Start terra.StringValue `hcl:"start,attr"`
	// FiltersUpdatedAtDateRange is optional.
	DateRange *FiltersUpdatedAtDateRange `hcl:"date_range,block"`
}

type FiltersUpdatedAtDateRange struct {
	// Unit is required.
	Unit terra.StringValue `hcl:"unit,attr" validate:"required"`
	// Value is required.
	Value terra.NumberValue `hcl:"value,attr" validate:"required"`
}

type FiltersUserDefinedValues struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersVerificationState struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type FiltersWorkflowStatus struct {
	// Comparison is required.
	Comparison terra.StringValue `hcl:"comparison,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type filtersAttributes struct {
	ref terra.Reference
}

func (f filtersAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f filtersAttributes) InternalWithRef(ref terra.Reference) filtersAttributes {
	return filtersAttributes{ref: ref}
}

func (f filtersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f filtersAttributes) AwsAccountId() terra.SetValue[filtersAwsAccountIdAttributes] {
	return terra.ReferenceAsSet[filtersAwsAccountIdAttributes](f.ref.Append("aws_account_id"))
}

func (f filtersAttributes) CompanyName() terra.SetValue[filtersCompanyNameAttributes] {
	return terra.ReferenceAsSet[filtersCompanyNameAttributes](f.ref.Append("company_name"))
}

func (f filtersAttributes) ComplianceStatus() terra.SetValue[filtersComplianceStatusAttributes] {
	return terra.ReferenceAsSet[filtersComplianceStatusAttributes](f.ref.Append("compliance_status"))
}

func (f filtersAttributes) Confidence() terra.SetValue[filtersConfidenceAttributes] {
	return terra.ReferenceAsSet[filtersConfidenceAttributes](f.ref.Append("confidence"))
}

func (f filtersAttributes) CreatedAt() terra.SetValue[filtersCreatedAtAttributes] {
	return terra.ReferenceAsSet[filtersCreatedAtAttributes](f.ref.Append("created_at"))
}

func (f filtersAttributes) Criticality() terra.SetValue[filtersCriticalityAttributes] {
	return terra.ReferenceAsSet[filtersCriticalityAttributes](f.ref.Append("criticality"))
}

func (f filtersAttributes) Description() terra.SetValue[filtersDescriptionAttributes] {
	return terra.ReferenceAsSet[filtersDescriptionAttributes](f.ref.Append("description"))
}

func (f filtersAttributes) FindingProviderFieldsConfidence() terra.SetValue[filtersFindingProviderFieldsConfidenceAttributes] {
	return terra.ReferenceAsSet[filtersFindingProviderFieldsConfidenceAttributes](f.ref.Append("finding_provider_fields_confidence"))
}

func (f filtersAttributes) FindingProviderFieldsCriticality() terra.SetValue[filtersFindingProviderFieldsCriticalityAttributes] {
	return terra.ReferenceAsSet[filtersFindingProviderFieldsCriticalityAttributes](f.ref.Append("finding_provider_fields_criticality"))
}

func (f filtersAttributes) FindingProviderFieldsRelatedFindingsId() terra.SetValue[filtersFindingProviderFieldsRelatedFindingsIdAttributes] {
	return terra.ReferenceAsSet[filtersFindingProviderFieldsRelatedFindingsIdAttributes](f.ref.Append("finding_provider_fields_related_findings_id"))
}

func (f filtersAttributes) FindingProviderFieldsRelatedFindingsProductArn() terra.SetValue[filtersFindingProviderFieldsRelatedFindingsProductArnAttributes] {
	return terra.ReferenceAsSet[filtersFindingProviderFieldsRelatedFindingsProductArnAttributes](f.ref.Append("finding_provider_fields_related_findings_product_arn"))
}

func (f filtersAttributes) FindingProviderFieldsSeverityLabel() terra.SetValue[filtersFindingProviderFieldsSeverityLabelAttributes] {
	return terra.ReferenceAsSet[filtersFindingProviderFieldsSeverityLabelAttributes](f.ref.Append("finding_provider_fields_severity_label"))
}

func (f filtersAttributes) FindingProviderFieldsSeverityOriginal() terra.SetValue[filtersFindingProviderFieldsSeverityOriginalAttributes] {
	return terra.ReferenceAsSet[filtersFindingProviderFieldsSeverityOriginalAttributes](f.ref.Append("finding_provider_fields_severity_original"))
}

func (f filtersAttributes) FindingProviderFieldsTypes() terra.SetValue[filtersFindingProviderFieldsTypesAttributes] {
	return terra.ReferenceAsSet[filtersFindingProviderFieldsTypesAttributes](f.ref.Append("finding_provider_fields_types"))
}

func (f filtersAttributes) FirstObservedAt() terra.SetValue[filtersFirstObservedAtAttributes] {
	return terra.ReferenceAsSet[filtersFirstObservedAtAttributes](f.ref.Append("first_observed_at"))
}

func (f filtersAttributes) GeneratorId() terra.SetValue[filtersGeneratorIdAttributes] {
	return terra.ReferenceAsSet[filtersGeneratorIdAttributes](f.ref.Append("generator_id"))
}

func (f filtersAttributes) Id() terra.SetValue[filtersIdAttributes] {
	return terra.ReferenceAsSet[filtersIdAttributes](f.ref.Append("id"))
}

func (f filtersAttributes) Keyword() terra.SetValue[filtersKeywordAttributes] {
	return terra.ReferenceAsSet[filtersKeywordAttributes](f.ref.Append("keyword"))
}

func (f filtersAttributes) LastObservedAt() terra.SetValue[filtersLastObservedAtAttributes] {
	return terra.ReferenceAsSet[filtersLastObservedAtAttributes](f.ref.Append("last_observed_at"))
}

func (f filtersAttributes) MalwareName() terra.SetValue[filtersMalwareNameAttributes] {
	return terra.ReferenceAsSet[filtersMalwareNameAttributes](f.ref.Append("malware_name"))
}

func (f filtersAttributes) MalwarePath() terra.SetValue[filtersMalwarePathAttributes] {
	return terra.ReferenceAsSet[filtersMalwarePathAttributes](f.ref.Append("malware_path"))
}

func (f filtersAttributes) MalwareState() terra.SetValue[filtersMalwareStateAttributes] {
	return terra.ReferenceAsSet[filtersMalwareStateAttributes](f.ref.Append("malware_state"))
}

func (f filtersAttributes) MalwareType() terra.SetValue[filtersMalwareTypeAttributes] {
	return terra.ReferenceAsSet[filtersMalwareTypeAttributes](f.ref.Append("malware_type"))
}

func (f filtersAttributes) NetworkDestinationDomain() terra.SetValue[filtersNetworkDestinationDomainAttributes] {
	return terra.ReferenceAsSet[filtersNetworkDestinationDomainAttributes](f.ref.Append("network_destination_domain"))
}

func (f filtersAttributes) NetworkDestinationIpv4() terra.SetValue[filtersNetworkDestinationIpv4Attributes] {
	return terra.ReferenceAsSet[filtersNetworkDestinationIpv4Attributes](f.ref.Append("network_destination_ipv4"))
}

func (f filtersAttributes) NetworkDestinationIpv6() terra.SetValue[filtersNetworkDestinationIpv6Attributes] {
	return terra.ReferenceAsSet[filtersNetworkDestinationIpv6Attributes](f.ref.Append("network_destination_ipv6"))
}

func (f filtersAttributes) NetworkDestinationPort() terra.SetValue[filtersNetworkDestinationPortAttributes] {
	return terra.ReferenceAsSet[filtersNetworkDestinationPortAttributes](f.ref.Append("network_destination_port"))
}

func (f filtersAttributes) NetworkDirection() terra.SetValue[filtersNetworkDirectionAttributes] {
	return terra.ReferenceAsSet[filtersNetworkDirectionAttributes](f.ref.Append("network_direction"))
}

func (f filtersAttributes) NetworkProtocol() terra.SetValue[filtersNetworkProtocolAttributes] {
	return terra.ReferenceAsSet[filtersNetworkProtocolAttributes](f.ref.Append("network_protocol"))
}

func (f filtersAttributes) NetworkSourceDomain() terra.SetValue[filtersNetworkSourceDomainAttributes] {
	return terra.ReferenceAsSet[filtersNetworkSourceDomainAttributes](f.ref.Append("network_source_domain"))
}

func (f filtersAttributes) NetworkSourceIpv4() terra.SetValue[filtersNetworkSourceIpv4Attributes] {
	return terra.ReferenceAsSet[filtersNetworkSourceIpv4Attributes](f.ref.Append("network_source_ipv4"))
}

func (f filtersAttributes) NetworkSourceIpv6() terra.SetValue[filtersNetworkSourceIpv6Attributes] {
	return terra.ReferenceAsSet[filtersNetworkSourceIpv6Attributes](f.ref.Append("network_source_ipv6"))
}

func (f filtersAttributes) NetworkSourceMac() terra.SetValue[filtersNetworkSourceMacAttributes] {
	return terra.ReferenceAsSet[filtersNetworkSourceMacAttributes](f.ref.Append("network_source_mac"))
}

func (f filtersAttributes) NetworkSourcePort() terra.SetValue[filtersNetworkSourcePortAttributes] {
	return terra.ReferenceAsSet[filtersNetworkSourcePortAttributes](f.ref.Append("network_source_port"))
}

func (f filtersAttributes) NoteText() terra.SetValue[filtersNoteTextAttributes] {
	return terra.ReferenceAsSet[filtersNoteTextAttributes](f.ref.Append("note_text"))
}

func (f filtersAttributes) NoteUpdatedAt() terra.SetValue[filtersNoteUpdatedAtAttributes] {
	return terra.ReferenceAsSet[filtersNoteUpdatedAtAttributes](f.ref.Append("note_updated_at"))
}

func (f filtersAttributes) NoteUpdatedBy() terra.SetValue[filtersNoteUpdatedByAttributes] {
	return terra.ReferenceAsSet[filtersNoteUpdatedByAttributes](f.ref.Append("note_updated_by"))
}

func (f filtersAttributes) ProcessLaunchedAt() terra.SetValue[filtersProcessLaunchedAtAttributes] {
	return terra.ReferenceAsSet[filtersProcessLaunchedAtAttributes](f.ref.Append("process_launched_at"))
}

func (f filtersAttributes) ProcessName() terra.SetValue[filtersProcessNameAttributes] {
	return terra.ReferenceAsSet[filtersProcessNameAttributes](f.ref.Append("process_name"))
}

func (f filtersAttributes) ProcessParentPid() terra.SetValue[filtersProcessParentPidAttributes] {
	return terra.ReferenceAsSet[filtersProcessParentPidAttributes](f.ref.Append("process_parent_pid"))
}

func (f filtersAttributes) ProcessPath() terra.SetValue[filtersProcessPathAttributes] {
	return terra.ReferenceAsSet[filtersProcessPathAttributes](f.ref.Append("process_path"))
}

func (f filtersAttributes) ProcessPid() terra.SetValue[filtersProcessPidAttributes] {
	return terra.ReferenceAsSet[filtersProcessPidAttributes](f.ref.Append("process_pid"))
}

func (f filtersAttributes) ProcessTerminatedAt() terra.SetValue[filtersProcessTerminatedAtAttributes] {
	return terra.ReferenceAsSet[filtersProcessTerminatedAtAttributes](f.ref.Append("process_terminated_at"))
}

func (f filtersAttributes) ProductArn() terra.SetValue[filtersProductArnAttributes] {
	return terra.ReferenceAsSet[filtersProductArnAttributes](f.ref.Append("product_arn"))
}

func (f filtersAttributes) ProductFields() terra.SetValue[filtersProductFieldsAttributes] {
	return terra.ReferenceAsSet[filtersProductFieldsAttributes](f.ref.Append("product_fields"))
}

func (f filtersAttributes) ProductName() terra.SetValue[filtersProductNameAttributes] {
	return terra.ReferenceAsSet[filtersProductNameAttributes](f.ref.Append("product_name"))
}

func (f filtersAttributes) RecommendationText() terra.SetValue[filtersRecommendationTextAttributes] {
	return terra.ReferenceAsSet[filtersRecommendationTextAttributes](f.ref.Append("recommendation_text"))
}

func (f filtersAttributes) RecordState() terra.SetValue[filtersRecordStateAttributes] {
	return terra.ReferenceAsSet[filtersRecordStateAttributes](f.ref.Append("record_state"))
}

func (f filtersAttributes) RelatedFindingsId() terra.SetValue[filtersRelatedFindingsIdAttributes] {
	return terra.ReferenceAsSet[filtersRelatedFindingsIdAttributes](f.ref.Append("related_findings_id"))
}

func (f filtersAttributes) RelatedFindingsProductArn() terra.SetValue[filtersRelatedFindingsProductArnAttributes] {
	return terra.ReferenceAsSet[filtersRelatedFindingsProductArnAttributes](f.ref.Append("related_findings_product_arn"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceIamInstanceProfileArn() terra.SetValue[filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes](f.ref.Append("resource_aws_ec2_instance_iam_instance_profile_arn"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceImageId() terra.SetValue[filtersResourceAwsEc2InstanceImageIdAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceImageIdAttributes](f.ref.Append("resource_aws_ec2_instance_image_id"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceIpv4Addresses() terra.SetValue[filtersResourceAwsEc2InstanceIpv4AddressesAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceIpv4AddressesAttributes](f.ref.Append("resource_aws_ec2_instance_ipv4_addresses"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceIpv6Addresses() terra.SetValue[filtersResourceAwsEc2InstanceIpv6AddressesAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceIpv6AddressesAttributes](f.ref.Append("resource_aws_ec2_instance_ipv6_addresses"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceKeyName() terra.SetValue[filtersResourceAwsEc2InstanceKeyNameAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceKeyNameAttributes](f.ref.Append("resource_aws_ec2_instance_key_name"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceLaunchedAt() terra.SetValue[filtersResourceAwsEc2InstanceLaunchedAtAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceLaunchedAtAttributes](f.ref.Append("resource_aws_ec2_instance_launched_at"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceSubnetId() terra.SetValue[filtersResourceAwsEc2InstanceSubnetIdAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceSubnetIdAttributes](f.ref.Append("resource_aws_ec2_instance_subnet_id"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceType() terra.SetValue[filtersResourceAwsEc2InstanceTypeAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceTypeAttributes](f.ref.Append("resource_aws_ec2_instance_type"))
}

func (f filtersAttributes) ResourceAwsEc2InstanceVpcId() terra.SetValue[filtersResourceAwsEc2InstanceVpcIdAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsEc2InstanceVpcIdAttributes](f.ref.Append("resource_aws_ec2_instance_vpc_id"))
}

func (f filtersAttributes) ResourceAwsIamAccessKeyCreatedAt() terra.SetValue[filtersResourceAwsIamAccessKeyCreatedAtAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsIamAccessKeyCreatedAtAttributes](f.ref.Append("resource_aws_iam_access_key_created_at"))
}

func (f filtersAttributes) ResourceAwsIamAccessKeyStatus() terra.SetValue[filtersResourceAwsIamAccessKeyStatusAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsIamAccessKeyStatusAttributes](f.ref.Append("resource_aws_iam_access_key_status"))
}

func (f filtersAttributes) ResourceAwsIamAccessKeyUserName() terra.SetValue[filtersResourceAwsIamAccessKeyUserNameAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsIamAccessKeyUserNameAttributes](f.ref.Append("resource_aws_iam_access_key_user_name"))
}

func (f filtersAttributes) ResourceAwsS3BucketOwnerId() terra.SetValue[filtersResourceAwsS3BucketOwnerIdAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsS3BucketOwnerIdAttributes](f.ref.Append("resource_aws_s3_bucket_owner_id"))
}

func (f filtersAttributes) ResourceAwsS3BucketOwnerName() terra.SetValue[filtersResourceAwsS3BucketOwnerNameAttributes] {
	return terra.ReferenceAsSet[filtersResourceAwsS3BucketOwnerNameAttributes](f.ref.Append("resource_aws_s3_bucket_owner_name"))
}

func (f filtersAttributes) ResourceContainerImageId() terra.SetValue[filtersResourceContainerImageIdAttributes] {
	return terra.ReferenceAsSet[filtersResourceContainerImageIdAttributes](f.ref.Append("resource_container_image_id"))
}

func (f filtersAttributes) ResourceContainerImageName() terra.SetValue[filtersResourceContainerImageNameAttributes] {
	return terra.ReferenceAsSet[filtersResourceContainerImageNameAttributes](f.ref.Append("resource_container_image_name"))
}

func (f filtersAttributes) ResourceContainerLaunchedAt() terra.SetValue[filtersResourceContainerLaunchedAtAttributes] {
	return terra.ReferenceAsSet[filtersResourceContainerLaunchedAtAttributes](f.ref.Append("resource_container_launched_at"))
}

func (f filtersAttributes) ResourceContainerName() terra.SetValue[filtersResourceContainerNameAttributes] {
	return terra.ReferenceAsSet[filtersResourceContainerNameAttributes](f.ref.Append("resource_container_name"))
}

func (f filtersAttributes) ResourceDetailsOther() terra.SetValue[filtersResourceDetailsOtherAttributes] {
	return terra.ReferenceAsSet[filtersResourceDetailsOtherAttributes](f.ref.Append("resource_details_other"))
}

func (f filtersAttributes) ResourceId() terra.SetValue[filtersResourceIdAttributes] {
	return terra.ReferenceAsSet[filtersResourceIdAttributes](f.ref.Append("resource_id"))
}

func (f filtersAttributes) ResourcePartition() terra.SetValue[filtersResourcePartitionAttributes] {
	return terra.ReferenceAsSet[filtersResourcePartitionAttributes](f.ref.Append("resource_partition"))
}

func (f filtersAttributes) ResourceRegion() terra.SetValue[filtersResourceRegionAttributes] {
	return terra.ReferenceAsSet[filtersResourceRegionAttributes](f.ref.Append("resource_region"))
}

func (f filtersAttributes) ResourceTags() terra.SetValue[filtersResourceTagsAttributes] {
	return terra.ReferenceAsSet[filtersResourceTagsAttributes](f.ref.Append("resource_tags"))
}

func (f filtersAttributes) ResourceType() terra.SetValue[filtersResourceTypeAttributes] {
	return terra.ReferenceAsSet[filtersResourceTypeAttributes](f.ref.Append("resource_type"))
}

func (f filtersAttributes) SeverityLabel() terra.SetValue[filtersSeverityLabelAttributes] {
	return terra.ReferenceAsSet[filtersSeverityLabelAttributes](f.ref.Append("severity_label"))
}

func (f filtersAttributes) SourceUrl() terra.SetValue[filtersSourceUrlAttributes] {
	return terra.ReferenceAsSet[filtersSourceUrlAttributes](f.ref.Append("source_url"))
}

func (f filtersAttributes) ThreatIntelIndicatorCategory() terra.SetValue[filtersThreatIntelIndicatorCategoryAttributes] {
	return terra.ReferenceAsSet[filtersThreatIntelIndicatorCategoryAttributes](f.ref.Append("threat_intel_indicator_category"))
}

func (f filtersAttributes) ThreatIntelIndicatorLastObservedAt() terra.SetValue[filtersThreatIntelIndicatorLastObservedAtAttributes] {
	return terra.ReferenceAsSet[filtersThreatIntelIndicatorLastObservedAtAttributes](f.ref.Append("threat_intel_indicator_last_observed_at"))
}

func (f filtersAttributes) ThreatIntelIndicatorSource() terra.SetValue[filtersThreatIntelIndicatorSourceAttributes] {
	return terra.ReferenceAsSet[filtersThreatIntelIndicatorSourceAttributes](f.ref.Append("threat_intel_indicator_source"))
}

func (f filtersAttributes) ThreatIntelIndicatorSourceUrl() terra.SetValue[filtersThreatIntelIndicatorSourceUrlAttributes] {
	return terra.ReferenceAsSet[filtersThreatIntelIndicatorSourceUrlAttributes](f.ref.Append("threat_intel_indicator_source_url"))
}

func (f filtersAttributes) ThreatIntelIndicatorType() terra.SetValue[filtersThreatIntelIndicatorTypeAttributes] {
	return terra.ReferenceAsSet[filtersThreatIntelIndicatorTypeAttributes](f.ref.Append("threat_intel_indicator_type"))
}

func (f filtersAttributes) ThreatIntelIndicatorValue() terra.SetValue[filtersThreatIntelIndicatorValueAttributes] {
	return terra.ReferenceAsSet[filtersThreatIntelIndicatorValueAttributes](f.ref.Append("threat_intel_indicator_value"))
}

func (f filtersAttributes) Title() terra.SetValue[filtersTitleAttributes] {
	return terra.ReferenceAsSet[filtersTitleAttributes](f.ref.Append("title"))
}

func (f filtersAttributes) Type() terra.SetValue[filtersTypeAttributes] {
	return terra.ReferenceAsSet[filtersTypeAttributes](f.ref.Append("type"))
}

func (f filtersAttributes) UpdatedAt() terra.SetValue[filtersUpdatedAtAttributes] {
	return terra.ReferenceAsSet[filtersUpdatedAtAttributes](f.ref.Append("updated_at"))
}

func (f filtersAttributes) UserDefinedValues() terra.SetValue[filtersUserDefinedValuesAttributes] {
	return terra.ReferenceAsSet[filtersUserDefinedValuesAttributes](f.ref.Append("user_defined_values"))
}

func (f filtersAttributes) VerificationState() terra.SetValue[filtersVerificationStateAttributes] {
	return terra.ReferenceAsSet[filtersVerificationStateAttributes](f.ref.Append("verification_state"))
}

func (f filtersAttributes) WorkflowStatus() terra.SetValue[filtersWorkflowStatusAttributes] {
	return terra.ReferenceAsSet[filtersWorkflowStatusAttributes](f.ref.Append("workflow_status"))
}

type filtersAwsAccountIdAttributes struct {
	ref terra.Reference
}

func (aai filtersAwsAccountIdAttributes) InternalRef() (terra.Reference, error) {
	return aai.ref, nil
}

func (aai filtersAwsAccountIdAttributes) InternalWithRef(ref terra.Reference) filtersAwsAccountIdAttributes {
	return filtersAwsAccountIdAttributes{ref: ref}
}

func (aai filtersAwsAccountIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aai.ref.InternalTokens()
}

func (aai filtersAwsAccountIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("comparison"))
}

func (aai filtersAwsAccountIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("value"))
}

type filtersCompanyNameAttributes struct {
	ref terra.Reference
}

func (cn filtersCompanyNameAttributes) InternalRef() (terra.Reference, error) {
	return cn.ref, nil
}

func (cn filtersCompanyNameAttributes) InternalWithRef(ref terra.Reference) filtersCompanyNameAttributes {
	return filtersCompanyNameAttributes{ref: ref}
}

func (cn filtersCompanyNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cn.ref.InternalTokens()
}

func (cn filtersCompanyNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(cn.ref.Append("comparison"))
}

func (cn filtersCompanyNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(cn.ref.Append("value"))
}

type filtersComplianceStatusAttributes struct {
	ref terra.Reference
}

func (cs filtersComplianceStatusAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs filtersComplianceStatusAttributes) InternalWithRef(ref terra.Reference) filtersComplianceStatusAttributes {
	return filtersComplianceStatusAttributes{ref: ref}
}

func (cs filtersComplianceStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs filtersComplianceStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("comparison"))
}

func (cs filtersComplianceStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("value"))
}

type filtersConfidenceAttributes struct {
	ref terra.Reference
}

func (c filtersConfidenceAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c filtersConfidenceAttributes) InternalWithRef(ref terra.Reference) filtersConfidenceAttributes {
	return filtersConfidenceAttributes{ref: ref}
}

func (c filtersConfidenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c filtersConfidenceAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("eq"))
}

func (c filtersConfidenceAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("gte"))
}

func (c filtersConfidenceAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("lte"))
}

type filtersCreatedAtAttributes struct {
	ref terra.Reference
}

func (ca filtersCreatedAtAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca filtersCreatedAtAttributes) InternalWithRef(ref terra.Reference) filtersCreatedAtAttributes {
	return filtersCreatedAtAttributes{ref: ref}
}

func (ca filtersCreatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca filtersCreatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("end"))
}

func (ca filtersCreatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("start"))
}

func (ca filtersCreatedAtAttributes) DateRange() terra.ListValue[filtersCreatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersCreatedAtDateRangeAttributes](ca.ref.Append("date_range"))
}

type filtersCreatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersCreatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersCreatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersCreatedAtDateRangeAttributes {
	return filtersCreatedAtDateRangeAttributes{ref: ref}
}

func (dr filtersCreatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersCreatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersCreatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersCriticalityAttributes struct {
	ref terra.Reference
}

func (c filtersCriticalityAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c filtersCriticalityAttributes) InternalWithRef(ref terra.Reference) filtersCriticalityAttributes {
	return filtersCriticalityAttributes{ref: ref}
}

func (c filtersCriticalityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c filtersCriticalityAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("eq"))
}

func (c filtersCriticalityAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("gte"))
}

func (c filtersCriticalityAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("lte"))
}

type filtersDescriptionAttributes struct {
	ref terra.Reference
}

func (d filtersDescriptionAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d filtersDescriptionAttributes) InternalWithRef(ref terra.Reference) filtersDescriptionAttributes {
	return filtersDescriptionAttributes{ref: ref}
}

func (d filtersDescriptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d filtersDescriptionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("comparison"))
}

func (d filtersDescriptionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type filtersFindingProviderFieldsConfidenceAttributes struct {
	ref terra.Reference
}

func (fpfc filtersFindingProviderFieldsConfidenceAttributes) InternalRef() (terra.Reference, error) {
	return fpfc.ref, nil
}

func (fpfc filtersFindingProviderFieldsConfidenceAttributes) InternalWithRef(ref terra.Reference) filtersFindingProviderFieldsConfidenceAttributes {
	return filtersFindingProviderFieldsConfidenceAttributes{ref: ref}
}

func (fpfc filtersFindingProviderFieldsConfidenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfc.ref.InternalTokens()
}

func (fpfc filtersFindingProviderFieldsConfidenceAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("eq"))
}

func (fpfc filtersFindingProviderFieldsConfidenceAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("gte"))
}

func (fpfc filtersFindingProviderFieldsConfidenceAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("lte"))
}

type filtersFindingProviderFieldsCriticalityAttributes struct {
	ref terra.Reference
}

func (fpfc filtersFindingProviderFieldsCriticalityAttributes) InternalRef() (terra.Reference, error) {
	return fpfc.ref, nil
}

func (fpfc filtersFindingProviderFieldsCriticalityAttributes) InternalWithRef(ref terra.Reference) filtersFindingProviderFieldsCriticalityAttributes {
	return filtersFindingProviderFieldsCriticalityAttributes{ref: ref}
}

func (fpfc filtersFindingProviderFieldsCriticalityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfc.ref.InternalTokens()
}

func (fpfc filtersFindingProviderFieldsCriticalityAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("eq"))
}

func (fpfc filtersFindingProviderFieldsCriticalityAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("gte"))
}

func (fpfc filtersFindingProviderFieldsCriticalityAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(fpfc.ref.Append("lte"))
}

type filtersFindingProviderFieldsRelatedFindingsIdAttributes struct {
	ref terra.Reference
}

func (fpfrfi filtersFindingProviderFieldsRelatedFindingsIdAttributes) InternalRef() (terra.Reference, error) {
	return fpfrfi.ref, nil
}

func (fpfrfi filtersFindingProviderFieldsRelatedFindingsIdAttributes) InternalWithRef(ref terra.Reference) filtersFindingProviderFieldsRelatedFindingsIdAttributes {
	return filtersFindingProviderFieldsRelatedFindingsIdAttributes{ref: ref}
}

func (fpfrfi filtersFindingProviderFieldsRelatedFindingsIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfrfi.ref.InternalTokens()
}

func (fpfrfi filtersFindingProviderFieldsRelatedFindingsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfrfi.ref.Append("comparison"))
}

func (fpfrfi filtersFindingProviderFieldsRelatedFindingsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfrfi.ref.Append("value"))
}

type filtersFindingProviderFieldsRelatedFindingsProductArnAttributes struct {
	ref terra.Reference
}

func (fpfrfpa filtersFindingProviderFieldsRelatedFindingsProductArnAttributes) InternalRef() (terra.Reference, error) {
	return fpfrfpa.ref, nil
}

func (fpfrfpa filtersFindingProviderFieldsRelatedFindingsProductArnAttributes) InternalWithRef(ref terra.Reference) filtersFindingProviderFieldsRelatedFindingsProductArnAttributes {
	return filtersFindingProviderFieldsRelatedFindingsProductArnAttributes{ref: ref}
}

func (fpfrfpa filtersFindingProviderFieldsRelatedFindingsProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfrfpa.ref.InternalTokens()
}

func (fpfrfpa filtersFindingProviderFieldsRelatedFindingsProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfrfpa.ref.Append("comparison"))
}

func (fpfrfpa filtersFindingProviderFieldsRelatedFindingsProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfrfpa.ref.Append("value"))
}

type filtersFindingProviderFieldsSeverityLabelAttributes struct {
	ref terra.Reference
}

func (fpfsl filtersFindingProviderFieldsSeverityLabelAttributes) InternalRef() (terra.Reference, error) {
	return fpfsl.ref, nil
}

func (fpfsl filtersFindingProviderFieldsSeverityLabelAttributes) InternalWithRef(ref terra.Reference) filtersFindingProviderFieldsSeverityLabelAttributes {
	return filtersFindingProviderFieldsSeverityLabelAttributes{ref: ref}
}

func (fpfsl filtersFindingProviderFieldsSeverityLabelAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfsl.ref.InternalTokens()
}

func (fpfsl filtersFindingProviderFieldsSeverityLabelAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfsl.ref.Append("comparison"))
}

func (fpfsl filtersFindingProviderFieldsSeverityLabelAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfsl.ref.Append("value"))
}

type filtersFindingProviderFieldsSeverityOriginalAttributes struct {
	ref terra.Reference
}

func (fpfso filtersFindingProviderFieldsSeverityOriginalAttributes) InternalRef() (terra.Reference, error) {
	return fpfso.ref, nil
}

func (fpfso filtersFindingProviderFieldsSeverityOriginalAttributes) InternalWithRef(ref terra.Reference) filtersFindingProviderFieldsSeverityOriginalAttributes {
	return filtersFindingProviderFieldsSeverityOriginalAttributes{ref: ref}
}

func (fpfso filtersFindingProviderFieldsSeverityOriginalAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpfso.ref.InternalTokens()
}

func (fpfso filtersFindingProviderFieldsSeverityOriginalAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpfso.ref.Append("comparison"))
}

func (fpfso filtersFindingProviderFieldsSeverityOriginalAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpfso.ref.Append("value"))
}

type filtersFindingProviderFieldsTypesAttributes struct {
	ref terra.Reference
}

func (fpft filtersFindingProviderFieldsTypesAttributes) InternalRef() (terra.Reference, error) {
	return fpft.ref, nil
}

func (fpft filtersFindingProviderFieldsTypesAttributes) InternalWithRef(ref terra.Reference) filtersFindingProviderFieldsTypesAttributes {
	return filtersFindingProviderFieldsTypesAttributes{ref: ref}
}

func (fpft filtersFindingProviderFieldsTypesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpft.ref.InternalTokens()
}

func (fpft filtersFindingProviderFieldsTypesAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(fpft.ref.Append("comparison"))
}

func (fpft filtersFindingProviderFieldsTypesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(fpft.ref.Append("value"))
}

type filtersFirstObservedAtAttributes struct {
	ref terra.Reference
}

func (foa filtersFirstObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return foa.ref, nil
}

func (foa filtersFirstObservedAtAttributes) InternalWithRef(ref terra.Reference) filtersFirstObservedAtAttributes {
	return filtersFirstObservedAtAttributes{ref: ref}
}

func (foa filtersFirstObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return foa.ref.InternalTokens()
}

func (foa filtersFirstObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(foa.ref.Append("end"))
}

func (foa filtersFirstObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(foa.ref.Append("start"))
}

func (foa filtersFirstObservedAtAttributes) DateRange() terra.ListValue[filtersFirstObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersFirstObservedAtDateRangeAttributes](foa.ref.Append("date_range"))
}

type filtersFirstObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersFirstObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersFirstObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersFirstObservedAtDateRangeAttributes {
	return filtersFirstObservedAtDateRangeAttributes{ref: ref}
}

func (dr filtersFirstObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersFirstObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersFirstObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersGeneratorIdAttributes struct {
	ref terra.Reference
}

func (gi filtersGeneratorIdAttributes) InternalRef() (terra.Reference, error) {
	return gi.ref, nil
}

func (gi filtersGeneratorIdAttributes) InternalWithRef(ref terra.Reference) filtersGeneratorIdAttributes {
	return filtersGeneratorIdAttributes{ref: ref}
}

func (gi filtersGeneratorIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gi.ref.InternalTokens()
}

func (gi filtersGeneratorIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(gi.ref.Append("comparison"))
}

func (gi filtersGeneratorIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(gi.ref.Append("value"))
}

type filtersIdAttributes struct {
	ref terra.Reference
}

func (i filtersIdAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i filtersIdAttributes) InternalWithRef(ref terra.Reference) filtersIdAttributes {
	return filtersIdAttributes{ref: ref}
}

func (i filtersIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i filtersIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("comparison"))
}

func (i filtersIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("value"))
}

type filtersKeywordAttributes struct {
	ref terra.Reference
}

func (k filtersKeywordAttributes) InternalRef() (terra.Reference, error) {
	return k.ref, nil
}

func (k filtersKeywordAttributes) InternalWithRef(ref terra.Reference) filtersKeywordAttributes {
	return filtersKeywordAttributes{ref: ref}
}

func (k filtersKeywordAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return k.ref.InternalTokens()
}

func (k filtersKeywordAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(k.ref.Append("value"))
}

type filtersLastObservedAtAttributes struct {
	ref terra.Reference
}

func (loa filtersLastObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return loa.ref, nil
}

func (loa filtersLastObservedAtAttributes) InternalWithRef(ref terra.Reference) filtersLastObservedAtAttributes {
	return filtersLastObservedAtAttributes{ref: ref}
}

func (loa filtersLastObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return loa.ref.InternalTokens()
}

func (loa filtersLastObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(loa.ref.Append("end"))
}

func (loa filtersLastObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(loa.ref.Append("start"))
}

func (loa filtersLastObservedAtAttributes) DateRange() terra.ListValue[filtersLastObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersLastObservedAtDateRangeAttributes](loa.ref.Append("date_range"))
}

type filtersLastObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersLastObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersLastObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersLastObservedAtDateRangeAttributes {
	return filtersLastObservedAtDateRangeAttributes{ref: ref}
}

func (dr filtersLastObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersLastObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersLastObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersMalwareNameAttributes struct {
	ref terra.Reference
}

func (mn filtersMalwareNameAttributes) InternalRef() (terra.Reference, error) {
	return mn.ref, nil
}

func (mn filtersMalwareNameAttributes) InternalWithRef(ref terra.Reference) filtersMalwareNameAttributes {
	return filtersMalwareNameAttributes{ref: ref}
}

func (mn filtersMalwareNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mn.ref.InternalTokens()
}

func (mn filtersMalwareNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(mn.ref.Append("comparison"))
}

func (mn filtersMalwareNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mn.ref.Append("value"))
}

type filtersMalwarePathAttributes struct {
	ref terra.Reference
}

func (mp filtersMalwarePathAttributes) InternalRef() (terra.Reference, error) {
	return mp.ref, nil
}

func (mp filtersMalwarePathAttributes) InternalWithRef(ref terra.Reference) filtersMalwarePathAttributes {
	return filtersMalwarePathAttributes{ref: ref}
}

func (mp filtersMalwarePathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mp.ref.InternalTokens()
}

func (mp filtersMalwarePathAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(mp.ref.Append("comparison"))
}

func (mp filtersMalwarePathAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mp.ref.Append("value"))
}

type filtersMalwareStateAttributes struct {
	ref terra.Reference
}

func (ms filtersMalwareStateAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms filtersMalwareStateAttributes) InternalWithRef(ref terra.Reference) filtersMalwareStateAttributes {
	return filtersMalwareStateAttributes{ref: ref}
}

func (ms filtersMalwareStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms filtersMalwareStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("comparison"))
}

func (ms filtersMalwareStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("value"))
}

type filtersMalwareTypeAttributes struct {
	ref terra.Reference
}

func (mt filtersMalwareTypeAttributes) InternalRef() (terra.Reference, error) {
	return mt.ref, nil
}

func (mt filtersMalwareTypeAttributes) InternalWithRef(ref terra.Reference) filtersMalwareTypeAttributes {
	return filtersMalwareTypeAttributes{ref: ref}
}

func (mt filtersMalwareTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mt.ref.InternalTokens()
}

func (mt filtersMalwareTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("comparison"))
}

func (mt filtersMalwareTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(mt.ref.Append("value"))
}

type filtersNetworkDestinationDomainAttributes struct {
	ref terra.Reference
}

func (ndd filtersNetworkDestinationDomainAttributes) InternalRef() (terra.Reference, error) {
	return ndd.ref, nil
}

func (ndd filtersNetworkDestinationDomainAttributes) InternalWithRef(ref terra.Reference) filtersNetworkDestinationDomainAttributes {
	return filtersNetworkDestinationDomainAttributes{ref: ref}
}

func (ndd filtersNetworkDestinationDomainAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndd.ref.InternalTokens()
}

func (ndd filtersNetworkDestinationDomainAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ndd.ref.Append("comparison"))
}

func (ndd filtersNetworkDestinationDomainAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ndd.ref.Append("value"))
}

type filtersNetworkDestinationIpv4Attributes struct {
	ref terra.Reference
}

func (ndi filtersNetworkDestinationIpv4Attributes) InternalRef() (terra.Reference, error) {
	return ndi.ref, nil
}

func (ndi filtersNetworkDestinationIpv4Attributes) InternalWithRef(ref terra.Reference) filtersNetworkDestinationIpv4Attributes {
	return filtersNetworkDestinationIpv4Attributes{ref: ref}
}

func (ndi filtersNetworkDestinationIpv4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndi.ref.InternalTokens()
}

func (ndi filtersNetworkDestinationIpv4Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ndi.ref.Append("cidr"))
}

type filtersNetworkDestinationIpv6Attributes struct {
	ref terra.Reference
}

func (ndi filtersNetworkDestinationIpv6Attributes) InternalRef() (terra.Reference, error) {
	return ndi.ref, nil
}

func (ndi filtersNetworkDestinationIpv6Attributes) InternalWithRef(ref terra.Reference) filtersNetworkDestinationIpv6Attributes {
	return filtersNetworkDestinationIpv6Attributes{ref: ref}
}

func (ndi filtersNetworkDestinationIpv6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndi.ref.InternalTokens()
}

func (ndi filtersNetworkDestinationIpv6Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ndi.ref.Append("cidr"))
}

type filtersNetworkDestinationPortAttributes struct {
	ref terra.Reference
}

func (ndp filtersNetworkDestinationPortAttributes) InternalRef() (terra.Reference, error) {
	return ndp.ref, nil
}

func (ndp filtersNetworkDestinationPortAttributes) InternalWithRef(ref terra.Reference) filtersNetworkDestinationPortAttributes {
	return filtersNetworkDestinationPortAttributes{ref: ref}
}

func (ndp filtersNetworkDestinationPortAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ndp.ref.InternalTokens()
}

func (ndp filtersNetworkDestinationPortAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(ndp.ref.Append("eq"))
}

func (ndp filtersNetworkDestinationPortAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(ndp.ref.Append("gte"))
}

func (ndp filtersNetworkDestinationPortAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(ndp.ref.Append("lte"))
}

type filtersNetworkDirectionAttributes struct {
	ref terra.Reference
}

func (nd filtersNetworkDirectionAttributes) InternalRef() (terra.Reference, error) {
	return nd.ref, nil
}

func (nd filtersNetworkDirectionAttributes) InternalWithRef(ref terra.Reference) filtersNetworkDirectionAttributes {
	return filtersNetworkDirectionAttributes{ref: ref}
}

func (nd filtersNetworkDirectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nd.ref.InternalTokens()
}

func (nd filtersNetworkDirectionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nd.ref.Append("comparison"))
}

func (nd filtersNetworkDirectionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nd.ref.Append("value"))
}

type filtersNetworkProtocolAttributes struct {
	ref terra.Reference
}

func (np filtersNetworkProtocolAttributes) InternalRef() (terra.Reference, error) {
	return np.ref, nil
}

func (np filtersNetworkProtocolAttributes) InternalWithRef(ref terra.Reference) filtersNetworkProtocolAttributes {
	return filtersNetworkProtocolAttributes{ref: ref}
}

func (np filtersNetworkProtocolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return np.ref.InternalTokens()
}

func (np filtersNetworkProtocolAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("comparison"))
}

func (np filtersNetworkProtocolAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(np.ref.Append("value"))
}

type filtersNetworkSourceDomainAttributes struct {
	ref terra.Reference
}

func (nsd filtersNetworkSourceDomainAttributes) InternalRef() (terra.Reference, error) {
	return nsd.ref, nil
}

func (nsd filtersNetworkSourceDomainAttributes) InternalWithRef(ref terra.Reference) filtersNetworkSourceDomainAttributes {
	return filtersNetworkSourceDomainAttributes{ref: ref}
}

func (nsd filtersNetworkSourceDomainAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsd.ref.InternalTokens()
}

func (nsd filtersNetworkSourceDomainAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nsd.ref.Append("comparison"))
}

func (nsd filtersNetworkSourceDomainAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nsd.ref.Append("value"))
}

type filtersNetworkSourceIpv4Attributes struct {
	ref terra.Reference
}

func (nsi filtersNetworkSourceIpv4Attributes) InternalRef() (terra.Reference, error) {
	return nsi.ref, nil
}

func (nsi filtersNetworkSourceIpv4Attributes) InternalWithRef(ref terra.Reference) filtersNetworkSourceIpv4Attributes {
	return filtersNetworkSourceIpv4Attributes{ref: ref}
}

func (nsi filtersNetworkSourceIpv4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsi.ref.InternalTokens()
}

func (nsi filtersNetworkSourceIpv4Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(nsi.ref.Append("cidr"))
}

type filtersNetworkSourceIpv6Attributes struct {
	ref terra.Reference
}

func (nsi filtersNetworkSourceIpv6Attributes) InternalRef() (terra.Reference, error) {
	return nsi.ref, nil
}

func (nsi filtersNetworkSourceIpv6Attributes) InternalWithRef(ref terra.Reference) filtersNetworkSourceIpv6Attributes {
	return filtersNetworkSourceIpv6Attributes{ref: ref}
}

func (nsi filtersNetworkSourceIpv6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsi.ref.InternalTokens()
}

func (nsi filtersNetworkSourceIpv6Attributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(nsi.ref.Append("cidr"))
}

type filtersNetworkSourceMacAttributes struct {
	ref terra.Reference
}

func (nsm filtersNetworkSourceMacAttributes) InternalRef() (terra.Reference, error) {
	return nsm.ref, nil
}

func (nsm filtersNetworkSourceMacAttributes) InternalWithRef(ref terra.Reference) filtersNetworkSourceMacAttributes {
	return filtersNetworkSourceMacAttributes{ref: ref}
}

func (nsm filtersNetworkSourceMacAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsm.ref.InternalTokens()
}

func (nsm filtersNetworkSourceMacAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nsm.ref.Append("comparison"))
}

func (nsm filtersNetworkSourceMacAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nsm.ref.Append("value"))
}

type filtersNetworkSourcePortAttributes struct {
	ref terra.Reference
}

func (nsp filtersNetworkSourcePortAttributes) InternalRef() (terra.Reference, error) {
	return nsp.ref, nil
}

func (nsp filtersNetworkSourcePortAttributes) InternalWithRef(ref terra.Reference) filtersNetworkSourcePortAttributes {
	return filtersNetworkSourcePortAttributes{ref: ref}
}

func (nsp filtersNetworkSourcePortAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nsp.ref.InternalTokens()
}

func (nsp filtersNetworkSourcePortAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(nsp.ref.Append("eq"))
}

func (nsp filtersNetworkSourcePortAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(nsp.ref.Append("gte"))
}

func (nsp filtersNetworkSourcePortAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(nsp.ref.Append("lte"))
}

type filtersNoteTextAttributes struct {
	ref terra.Reference
}

func (nt filtersNoteTextAttributes) InternalRef() (terra.Reference, error) {
	return nt.ref, nil
}

func (nt filtersNoteTextAttributes) InternalWithRef(ref terra.Reference) filtersNoteTextAttributes {
	return filtersNoteTextAttributes{ref: ref}
}

func (nt filtersNoteTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nt.ref.InternalTokens()
}

func (nt filtersNoteTextAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nt.ref.Append("comparison"))
}

func (nt filtersNoteTextAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nt.ref.Append("value"))
}

type filtersNoteUpdatedAtAttributes struct {
	ref terra.Reference
}

func (nua filtersNoteUpdatedAtAttributes) InternalRef() (terra.Reference, error) {
	return nua.ref, nil
}

func (nua filtersNoteUpdatedAtAttributes) InternalWithRef(ref terra.Reference) filtersNoteUpdatedAtAttributes {
	return filtersNoteUpdatedAtAttributes{ref: ref}
}

func (nua filtersNoteUpdatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nua.ref.InternalTokens()
}

func (nua filtersNoteUpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(nua.ref.Append("end"))
}

func (nua filtersNoteUpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(nua.ref.Append("start"))
}

func (nua filtersNoteUpdatedAtAttributes) DateRange() terra.ListValue[filtersNoteUpdatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersNoteUpdatedAtDateRangeAttributes](nua.ref.Append("date_range"))
}

type filtersNoteUpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersNoteUpdatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersNoteUpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersNoteUpdatedAtDateRangeAttributes {
	return filtersNoteUpdatedAtDateRangeAttributes{ref: ref}
}

func (dr filtersNoteUpdatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersNoteUpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersNoteUpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersNoteUpdatedByAttributes struct {
	ref terra.Reference
}

func (nub filtersNoteUpdatedByAttributes) InternalRef() (terra.Reference, error) {
	return nub.ref, nil
}

func (nub filtersNoteUpdatedByAttributes) InternalWithRef(ref terra.Reference) filtersNoteUpdatedByAttributes {
	return filtersNoteUpdatedByAttributes{ref: ref}
}

func (nub filtersNoteUpdatedByAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nub.ref.InternalTokens()
}

func (nub filtersNoteUpdatedByAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(nub.ref.Append("comparison"))
}

func (nub filtersNoteUpdatedByAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(nub.ref.Append("value"))
}

type filtersProcessLaunchedAtAttributes struct {
	ref terra.Reference
}

func (pla filtersProcessLaunchedAtAttributes) InternalRef() (terra.Reference, error) {
	return pla.ref, nil
}

func (pla filtersProcessLaunchedAtAttributes) InternalWithRef(ref terra.Reference) filtersProcessLaunchedAtAttributes {
	return filtersProcessLaunchedAtAttributes{ref: ref}
}

func (pla filtersProcessLaunchedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pla.ref.InternalTokens()
}

func (pla filtersProcessLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(pla.ref.Append("end"))
}

func (pla filtersProcessLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(pla.ref.Append("start"))
}

func (pla filtersProcessLaunchedAtAttributes) DateRange() terra.ListValue[filtersProcessLaunchedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersProcessLaunchedAtDateRangeAttributes](pla.ref.Append("date_range"))
}

type filtersProcessLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersProcessLaunchedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersProcessLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersProcessLaunchedAtDateRangeAttributes {
	return filtersProcessLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr filtersProcessLaunchedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersProcessLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersProcessLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersProcessNameAttributes struct {
	ref terra.Reference
}

func (pn filtersProcessNameAttributes) InternalRef() (terra.Reference, error) {
	return pn.ref, nil
}

func (pn filtersProcessNameAttributes) InternalWithRef(ref terra.Reference) filtersProcessNameAttributes {
	return filtersProcessNameAttributes{ref: ref}
}

func (pn filtersProcessNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pn.ref.InternalTokens()
}

func (pn filtersProcessNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("comparison"))
}

func (pn filtersProcessNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("value"))
}

type filtersProcessParentPidAttributes struct {
	ref terra.Reference
}

func (ppp filtersProcessParentPidAttributes) InternalRef() (terra.Reference, error) {
	return ppp.ref, nil
}

func (ppp filtersProcessParentPidAttributes) InternalWithRef(ref terra.Reference) filtersProcessParentPidAttributes {
	return filtersProcessParentPidAttributes{ref: ref}
}

func (ppp filtersProcessParentPidAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ppp.ref.InternalTokens()
}

func (ppp filtersProcessParentPidAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(ppp.ref.Append("eq"))
}

func (ppp filtersProcessParentPidAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(ppp.ref.Append("gte"))
}

func (ppp filtersProcessParentPidAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(ppp.ref.Append("lte"))
}

type filtersProcessPathAttributes struct {
	ref terra.Reference
}

func (pp filtersProcessPathAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp filtersProcessPathAttributes) InternalWithRef(ref terra.Reference) filtersProcessPathAttributes {
	return filtersProcessPathAttributes{ref: ref}
}

func (pp filtersProcessPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp filtersProcessPathAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("comparison"))
}

func (pp filtersProcessPathAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("value"))
}

type filtersProcessPidAttributes struct {
	ref terra.Reference
}

func (pp filtersProcessPidAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp filtersProcessPidAttributes) InternalWithRef(ref terra.Reference) filtersProcessPidAttributes {
	return filtersProcessPidAttributes{ref: ref}
}

func (pp filtersProcessPidAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp filtersProcessPidAttributes) Eq() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("eq"))
}

func (pp filtersProcessPidAttributes) Gte() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("gte"))
}

func (pp filtersProcessPidAttributes) Lte() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("lte"))
}

type filtersProcessTerminatedAtAttributes struct {
	ref terra.Reference
}

func (pta filtersProcessTerminatedAtAttributes) InternalRef() (terra.Reference, error) {
	return pta.ref, nil
}

func (pta filtersProcessTerminatedAtAttributes) InternalWithRef(ref terra.Reference) filtersProcessTerminatedAtAttributes {
	return filtersProcessTerminatedAtAttributes{ref: ref}
}

func (pta filtersProcessTerminatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pta.ref.InternalTokens()
}

func (pta filtersProcessTerminatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(pta.ref.Append("end"))
}

func (pta filtersProcessTerminatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(pta.ref.Append("start"))
}

func (pta filtersProcessTerminatedAtAttributes) DateRange() terra.ListValue[filtersProcessTerminatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersProcessTerminatedAtDateRangeAttributes](pta.ref.Append("date_range"))
}

type filtersProcessTerminatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersProcessTerminatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersProcessTerminatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersProcessTerminatedAtDateRangeAttributes {
	return filtersProcessTerminatedAtDateRangeAttributes{ref: ref}
}

func (dr filtersProcessTerminatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersProcessTerminatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersProcessTerminatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersProductArnAttributes struct {
	ref terra.Reference
}

func (pa filtersProductArnAttributes) InternalRef() (terra.Reference, error) {
	return pa.ref, nil
}

func (pa filtersProductArnAttributes) InternalWithRef(ref terra.Reference) filtersProductArnAttributes {
	return filtersProductArnAttributes{ref: ref}
}

func (pa filtersProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pa.ref.InternalTokens()
}

func (pa filtersProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("comparison"))
}

func (pa filtersProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pa.ref.Append("value"))
}

type filtersProductFieldsAttributes struct {
	ref terra.Reference
}

func (pf filtersProductFieldsAttributes) InternalRef() (terra.Reference, error) {
	return pf.ref, nil
}

func (pf filtersProductFieldsAttributes) InternalWithRef(ref terra.Reference) filtersProductFieldsAttributes {
	return filtersProductFieldsAttributes{ref: ref}
}

func (pf filtersProductFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pf.ref.InternalTokens()
}

func (pf filtersProductFieldsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("comparison"))
}

func (pf filtersProductFieldsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("key"))
}

func (pf filtersProductFieldsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pf.ref.Append("value"))
}

type filtersProductNameAttributes struct {
	ref terra.Reference
}

func (pn filtersProductNameAttributes) InternalRef() (terra.Reference, error) {
	return pn.ref, nil
}

func (pn filtersProductNameAttributes) InternalWithRef(ref terra.Reference) filtersProductNameAttributes {
	return filtersProductNameAttributes{ref: ref}
}

func (pn filtersProductNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pn.ref.InternalTokens()
}

func (pn filtersProductNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("comparison"))
}

func (pn filtersProductNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pn.ref.Append("value"))
}

type filtersRecommendationTextAttributes struct {
	ref terra.Reference
}

func (rt filtersRecommendationTextAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt filtersRecommendationTextAttributes) InternalWithRef(ref terra.Reference) filtersRecommendationTextAttributes {
	return filtersRecommendationTextAttributes{ref: ref}
}

func (rt filtersRecommendationTextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt filtersRecommendationTextAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt filtersRecommendationTextAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type filtersRecordStateAttributes struct {
	ref terra.Reference
}

func (rs filtersRecordStateAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs filtersRecordStateAttributes) InternalWithRef(ref terra.Reference) filtersRecordStateAttributes {
	return filtersRecordStateAttributes{ref: ref}
}

func (rs filtersRecordStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs filtersRecordStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("comparison"))
}

func (rs filtersRecordStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("value"))
}

type filtersRelatedFindingsIdAttributes struct {
	ref terra.Reference
}

func (rfi filtersRelatedFindingsIdAttributes) InternalRef() (terra.Reference, error) {
	return rfi.ref, nil
}

func (rfi filtersRelatedFindingsIdAttributes) InternalWithRef(ref terra.Reference) filtersRelatedFindingsIdAttributes {
	return filtersRelatedFindingsIdAttributes{ref: ref}
}

func (rfi filtersRelatedFindingsIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rfi.ref.InternalTokens()
}

func (rfi filtersRelatedFindingsIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rfi.ref.Append("comparison"))
}

func (rfi filtersRelatedFindingsIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rfi.ref.Append("value"))
}

type filtersRelatedFindingsProductArnAttributes struct {
	ref terra.Reference
}

func (rfpa filtersRelatedFindingsProductArnAttributes) InternalRef() (terra.Reference, error) {
	return rfpa.ref, nil
}

func (rfpa filtersRelatedFindingsProductArnAttributes) InternalWithRef(ref terra.Reference) filtersRelatedFindingsProductArnAttributes {
	return filtersRelatedFindingsProductArnAttributes{ref: ref}
}

func (rfpa filtersRelatedFindingsProductArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rfpa.ref.InternalTokens()
}

func (rfpa filtersRelatedFindingsProductArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rfpa.ref.Append("comparison"))
}

func (rfpa filtersRelatedFindingsProductArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rfpa.ref.Append("value"))
}

type filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes struct {
	ref terra.Reference
}

func (raeiiipa filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalRef() (terra.Reference, error) {
	return raeiiipa.ref, nil
}

func (raeiiipa filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes {
	return filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes{ref: ref}
}

func (raeiiipa filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiiipa.ref.InternalTokens()
}

func (raeiiipa filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeiiipa.ref.Append("comparison"))
}

func (raeiiipa filtersResourceAwsEc2InstanceIamInstanceProfileArnAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeiiipa.ref.Append("value"))
}

type filtersResourceAwsEc2InstanceImageIdAttributes struct {
	ref terra.Reference
}

func (raeiii filtersResourceAwsEc2InstanceImageIdAttributes) InternalRef() (terra.Reference, error) {
	return raeiii.ref, nil
}

func (raeiii filtersResourceAwsEc2InstanceImageIdAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceImageIdAttributes {
	return filtersResourceAwsEc2InstanceImageIdAttributes{ref: ref}
}

func (raeiii filtersResourceAwsEc2InstanceImageIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiii.ref.InternalTokens()
}

func (raeiii filtersResourceAwsEc2InstanceImageIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeiii.ref.Append("comparison"))
}

func (raeiii filtersResourceAwsEc2InstanceImageIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeiii.ref.Append("value"))
}

type filtersResourceAwsEc2InstanceIpv4AddressesAttributes struct {
	ref terra.Reference
}

func (raeiia filtersResourceAwsEc2InstanceIpv4AddressesAttributes) InternalRef() (terra.Reference, error) {
	return raeiia.ref, nil
}

func (raeiia filtersResourceAwsEc2InstanceIpv4AddressesAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceIpv4AddressesAttributes {
	return filtersResourceAwsEc2InstanceIpv4AddressesAttributes{ref: ref}
}

func (raeiia filtersResourceAwsEc2InstanceIpv4AddressesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiia.ref.InternalTokens()
}

func (raeiia filtersResourceAwsEc2InstanceIpv4AddressesAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(raeiia.ref.Append("cidr"))
}

type filtersResourceAwsEc2InstanceIpv6AddressesAttributes struct {
	ref terra.Reference
}

func (raeiia filtersResourceAwsEc2InstanceIpv6AddressesAttributes) InternalRef() (terra.Reference, error) {
	return raeiia.ref, nil
}

func (raeiia filtersResourceAwsEc2InstanceIpv6AddressesAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceIpv6AddressesAttributes {
	return filtersResourceAwsEc2InstanceIpv6AddressesAttributes{ref: ref}
}

func (raeiia filtersResourceAwsEc2InstanceIpv6AddressesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeiia.ref.InternalTokens()
}

func (raeiia filtersResourceAwsEc2InstanceIpv6AddressesAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(raeiia.ref.Append("cidr"))
}

type filtersResourceAwsEc2InstanceKeyNameAttributes struct {
	ref terra.Reference
}

func (raeikn filtersResourceAwsEc2InstanceKeyNameAttributes) InternalRef() (terra.Reference, error) {
	return raeikn.ref, nil
}

func (raeikn filtersResourceAwsEc2InstanceKeyNameAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceKeyNameAttributes {
	return filtersResourceAwsEc2InstanceKeyNameAttributes{ref: ref}
}

func (raeikn filtersResourceAwsEc2InstanceKeyNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeikn.ref.InternalTokens()
}

func (raeikn filtersResourceAwsEc2InstanceKeyNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeikn.ref.Append("comparison"))
}

func (raeikn filtersResourceAwsEc2InstanceKeyNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeikn.ref.Append("value"))
}

type filtersResourceAwsEc2InstanceLaunchedAtAttributes struct {
	ref terra.Reference
}

func (raeila filtersResourceAwsEc2InstanceLaunchedAtAttributes) InternalRef() (terra.Reference, error) {
	return raeila.ref, nil
}

func (raeila filtersResourceAwsEc2InstanceLaunchedAtAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceLaunchedAtAttributes {
	return filtersResourceAwsEc2InstanceLaunchedAtAttributes{ref: ref}
}

func (raeila filtersResourceAwsEc2InstanceLaunchedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeila.ref.InternalTokens()
}

func (raeila filtersResourceAwsEc2InstanceLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(raeila.ref.Append("end"))
}

func (raeila filtersResourceAwsEc2InstanceLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(raeila.ref.Append("start"))
}

func (raeila filtersResourceAwsEc2InstanceLaunchedAtAttributes) DateRange() terra.ListValue[filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes](raeila.ref.Append("date_range"))
}

type filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes {
	return filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersResourceAwsEc2InstanceLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersResourceAwsEc2InstanceSubnetIdAttributes struct {
	ref terra.Reference
}

func (raeisi filtersResourceAwsEc2InstanceSubnetIdAttributes) InternalRef() (terra.Reference, error) {
	return raeisi.ref, nil
}

func (raeisi filtersResourceAwsEc2InstanceSubnetIdAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceSubnetIdAttributes {
	return filtersResourceAwsEc2InstanceSubnetIdAttributes{ref: ref}
}

func (raeisi filtersResourceAwsEc2InstanceSubnetIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeisi.ref.InternalTokens()
}

func (raeisi filtersResourceAwsEc2InstanceSubnetIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeisi.ref.Append("comparison"))
}

func (raeisi filtersResourceAwsEc2InstanceSubnetIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeisi.ref.Append("value"))
}

type filtersResourceAwsEc2InstanceTypeAttributes struct {
	ref terra.Reference
}

func (raeit filtersResourceAwsEc2InstanceTypeAttributes) InternalRef() (terra.Reference, error) {
	return raeit.ref, nil
}

func (raeit filtersResourceAwsEc2InstanceTypeAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceTypeAttributes {
	return filtersResourceAwsEc2InstanceTypeAttributes{ref: ref}
}

func (raeit filtersResourceAwsEc2InstanceTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeit.ref.InternalTokens()
}

func (raeit filtersResourceAwsEc2InstanceTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeit.ref.Append("comparison"))
}

func (raeit filtersResourceAwsEc2InstanceTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeit.ref.Append("value"))
}

type filtersResourceAwsEc2InstanceVpcIdAttributes struct {
	ref terra.Reference
}

func (raeivi filtersResourceAwsEc2InstanceVpcIdAttributes) InternalRef() (terra.Reference, error) {
	return raeivi.ref, nil
}

func (raeivi filtersResourceAwsEc2InstanceVpcIdAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsEc2InstanceVpcIdAttributes {
	return filtersResourceAwsEc2InstanceVpcIdAttributes{ref: ref}
}

func (raeivi filtersResourceAwsEc2InstanceVpcIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raeivi.ref.InternalTokens()
}

func (raeivi filtersResourceAwsEc2InstanceVpcIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raeivi.ref.Append("comparison"))
}

func (raeivi filtersResourceAwsEc2InstanceVpcIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raeivi.ref.Append("value"))
}

type filtersResourceAwsIamAccessKeyCreatedAtAttributes struct {
	ref terra.Reference
}

func (raiakca filtersResourceAwsIamAccessKeyCreatedAtAttributes) InternalRef() (terra.Reference, error) {
	return raiakca.ref, nil
}

func (raiakca filtersResourceAwsIamAccessKeyCreatedAtAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsIamAccessKeyCreatedAtAttributes {
	return filtersResourceAwsIamAccessKeyCreatedAtAttributes{ref: ref}
}

func (raiakca filtersResourceAwsIamAccessKeyCreatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raiakca.ref.InternalTokens()
}

func (raiakca filtersResourceAwsIamAccessKeyCreatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(raiakca.ref.Append("end"))
}

func (raiakca filtersResourceAwsIamAccessKeyCreatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(raiakca.ref.Append("start"))
}

func (raiakca filtersResourceAwsIamAccessKeyCreatedAtAttributes) DateRange() terra.ListValue[filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes](raiakca.ref.Append("date_range"))
}

type filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes {
	return filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes{ref: ref}
}

func (dr filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersResourceAwsIamAccessKeyCreatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersResourceAwsIamAccessKeyStatusAttributes struct {
	ref terra.Reference
}

func (raiaks filtersResourceAwsIamAccessKeyStatusAttributes) InternalRef() (terra.Reference, error) {
	return raiaks.ref, nil
}

func (raiaks filtersResourceAwsIamAccessKeyStatusAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsIamAccessKeyStatusAttributes {
	return filtersResourceAwsIamAccessKeyStatusAttributes{ref: ref}
}

func (raiaks filtersResourceAwsIamAccessKeyStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raiaks.ref.InternalTokens()
}

func (raiaks filtersResourceAwsIamAccessKeyStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raiaks.ref.Append("comparison"))
}

func (raiaks filtersResourceAwsIamAccessKeyStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raiaks.ref.Append("value"))
}

type filtersResourceAwsIamAccessKeyUserNameAttributes struct {
	ref terra.Reference
}

func (raiakun filtersResourceAwsIamAccessKeyUserNameAttributes) InternalRef() (terra.Reference, error) {
	return raiakun.ref, nil
}

func (raiakun filtersResourceAwsIamAccessKeyUserNameAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsIamAccessKeyUserNameAttributes {
	return filtersResourceAwsIamAccessKeyUserNameAttributes{ref: ref}
}

func (raiakun filtersResourceAwsIamAccessKeyUserNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return raiakun.ref.InternalTokens()
}

func (raiakun filtersResourceAwsIamAccessKeyUserNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(raiakun.ref.Append("comparison"))
}

func (raiakun filtersResourceAwsIamAccessKeyUserNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(raiakun.ref.Append("value"))
}

type filtersResourceAwsS3BucketOwnerIdAttributes struct {
	ref terra.Reference
}

func (rasboi filtersResourceAwsS3BucketOwnerIdAttributes) InternalRef() (terra.Reference, error) {
	return rasboi.ref, nil
}

func (rasboi filtersResourceAwsS3BucketOwnerIdAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsS3BucketOwnerIdAttributes {
	return filtersResourceAwsS3BucketOwnerIdAttributes{ref: ref}
}

func (rasboi filtersResourceAwsS3BucketOwnerIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rasboi.ref.InternalTokens()
}

func (rasboi filtersResourceAwsS3BucketOwnerIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rasboi.ref.Append("comparison"))
}

func (rasboi filtersResourceAwsS3BucketOwnerIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rasboi.ref.Append("value"))
}

type filtersResourceAwsS3BucketOwnerNameAttributes struct {
	ref terra.Reference
}

func (rasbon filtersResourceAwsS3BucketOwnerNameAttributes) InternalRef() (terra.Reference, error) {
	return rasbon.ref, nil
}

func (rasbon filtersResourceAwsS3BucketOwnerNameAttributes) InternalWithRef(ref terra.Reference) filtersResourceAwsS3BucketOwnerNameAttributes {
	return filtersResourceAwsS3BucketOwnerNameAttributes{ref: ref}
}

func (rasbon filtersResourceAwsS3BucketOwnerNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rasbon.ref.InternalTokens()
}

func (rasbon filtersResourceAwsS3BucketOwnerNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rasbon.ref.Append("comparison"))
}

func (rasbon filtersResourceAwsS3BucketOwnerNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rasbon.ref.Append("value"))
}

type filtersResourceContainerImageIdAttributes struct {
	ref terra.Reference
}

func (rcii filtersResourceContainerImageIdAttributes) InternalRef() (terra.Reference, error) {
	return rcii.ref, nil
}

func (rcii filtersResourceContainerImageIdAttributes) InternalWithRef(ref terra.Reference) filtersResourceContainerImageIdAttributes {
	return filtersResourceContainerImageIdAttributes{ref: ref}
}

func (rcii filtersResourceContainerImageIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcii.ref.InternalTokens()
}

func (rcii filtersResourceContainerImageIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rcii.ref.Append("comparison"))
}

func (rcii filtersResourceContainerImageIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rcii.ref.Append("value"))
}

type filtersResourceContainerImageNameAttributes struct {
	ref terra.Reference
}

func (rcin filtersResourceContainerImageNameAttributes) InternalRef() (terra.Reference, error) {
	return rcin.ref, nil
}

func (rcin filtersResourceContainerImageNameAttributes) InternalWithRef(ref terra.Reference) filtersResourceContainerImageNameAttributes {
	return filtersResourceContainerImageNameAttributes{ref: ref}
}

func (rcin filtersResourceContainerImageNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcin.ref.InternalTokens()
}

func (rcin filtersResourceContainerImageNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rcin.ref.Append("comparison"))
}

func (rcin filtersResourceContainerImageNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rcin.ref.Append("value"))
}

type filtersResourceContainerLaunchedAtAttributes struct {
	ref terra.Reference
}

func (rcla filtersResourceContainerLaunchedAtAttributes) InternalRef() (terra.Reference, error) {
	return rcla.ref, nil
}

func (rcla filtersResourceContainerLaunchedAtAttributes) InternalWithRef(ref terra.Reference) filtersResourceContainerLaunchedAtAttributes {
	return filtersResourceContainerLaunchedAtAttributes{ref: ref}
}

func (rcla filtersResourceContainerLaunchedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcla.ref.InternalTokens()
}

func (rcla filtersResourceContainerLaunchedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(rcla.ref.Append("end"))
}

func (rcla filtersResourceContainerLaunchedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(rcla.ref.Append("start"))
}

func (rcla filtersResourceContainerLaunchedAtAttributes) DateRange() terra.ListValue[filtersResourceContainerLaunchedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersResourceContainerLaunchedAtDateRangeAttributes](rcla.ref.Append("date_range"))
}

type filtersResourceContainerLaunchedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersResourceContainerLaunchedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersResourceContainerLaunchedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersResourceContainerLaunchedAtDateRangeAttributes {
	return filtersResourceContainerLaunchedAtDateRangeAttributes{ref: ref}
}

func (dr filtersResourceContainerLaunchedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersResourceContainerLaunchedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersResourceContainerLaunchedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersResourceContainerNameAttributes struct {
	ref terra.Reference
}

func (rcn filtersResourceContainerNameAttributes) InternalRef() (terra.Reference, error) {
	return rcn.ref, nil
}

func (rcn filtersResourceContainerNameAttributes) InternalWithRef(ref terra.Reference) filtersResourceContainerNameAttributes {
	return filtersResourceContainerNameAttributes{ref: ref}
}

func (rcn filtersResourceContainerNameAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rcn.ref.InternalTokens()
}

func (rcn filtersResourceContainerNameAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rcn.ref.Append("comparison"))
}

func (rcn filtersResourceContainerNameAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rcn.ref.Append("value"))
}

type filtersResourceDetailsOtherAttributes struct {
	ref terra.Reference
}

func (rdo filtersResourceDetailsOtherAttributes) InternalRef() (terra.Reference, error) {
	return rdo.ref, nil
}

func (rdo filtersResourceDetailsOtherAttributes) InternalWithRef(ref terra.Reference) filtersResourceDetailsOtherAttributes {
	return filtersResourceDetailsOtherAttributes{ref: ref}
}

func (rdo filtersResourceDetailsOtherAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rdo.ref.InternalTokens()
}

func (rdo filtersResourceDetailsOtherAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("comparison"))
}

func (rdo filtersResourceDetailsOtherAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("key"))
}

func (rdo filtersResourceDetailsOtherAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rdo.ref.Append("value"))
}

type filtersResourceIdAttributes struct {
	ref terra.Reference
}

func (ri filtersResourceIdAttributes) InternalRef() (terra.Reference, error) {
	return ri.ref, nil
}

func (ri filtersResourceIdAttributes) InternalWithRef(ref terra.Reference) filtersResourceIdAttributes {
	return filtersResourceIdAttributes{ref: ref}
}

func (ri filtersResourceIdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ri.ref.InternalTokens()
}

func (ri filtersResourceIdAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ri.ref.Append("comparison"))
}

func (ri filtersResourceIdAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ri.ref.Append("value"))
}

type filtersResourcePartitionAttributes struct {
	ref terra.Reference
}

func (rp filtersResourcePartitionAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp filtersResourcePartitionAttributes) InternalWithRef(ref terra.Reference) filtersResourcePartitionAttributes {
	return filtersResourcePartitionAttributes{ref: ref}
}

func (rp filtersResourcePartitionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp filtersResourcePartitionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("comparison"))
}

func (rp filtersResourcePartitionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("value"))
}

type filtersResourceRegionAttributes struct {
	ref terra.Reference
}

func (rr filtersResourceRegionAttributes) InternalRef() (terra.Reference, error) {
	return rr.ref, nil
}

func (rr filtersResourceRegionAttributes) InternalWithRef(ref terra.Reference) filtersResourceRegionAttributes {
	return filtersResourceRegionAttributes{ref: ref}
}

func (rr filtersResourceRegionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rr.ref.InternalTokens()
}

func (rr filtersResourceRegionAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("comparison"))
}

func (rr filtersResourceRegionAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("value"))
}

type filtersResourceTagsAttributes struct {
	ref terra.Reference
}

func (rt filtersResourceTagsAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt filtersResourceTagsAttributes) InternalWithRef(ref terra.Reference) filtersResourceTagsAttributes {
	return filtersResourceTagsAttributes{ref: ref}
}

func (rt filtersResourceTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt filtersResourceTagsAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt filtersResourceTagsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("key"))
}

func (rt filtersResourceTagsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type filtersResourceTypeAttributes struct {
	ref terra.Reference
}

func (rt filtersResourceTypeAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt filtersResourceTypeAttributes) InternalWithRef(ref terra.Reference) filtersResourceTypeAttributes {
	return filtersResourceTypeAttributes{ref: ref}
}

func (rt filtersResourceTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt filtersResourceTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("comparison"))
}

func (rt filtersResourceTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("value"))
}

type filtersSeverityLabelAttributes struct {
	ref terra.Reference
}

func (sl filtersSeverityLabelAttributes) InternalRef() (terra.Reference, error) {
	return sl.ref, nil
}

func (sl filtersSeverityLabelAttributes) InternalWithRef(ref terra.Reference) filtersSeverityLabelAttributes {
	return filtersSeverityLabelAttributes{ref: ref}
}

func (sl filtersSeverityLabelAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sl.ref.InternalTokens()
}

func (sl filtersSeverityLabelAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("comparison"))
}

func (sl filtersSeverityLabelAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(sl.ref.Append("value"))
}

type filtersSourceUrlAttributes struct {
	ref terra.Reference
}

func (su filtersSourceUrlAttributes) InternalRef() (terra.Reference, error) {
	return su.ref, nil
}

func (su filtersSourceUrlAttributes) InternalWithRef(ref terra.Reference) filtersSourceUrlAttributes {
	return filtersSourceUrlAttributes{ref: ref}
}

func (su filtersSourceUrlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return su.ref.InternalTokens()
}

func (su filtersSourceUrlAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(su.ref.Append("comparison"))
}

func (su filtersSourceUrlAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(su.ref.Append("value"))
}

type filtersThreatIntelIndicatorCategoryAttributes struct {
	ref terra.Reference
}

func (tiic filtersThreatIntelIndicatorCategoryAttributes) InternalRef() (terra.Reference, error) {
	return tiic.ref, nil
}

func (tiic filtersThreatIntelIndicatorCategoryAttributes) InternalWithRef(ref terra.Reference) filtersThreatIntelIndicatorCategoryAttributes {
	return filtersThreatIntelIndicatorCategoryAttributes{ref: ref}
}

func (tiic filtersThreatIntelIndicatorCategoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiic.ref.InternalTokens()
}

func (tiic filtersThreatIntelIndicatorCategoryAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiic.ref.Append("comparison"))
}

func (tiic filtersThreatIntelIndicatorCategoryAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiic.ref.Append("value"))
}

type filtersThreatIntelIndicatorLastObservedAtAttributes struct {
	ref terra.Reference
}

func (tiiloa filtersThreatIntelIndicatorLastObservedAtAttributes) InternalRef() (terra.Reference, error) {
	return tiiloa.ref, nil
}

func (tiiloa filtersThreatIntelIndicatorLastObservedAtAttributes) InternalWithRef(ref terra.Reference) filtersThreatIntelIndicatorLastObservedAtAttributes {
	return filtersThreatIntelIndicatorLastObservedAtAttributes{ref: ref}
}

func (tiiloa filtersThreatIntelIndicatorLastObservedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiiloa.ref.InternalTokens()
}

func (tiiloa filtersThreatIntelIndicatorLastObservedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(tiiloa.ref.Append("end"))
}

func (tiiloa filtersThreatIntelIndicatorLastObservedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(tiiloa.ref.Append("start"))
}

func (tiiloa filtersThreatIntelIndicatorLastObservedAtAttributes) DateRange() terra.ListValue[filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes](tiiloa.ref.Append("date_range"))
}

type filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes {
	return filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes{ref: ref}
}

func (dr filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersThreatIntelIndicatorLastObservedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersThreatIntelIndicatorSourceAttributes struct {
	ref terra.Reference
}

func (tiis filtersThreatIntelIndicatorSourceAttributes) InternalRef() (terra.Reference, error) {
	return tiis.ref, nil
}

func (tiis filtersThreatIntelIndicatorSourceAttributes) InternalWithRef(ref terra.Reference) filtersThreatIntelIndicatorSourceAttributes {
	return filtersThreatIntelIndicatorSourceAttributes{ref: ref}
}

func (tiis filtersThreatIntelIndicatorSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiis.ref.InternalTokens()
}

func (tiis filtersThreatIntelIndicatorSourceAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiis.ref.Append("comparison"))
}

func (tiis filtersThreatIntelIndicatorSourceAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiis.ref.Append("value"))
}

type filtersThreatIntelIndicatorSourceUrlAttributes struct {
	ref terra.Reference
}

func (tiisu filtersThreatIntelIndicatorSourceUrlAttributes) InternalRef() (terra.Reference, error) {
	return tiisu.ref, nil
}

func (tiisu filtersThreatIntelIndicatorSourceUrlAttributes) InternalWithRef(ref terra.Reference) filtersThreatIntelIndicatorSourceUrlAttributes {
	return filtersThreatIntelIndicatorSourceUrlAttributes{ref: ref}
}

func (tiisu filtersThreatIntelIndicatorSourceUrlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiisu.ref.InternalTokens()
}

func (tiisu filtersThreatIntelIndicatorSourceUrlAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiisu.ref.Append("comparison"))
}

func (tiisu filtersThreatIntelIndicatorSourceUrlAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiisu.ref.Append("value"))
}

type filtersThreatIntelIndicatorTypeAttributes struct {
	ref terra.Reference
}

func (tiit filtersThreatIntelIndicatorTypeAttributes) InternalRef() (terra.Reference, error) {
	return tiit.ref, nil
}

func (tiit filtersThreatIntelIndicatorTypeAttributes) InternalWithRef(ref terra.Reference) filtersThreatIntelIndicatorTypeAttributes {
	return filtersThreatIntelIndicatorTypeAttributes{ref: ref}
}

func (tiit filtersThreatIntelIndicatorTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiit.ref.InternalTokens()
}

func (tiit filtersThreatIntelIndicatorTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiit.ref.Append("comparison"))
}

func (tiit filtersThreatIntelIndicatorTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiit.ref.Append("value"))
}

type filtersThreatIntelIndicatorValueAttributes struct {
	ref terra.Reference
}

func (tiiv filtersThreatIntelIndicatorValueAttributes) InternalRef() (terra.Reference, error) {
	return tiiv.ref, nil
}

func (tiiv filtersThreatIntelIndicatorValueAttributes) InternalWithRef(ref terra.Reference) filtersThreatIntelIndicatorValueAttributes {
	return filtersThreatIntelIndicatorValueAttributes{ref: ref}
}

func (tiiv filtersThreatIntelIndicatorValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tiiv.ref.InternalTokens()
}

func (tiiv filtersThreatIntelIndicatorValueAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(tiiv.ref.Append("comparison"))
}

func (tiiv filtersThreatIntelIndicatorValueAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(tiiv.ref.Append("value"))
}

type filtersTitleAttributes struct {
	ref terra.Reference
}

func (t filtersTitleAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t filtersTitleAttributes) InternalWithRef(ref terra.Reference) filtersTitleAttributes {
	return filtersTitleAttributes{ref: ref}
}

func (t filtersTitleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t filtersTitleAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("comparison"))
}

func (t filtersTitleAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type filtersTypeAttributes struct {
	ref terra.Reference
}

func (t filtersTypeAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t filtersTypeAttributes) InternalWithRef(ref terra.Reference) filtersTypeAttributes {
	return filtersTypeAttributes{ref: ref}
}

func (t filtersTypeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t filtersTypeAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("comparison"))
}

func (t filtersTypeAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type filtersUpdatedAtAttributes struct {
	ref terra.Reference
}

func (ua filtersUpdatedAtAttributes) InternalRef() (terra.Reference, error) {
	return ua.ref, nil
}

func (ua filtersUpdatedAtAttributes) InternalWithRef(ref terra.Reference) filtersUpdatedAtAttributes {
	return filtersUpdatedAtAttributes{ref: ref}
}

func (ua filtersUpdatedAtAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ua.ref.InternalTokens()
}

func (ua filtersUpdatedAtAttributes) End() terra.StringValue {
	return terra.ReferenceAsString(ua.ref.Append("end"))
}

func (ua filtersUpdatedAtAttributes) Start() terra.StringValue {
	return terra.ReferenceAsString(ua.ref.Append("start"))
}

func (ua filtersUpdatedAtAttributes) DateRange() terra.ListValue[filtersUpdatedAtDateRangeAttributes] {
	return terra.ReferenceAsList[filtersUpdatedAtDateRangeAttributes](ua.ref.Append("date_range"))
}

type filtersUpdatedAtDateRangeAttributes struct {
	ref terra.Reference
}

func (dr filtersUpdatedAtDateRangeAttributes) InternalRef() (terra.Reference, error) {
	return dr.ref, nil
}

func (dr filtersUpdatedAtDateRangeAttributes) InternalWithRef(ref terra.Reference) filtersUpdatedAtDateRangeAttributes {
	return filtersUpdatedAtDateRangeAttributes{ref: ref}
}

func (dr filtersUpdatedAtDateRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dr.ref.InternalTokens()
}

func (dr filtersUpdatedAtDateRangeAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(dr.ref.Append("unit"))
}

func (dr filtersUpdatedAtDateRangeAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(dr.ref.Append("value"))
}

type filtersUserDefinedValuesAttributes struct {
	ref terra.Reference
}

func (udv filtersUserDefinedValuesAttributes) InternalRef() (terra.Reference, error) {
	return udv.ref, nil
}

func (udv filtersUserDefinedValuesAttributes) InternalWithRef(ref terra.Reference) filtersUserDefinedValuesAttributes {
	return filtersUserDefinedValuesAttributes{ref: ref}
}

func (udv filtersUserDefinedValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return udv.ref.InternalTokens()
}

func (udv filtersUserDefinedValuesAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(udv.ref.Append("comparison"))
}

func (udv filtersUserDefinedValuesAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(udv.ref.Append("key"))
}

func (udv filtersUserDefinedValuesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(udv.ref.Append("value"))
}

type filtersVerificationStateAttributes struct {
	ref terra.Reference
}

func (vs filtersVerificationStateAttributes) InternalRef() (terra.Reference, error) {
	return vs.ref, nil
}

func (vs filtersVerificationStateAttributes) InternalWithRef(ref terra.Reference) filtersVerificationStateAttributes {
	return filtersVerificationStateAttributes{ref: ref}
}

func (vs filtersVerificationStateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vs.ref.InternalTokens()
}

func (vs filtersVerificationStateAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("comparison"))
}

func (vs filtersVerificationStateAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(vs.ref.Append("value"))
}

type filtersWorkflowStatusAttributes struct {
	ref terra.Reference
}

func (ws filtersWorkflowStatusAttributes) InternalRef() (terra.Reference, error) {
	return ws.ref, nil
}

func (ws filtersWorkflowStatusAttributes) InternalWithRef(ref terra.Reference) filtersWorkflowStatusAttributes {
	return filtersWorkflowStatusAttributes{ref: ref}
}

func (ws filtersWorkflowStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ws.ref.InternalTokens()
}

func (ws filtersWorkflowStatusAttributes) Comparison() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("comparison"))
}

func (ws filtersWorkflowStatusAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ws.ref.Append("value"))
}

type FiltersState struct {
	AwsAccountId                                   []FiltersAwsAccountIdState                                   `json:"aws_account_id"`
	CompanyName                                    []FiltersCompanyNameState                                    `json:"company_name"`
	ComplianceStatus                               []FiltersComplianceStatusState                               `json:"compliance_status"`
	Confidence                                     []FiltersConfidenceState                                     `json:"confidence"`
	CreatedAt                                      []FiltersCreatedAtState                                      `json:"created_at"`
	Criticality                                    []FiltersCriticalityState                                    `json:"criticality"`
	Description                                    []FiltersDescriptionState                                    `json:"description"`
	FindingProviderFieldsConfidence                []FiltersFindingProviderFieldsConfidenceState                `json:"finding_provider_fields_confidence"`
	FindingProviderFieldsCriticality               []FiltersFindingProviderFieldsCriticalityState               `json:"finding_provider_fields_criticality"`
	FindingProviderFieldsRelatedFindingsId         []FiltersFindingProviderFieldsRelatedFindingsIdState         `json:"finding_provider_fields_related_findings_id"`
	FindingProviderFieldsRelatedFindingsProductArn []FiltersFindingProviderFieldsRelatedFindingsProductArnState `json:"finding_provider_fields_related_findings_product_arn"`
	FindingProviderFieldsSeverityLabel             []FiltersFindingProviderFieldsSeverityLabelState             `json:"finding_provider_fields_severity_label"`
	FindingProviderFieldsSeverityOriginal          []FiltersFindingProviderFieldsSeverityOriginalState          `json:"finding_provider_fields_severity_original"`
	FindingProviderFieldsTypes                     []FiltersFindingProviderFieldsTypesState                     `json:"finding_provider_fields_types"`
	FirstObservedAt                                []FiltersFirstObservedAtState                                `json:"first_observed_at"`
	GeneratorId                                    []FiltersGeneratorIdState                                    `json:"generator_id"`
	Id                                             []FiltersIdState                                             `json:"id"`
	Keyword                                        []FiltersKeywordState                                        `json:"keyword"`
	LastObservedAt                                 []FiltersLastObservedAtState                                 `json:"last_observed_at"`
	MalwareName                                    []FiltersMalwareNameState                                    `json:"malware_name"`
	MalwarePath                                    []FiltersMalwarePathState                                    `json:"malware_path"`
	MalwareState                                   []FiltersMalwareStateState                                   `json:"malware_state"`
	MalwareType                                    []FiltersMalwareTypeState                                    `json:"malware_type"`
	NetworkDestinationDomain                       []FiltersNetworkDestinationDomainState                       `json:"network_destination_domain"`
	NetworkDestinationIpv4                         []FiltersNetworkDestinationIpv4State                         `json:"network_destination_ipv4"`
	NetworkDestinationIpv6                         []FiltersNetworkDestinationIpv6State                         `json:"network_destination_ipv6"`
	NetworkDestinationPort                         []FiltersNetworkDestinationPortState                         `json:"network_destination_port"`
	NetworkDirection                               []FiltersNetworkDirectionState                               `json:"network_direction"`
	NetworkProtocol                                []FiltersNetworkProtocolState                                `json:"network_protocol"`
	NetworkSourceDomain                            []FiltersNetworkSourceDomainState                            `json:"network_source_domain"`
	NetworkSourceIpv4                              []FiltersNetworkSourceIpv4State                              `json:"network_source_ipv4"`
	NetworkSourceIpv6                              []FiltersNetworkSourceIpv6State                              `json:"network_source_ipv6"`
	NetworkSourceMac                               []FiltersNetworkSourceMacState                               `json:"network_source_mac"`
	NetworkSourcePort                              []FiltersNetworkSourcePortState                              `json:"network_source_port"`
	NoteText                                       []FiltersNoteTextState                                       `json:"note_text"`
	NoteUpdatedAt                                  []FiltersNoteUpdatedAtState                                  `json:"note_updated_at"`
	NoteUpdatedBy                                  []FiltersNoteUpdatedByState                                  `json:"note_updated_by"`
	ProcessLaunchedAt                              []FiltersProcessLaunchedAtState                              `json:"process_launched_at"`
	ProcessName                                    []FiltersProcessNameState                                    `json:"process_name"`
	ProcessParentPid                               []FiltersProcessParentPidState                               `json:"process_parent_pid"`
	ProcessPath                                    []FiltersProcessPathState                                    `json:"process_path"`
	ProcessPid                                     []FiltersProcessPidState                                     `json:"process_pid"`
	ProcessTerminatedAt                            []FiltersProcessTerminatedAtState                            `json:"process_terminated_at"`
	ProductArn                                     []FiltersProductArnState                                     `json:"product_arn"`
	ProductFields                                  []FiltersProductFieldsState                                  `json:"product_fields"`
	ProductName                                    []FiltersProductNameState                                    `json:"product_name"`
	RecommendationText                             []FiltersRecommendationTextState                             `json:"recommendation_text"`
	RecordState                                    []FiltersRecordStateState                                    `json:"record_state"`
	RelatedFindingsId                              []FiltersRelatedFindingsIdState                              `json:"related_findings_id"`
	RelatedFindingsProductArn                      []FiltersRelatedFindingsProductArnState                      `json:"related_findings_product_arn"`
	ResourceAwsEc2InstanceIamInstanceProfileArn    []FiltersResourceAwsEc2InstanceIamInstanceProfileArnState    `json:"resource_aws_ec2_instance_iam_instance_profile_arn"`
	ResourceAwsEc2InstanceImageId                  []FiltersResourceAwsEc2InstanceImageIdState                  `json:"resource_aws_ec2_instance_image_id"`
	ResourceAwsEc2InstanceIpv4Addresses            []FiltersResourceAwsEc2InstanceIpv4AddressesState            `json:"resource_aws_ec2_instance_ipv4_addresses"`
	ResourceAwsEc2InstanceIpv6Addresses            []FiltersResourceAwsEc2InstanceIpv6AddressesState            `json:"resource_aws_ec2_instance_ipv6_addresses"`
	ResourceAwsEc2InstanceKeyName                  []FiltersResourceAwsEc2InstanceKeyNameState                  `json:"resource_aws_ec2_instance_key_name"`
	ResourceAwsEc2InstanceLaunchedAt               []FiltersResourceAwsEc2InstanceLaunchedAtState               `json:"resource_aws_ec2_instance_launched_at"`
	ResourceAwsEc2InstanceSubnetId                 []FiltersResourceAwsEc2InstanceSubnetIdState                 `json:"resource_aws_ec2_instance_subnet_id"`
	ResourceAwsEc2InstanceType                     []FiltersResourceAwsEc2InstanceTypeState                     `json:"resource_aws_ec2_instance_type"`
	ResourceAwsEc2InstanceVpcId                    []FiltersResourceAwsEc2InstanceVpcIdState                    `json:"resource_aws_ec2_instance_vpc_id"`
	ResourceAwsIamAccessKeyCreatedAt               []FiltersResourceAwsIamAccessKeyCreatedAtState               `json:"resource_aws_iam_access_key_created_at"`
	ResourceAwsIamAccessKeyStatus                  []FiltersResourceAwsIamAccessKeyStatusState                  `json:"resource_aws_iam_access_key_status"`
	ResourceAwsIamAccessKeyUserName                []FiltersResourceAwsIamAccessKeyUserNameState                `json:"resource_aws_iam_access_key_user_name"`
	ResourceAwsS3BucketOwnerId                     []FiltersResourceAwsS3BucketOwnerIdState                     `json:"resource_aws_s3_bucket_owner_id"`
	ResourceAwsS3BucketOwnerName                   []FiltersResourceAwsS3BucketOwnerNameState                   `json:"resource_aws_s3_bucket_owner_name"`
	ResourceContainerImageId                       []FiltersResourceContainerImageIdState                       `json:"resource_container_image_id"`
	ResourceContainerImageName                     []FiltersResourceContainerImageNameState                     `json:"resource_container_image_name"`
	ResourceContainerLaunchedAt                    []FiltersResourceContainerLaunchedAtState                    `json:"resource_container_launched_at"`
	ResourceContainerName                          []FiltersResourceContainerNameState                          `json:"resource_container_name"`
	ResourceDetailsOther                           []FiltersResourceDetailsOtherState                           `json:"resource_details_other"`
	ResourceId                                     []FiltersResourceIdState                                     `json:"resource_id"`
	ResourcePartition                              []FiltersResourcePartitionState                              `json:"resource_partition"`
	ResourceRegion                                 []FiltersResourceRegionState                                 `json:"resource_region"`
	ResourceTags                                   []FiltersResourceTagsState                                   `json:"resource_tags"`
	ResourceType                                   []FiltersResourceTypeState                                   `json:"resource_type"`
	SeverityLabel                                  []FiltersSeverityLabelState                                  `json:"severity_label"`
	SourceUrl                                      []FiltersSourceUrlState                                      `json:"source_url"`
	ThreatIntelIndicatorCategory                   []FiltersThreatIntelIndicatorCategoryState                   `json:"threat_intel_indicator_category"`
	ThreatIntelIndicatorLastObservedAt             []FiltersThreatIntelIndicatorLastObservedAtState             `json:"threat_intel_indicator_last_observed_at"`
	ThreatIntelIndicatorSource                     []FiltersThreatIntelIndicatorSourceState                     `json:"threat_intel_indicator_source"`
	ThreatIntelIndicatorSourceUrl                  []FiltersThreatIntelIndicatorSourceUrlState                  `json:"threat_intel_indicator_source_url"`
	ThreatIntelIndicatorType                       []FiltersThreatIntelIndicatorTypeState                       `json:"threat_intel_indicator_type"`
	ThreatIntelIndicatorValue                      []FiltersThreatIntelIndicatorValueState                      `json:"threat_intel_indicator_value"`
	Title                                          []FiltersTitleState                                          `json:"title"`
	Type                                           []FiltersTypeState                                           `json:"type"`
	UpdatedAt                                      []FiltersUpdatedAtState                                      `json:"updated_at"`
	UserDefinedValues                              []FiltersUserDefinedValuesState                              `json:"user_defined_values"`
	VerificationState                              []FiltersVerificationStateState                              `json:"verification_state"`
	WorkflowStatus                                 []FiltersWorkflowStatusState                                 `json:"workflow_status"`
}

type FiltersAwsAccountIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersCompanyNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersComplianceStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersConfidenceState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersCreatedAtState struct {
	End       string                           `json:"end"`
	Start     string                           `json:"start"`
	DateRange []FiltersCreatedAtDateRangeState `json:"date_range"`
}

type FiltersCreatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersCriticalityState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersDescriptionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsConfidenceState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersFindingProviderFieldsCriticalityState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersFindingProviderFieldsRelatedFindingsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsRelatedFindingsProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsSeverityLabelState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsSeverityOriginalState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFindingProviderFieldsTypesState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersFirstObservedAtState struct {
	End       string                                 `json:"end"`
	Start     string                                 `json:"start"`
	DateRange []FiltersFirstObservedAtDateRangeState `json:"date_range"`
}

type FiltersFirstObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersGeneratorIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersKeywordState struct {
	Value string `json:"value"`
}

type FiltersLastObservedAtState struct {
	End       string                                `json:"end"`
	Start     string                                `json:"start"`
	DateRange []FiltersLastObservedAtDateRangeState `json:"date_range"`
}

type FiltersLastObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersMalwareNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersMalwarePathState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersMalwareStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersMalwareTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkDestinationDomainState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkDestinationIpv4State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkDestinationIpv6State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkDestinationPortState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersNetworkDirectionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkProtocolState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkSourceDomainState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkSourceIpv4State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkSourceIpv6State struct {
	Cidr string `json:"cidr"`
}

type FiltersNetworkSourceMacState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNetworkSourcePortState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersNoteTextState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersNoteUpdatedAtState struct {
	End       string                               `json:"end"`
	Start     string                               `json:"start"`
	DateRange []FiltersNoteUpdatedAtDateRangeState `json:"date_range"`
}

type FiltersNoteUpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersNoteUpdatedByState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProcessLaunchedAtState struct {
	End       string                                   `json:"end"`
	Start     string                                   `json:"start"`
	DateRange []FiltersProcessLaunchedAtDateRangeState `json:"date_range"`
}

type FiltersProcessLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersProcessNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProcessParentPidState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersProcessPathState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProcessPidState struct {
	Eq  string `json:"eq"`
	Gte string `json:"gte"`
	Lte string `json:"lte"`
}

type FiltersProcessTerminatedAtState struct {
	End       string                                     `json:"end"`
	Start     string                                     `json:"start"`
	DateRange []FiltersProcessTerminatedAtDateRangeState `json:"date_range"`
}

type FiltersProcessTerminatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersProductFieldsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersProductNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRecommendationTextState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRecordStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRelatedFindingsIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersRelatedFindingsProductArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceIamInstanceProfileArnState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceImageIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceIpv4AddressesState struct {
	Cidr string `json:"cidr"`
}

type FiltersResourceAwsEc2InstanceIpv6AddressesState struct {
	Cidr string `json:"cidr"`
}

type FiltersResourceAwsEc2InstanceKeyNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceLaunchedAtState struct {
	End       string                                                  `json:"end"`
	Start     string                                                  `json:"start"`
	DateRange []FiltersResourceAwsEc2InstanceLaunchedAtDateRangeState `json:"date_range"`
}

type FiltersResourceAwsEc2InstanceLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersResourceAwsEc2InstanceSubnetIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsEc2InstanceVpcIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsIamAccessKeyCreatedAtState struct {
	End       string                                                  `json:"end"`
	Start     string                                                  `json:"start"`
	DateRange []FiltersResourceAwsIamAccessKeyCreatedAtDateRangeState `json:"date_range"`
}

type FiltersResourceAwsIamAccessKeyCreatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersResourceAwsIamAccessKeyStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsIamAccessKeyUserNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsS3BucketOwnerIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceAwsS3BucketOwnerNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceContainerImageIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceContainerImageNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceContainerLaunchedAtState struct {
	End       string                                             `json:"end"`
	Start     string                                             `json:"start"`
	DateRange []FiltersResourceContainerLaunchedAtDateRangeState `json:"date_range"`
}

type FiltersResourceContainerLaunchedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersResourceContainerNameState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceDetailsOtherState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersResourceIdState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourcePartitionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceRegionState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersResourceTagsState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersResourceTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersSeverityLabelState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersSourceUrlState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorCategoryState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorLastObservedAtState struct {
	End       string                                                    `json:"end"`
	Start     string                                                    `json:"start"`
	DateRange []FiltersThreatIntelIndicatorLastObservedAtDateRangeState `json:"date_range"`
}

type FiltersThreatIntelIndicatorLastObservedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersThreatIntelIndicatorSourceState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorSourceUrlState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersThreatIntelIndicatorValueState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersTitleState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersTypeState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersUpdatedAtState struct {
	End       string                           `json:"end"`
	Start     string                           `json:"start"`
	DateRange []FiltersUpdatedAtDateRangeState `json:"date_range"`
}

type FiltersUpdatedAtDateRangeState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type FiltersUserDefinedValuesState struct {
	Comparison string `json:"comparison"`
	Key        string `json:"key"`
	Value      string `json:"value"`
}

type FiltersVerificationStateState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}

type FiltersWorkflowStatusState struct {
	Comparison string `json:"comparison"`
	Value      string `json:"value"`
}
