// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_dx_hosted_transit_virtual_interface_accepter

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_dx_hosted_transit_virtual_interface_accepter.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsDxHostedTransitVirtualInterfaceAccepterState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adhtvia *Resource) Type() string {
	return "aws_dx_hosted_transit_virtual_interface_accepter"
}

// LocalName returns the local name for [Resource].
func (adhtvia *Resource) LocalName() string {
	return adhtvia.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adhtvia *Resource) Configuration() interface{} {
	return adhtvia.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adhtvia *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adhtvia)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adhtvia *Resource) Dependencies() terra.Dependencies {
	return adhtvia.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adhtvia *Resource) LifecycleManagement() *terra.Lifecycle {
	return adhtvia.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adhtvia *Resource) Attributes() awsDxHostedTransitVirtualInterfaceAccepterAttributes {
	return awsDxHostedTransitVirtualInterfaceAccepterAttributes{ref: terra.ReferenceResource(adhtvia)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adhtvia *Resource) ImportState(state io.Reader) error {
	adhtvia.state = &awsDxHostedTransitVirtualInterfaceAccepterState{}
	if err := json.NewDecoder(state).Decode(adhtvia.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adhtvia.Type(), adhtvia.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adhtvia *Resource) State() (*awsDxHostedTransitVirtualInterfaceAccepterState, bool) {
	return adhtvia.state, adhtvia.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adhtvia *Resource) StateMust() *awsDxHostedTransitVirtualInterfaceAccepterState {
	if adhtvia.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adhtvia.Type(), adhtvia.LocalName()))
	}
	return adhtvia.state
}

// Args contains the configurations for aws_dx_hosted_transit_virtual_interface_accepter.
type Args struct {
	// DxGatewayId is required.
	DxGatewayId terra.StringValue `hcl:"dx_gateway_id,attr" validate:"required"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll is optional.
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// VirtualInterfaceId is required.
	VirtualInterfaceId terra.StringValue `hcl:"virtual_interface_id,attr" validate:"required"`
	// Timeouts is optional.
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsDxHostedTransitVirtualInterfaceAccepterAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_dx_hosted_transit_virtual_interface_accepter.
func (adhtvia awsDxHostedTransitVirtualInterfaceAccepterAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(adhtvia.ref.Append("arn"))
}

// DxGatewayId returns a reference to field dx_gateway_id of aws_dx_hosted_transit_virtual_interface_accepter.
func (adhtvia awsDxHostedTransitVirtualInterfaceAccepterAttributes) DxGatewayId() terra.StringValue {
	return terra.ReferenceAsString(adhtvia.ref.Append("dx_gateway_id"))
}

// Id returns a reference to field id of aws_dx_hosted_transit_virtual_interface_accepter.
func (adhtvia awsDxHostedTransitVirtualInterfaceAccepterAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adhtvia.ref.Append("id"))
}

// Tags returns a reference to field tags of aws_dx_hosted_transit_virtual_interface_accepter.
func (adhtvia awsDxHostedTransitVirtualInterfaceAccepterAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adhtvia.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_dx_hosted_transit_virtual_interface_accepter.
func (adhtvia awsDxHostedTransitVirtualInterfaceAccepterAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adhtvia.ref.Append("tags_all"))
}

// VirtualInterfaceId returns a reference to field virtual_interface_id of aws_dx_hosted_transit_virtual_interface_accepter.
func (adhtvia awsDxHostedTransitVirtualInterfaceAccepterAttributes) VirtualInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(adhtvia.ref.Append("virtual_interface_id"))
}

func (adhtvia awsDxHostedTransitVirtualInterfaceAccepterAttributes) Timeouts() timeoutsAttributes {
	return terra.ReferenceAsSingle[timeoutsAttributes](adhtvia.ref.Append("timeouts"))
}

type awsDxHostedTransitVirtualInterfaceAccepterState struct {
	Arn                string            `json:"arn"`
	DxGatewayId        string            `json:"dx_gateway_id"`
	Id                 string            `json:"id"`
	Tags               map[string]string `json:"tags"`
	TagsAll            map[string]string `json:"tags_all"`
	VirtualInterfaceId string            `json:"virtual_interface_id"`
	Timeouts           *TimeoutsState    `json:"timeouts"`
}
