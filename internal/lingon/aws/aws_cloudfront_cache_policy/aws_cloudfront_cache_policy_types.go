// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_cache_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ParametersInCacheKeyAndForwardedToOrigin struct {
	// EnableAcceptEncodingBrotli is optional.
	EnableAcceptEncodingBrotli terra.BoolValue `hcl:"enable_accept_encoding_brotli,attr"`
	// EnableAcceptEncodingGzip is optional.
	EnableAcceptEncodingGzip terra.BoolValue `hcl:"enable_accept_encoding_gzip,attr"`
	// ParametersInCacheKeyAndForwardedToOriginCookiesConfig is required.
	CookiesConfig *ParametersInCacheKeyAndForwardedToOriginCookiesConfig `hcl:"cookies_config,block" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginHeadersConfig is required.
	HeadersConfig *ParametersInCacheKeyAndForwardedToOriginHeadersConfig `hcl:"headers_config,block" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginQueryStringsConfig is required.
	QueryStringsConfig *ParametersInCacheKeyAndForwardedToOriginQueryStringsConfig `hcl:"query_strings_config,block" validate:"required"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfig struct {
	// CookieBehavior is required.
	CookieBehavior terra.StringValue `hcl:"cookie_behavior,attr" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies is optional.
	Cookies *ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies `hcl:"cookies,block"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfig struct {
	// HeaderBehavior is optional.
	HeaderBehavior terra.StringValue `hcl:"header_behavior,attr"`
	// ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders is optional.
	Headers *ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders `hcl:"headers,block"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfig struct {
	// QueryStringBehavior is required.
	QueryStringBehavior terra.StringValue `hcl:"query_string_behavior,attr" validate:"required"`
	// ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings is optional.
	QueryStrings *ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings `hcl:"query_strings,block"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type parametersInCacheKeyAndForwardedToOriginAttributes struct {
	ref terra.Reference
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) InternalRef() (terra.Reference, error) {
	return pickafto.ref, nil
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) InternalWithRef(ref terra.Reference) parametersInCacheKeyAndForwardedToOriginAttributes {
	return parametersInCacheKeyAndForwardedToOriginAttributes{ref: ref}
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pickafto.ref.InternalTokens()
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingBrotli() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_brotli"))
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingGzip() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_gzip"))
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) CookiesConfig() terra.ListValue[parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes] {
	return terra.ReferenceAsList[parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes](pickafto.ref.Append("cookies_config"))
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) HeadersConfig() terra.ListValue[parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes] {
	return terra.ReferenceAsList[parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes](pickafto.ref.Append("headers_config"))
}

func (pickafto parametersInCacheKeyAndForwardedToOriginAttributes) QueryStringsConfig() terra.ListValue[parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes] {
	return terra.ReferenceAsList[parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes](pickafto.ref.Append("query_strings_config"))
}

type parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes struct {
	ref terra.Reference
}

func (cc parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalWithRef(ref terra.Reference) parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes {
	return parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes{ref: ref}
}

func (cc parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) CookieBehavior() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("cookie_behavior"))
}

func (cc parametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) Cookies() terra.ListValue[parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes] {
	return terra.ReferenceAsList[parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes](cc.ref.Append("cookies"))
}

type parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes struct {
	ref terra.Reference
}

func (c parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalWithRef(ref terra.Reference) parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes {
	return parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes{ref: ref}
}

func (c parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c parametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("items"))
}

type parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes struct {
	ref terra.Reference
}

func (hc parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalWithRef(ref terra.Reference) parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes {
	return parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes{ref: ref}
}

func (hc parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) HeaderBehavior() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("header_behavior"))
}

func (hc parametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) Headers() terra.ListValue[parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes] {
	return terra.ReferenceAsList[parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes](hc.ref.Append("headers"))
}

type parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes struct {
	ref terra.Reference
}

func (h parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalWithRef(ref terra.Reference) parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes {
	return parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes{ref: ref}
}

func (h parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h parametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](h.ref.Append("items"))
}

type parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes struct {
	ref terra.Reference
}

func (qsc parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalRef() (terra.Reference, error) {
	return qsc.ref, nil
}

func (qsc parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalWithRef(ref terra.Reference) parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes {
	return parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes{ref: ref}
}

func (qsc parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qsc.ref.InternalTokens()
}

func (qsc parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStringBehavior() terra.StringValue {
	return terra.ReferenceAsString(qsc.ref.Append("query_string_behavior"))
}

func (qsc parametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStrings() terra.ListValue[parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes] {
	return terra.ReferenceAsList[parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes](qsc.ref.Append("query_strings"))
}

type parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes struct {
	ref terra.Reference
}

func (qs parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalWithRef(ref terra.Reference) parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes {
	return parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes{ref: ref}
}

func (qs parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs parametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](qs.ref.Append("items"))
}

type ParametersInCacheKeyAndForwardedToOriginState struct {
	EnableAcceptEncodingBrotli bool                                                              `json:"enable_accept_encoding_brotli"`
	EnableAcceptEncodingGzip   bool                                                              `json:"enable_accept_encoding_gzip"`
	CookiesConfig              []ParametersInCacheKeyAndForwardedToOriginCookiesConfigState      `json:"cookies_config"`
	HeadersConfig              []ParametersInCacheKeyAndForwardedToOriginHeadersConfigState      `json:"headers_config"`
	QueryStringsConfig         []ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState `json:"query_strings_config"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigState struct {
	CookieBehavior string                                                              `json:"cookie_behavior"`
	Cookies        []ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState `json:"cookies"`
}

type ParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState struct {
	Items []string `json:"items"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigState struct {
	HeaderBehavior string                                                              `json:"header_behavior"`
	Headers        []ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState `json:"headers"`
}

type ParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState struct {
	Items []string `json:"items"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState struct {
	QueryStringBehavior string                                                                        `json:"query_string_behavior"`
	QueryStrings        []ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState `json:"query_strings"`
}

type ParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState struct {
	Items []string `json:"items"`
}
