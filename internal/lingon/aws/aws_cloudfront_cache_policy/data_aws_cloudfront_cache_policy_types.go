// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_cache_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataparametersInCacheKeyAndForwardedToOriginAttributes struct {
	ref terra.Reference
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) InternalRef() (terra.Reference, error) {
	return pickafto.ref, nil
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) InternalWithRef(ref terra.Reference) DataparametersInCacheKeyAndForwardedToOriginAttributes {
	return DataparametersInCacheKeyAndForwardedToOriginAttributes{ref: ref}
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pickafto.ref.InternalTokens()
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingBrotli() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_brotli"))
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) EnableAcceptEncodingGzip() terra.BoolValue {
	return terra.ReferenceAsBool(pickafto.ref.Append("enable_accept_encoding_gzip"))
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) CookiesConfig() terra.ListValue[DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes] {
	return terra.ReferenceAsList[DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes](pickafto.ref.Append("cookies_config"))
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) HeadersConfig() terra.ListValue[DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes] {
	return terra.ReferenceAsList[DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes](pickafto.ref.Append("headers_config"))
}

func (pickafto DataparametersInCacheKeyAndForwardedToOriginAttributes) QueryStringsConfig() terra.ListValue[DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes] {
	return terra.ReferenceAsList[DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes](pickafto.ref.Append("query_strings_config"))
}

type DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes struct {
	ref terra.Reference
}

func (cc DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalWithRef(ref terra.Reference) DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes {
	return DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes{ref: ref}
}

func (cc DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) CookieBehavior() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("cookie_behavior"))
}

func (cc DataparametersInCacheKeyAndForwardedToOriginCookiesConfigAttributes) Cookies() terra.ListValue[DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes] {
	return terra.ReferenceAsList[DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes](cc.ref.Append("cookies"))
}

type DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes struct {
	ref terra.Reference
}

func (c DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalWithRef(ref terra.Reference) DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes {
	return DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes{ref: ref}
}

func (c DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataparametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("items"))
}

type DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes struct {
	ref terra.Reference
}

func (hc DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalWithRef(ref terra.Reference) DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes {
	return DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes{ref: ref}
}

func (hc DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) HeaderBehavior() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("header_behavior"))
}

func (hc DataparametersInCacheKeyAndForwardedToOriginHeadersConfigAttributes) Headers() terra.ListValue[DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes] {
	return terra.ReferenceAsList[DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes](hc.ref.Append("headers"))
}

type DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes struct {
	ref terra.Reference
}

func (h DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalWithRef(ref terra.Reference) DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes {
	return DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes{ref: ref}
}

func (h DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h DataparametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](h.ref.Append("items"))
}

type DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes struct {
	ref terra.Reference
}

func (qsc DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalRef() (terra.Reference, error) {
	return qsc.ref, nil
}

func (qsc DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalWithRef(ref terra.Reference) DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes {
	return DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes{ref: ref}
}

func (qsc DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qsc.ref.InternalTokens()
}

func (qsc DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStringBehavior() terra.StringValue {
	return terra.ReferenceAsString(qsc.ref.Append("query_string_behavior"))
}

func (qsc DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigAttributes) QueryStrings() terra.ListValue[DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes] {
	return terra.ReferenceAsList[DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes](qsc.ref.Append("query_strings"))
}

type DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes struct {
	ref terra.Reference
}

func (qs DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalWithRef(ref terra.Reference) DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes {
	return DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes{ref: ref}
}

func (qs DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs DataparametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](qs.ref.Append("items"))
}

type DataParametersInCacheKeyAndForwardedToOriginState struct {
	EnableAcceptEncodingBrotli bool                                                                  `json:"enable_accept_encoding_brotli"`
	EnableAcceptEncodingGzip   bool                                                                  `json:"enable_accept_encoding_gzip"`
	CookiesConfig              []DataParametersInCacheKeyAndForwardedToOriginCookiesConfigState      `json:"cookies_config"`
	HeadersConfig              []DataParametersInCacheKeyAndForwardedToOriginHeadersConfigState      `json:"headers_config"`
	QueryStringsConfig         []DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState `json:"query_strings_config"`
}

type DataParametersInCacheKeyAndForwardedToOriginCookiesConfigState struct {
	CookieBehavior string                                                                  `json:"cookie_behavior"`
	Cookies        []DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState `json:"cookies"`
}

type DataParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesState struct {
	Items []string `json:"items"`
}

type DataParametersInCacheKeyAndForwardedToOriginHeadersConfigState struct {
	HeaderBehavior string                                                                  `json:"header_behavior"`
	Headers        []DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState `json:"headers"`
}

type DataParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersState struct {
	Items []string `json:"items"`
}

type DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigState struct {
	QueryStringBehavior string                                                                            `json:"query_string_behavior"`
	QueryStrings        []DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState `json:"query_strings"`
}

type DataParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsState struct {
	Items []string `json:"items"`
}
