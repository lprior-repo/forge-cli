// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lb_listener

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DefaultAction struct {
	// Order is optional.
	Order terra.NumberValue `hcl:"order,attr"`
	// TargetGroupArn is optional.
	TargetGroupArn terra.StringValue `hcl:"target_group_arn,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// DefaultActionAuthenticateCognito is optional.
	AuthenticateCognito *DefaultActionAuthenticateCognito `hcl:"authenticate_cognito,block"`
	// DefaultActionAuthenticateOidc is optional.
	AuthenticateOidc *DefaultActionAuthenticateOidc `hcl:"authenticate_oidc,block"`
	// DefaultActionFixedResponse is optional.
	FixedResponse *DefaultActionFixedResponse `hcl:"fixed_response,block"`
	// DefaultActionForward is optional.
	Forward *DefaultActionForward `hcl:"forward,block"`
	// DefaultActionRedirect is optional.
	Redirect *DefaultActionRedirect `hcl:"redirect,block"`
}

type DefaultActionAuthenticateCognito struct {
	// AuthenticationRequestExtraParams is optional.
	AuthenticationRequestExtraParams terra.MapValue[terra.StringValue] `hcl:"authentication_request_extra_params,attr"`
	// OnUnauthenticatedRequest is optional.
	OnUnauthenticatedRequest terra.StringValue `hcl:"on_unauthenticated_request,attr"`
	// Scope is optional.
	Scope terra.StringValue `hcl:"scope,attr"`
	// SessionCookieName is optional.
	SessionCookieName terra.StringValue `hcl:"session_cookie_name,attr"`
	// SessionTimeout is optional.
	SessionTimeout terra.NumberValue `hcl:"session_timeout,attr"`
	// UserPoolArn is required.
	UserPoolArn terra.StringValue `hcl:"user_pool_arn,attr" validate:"required"`
	// UserPoolClientId is required.
	UserPoolClientId terra.StringValue `hcl:"user_pool_client_id,attr" validate:"required"`
	// UserPoolDomain is required.
	UserPoolDomain terra.StringValue `hcl:"user_pool_domain,attr" validate:"required"`
}

type DefaultActionAuthenticateOidc struct {
	// AuthenticationRequestExtraParams is optional.
	AuthenticationRequestExtraParams terra.MapValue[terra.StringValue] `hcl:"authentication_request_extra_params,attr"`
	// AuthorizationEndpoint is required.
	AuthorizationEndpoint terra.StringValue `hcl:"authorization_endpoint,attr" validate:"required"`
	// ClientId is required.
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret is required.
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// Issuer is required.
	Issuer terra.StringValue `hcl:"issuer,attr" validate:"required"`
	// OnUnauthenticatedRequest is optional.
	OnUnauthenticatedRequest terra.StringValue `hcl:"on_unauthenticated_request,attr"`
	// Scope is optional.
	Scope terra.StringValue `hcl:"scope,attr"`
	// SessionCookieName is optional.
	SessionCookieName terra.StringValue `hcl:"session_cookie_name,attr"`
	// SessionTimeout is optional.
	SessionTimeout terra.NumberValue `hcl:"session_timeout,attr"`
	// TokenEndpoint is required.
	TokenEndpoint terra.StringValue `hcl:"token_endpoint,attr" validate:"required"`
	// UserInfoEndpoint is required.
	UserInfoEndpoint terra.StringValue `hcl:"user_info_endpoint,attr" validate:"required"`
}

type DefaultActionFixedResponse struct {
	// ContentType is required.
	ContentType terra.StringValue `hcl:"content_type,attr" validate:"required"`
	// MessageBody is optional.
	MessageBody terra.StringValue `hcl:"message_body,attr"`
	// StatusCode is optional.
	StatusCode terra.StringValue `hcl:"status_code,attr"`
}

type DefaultActionForward struct {
	// DefaultActionForwardStickiness is optional.
	Stickiness *DefaultActionForwardStickiness `hcl:"stickiness,block"`
	// DefaultActionForwardTargetGroup is min=1,max=5.
	TargetGroup []DefaultActionForwardTargetGroup `hcl:"target_group,block" validate:"min=1,max=5"`
}

type DefaultActionForwardStickiness struct {
	// Duration is required.
	Duration terra.NumberValue `hcl:"duration,attr" validate:"required"`
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
}

type DefaultActionForwardTargetGroup struct {
	// Arn is required.
	Arn terra.StringValue `hcl:"arn,attr" validate:"required"`
	// Weight is optional.
	Weight terra.NumberValue `hcl:"weight,attr"`
}

type DefaultActionRedirect struct {
	// Host is optional.
	Host terra.StringValue `hcl:"host,attr"`
	// Path is optional.
	Path terra.StringValue `hcl:"path,attr"`
	// Port is optional.
	Port terra.StringValue `hcl:"port,attr"`
	// Protocol is optional.
	Protocol terra.StringValue `hcl:"protocol,attr"`
	// Query is optional.
	Query terra.StringValue `hcl:"query,attr"`
	// StatusCode is required.
	StatusCode terra.StringValue `hcl:"status_code,attr" validate:"required"`
}

type Timeouts struct {
	// Read is optional.
	Read terra.StringValue `hcl:"read,attr"`
}

type defaultActionAttributes struct {
	ref terra.Reference
}

func (da defaultActionAttributes) InternalRef() (terra.Reference, error) {
	return da.ref, nil
}

func (da defaultActionAttributes) InternalWithRef(ref terra.Reference) defaultActionAttributes {
	return defaultActionAttributes{ref: ref}
}

func (da defaultActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return da.ref.InternalTokens()
}

func (da defaultActionAttributes) Order() terra.NumberValue {
	return terra.ReferenceAsNumber(da.ref.Append("order"))
}

func (da defaultActionAttributes) TargetGroupArn() terra.StringValue {
	return terra.ReferenceAsString(da.ref.Append("target_group_arn"))
}

func (da defaultActionAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(da.ref.Append("type"))
}

func (da defaultActionAttributes) AuthenticateCognito() terra.ListValue[defaultActionAuthenticateCognitoAttributes] {
	return terra.ReferenceAsList[defaultActionAuthenticateCognitoAttributes](da.ref.Append("authenticate_cognito"))
}

func (da defaultActionAttributes) AuthenticateOidc() terra.ListValue[defaultActionAuthenticateOidcAttributes] {
	return terra.ReferenceAsList[defaultActionAuthenticateOidcAttributes](da.ref.Append("authenticate_oidc"))
}

func (da defaultActionAttributes) FixedResponse() terra.ListValue[defaultActionFixedResponseAttributes] {
	return terra.ReferenceAsList[defaultActionFixedResponseAttributes](da.ref.Append("fixed_response"))
}

func (da defaultActionAttributes) Forward() terra.ListValue[defaultActionForwardAttributes] {
	return terra.ReferenceAsList[defaultActionForwardAttributes](da.ref.Append("forward"))
}

func (da defaultActionAttributes) Redirect() terra.ListValue[defaultActionRedirectAttributes] {
	return terra.ReferenceAsList[defaultActionRedirectAttributes](da.ref.Append("redirect"))
}

type defaultActionAuthenticateCognitoAttributes struct {
	ref terra.Reference
}

func (ac defaultActionAuthenticateCognitoAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac defaultActionAuthenticateCognitoAttributes) InternalWithRef(ref terra.Reference) defaultActionAuthenticateCognitoAttributes {
	return defaultActionAuthenticateCognitoAttributes{ref: ref}
}

func (ac defaultActionAuthenticateCognitoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac defaultActionAuthenticateCognitoAttributes) AuthenticationRequestExtraParams() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ac.ref.Append("authentication_request_extra_params"))
}

func (ac defaultActionAuthenticateCognitoAttributes) OnUnauthenticatedRequest() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("on_unauthenticated_request"))
}

func (ac defaultActionAuthenticateCognitoAttributes) Scope() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("scope"))
}

func (ac defaultActionAuthenticateCognitoAttributes) SessionCookieName() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("session_cookie_name"))
}

func (ac defaultActionAuthenticateCognitoAttributes) SessionTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("session_timeout"))
}

func (ac defaultActionAuthenticateCognitoAttributes) UserPoolArn() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("user_pool_arn"))
}

func (ac defaultActionAuthenticateCognitoAttributes) UserPoolClientId() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("user_pool_client_id"))
}

func (ac defaultActionAuthenticateCognitoAttributes) UserPoolDomain() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("user_pool_domain"))
}

type defaultActionAuthenticateOidcAttributes struct {
	ref terra.Reference
}

func (ao defaultActionAuthenticateOidcAttributes) InternalRef() (terra.Reference, error) {
	return ao.ref, nil
}

func (ao defaultActionAuthenticateOidcAttributes) InternalWithRef(ref terra.Reference) defaultActionAuthenticateOidcAttributes {
	return defaultActionAuthenticateOidcAttributes{ref: ref}
}

func (ao defaultActionAuthenticateOidcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ao.ref.InternalTokens()
}

func (ao defaultActionAuthenticateOidcAttributes) AuthenticationRequestExtraParams() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ao.ref.Append("authentication_request_extra_params"))
}

func (ao defaultActionAuthenticateOidcAttributes) AuthorizationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("authorization_endpoint"))
}

func (ao defaultActionAuthenticateOidcAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("client_id"))
}

func (ao defaultActionAuthenticateOidcAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("client_secret"))
}

func (ao defaultActionAuthenticateOidcAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("issuer"))
}

func (ao defaultActionAuthenticateOidcAttributes) OnUnauthenticatedRequest() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("on_unauthenticated_request"))
}

func (ao defaultActionAuthenticateOidcAttributes) Scope() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("scope"))
}

func (ao defaultActionAuthenticateOidcAttributes) SessionCookieName() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("session_cookie_name"))
}

func (ao defaultActionAuthenticateOidcAttributes) SessionTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(ao.ref.Append("session_timeout"))
}

func (ao defaultActionAuthenticateOidcAttributes) TokenEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("token_endpoint"))
}

func (ao defaultActionAuthenticateOidcAttributes) UserInfoEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("user_info_endpoint"))
}

type defaultActionFixedResponseAttributes struct {
	ref terra.Reference
}

func (fr defaultActionFixedResponseAttributes) InternalRef() (terra.Reference, error) {
	return fr.ref, nil
}

func (fr defaultActionFixedResponseAttributes) InternalWithRef(ref terra.Reference) defaultActionFixedResponseAttributes {
	return defaultActionFixedResponseAttributes{ref: ref}
}

func (fr defaultActionFixedResponseAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fr.ref.InternalTokens()
}

func (fr defaultActionFixedResponseAttributes) ContentType() terra.StringValue {
	return terra.ReferenceAsString(fr.ref.Append("content_type"))
}

func (fr defaultActionFixedResponseAttributes) MessageBody() terra.StringValue {
	return terra.ReferenceAsString(fr.ref.Append("message_body"))
}

func (fr defaultActionFixedResponseAttributes) StatusCode() terra.StringValue {
	return terra.ReferenceAsString(fr.ref.Append("status_code"))
}

type defaultActionForwardAttributes struct {
	ref terra.Reference
}

func (f defaultActionForwardAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f defaultActionForwardAttributes) InternalWithRef(ref terra.Reference) defaultActionForwardAttributes {
	return defaultActionForwardAttributes{ref: ref}
}

func (f defaultActionForwardAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f defaultActionForwardAttributes) Stickiness() terra.ListValue[defaultActionForwardStickinessAttributes] {
	return terra.ReferenceAsList[defaultActionForwardStickinessAttributes](f.ref.Append("stickiness"))
}

func (f defaultActionForwardAttributes) TargetGroup() terra.SetValue[defaultActionForwardTargetGroupAttributes] {
	return terra.ReferenceAsSet[defaultActionForwardTargetGroupAttributes](f.ref.Append("target_group"))
}

type defaultActionForwardStickinessAttributes struct {
	ref terra.Reference
}

func (s defaultActionForwardStickinessAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s defaultActionForwardStickinessAttributes) InternalWithRef(ref terra.Reference) defaultActionForwardStickinessAttributes {
	return defaultActionForwardStickinessAttributes{ref: ref}
}

func (s defaultActionForwardStickinessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s defaultActionForwardStickinessAttributes) Duration() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("duration"))
}

func (s defaultActionForwardStickinessAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("enabled"))
}

type defaultActionForwardTargetGroupAttributes struct {
	ref terra.Reference
}

func (tg defaultActionForwardTargetGroupAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg defaultActionForwardTargetGroupAttributes) InternalWithRef(ref terra.Reference) defaultActionForwardTargetGroupAttributes {
	return defaultActionForwardTargetGroupAttributes{ref: ref}
}

func (tg defaultActionForwardTargetGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tg.ref.InternalTokens()
}

func (tg defaultActionForwardTargetGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("arn"))
}

func (tg defaultActionForwardTargetGroupAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(tg.ref.Append("weight"))
}

type defaultActionRedirectAttributes struct {
	ref terra.Reference
}

func (r defaultActionRedirectAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r defaultActionRedirectAttributes) InternalWithRef(ref terra.Reference) defaultActionRedirectAttributes {
	return defaultActionRedirectAttributes{ref: ref}
}

func (r defaultActionRedirectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r defaultActionRedirectAttributes) Host() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("host"))
}

func (r defaultActionRedirectAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("path"))
}

func (r defaultActionRedirectAttributes) Port() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("port"))
}

func (r defaultActionRedirectAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("protocol"))
}

func (r defaultActionRedirectAttributes) Query() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("query"))
}

func (r defaultActionRedirectAttributes) StatusCode() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("status_code"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DefaultActionState struct {
	Order               float64                                 `json:"order"`
	TargetGroupArn      string                                  `json:"target_group_arn"`
	Type                string                                  `json:"type"`
	AuthenticateCognito []DefaultActionAuthenticateCognitoState `json:"authenticate_cognito"`
	AuthenticateOidc    []DefaultActionAuthenticateOidcState    `json:"authenticate_oidc"`
	FixedResponse       []DefaultActionFixedResponseState       `json:"fixed_response"`
	Forward             []DefaultActionForwardState             `json:"forward"`
	Redirect            []DefaultActionRedirectState            `json:"redirect"`
}

type DefaultActionAuthenticateCognitoState struct {
	AuthenticationRequestExtraParams map[string]string `json:"authentication_request_extra_params"`
	OnUnauthenticatedRequest         string            `json:"on_unauthenticated_request"`
	Scope                            string            `json:"scope"`
	SessionCookieName                string            `json:"session_cookie_name"`
	SessionTimeout                   float64           `json:"session_timeout"`
	UserPoolArn                      string            `json:"user_pool_arn"`
	UserPoolClientId                 string            `json:"user_pool_client_id"`
	UserPoolDomain                   string            `json:"user_pool_domain"`
}

type DefaultActionAuthenticateOidcState struct {
	AuthenticationRequestExtraParams map[string]string `json:"authentication_request_extra_params"`
	AuthorizationEndpoint            string            `json:"authorization_endpoint"`
	ClientId                         string            `json:"client_id"`
	ClientSecret                     string            `json:"client_secret"`
	Issuer                           string            `json:"issuer"`
	OnUnauthenticatedRequest         string            `json:"on_unauthenticated_request"`
	Scope                            string            `json:"scope"`
	SessionCookieName                string            `json:"session_cookie_name"`
	SessionTimeout                   float64           `json:"session_timeout"`
	TokenEndpoint                    string            `json:"token_endpoint"`
	UserInfoEndpoint                 string            `json:"user_info_endpoint"`
}

type DefaultActionFixedResponseState struct {
	ContentType string `json:"content_type"`
	MessageBody string `json:"message_body"`
	StatusCode  string `json:"status_code"`
}

type DefaultActionForwardState struct {
	Stickiness  []DefaultActionForwardStickinessState  `json:"stickiness"`
	TargetGroup []DefaultActionForwardTargetGroupState `json:"target_group"`
}

type DefaultActionForwardStickinessState struct {
	Duration float64 `json:"duration"`
	Enabled  bool    `json:"enabled"`
}

type DefaultActionForwardTargetGroupState struct {
	Arn    string  `json:"arn"`
	Weight float64 `json:"weight"`
}

type DefaultActionRedirectState struct {
	Host       string `json:"host"`
	Path       string `json:"path"`
	Port       string `json:"port"`
	Protocol   string `json:"protocol"`
	Query      string `json:"query"`
	StatusCode string `json:"status_code"`
}

type TimeoutsState struct {
	Read string `json:"read"`
}
