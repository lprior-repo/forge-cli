// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_image

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataimageTestsConfigurationAttributes struct {
	ref terra.Reference
}

func (itc DataimageTestsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return itc.ref, nil
}

func (itc DataimageTestsConfigurationAttributes) InternalWithRef(ref terra.Reference) DataimageTestsConfigurationAttributes {
	return DataimageTestsConfigurationAttributes{ref: ref}
}

func (itc DataimageTestsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return itc.ref.InternalTokens()
}

func (itc DataimageTestsConfigurationAttributes) ImageTestsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(itc.ref.Append("image_tests_enabled"))
}

func (itc DataimageTestsConfigurationAttributes) TimeoutMinutes() terra.NumberValue {
	return terra.ReferenceAsNumber(itc.ref.Append("timeout_minutes"))
}

type DataoutputResourcesAttributes struct {
	ref terra.Reference
}

func (or DataoutputResourcesAttributes) InternalRef() (terra.Reference, error) {
	return or.ref, nil
}

func (or DataoutputResourcesAttributes) InternalWithRef(ref terra.Reference) DataoutputResourcesAttributes {
	return DataoutputResourcesAttributes{ref: ref}
}

func (or DataoutputResourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return or.ref.InternalTokens()
}

func (or DataoutputResourcesAttributes) Amis() terra.SetValue[DataoutputResourcesAmisAttributes] {
	return terra.ReferenceAsSet[DataoutputResourcesAmisAttributes](or.ref.Append("amis"))
}

func (or DataoutputResourcesAttributes) Containers() terra.SetValue[DataoutputResourcesContainersAttributes] {
	return terra.ReferenceAsSet[DataoutputResourcesContainersAttributes](or.ref.Append("containers"))
}

type DataoutputResourcesAmisAttributes struct {
	ref terra.Reference
}

func (a DataoutputResourcesAmisAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataoutputResourcesAmisAttributes) InternalWithRef(ref terra.Reference) DataoutputResourcesAmisAttributes {
	return DataoutputResourcesAmisAttributes{ref: ref}
}

func (a DataoutputResourcesAmisAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataoutputResourcesAmisAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("account_id"))
}

func (a DataoutputResourcesAmisAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("description"))
}

func (a DataoutputResourcesAmisAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("image"))
}

func (a DataoutputResourcesAmisAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("name"))
}

func (a DataoutputResourcesAmisAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("region"))
}

type DataoutputResourcesContainersAttributes struct {
	ref terra.Reference
}

func (c DataoutputResourcesContainersAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataoutputResourcesContainersAttributes) InternalWithRef(ref terra.Reference) DataoutputResourcesContainersAttributes {
	return DataoutputResourcesContainersAttributes{ref: ref}
}

func (c DataoutputResourcesContainersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataoutputResourcesContainersAttributes) ImageUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("image_uris"))
}

func (c DataoutputResourcesContainersAttributes) Region() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("region"))
}

type DataImageTestsConfigurationState struct {
	ImageTestsEnabled bool    `json:"image_tests_enabled"`
	TimeoutMinutes    float64 `json:"timeout_minutes"`
}

type DataOutputResourcesState struct {
	Amis       []DataOutputResourcesAmisState       `json:"amis"`
	Containers []DataOutputResourcesContainersState `json:"containers"`
}

type DataOutputResourcesAmisState struct {
	AccountId   string `json:"account_id"`
	Description string `json:"description"`
	Image       string `json:"image"`
	Name        string `json:"name"`
	Region      string `json:"region"`
}

type DataOutputResourcesContainersState struct {
	ImageUris []string `json:"image_uris"`
	Region    string   `json:"region"`
}
