// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_spot_price

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_ec2_spot_price.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aesp *DataSource) DataSource() string {
	return "aws_ec2_spot_price"
}

// LocalName returns the local name for [DataSource].
func (aesp *DataSource) LocalName() string {
	return aesp.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aesp *DataSource) Configuration() interface{} {
	return aesp.Args
}

// Attributes returns the attributes for [DataSource].
func (aesp *DataSource) Attributes() dataAwsEc2SpotPriceAttributes {
	return dataAwsEc2SpotPriceAttributes{ref: terra.ReferenceDataSource(aesp)}
}

// DataArgs contains the configurations for aws_ec2_spot_price.
type DataArgs struct {
	// AvailabilityZone is optional.
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts is optional.
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEc2SpotPriceAttributes struct {
	ref terra.Reference
}

// AvailabilityZone returns a reference to field availability_zone of aws_ec2_spot_price.
func (aesp dataAwsEc2SpotPriceAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(aesp.ref.Append("availability_zone"))
}

// Id returns a reference to field id of aws_ec2_spot_price.
func (aesp dataAwsEc2SpotPriceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aesp.ref.Append("id"))
}

// InstanceType returns a reference to field instance_type of aws_ec2_spot_price.
func (aesp dataAwsEc2SpotPriceAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(aesp.ref.Append("instance_type"))
}

// SpotPrice returns a reference to field spot_price of aws_ec2_spot_price.
func (aesp dataAwsEc2SpotPriceAttributes) SpotPrice() terra.StringValue {
	return terra.ReferenceAsString(aesp.ref.Append("spot_price"))
}

// SpotPriceTimestamp returns a reference to field spot_price_timestamp of aws_ec2_spot_price.
func (aesp dataAwsEc2SpotPriceAttributes) SpotPriceTimestamp() terra.StringValue {
	return terra.ReferenceAsString(aesp.ref.Append("spot_price_timestamp"))
}

func (aesp dataAwsEc2SpotPriceAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](aesp.ref.Append("filter"))
}

func (aesp dataAwsEc2SpotPriceAttributes) Timeouts() DatatimeoutsAttributes {
	return terra.ReferenceAsSingle[DatatimeoutsAttributes](aesp.ref.Append("timeouts"))
}
