// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_transit_gateway_peering_attachment

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_ec2_transit_gateway_peering_attachment.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aetgpa *DataSource) DataSource() string {
	return "aws_ec2_transit_gateway_peering_attachment"
}

// LocalName returns the local name for [DataSource].
func (aetgpa *DataSource) LocalName() string {
	return aetgpa.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aetgpa *DataSource) Configuration() interface{} {
	return aetgpa.Args
}

// Attributes returns the attributes for [DataSource].
func (aetgpa *DataSource) Attributes() dataAwsEc2TransitGatewayPeeringAttachmentAttributes {
	return dataAwsEc2TransitGatewayPeeringAttachmentAttributes{ref: terra.ReferenceDataSource(aetgpa)}
}

// DataArgs contains the configurations for aws_ec2_transit_gateway_peering_attachment.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts is optional.
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEc2TransitGatewayPeeringAttachmentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_ec2_transit_gateway_peering_attachment.
func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aetgpa.ref.Append("id"))
}

// PeerAccountId returns a reference to field peer_account_id of aws_ec2_transit_gateway_peering_attachment.
func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) PeerAccountId() terra.StringValue {
	return terra.ReferenceAsString(aetgpa.ref.Append("peer_account_id"))
}

// PeerRegion returns a reference to field peer_region of aws_ec2_transit_gateway_peering_attachment.
func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) PeerRegion() terra.StringValue {
	return terra.ReferenceAsString(aetgpa.ref.Append("peer_region"))
}

// PeerTransitGatewayId returns a reference to field peer_transit_gateway_id of aws_ec2_transit_gateway_peering_attachment.
func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) PeerTransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(aetgpa.ref.Append("peer_transit_gateway_id"))
}

// Tags returns a reference to field tags of aws_ec2_transit_gateway_peering_attachment.
func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aetgpa.ref.Append("tags"))
}

// TransitGatewayId returns a reference to field transit_gateway_id of aws_ec2_transit_gateway_peering_attachment.
func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(aetgpa.ref.Append("transit_gateway_id"))
}

func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](aetgpa.ref.Append("filter"))
}

func (aetgpa dataAwsEc2TransitGatewayPeeringAttachmentAttributes) Timeouts() DatatimeoutsAttributes {
	return terra.ReferenceAsSingle[DatatimeoutsAttributes](aetgpa.ref.Append("timeouts"))
}
