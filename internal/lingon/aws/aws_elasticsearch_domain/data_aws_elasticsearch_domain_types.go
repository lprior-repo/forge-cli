// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_elasticsearch_domain

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataadvancedSecurityOptionsAttributes struct {
	ref terra.Reference
}

func (aso DataadvancedSecurityOptionsAttributes) InternalRef() (terra.Reference, error) {
	return aso.ref, nil
}

func (aso DataadvancedSecurityOptionsAttributes) InternalWithRef(ref terra.Reference) DataadvancedSecurityOptionsAttributes {
	return DataadvancedSecurityOptionsAttributes{ref: ref}
}

func (aso DataadvancedSecurityOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aso.ref.InternalTokens()
}

func (aso DataadvancedSecurityOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(aso.ref.Append("enabled"))
}

func (aso DataadvancedSecurityOptionsAttributes) InternalUserDatabaseEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(aso.ref.Append("internal_user_database_enabled"))
}

type DataautoTuneOptionsAttributes struct {
	ref terra.Reference
}

func (ato DataautoTuneOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ato.ref, nil
}

func (ato DataautoTuneOptionsAttributes) InternalWithRef(ref terra.Reference) DataautoTuneOptionsAttributes {
	return DataautoTuneOptionsAttributes{ref: ref}
}

func (ato DataautoTuneOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ato.ref.InternalTokens()
}

func (ato DataautoTuneOptionsAttributes) DesiredState() terra.StringValue {
	return terra.ReferenceAsString(ato.ref.Append("desired_state"))
}

func (ato DataautoTuneOptionsAttributes) RollbackOnDisable() terra.StringValue {
	return terra.ReferenceAsString(ato.ref.Append("rollback_on_disable"))
}

func (ato DataautoTuneOptionsAttributes) MaintenanceSchedule() terra.SetValue[DataautoTuneOptionsMaintenanceScheduleAttributes] {
	return terra.ReferenceAsSet[DataautoTuneOptionsMaintenanceScheduleAttributes](ato.ref.Append("maintenance_schedule"))
}

type DataautoTuneOptionsMaintenanceScheduleAttributes struct {
	ref terra.Reference
}

func (ms DataautoTuneOptionsMaintenanceScheduleAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms DataautoTuneOptionsMaintenanceScheduleAttributes) InternalWithRef(ref terra.Reference) DataautoTuneOptionsMaintenanceScheduleAttributes {
	return DataautoTuneOptionsMaintenanceScheduleAttributes{ref: ref}
}

func (ms DataautoTuneOptionsMaintenanceScheduleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms DataautoTuneOptionsMaintenanceScheduleAttributes) CronExpressionForRecurrence() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("cron_expression_for_recurrence"))
}

func (ms DataautoTuneOptionsMaintenanceScheduleAttributes) StartAt() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("start_at"))
}

func (ms DataautoTuneOptionsMaintenanceScheduleAttributes) Duration() terra.ListValue[DataautoTuneOptionsMaintenanceScheduleDurationAttributes] {
	return terra.ReferenceAsList[DataautoTuneOptionsMaintenanceScheduleDurationAttributes](ms.ref.Append("duration"))
}

type DataautoTuneOptionsMaintenanceScheduleDurationAttributes struct {
	ref terra.Reference
}

func (d DataautoTuneOptionsMaintenanceScheduleDurationAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d DataautoTuneOptionsMaintenanceScheduleDurationAttributes) InternalWithRef(ref terra.Reference) DataautoTuneOptionsMaintenanceScheduleDurationAttributes {
	return DataautoTuneOptionsMaintenanceScheduleDurationAttributes{ref: ref}
}

func (d DataautoTuneOptionsMaintenanceScheduleDurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d DataautoTuneOptionsMaintenanceScheduleDurationAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("unit"))
}

func (d DataautoTuneOptionsMaintenanceScheduleDurationAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(d.ref.Append("value"))
}

type DataclusterConfigAttributes struct {
	ref terra.Reference
}

func (cc DataclusterConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DataclusterConfigAttributes) InternalWithRef(ref terra.Reference) DataclusterConfigAttributes {
	return DataclusterConfigAttributes{ref: ref}
}

func (cc DataclusterConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DataclusterConfigAttributes) DedicatedMasterCount() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("dedicated_master_count"))
}

func (cc DataclusterConfigAttributes) DedicatedMasterEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("dedicated_master_enabled"))
}

func (cc DataclusterConfigAttributes) DedicatedMasterType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("dedicated_master_type"))
}

func (cc DataclusterConfigAttributes) InstanceCount() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("instance_count"))
}

func (cc DataclusterConfigAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("instance_type"))
}

func (cc DataclusterConfigAttributes) WarmCount() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("warm_count"))
}

func (cc DataclusterConfigAttributes) WarmEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("warm_enabled"))
}

func (cc DataclusterConfigAttributes) WarmType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("warm_type"))
}

func (cc DataclusterConfigAttributes) ZoneAwarenessEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("zone_awareness_enabled"))
}

func (cc DataclusterConfigAttributes) ColdStorageOptions() terra.ListValue[DataclusterConfigColdStorageOptionsAttributes] {
	return terra.ReferenceAsList[DataclusterConfigColdStorageOptionsAttributes](cc.ref.Append("cold_storage_options"))
}

func (cc DataclusterConfigAttributes) ZoneAwarenessConfig() terra.ListValue[DataclusterConfigZoneAwarenessConfigAttributes] {
	return terra.ReferenceAsList[DataclusterConfigZoneAwarenessConfigAttributes](cc.ref.Append("zone_awareness_config"))
}

type DataclusterConfigColdStorageOptionsAttributes struct {
	ref terra.Reference
}

func (cso DataclusterConfigColdStorageOptionsAttributes) InternalRef() (terra.Reference, error) {
	return cso.ref, nil
}

func (cso DataclusterConfigColdStorageOptionsAttributes) InternalWithRef(ref terra.Reference) DataclusterConfigColdStorageOptionsAttributes {
	return DataclusterConfigColdStorageOptionsAttributes{ref: ref}
}

func (cso DataclusterConfigColdStorageOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cso.ref.InternalTokens()
}

func (cso DataclusterConfigColdStorageOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cso.ref.Append("enabled"))
}

type DataclusterConfigZoneAwarenessConfigAttributes struct {
	ref terra.Reference
}

func (zac DataclusterConfigZoneAwarenessConfigAttributes) InternalRef() (terra.Reference, error) {
	return zac.ref, nil
}

func (zac DataclusterConfigZoneAwarenessConfigAttributes) InternalWithRef(ref terra.Reference) DataclusterConfigZoneAwarenessConfigAttributes {
	return DataclusterConfigZoneAwarenessConfigAttributes{ref: ref}
}

func (zac DataclusterConfigZoneAwarenessConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return zac.ref.InternalTokens()
}

func (zac DataclusterConfigZoneAwarenessConfigAttributes) AvailabilityZoneCount() terra.NumberValue {
	return terra.ReferenceAsNumber(zac.ref.Append("availability_zone_count"))
}

type DatacognitoOptionsAttributes struct {
	ref terra.Reference
}

func (co DatacognitoOptionsAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co DatacognitoOptionsAttributes) InternalWithRef(ref terra.Reference) DatacognitoOptionsAttributes {
	return DatacognitoOptionsAttributes{ref: ref}
}

func (co DatacognitoOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co DatacognitoOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(co.ref.Append("enabled"))
}

func (co DatacognitoOptionsAttributes) IdentityPoolId() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("identity_pool_id"))
}

func (co DatacognitoOptionsAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("role_arn"))
}

func (co DatacognitoOptionsAttributes) UserPoolId() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("user_pool_id"))
}

type DataebsOptionsAttributes struct {
	ref terra.Reference
}

func (eo DataebsOptionsAttributes) InternalRef() (terra.Reference, error) {
	return eo.ref, nil
}

func (eo DataebsOptionsAttributes) InternalWithRef(ref terra.Reference) DataebsOptionsAttributes {
	return DataebsOptionsAttributes{ref: ref}
}

func (eo DataebsOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eo.ref.InternalTokens()
}

func (eo DataebsOptionsAttributes) EbsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(eo.ref.Append("ebs_enabled"))
}

func (eo DataebsOptionsAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(eo.ref.Append("iops"))
}

func (eo DataebsOptionsAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(eo.ref.Append("throughput"))
}

func (eo DataebsOptionsAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(eo.ref.Append("volume_size"))
}

func (eo DataebsOptionsAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(eo.ref.Append("volume_type"))
}

type DataencryptionAtRestAttributes struct {
	ref terra.Reference
}

func (ear DataencryptionAtRestAttributes) InternalRef() (terra.Reference, error) {
	return ear.ref, nil
}

func (ear DataencryptionAtRestAttributes) InternalWithRef(ref terra.Reference) DataencryptionAtRestAttributes {
	return DataencryptionAtRestAttributes{ref: ref}
}

func (ear DataencryptionAtRestAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ear.ref.InternalTokens()
}

func (ear DataencryptionAtRestAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ear.ref.Append("enabled"))
}

func (ear DataencryptionAtRestAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ear.ref.Append("kms_key_id"))
}

type DatalogPublishingOptionsAttributes struct {
	ref terra.Reference
}

func (lpo DatalogPublishingOptionsAttributes) InternalRef() (terra.Reference, error) {
	return lpo.ref, nil
}

func (lpo DatalogPublishingOptionsAttributes) InternalWithRef(ref terra.Reference) DatalogPublishingOptionsAttributes {
	return DatalogPublishingOptionsAttributes{ref: ref}
}

func (lpo DatalogPublishingOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lpo.ref.InternalTokens()
}

func (lpo DatalogPublishingOptionsAttributes) CloudwatchLogGroupArn() terra.StringValue {
	return terra.ReferenceAsString(lpo.ref.Append("cloudwatch_log_group_arn"))
}

func (lpo DatalogPublishingOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(lpo.ref.Append("enabled"))
}

func (lpo DatalogPublishingOptionsAttributes) LogType() terra.StringValue {
	return terra.ReferenceAsString(lpo.ref.Append("log_type"))
}

type DatanodeToNodeEncryptionAttributes struct {
	ref terra.Reference
}

func (ntne DatanodeToNodeEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return ntne.ref, nil
}

func (ntne DatanodeToNodeEncryptionAttributes) InternalWithRef(ref terra.Reference) DatanodeToNodeEncryptionAttributes {
	return DatanodeToNodeEncryptionAttributes{ref: ref}
}

func (ntne DatanodeToNodeEncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ntne.ref.InternalTokens()
}

func (ntne DatanodeToNodeEncryptionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ntne.ref.Append("enabled"))
}

type DatasnapshotOptionsAttributes struct {
	ref terra.Reference
}

func (so DatasnapshotOptionsAttributes) InternalRef() (terra.Reference, error) {
	return so.ref, nil
}

func (so DatasnapshotOptionsAttributes) InternalWithRef(ref terra.Reference) DatasnapshotOptionsAttributes {
	return DatasnapshotOptionsAttributes{ref: ref}
}

func (so DatasnapshotOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return so.ref.InternalTokens()
}

func (so DatasnapshotOptionsAttributes) AutomatedSnapshotStartHour() terra.NumberValue {
	return terra.ReferenceAsNumber(so.ref.Append("automated_snapshot_start_hour"))
}

type DatavpcOptionsAttributes struct {
	ref terra.Reference
}

func (vo DatavpcOptionsAttributes) InternalRef() (terra.Reference, error) {
	return vo.ref, nil
}

func (vo DatavpcOptionsAttributes) InternalWithRef(ref terra.Reference) DatavpcOptionsAttributes {
	return DatavpcOptionsAttributes{ref: ref}
}

func (vo DatavpcOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vo.ref.InternalTokens()
}

func (vo DatavpcOptionsAttributes) AvailabilityZones() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vo.ref.Append("availability_zones"))
}

func (vo DatavpcOptionsAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vo.ref.Append("security_group_ids"))
}

func (vo DatavpcOptionsAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vo.ref.Append("subnet_ids"))
}

func (vo DatavpcOptionsAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(vo.ref.Append("vpc_id"))
}

type DataAdvancedSecurityOptionsState struct {
	Enabled                     bool `json:"enabled"`
	InternalUserDatabaseEnabled bool `json:"internal_user_database_enabled"`
}

type DataAutoTuneOptionsState struct {
	DesiredState        string                                        `json:"desired_state"`
	RollbackOnDisable   string                                        `json:"rollback_on_disable"`
	MaintenanceSchedule []DataAutoTuneOptionsMaintenanceScheduleState `json:"maintenance_schedule"`
}

type DataAutoTuneOptionsMaintenanceScheduleState struct {
	CronExpressionForRecurrence string                                                `json:"cron_expression_for_recurrence"`
	StartAt                     string                                                `json:"start_at"`
	Duration                    []DataAutoTuneOptionsMaintenanceScheduleDurationState `json:"duration"`
}

type DataAutoTuneOptionsMaintenanceScheduleDurationState struct {
	Unit  string  `json:"unit"`
	Value float64 `json:"value"`
}

type DataClusterConfigState struct {
	DedicatedMasterCount   float64                                     `json:"dedicated_master_count"`
	DedicatedMasterEnabled bool                                        `json:"dedicated_master_enabled"`
	DedicatedMasterType    string                                      `json:"dedicated_master_type"`
	InstanceCount          float64                                     `json:"instance_count"`
	InstanceType           string                                      `json:"instance_type"`
	WarmCount              float64                                     `json:"warm_count"`
	WarmEnabled            bool                                        `json:"warm_enabled"`
	WarmType               string                                      `json:"warm_type"`
	ZoneAwarenessEnabled   bool                                        `json:"zone_awareness_enabled"`
	ColdStorageOptions     []DataClusterConfigColdStorageOptionsState  `json:"cold_storage_options"`
	ZoneAwarenessConfig    []DataClusterConfigZoneAwarenessConfigState `json:"zone_awareness_config"`
}

type DataClusterConfigColdStorageOptionsState struct {
	Enabled bool `json:"enabled"`
}

type DataClusterConfigZoneAwarenessConfigState struct {
	AvailabilityZoneCount float64 `json:"availability_zone_count"`
}

type DataCognitoOptionsState struct {
	Enabled        bool   `json:"enabled"`
	IdentityPoolId string `json:"identity_pool_id"`
	RoleArn        string `json:"role_arn"`
	UserPoolId     string `json:"user_pool_id"`
}

type DataEbsOptionsState struct {
	EbsEnabled bool    `json:"ebs_enabled"`
	Iops       float64 `json:"iops"`
	Throughput float64 `json:"throughput"`
	VolumeSize float64 `json:"volume_size"`
	VolumeType string  `json:"volume_type"`
}

type DataEncryptionAtRestState struct {
	Enabled  bool   `json:"enabled"`
	KmsKeyId string `json:"kms_key_id"`
}

type DataLogPublishingOptionsState struct {
	CloudwatchLogGroupArn string `json:"cloudwatch_log_group_arn"`
	Enabled               bool   `json:"enabled"`
	LogType               string `json:"log_type"`
}

type DataNodeToNodeEncryptionState struct {
	Enabled bool `json:"enabled"`
}

type DataSnapshotOptionsState struct {
	AutomatedSnapshotStartHour float64 `json:"automated_snapshot_start_hour"`
}

type DataVpcOptionsState struct {
	AvailabilityZones []string `json:"availability_zones"`
	SecurityGroupIds  []string `json:"security_group_ids"`
	SubnetIds         []string `json:"subnet_ids"`
	VpcId             string   `json:"vpc_id"`
}
