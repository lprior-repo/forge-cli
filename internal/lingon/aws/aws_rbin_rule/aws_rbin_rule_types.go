// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_rbin_rule

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LockConfiguration struct {
	// LockConfigurationUnlockDelay is required.
	UnlockDelay *LockConfigurationUnlockDelay `hcl:"unlock_delay,block" validate:"required"`
}

type LockConfigurationUnlockDelay struct {
	// UnlockDelayUnit is required.
	UnlockDelayUnit terra.StringValue `hcl:"unlock_delay_unit,attr" validate:"required"`
	// UnlockDelayValue is required.
	UnlockDelayValue terra.NumberValue `hcl:"unlock_delay_value,attr" validate:"required"`
}

type ResourceTags struct {
	// ResourceTagKey is required.
	ResourceTagKey terra.StringValue `hcl:"resource_tag_key,attr" validate:"required"`
	// ResourceTagValue is optional.
	ResourceTagValue terra.StringValue `hcl:"resource_tag_value,attr"`
}

type RetentionPeriod struct {
	// RetentionPeriodUnit is required.
	RetentionPeriodUnit terra.StringValue `hcl:"retention_period_unit,attr" validate:"required"`
	// RetentionPeriodValue is required.
	RetentionPeriodValue terra.NumberValue `hcl:"retention_period_value,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type lockConfigurationAttributes struct {
	ref terra.Reference
}

func (lc lockConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc lockConfigurationAttributes) InternalWithRef(ref terra.Reference) lockConfigurationAttributes {
	return lockConfigurationAttributes{ref: ref}
}

func (lc lockConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc lockConfigurationAttributes) UnlockDelay() terra.ListValue[lockConfigurationUnlockDelayAttributes] {
	return terra.ReferenceAsList[lockConfigurationUnlockDelayAttributes](lc.ref.Append("unlock_delay"))
}

type lockConfigurationUnlockDelayAttributes struct {
	ref terra.Reference
}

func (ud lockConfigurationUnlockDelayAttributes) InternalRef() (terra.Reference, error) {
	return ud.ref, nil
}

func (ud lockConfigurationUnlockDelayAttributes) InternalWithRef(ref terra.Reference) lockConfigurationUnlockDelayAttributes {
	return lockConfigurationUnlockDelayAttributes{ref: ref}
}

func (ud lockConfigurationUnlockDelayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ud.ref.InternalTokens()
}

func (ud lockConfigurationUnlockDelayAttributes) UnlockDelayUnit() terra.StringValue {
	return terra.ReferenceAsString(ud.ref.Append("unlock_delay_unit"))
}

func (ud lockConfigurationUnlockDelayAttributes) UnlockDelayValue() terra.NumberValue {
	return terra.ReferenceAsNumber(ud.ref.Append("unlock_delay_value"))
}

type resourceTagsAttributes struct {
	ref terra.Reference
}

func (rt resourceTagsAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt resourceTagsAttributes) InternalWithRef(ref terra.Reference) resourceTagsAttributes {
	return resourceTagsAttributes{ref: ref}
}

func (rt resourceTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt resourceTagsAttributes) ResourceTagKey() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("resource_tag_key"))
}

func (rt resourceTagsAttributes) ResourceTagValue() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("resource_tag_value"))
}

type retentionPeriodAttributes struct {
	ref terra.Reference
}

func (rp retentionPeriodAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp retentionPeriodAttributes) InternalWithRef(ref terra.Reference) retentionPeriodAttributes {
	return retentionPeriodAttributes{ref: ref}
}

func (rp retentionPeriodAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp retentionPeriodAttributes) RetentionPeriodUnit() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("retention_period_unit"))
}

func (rp retentionPeriodAttributes) RetentionPeriodValue() terra.NumberValue {
	return terra.ReferenceAsNumber(rp.ref.Append("retention_period_value"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LockConfigurationState struct {
	UnlockDelay []LockConfigurationUnlockDelayState `json:"unlock_delay"`
}

type LockConfigurationUnlockDelayState struct {
	UnlockDelayUnit  string  `json:"unlock_delay_unit"`
	UnlockDelayValue float64 `json:"unlock_delay_value"`
}

type ResourceTagsState struct {
	ResourceTagKey   string `json:"resource_tag_key"`
	ResourceTagValue string `json:"resource_tag_value"`
}

type RetentionPeriodState struct {
	RetentionPeriodUnit  string  `json:"retention_period_unit"`
	RetentionPeriodValue float64 `json:"retention_period_value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
