// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_apigatewayv2_api

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CorsConfiguration struct {
	// AllowCredentials is optional.
	AllowCredentials terra.BoolValue `hcl:"allow_credentials,attr"`
	// AllowHeaders is optional.
	AllowHeaders terra.SetValue[terra.StringValue] `hcl:"allow_headers,attr"`
	// AllowMethods is optional.
	AllowMethods terra.SetValue[terra.StringValue] `hcl:"allow_methods,attr"`
	// AllowOrigins is optional.
	AllowOrigins terra.SetValue[terra.StringValue] `hcl:"allow_origins,attr"`
	// ExposeHeaders is optional.
	ExposeHeaders terra.SetValue[terra.StringValue] `hcl:"expose_headers,attr"`
	// MaxAge is optional.
	MaxAge terra.NumberValue `hcl:"max_age,attr"`
}

type corsConfigurationAttributes struct {
	ref terra.Reference
}

func (cc corsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc corsConfigurationAttributes) InternalWithRef(ref terra.Reference) corsConfigurationAttributes {
	return corsConfigurationAttributes{ref: ref}
}

func (cc corsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc corsConfigurationAttributes) AllowCredentials() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("allow_credentials"))
}

func (cc corsConfigurationAttributes) AllowHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allow_headers"))
}

func (cc corsConfigurationAttributes) AllowMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allow_methods"))
}

func (cc corsConfigurationAttributes) AllowOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allow_origins"))
}

func (cc corsConfigurationAttributes) ExposeHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("expose_headers"))
}

func (cc corsConfigurationAttributes) MaxAge() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("max_age"))
}

type CorsConfigurationState struct {
	AllowCredentials bool     `json:"allow_credentials"`
	AllowHeaders     []string `json:"allow_headers"`
	AllowMethods     []string `json:"allow_methods"`
	AllowOrigins     []string `json:"allow_origins"`
	ExposeHeaders    []string `json:"expose_headers"`
	MaxAge           float64  `json:"max_age"`
}
