// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_hours_of_operation

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataconfigAttributes struct {
	ref terra.Reference
}

func (c DataconfigAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DataconfigAttributes) InternalWithRef(ref terra.Reference) DataconfigAttributes {
	return DataconfigAttributes{ref: ref}
}

func (c DataconfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DataconfigAttributes) Day() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("day"))
}

func (c DataconfigAttributes) EndTime() terra.ListValue[DataconfigEndTimeAttributes] {
	return terra.ReferenceAsList[DataconfigEndTimeAttributes](c.ref.Append("end_time"))
}

func (c DataconfigAttributes) StartTime() terra.ListValue[DataconfigStartTimeAttributes] {
	return terra.ReferenceAsList[DataconfigStartTimeAttributes](c.ref.Append("start_time"))
}

type DataconfigEndTimeAttributes struct {
	ref terra.Reference
}

func (et DataconfigEndTimeAttributes) InternalRef() (terra.Reference, error) {
	return et.ref, nil
}

func (et DataconfigEndTimeAttributes) InternalWithRef(ref terra.Reference) DataconfigEndTimeAttributes {
	return DataconfigEndTimeAttributes{ref: ref}
}

func (et DataconfigEndTimeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return et.ref.InternalTokens()
}

func (et DataconfigEndTimeAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(et.ref.Append("hours"))
}

func (et DataconfigEndTimeAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(et.ref.Append("minutes"))
}

type DataconfigStartTimeAttributes struct {
	ref terra.Reference
}

func (st DataconfigStartTimeAttributes) InternalRef() (terra.Reference, error) {
	return st.ref, nil
}

func (st DataconfigStartTimeAttributes) InternalWithRef(ref terra.Reference) DataconfigStartTimeAttributes {
	return DataconfigStartTimeAttributes{ref: ref}
}

func (st DataconfigStartTimeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return st.ref.InternalTokens()
}

func (st DataconfigStartTimeAttributes) Hours() terra.NumberValue {
	return terra.ReferenceAsNumber(st.ref.Append("hours"))
}

func (st DataconfigStartTimeAttributes) Minutes() terra.NumberValue {
	return terra.ReferenceAsNumber(st.ref.Append("minutes"))
}

type DataConfigState struct {
	Day       string                     `json:"day"`
	EndTime   []DataConfigEndTimeState   `json:"end_time"`
	StartTime []DataConfigStartTimeState `json:"start_time"`
}

type DataConfigEndTimeState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
}

type DataConfigStartTimeState struct {
	Hours   float64 `json:"hours"`
	Minutes float64 `json:"minutes"`
}
