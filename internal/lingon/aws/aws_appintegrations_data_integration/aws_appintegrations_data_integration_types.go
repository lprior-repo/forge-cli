// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appintegrations_data_integration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ScheduleConfig struct {
	// FirstExecutionFrom is required.
	FirstExecutionFrom terra.StringValue `hcl:"first_execution_from,attr" validate:"required"`
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// ScheduleExpression is required.
	ScheduleExpression terra.StringValue `hcl:"schedule_expression,attr" validate:"required"`
}

type scheduleConfigAttributes struct {
	ref terra.Reference
}

func (sc scheduleConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc scheduleConfigAttributes) InternalWithRef(ref terra.Reference) scheduleConfigAttributes {
	return scheduleConfigAttributes{ref: ref}
}

func (sc scheduleConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc scheduleConfigAttributes) FirstExecutionFrom() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("first_execution_from"))
}

func (sc scheduleConfigAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("object"))
}

func (sc scheduleConfigAttributes) ScheduleExpression() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("schedule_expression"))
}

type ScheduleConfigState struct {
	FirstExecutionFrom string `json:"first_execution_from"`
	Object             string `json:"object"`
	ScheduleExpression string `json:"schedule_expression"`
}
