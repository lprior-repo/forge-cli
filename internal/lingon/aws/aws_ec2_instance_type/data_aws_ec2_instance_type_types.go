// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_instance_type

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read is optional.
	Read terra.StringValue `hcl:"read,attr"`
}

type DatafpgasAttributes struct {
	ref terra.Reference
}

func (f DatafpgasAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DatafpgasAttributes) InternalWithRef(ref terra.Reference) DatafpgasAttributes {
	return DatafpgasAttributes{ref: ref}
}

func (f DatafpgasAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DatafpgasAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(f.ref.Append("count"))
}

func (f DatafpgasAttributes) Manufacturer() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("manufacturer"))
}

func (f DatafpgasAttributes) MemorySize() terra.NumberValue {
	return terra.ReferenceAsNumber(f.ref.Append("memory_size"))
}

func (f DatafpgasAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

type DatagpusAttributes struct {
	ref terra.Reference
}

func (g DatagpusAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g DatagpusAttributes) InternalWithRef(ref terra.Reference) DatagpusAttributes {
	return DatagpusAttributes{ref: ref}
}

func (g DatagpusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g DatagpusAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("count"))
}

func (g DatagpusAttributes) Manufacturer() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("manufacturer"))
}

func (g DatagpusAttributes) MemorySize() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("memory_size"))
}

func (g DatagpusAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("name"))
}

type DatainferenceAcceleratorsAttributes struct {
	ref terra.Reference
}

func (ia DatainferenceAcceleratorsAttributes) InternalRef() (terra.Reference, error) {
	return ia.ref, nil
}

func (ia DatainferenceAcceleratorsAttributes) InternalWithRef(ref terra.Reference) DatainferenceAcceleratorsAttributes {
	return DatainferenceAcceleratorsAttributes{ref: ref}
}

func (ia DatainferenceAcceleratorsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ia.ref.InternalTokens()
}

func (ia DatainferenceAcceleratorsAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(ia.ref.Append("count"))
}

func (ia DatainferenceAcceleratorsAttributes) Manufacturer() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("manufacturer"))
}

func (ia DatainferenceAcceleratorsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ia.ref.Append("name"))
}

type DatainstanceDisksAttributes struct {
	ref terra.Reference
}

func (id DatainstanceDisksAttributes) InternalRef() (terra.Reference, error) {
	return id.ref, nil
}

func (id DatainstanceDisksAttributes) InternalWithRef(ref terra.Reference) DatainstanceDisksAttributes {
	return DatainstanceDisksAttributes{ref: ref}
}

func (id DatainstanceDisksAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return id.ref.InternalTokens()
}

func (id DatainstanceDisksAttributes) Count() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("count"))
}

func (id DatainstanceDisksAttributes) Size() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("size"))
}

func (id DatainstanceDisksAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("type"))
}

type DatatimeoutsAttributes struct {
	ref terra.Reference
}

func (t DatatimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DatatimeoutsAttributes) InternalWithRef(ref terra.Reference) DatatimeoutsAttributes {
	return DatatimeoutsAttributes{ref: ref}
}

func (t DatatimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DatatimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataFpgasState struct {
	Count        float64 `json:"count"`
	Manufacturer string  `json:"manufacturer"`
	MemorySize   float64 `json:"memory_size"`
	Name         string  `json:"name"`
}

type DataGpusState struct {
	Count        float64 `json:"count"`
	Manufacturer string  `json:"manufacturer"`
	MemorySize   float64 `json:"memory_size"`
	Name         string  `json:"name"`
}

type DataInferenceAcceleratorsState struct {
	Count        float64 `json:"count"`
	Manufacturer string  `json:"manufacturer"`
	Name         string  `json:"name"`
}

type DataInstanceDisksState struct {
	Count float64 `json:"count"`
	Size  float64 `json:"size"`
	Type  string  `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
