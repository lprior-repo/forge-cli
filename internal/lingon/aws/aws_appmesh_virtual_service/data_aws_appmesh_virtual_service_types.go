// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appmesh_virtual_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataspecAttributes struct {
	ref terra.Reference
}

func (s DataspecAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DataspecAttributes) InternalWithRef(ref terra.Reference) DataspecAttributes {
	return DataspecAttributes{ref: ref}
}

func (s DataspecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DataspecAttributes) Provider() terra.ListValue[DataspecProviderAttributes] {
	return terra.ReferenceAsList[DataspecProviderAttributes](s.ref.Append("provider"))
}

type DataspecProviderAttributes struct {
	ref terra.Reference
}

func (p DataspecProviderAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DataspecProviderAttributes) InternalWithRef(ref terra.Reference) DataspecProviderAttributes {
	return DataspecProviderAttributes{ref: ref}
}

func (p DataspecProviderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DataspecProviderAttributes) VirtualNode() terra.ListValue[DataspecProviderVirtualNodeAttributes] {
	return terra.ReferenceAsList[DataspecProviderVirtualNodeAttributes](p.ref.Append("virtual_node"))
}

func (p DataspecProviderAttributes) VirtualRouter() terra.ListValue[DataspecProviderVirtualRouterAttributes] {
	return terra.ReferenceAsList[DataspecProviderVirtualRouterAttributes](p.ref.Append("virtual_router"))
}

type DataspecProviderVirtualNodeAttributes struct {
	ref terra.Reference
}

func (vn DataspecProviderVirtualNodeAttributes) InternalRef() (terra.Reference, error) {
	return vn.ref, nil
}

func (vn DataspecProviderVirtualNodeAttributes) InternalWithRef(ref terra.Reference) DataspecProviderVirtualNodeAttributes {
	return DataspecProviderVirtualNodeAttributes{ref: ref}
}

func (vn DataspecProviderVirtualNodeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vn.ref.InternalTokens()
}

func (vn DataspecProviderVirtualNodeAttributes) VirtualNodeName() terra.StringValue {
	return terra.ReferenceAsString(vn.ref.Append("virtual_node_name"))
}

type DataspecProviderVirtualRouterAttributes struct {
	ref terra.Reference
}

func (vr DataspecProviderVirtualRouterAttributes) InternalRef() (terra.Reference, error) {
	return vr.ref, nil
}

func (vr DataspecProviderVirtualRouterAttributes) InternalWithRef(ref terra.Reference) DataspecProviderVirtualRouterAttributes {
	return DataspecProviderVirtualRouterAttributes{ref: ref}
}

func (vr DataspecProviderVirtualRouterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vr.ref.InternalTokens()
}

func (vr DataspecProviderVirtualRouterAttributes) VirtualRouterName() terra.StringValue {
	return terra.ReferenceAsString(vr.ref.Append("virtual_router_name"))
}

type DataSpecState struct {
	Provider []DataSpecProviderState `json:"provider"`
}

type DataSpecProviderState struct {
	VirtualNode   []DataSpecProviderVirtualNodeState   `json:"virtual_node"`
	VirtualRouter []DataSpecProviderVirtualRouterState `json:"virtual_router"`
}

type DataSpecProviderVirtualNodeState struct {
	VirtualNodeName string `json:"virtual_node_name"`
}

type DataSpecProviderVirtualRouterState struct {
	VirtualRouterName string `json:"virtual_router_name"`
}
