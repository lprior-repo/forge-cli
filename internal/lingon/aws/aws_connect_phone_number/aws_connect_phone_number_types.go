// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_phone_number

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type statusAttributes struct {
	ref terra.Reference
}

func (s statusAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s statusAttributes) InternalWithRef(ref terra.Reference) statusAttributes {
	return statusAttributes{ref: ref}
}

func (s statusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s statusAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("message"))
}

func (s statusAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("status"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type StatusState struct {
	Message string `json:"message"`
	Status  string `json:"status"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
