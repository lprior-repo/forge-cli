// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_medialive_multiplex

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MultiplexSettings struct {
	// MaximumVideoBufferDelayMilliseconds is optional.
	MaximumVideoBufferDelayMilliseconds terra.NumberValue `hcl:"maximum_video_buffer_delay_milliseconds,attr"`
	// TransportStreamBitrate is required.
	TransportStreamBitrate terra.NumberValue `hcl:"transport_stream_bitrate,attr" validate:"required"`
	// TransportStreamId is required.
	TransportStreamId terra.NumberValue `hcl:"transport_stream_id,attr" validate:"required"`
	// TransportStreamReservedBitrate is optional.
	TransportStreamReservedBitrate terra.NumberValue `hcl:"transport_stream_reserved_bitrate,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type multiplexSettingsAttributes struct {
	ref terra.Reference
}

func (ms multiplexSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms multiplexSettingsAttributes) InternalWithRef(ref terra.Reference) multiplexSettingsAttributes {
	return multiplexSettingsAttributes{ref: ref}
}

func (ms multiplexSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms multiplexSettingsAttributes) MaximumVideoBufferDelayMilliseconds() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("maximum_video_buffer_delay_milliseconds"))
}

func (ms multiplexSettingsAttributes) TransportStreamBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("transport_stream_bitrate"))
}

func (ms multiplexSettingsAttributes) TransportStreamId() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("transport_stream_id"))
}

func (ms multiplexSettingsAttributes) TransportStreamReservedBitrate() terra.NumberValue {
	return terra.ReferenceAsNumber(ms.ref.Append("transport_stream_reserved_bitrate"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type MultiplexSettingsState struct {
	MaximumVideoBufferDelayMilliseconds float64 `json:"maximum_video_buffer_delay_milliseconds"`
	TransportStreamBitrate              float64 `json:"transport_stream_bitrate"`
	TransportStreamId                   float64 `json:"transport_stream_id"`
	TransportStreamReservedBitrate      float64 `json:"transport_stream_reserved_bitrate"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
