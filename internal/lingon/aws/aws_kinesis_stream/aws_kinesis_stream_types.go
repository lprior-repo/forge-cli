// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kinesis_stream

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type StreamModeDetails struct {
	// StreamMode is required.
	StreamMode terra.StringValue `hcl:"stream_mode,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type streamModeDetailsAttributes struct {
	ref terra.Reference
}

func (smd streamModeDetailsAttributes) InternalRef() (terra.Reference, error) {
	return smd.ref, nil
}

func (smd streamModeDetailsAttributes) InternalWithRef(ref terra.Reference) streamModeDetailsAttributes {
	return streamModeDetailsAttributes{ref: ref}
}

func (smd streamModeDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return smd.ref.InternalTokens()
}

func (smd streamModeDetailsAttributes) StreamMode() terra.StringValue {
	return terra.ReferenceAsString(smd.ref.Append("stream_mode"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type StreamModeDetailsState struct {
	StreamMode string `json:"stream_mode"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
