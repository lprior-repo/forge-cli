// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_eks_node_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LaunchTemplate struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// Version is required.
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type RemoteAccess struct {
	// Ec2SshKey is optional.
	Ec2SshKey terra.StringValue `hcl:"ec2_ssh_key,attr"`
	// SourceSecurityGroupIds is optional.
	SourceSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"source_security_group_ids,attr"`
}

type ScalingConfig struct {
	// DesiredSize is required.
	DesiredSize terra.NumberValue `hcl:"desired_size,attr" validate:"required"`
	// MaxSize is required.
	MaxSize terra.NumberValue `hcl:"max_size,attr" validate:"required"`
	// MinSize is required.
	MinSize terra.NumberValue `hcl:"min_size,attr" validate:"required"`
}

type Taint struct {
	// Effect is required.
	Effect terra.StringValue `hcl:"effect,attr" validate:"required"`
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type UpdateConfig struct {
	// MaxUnavailable is optional.
	MaxUnavailable terra.NumberValue `hcl:"max_unavailable,attr"`
	// MaxUnavailablePercentage is optional.
	MaxUnavailablePercentage terra.NumberValue `hcl:"max_unavailable_percentage,attr"`
}

type resourcesAttributes struct {
	ref terra.Reference
}

func (r resourcesAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r resourcesAttributes) InternalWithRef(ref terra.Reference) resourcesAttributes {
	return resourcesAttributes{ref: ref}
}

func (r resourcesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r resourcesAttributes) RemoteAccessSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("remote_access_security_group_id"))
}

func (r resourcesAttributes) AutoscalingGroups() terra.ListValue[resourcesAutoscalingGroupsAttributes] {
	return terra.ReferenceAsList[resourcesAutoscalingGroupsAttributes](r.ref.Append("autoscaling_groups"))
}

type resourcesAutoscalingGroupsAttributes struct {
	ref terra.Reference
}

func (ag resourcesAutoscalingGroupsAttributes) InternalRef() (terra.Reference, error) {
	return ag.ref, nil
}

func (ag resourcesAutoscalingGroupsAttributes) InternalWithRef(ref terra.Reference) resourcesAutoscalingGroupsAttributes {
	return resourcesAutoscalingGroupsAttributes{ref: ref}
}

func (ag resourcesAutoscalingGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ag.ref.InternalTokens()
}

func (ag resourcesAutoscalingGroupsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ag.ref.Append("name"))
}

type launchTemplateAttributes struct {
	ref terra.Reference
}

func (lt launchTemplateAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt launchTemplateAttributes) InternalWithRef(ref terra.Reference) launchTemplateAttributes {
	return launchTemplateAttributes{ref: ref}
}

func (lt launchTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt launchTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt launchTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

func (lt launchTemplateAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("version"))
}

type remoteAccessAttributes struct {
	ref terra.Reference
}

func (ra remoteAccessAttributes) InternalRef() (terra.Reference, error) {
	return ra.ref, nil
}

func (ra remoteAccessAttributes) InternalWithRef(ref terra.Reference) remoteAccessAttributes {
	return remoteAccessAttributes{ref: ref}
}

func (ra remoteAccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ra.ref.InternalTokens()
}

func (ra remoteAccessAttributes) Ec2SshKey() terra.StringValue {
	return terra.ReferenceAsString(ra.ref.Append("ec2_ssh_key"))
}

func (ra remoteAccessAttributes) SourceSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ra.ref.Append("source_security_group_ids"))
}

type scalingConfigAttributes struct {
	ref terra.Reference
}

func (sc scalingConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc scalingConfigAttributes) InternalWithRef(ref terra.Reference) scalingConfigAttributes {
	return scalingConfigAttributes{ref: ref}
}

func (sc scalingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc scalingConfigAttributes) DesiredSize() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("desired_size"))
}

func (sc scalingConfigAttributes) MaxSize() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("max_size"))
}

func (sc scalingConfigAttributes) MinSize() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("min_size"))
}

type taintAttributes struct {
	ref terra.Reference
}

func (t taintAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t taintAttributes) InternalWithRef(ref terra.Reference) taintAttributes {
	return taintAttributes{ref: ref}
}

func (t taintAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t taintAttributes) Effect() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("effect"))
}

func (t taintAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t taintAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type updateConfigAttributes struct {
	ref terra.Reference
}

func (uc updateConfigAttributes) InternalRef() (terra.Reference, error) {
	return uc.ref, nil
}

func (uc updateConfigAttributes) InternalWithRef(ref terra.Reference) updateConfigAttributes {
	return updateConfigAttributes{ref: ref}
}

func (uc updateConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uc.ref.InternalTokens()
}

func (uc updateConfigAttributes) MaxUnavailable() terra.NumberValue {
	return terra.ReferenceAsNumber(uc.ref.Append("max_unavailable"))
}

func (uc updateConfigAttributes) MaxUnavailablePercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(uc.ref.Append("max_unavailable_percentage"))
}

type ResourcesState struct {
	RemoteAccessSecurityGroupId string                            `json:"remote_access_security_group_id"`
	AutoscalingGroups           []ResourcesAutoscalingGroupsState `json:"autoscaling_groups"`
}

type ResourcesAutoscalingGroupsState struct {
	Name string `json:"name"`
}

type LaunchTemplateState struct {
	Id      string `json:"id"`
	Name    string `json:"name"`
	Version string `json:"version"`
}

type RemoteAccessState struct {
	Ec2SshKey              string   `json:"ec2_ssh_key"`
	SourceSecurityGroupIds []string `json:"source_security_group_ids"`
}

type ScalingConfigState struct {
	DesiredSize float64 `json:"desired_size"`
	MaxSize     float64 `json:"max_size"`
	MinSize     float64 `json:"min_size"`
}

type TaintState struct {
	Effect string `json:"effect"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type UpdateConfigState struct {
	MaxUnavailable           float64 `json:"max_unavailable"`
	MaxUnavailablePercentage float64 `json:"max_unavailable_percentage"`
}
