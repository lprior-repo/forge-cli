// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkfirewall_rule_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type EncryptionConfiguration struct {
	// KeyId is optional.
	KeyId terra.StringValue `hcl:"key_id,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type RuleGroup struct {
	// RuleGroupReferenceSets is optional.
	ReferenceSets *RuleGroupReferenceSets `hcl:"reference_sets,block"`
	// RuleGroupRuleVariables is optional.
	RuleVariables *RuleGroupRuleVariables `hcl:"rule_variables,block"`
	// RuleGroupRulesSource is required.
	RulesSource *RuleGroupRulesSource `hcl:"rules_source,block" validate:"required"`
	// RuleGroupStatefulRuleOptions is optional.
	StatefulRuleOptions *RuleGroupStatefulRuleOptions `hcl:"stateful_rule_options,block"`
}

type RuleGroupReferenceSets struct {
	// RuleGroupReferenceSetsIpSetReferences is min=0,max=5.
	IpSetReferences []RuleGroupReferenceSetsIpSetReferences `hcl:"ip_set_references,block" validate:"min=0,max=5"`
}

type RuleGroupReferenceSetsIpSetReferences struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// RuleGroupReferenceSetsIpSetReferencesIpSetReference is min=1.
	IpSetReference []RuleGroupReferenceSetsIpSetReferencesIpSetReference `hcl:"ip_set_reference,block" validate:"min=1"`
}

type RuleGroupReferenceSetsIpSetReferencesIpSetReference struct {
	// ReferenceArn is required.
	ReferenceArn terra.StringValue `hcl:"reference_arn,attr" validate:"required"`
}

type RuleGroupRuleVariables struct {
	// RuleGroupRuleVariablesIpSets is min=0.
	IpSets []RuleGroupRuleVariablesIpSets `hcl:"ip_sets,block" validate:"min=0"`
	// RuleGroupRuleVariablesPortSets is min=0.
	PortSets []RuleGroupRuleVariablesPortSets `hcl:"port_sets,block" validate:"min=0"`
}

type RuleGroupRuleVariablesIpSets struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// RuleGroupRuleVariablesIpSetsIpSet is required.
	IpSet *RuleGroupRuleVariablesIpSetsIpSet `hcl:"ip_set,block" validate:"required"`
}

type RuleGroupRuleVariablesIpSetsIpSet struct {
	// Definition is required.
	Definition terra.SetValue[terra.StringValue] `hcl:"definition,attr" validate:"required"`
}

type RuleGroupRuleVariablesPortSets struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// RuleGroupRuleVariablesPortSetsPortSet is required.
	PortSet *RuleGroupRuleVariablesPortSetsPortSet `hcl:"port_set,block" validate:"required"`
}

type RuleGroupRuleVariablesPortSetsPortSet struct {
	// Definition is required.
	Definition terra.SetValue[terra.StringValue] `hcl:"definition,attr" validate:"required"`
}

type RuleGroupRulesSource struct {
	// RulesString is optional.
	RulesString terra.StringValue `hcl:"rules_string,attr"`
	// RuleGroupRulesSourceRulesSourceList is optional.
	RulesSourceList *RuleGroupRulesSourceRulesSourceList `hcl:"rules_source_list,block"`
	// RuleGroupRulesSourceStatefulRule is min=0.
	StatefulRule []RuleGroupRulesSourceStatefulRule `hcl:"stateful_rule,block" validate:"min=0"`
	// RuleGroupRulesSourceStatelessRulesAndCustomActions is optional.
	StatelessRulesAndCustomActions *RuleGroupRulesSourceStatelessRulesAndCustomActions `hcl:"stateless_rules_and_custom_actions,block"`
}

type RuleGroupRulesSourceRulesSourceList struct {
	// GeneratedRulesType is required.
	GeneratedRulesType terra.StringValue `hcl:"generated_rules_type,attr" validate:"required"`
	// TargetTypes is required.
	TargetTypes terra.SetValue[terra.StringValue] `hcl:"target_types,attr" validate:"required"`
	// Targets is required.
	Targets terra.SetValue[terra.StringValue] `hcl:"targets,attr" validate:"required"`
}

type RuleGroupRulesSourceStatefulRule struct {
	// Action is required.
	Action terra.StringValue `hcl:"action,attr" validate:"required"`
	// RuleGroupRulesSourceStatefulRuleHeader is required.
	Header *RuleGroupRulesSourceStatefulRuleHeader `hcl:"header,block" validate:"required"`
	// RuleGroupRulesSourceStatefulRuleRuleOption is min=1.
	RuleOption []RuleGroupRulesSourceStatefulRuleRuleOption `hcl:"rule_option,block" validate:"min=1"`
}

type RuleGroupRulesSourceStatefulRuleHeader struct {
	// Destination is required.
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
	// DestinationPort is required.
	DestinationPort terra.StringValue `hcl:"destination_port,attr" validate:"required"`
	// Direction is required.
	Direction terra.StringValue `hcl:"direction,attr" validate:"required"`
	// Protocol is required.
	Protocol terra.StringValue `hcl:"protocol,attr" validate:"required"`
	// Source is required.
	Source terra.StringValue `hcl:"source,attr" validate:"required"`
	// SourcePort is required.
	SourcePort terra.StringValue `hcl:"source_port,attr" validate:"required"`
}

type RuleGroupRulesSourceStatefulRuleRuleOption struct {
	// Keyword is required.
	Keyword terra.StringValue `hcl:"keyword,attr" validate:"required"`
	// Settings is optional.
	Settings terra.SetValue[terra.StringValue] `hcl:"settings,attr"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActions struct {
	// RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction is min=0.
	CustomAction []RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction `hcl:"custom_action,block" validate:"min=0"`
	// RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule is min=1.
	StatelessRule []RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule `hcl:"stateless_rule,block" validate:"min=1"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction struct {
	// ActionName is required.
	ActionName terra.StringValue `hcl:"action_name,attr" validate:"required"`
	// RuleGroupRulesSourceC2200B43 is required.
	ActionDefinition *RuleGroupRulesSourceC2200B43 `hcl:"action_definition,block" validate:"required"`
}

type RuleGroupRulesSourceC2200B43 struct {
	// RuleGroupRulesSource74D8Efc9 is required.
	PublishMetricAction *RuleGroupRulesSource74D8Efc9 `hcl:"publish_metric_action,block" validate:"required"`
}

type RuleGroupRulesSource74D8Efc9 struct {
	// RuleGroupRulesSource48Bbca71 is min=1.
	Dimension []RuleGroupRulesSource48Bbca71 `hcl:"dimension,block" validate:"min=1"`
}

type RuleGroupRulesSource48Bbca71 struct {
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule struct {
	// Priority is required.
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// RuleGroupRulesSourceD738Becd is required.
	RuleDefinition *RuleGroupRulesSourceD738Becd `hcl:"rule_definition,block" validate:"required"`
}

type RuleGroupRulesSourceD738Becd struct {
	// Actions is required.
	Actions terra.SetValue[terra.StringValue] `hcl:"actions,attr" validate:"required"`
	// RuleGroupRulesSource277A1Fd1 is required.
	MatchAttributes *RuleGroupRulesSource277A1Fd1 `hcl:"match_attributes,block" validate:"required"`
}

type RuleGroupRulesSource277A1Fd1 struct {
	// Protocols is optional.
	Protocols terra.SetValue[terra.NumberValue] `hcl:"protocols,attr"`
	// RuleGroupRulesSource99659C25 is min=0.
	Destination []RuleGroupRulesSource99659C25 `hcl:"destination,block" validate:"min=0"`
	// RuleGroupRulesSourceEc4Ebdc4 is min=0.
	DestinationPort []RuleGroupRulesSourceEc4Ebdc4 `hcl:"destination_port,block" validate:"min=0"`
	// RuleGroupRulesSourceAa10E72F is min=0.
	Source []RuleGroupRulesSourceAa10E72F `hcl:"source,block" validate:"min=0"`
	// RuleGroupRulesSourceF5A90E80 is min=0.
	SourcePort []RuleGroupRulesSourceF5A90E80 `hcl:"source_port,block" validate:"min=0"`
	// RuleGroupRulesSourceF034F184 is min=0.
	TcpFlag []RuleGroupRulesSourceF034F184 `hcl:"tcp_flag,block" validate:"min=0"`
}

type RuleGroupRulesSource99659C25 struct {
	// AddressDefinition is required.
	AddressDefinition terra.StringValue `hcl:"address_definition,attr" validate:"required"`
}

type RuleGroupRulesSourceEc4Ebdc4 struct {
	// FromPort is required.
	FromPort terra.NumberValue `hcl:"from_port,attr" validate:"required"`
	// ToPort is optional.
	ToPort terra.NumberValue `hcl:"to_port,attr"`
}

type RuleGroupRulesSourceAa10E72F struct {
	// AddressDefinition is required.
	AddressDefinition terra.StringValue `hcl:"address_definition,attr" validate:"required"`
}

type RuleGroupRulesSourceF5A90E80 struct {
	// FromPort is required.
	FromPort terra.NumberValue `hcl:"from_port,attr" validate:"required"`
	// ToPort is optional.
	ToPort terra.NumberValue `hcl:"to_port,attr"`
}

type RuleGroupRulesSourceF034F184 struct {
	// Flags is required.
	Flags terra.SetValue[terra.StringValue] `hcl:"flags,attr" validate:"required"`
	// Masks is optional.
	Masks terra.SetValue[terra.StringValue] `hcl:"masks,attr"`
}

type RuleGroupStatefulRuleOptions struct {
	// RuleOrder is required.
	RuleOrder terra.StringValue `hcl:"rule_order,attr" validate:"required"`
}

type encryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec encryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec encryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) encryptionConfigurationAttributes {
	return encryptionConfigurationAttributes{ref: ref}
}

func (ec encryptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec encryptionConfigurationAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

func (ec encryptionConfigurationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("type"))
}

type ruleGroupAttributes struct {
	ref terra.Reference
}

func (rg ruleGroupAttributes) InternalRef() (terra.Reference, error) {
	return rg.ref, nil
}

func (rg ruleGroupAttributes) InternalWithRef(ref terra.Reference) ruleGroupAttributes {
	return ruleGroupAttributes{ref: ref}
}

func (rg ruleGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rg.ref.InternalTokens()
}

func (rg ruleGroupAttributes) ReferenceSets() terra.ListValue[ruleGroupReferenceSetsAttributes] {
	return terra.ReferenceAsList[ruleGroupReferenceSetsAttributes](rg.ref.Append("reference_sets"))
}

func (rg ruleGroupAttributes) RuleVariables() terra.ListValue[ruleGroupRuleVariablesAttributes] {
	return terra.ReferenceAsList[ruleGroupRuleVariablesAttributes](rg.ref.Append("rule_variables"))
}

func (rg ruleGroupAttributes) RulesSource() terra.ListValue[ruleGroupRulesSourceAttributes] {
	return terra.ReferenceAsList[ruleGroupRulesSourceAttributes](rg.ref.Append("rules_source"))
}

func (rg ruleGroupAttributes) StatefulRuleOptions() terra.ListValue[ruleGroupStatefulRuleOptionsAttributes] {
	return terra.ReferenceAsList[ruleGroupStatefulRuleOptionsAttributes](rg.ref.Append("stateful_rule_options"))
}

type ruleGroupReferenceSetsAttributes struct {
	ref terra.Reference
}

func (rs ruleGroupReferenceSetsAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs ruleGroupReferenceSetsAttributes) InternalWithRef(ref terra.Reference) ruleGroupReferenceSetsAttributes {
	return ruleGroupReferenceSetsAttributes{ref: ref}
}

func (rs ruleGroupReferenceSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs ruleGroupReferenceSetsAttributes) IpSetReferences() terra.SetValue[ruleGroupReferenceSetsIpSetReferencesAttributes] {
	return terra.ReferenceAsSet[ruleGroupReferenceSetsIpSetReferencesAttributes](rs.ref.Append("ip_set_references"))
}

type ruleGroupReferenceSetsIpSetReferencesAttributes struct {
	ref terra.Reference
}

func (isr ruleGroupReferenceSetsIpSetReferencesAttributes) InternalRef() (terra.Reference, error) {
	return isr.ref, nil
}

func (isr ruleGroupReferenceSetsIpSetReferencesAttributes) InternalWithRef(ref terra.Reference) ruleGroupReferenceSetsIpSetReferencesAttributes {
	return ruleGroupReferenceSetsIpSetReferencesAttributes{ref: ref}
}

func (isr ruleGroupReferenceSetsIpSetReferencesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isr.ref.InternalTokens()
}

func (isr ruleGroupReferenceSetsIpSetReferencesAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("key"))
}

func (isr ruleGroupReferenceSetsIpSetReferencesAttributes) IpSetReference() terra.ListValue[ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes] {
	return terra.ReferenceAsList[ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes](isr.ref.Append("ip_set_reference"))
}

type ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes struct {
	ref terra.Reference
}

func (isr ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) InternalRef() (terra.Reference, error) {
	return isr.ref, nil
}

func (isr ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) InternalWithRef(ref terra.Reference) ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes {
	return ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes{ref: ref}
}

func (isr ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isr.ref.InternalTokens()
}

func (isr ruleGroupReferenceSetsIpSetReferencesIpSetReferenceAttributes) ReferenceArn() terra.StringValue {
	return terra.ReferenceAsString(isr.ref.Append("reference_arn"))
}

type ruleGroupRuleVariablesAttributes struct {
	ref terra.Reference
}

func (rv ruleGroupRuleVariablesAttributes) InternalRef() (terra.Reference, error) {
	return rv.ref, nil
}

func (rv ruleGroupRuleVariablesAttributes) InternalWithRef(ref terra.Reference) ruleGroupRuleVariablesAttributes {
	return ruleGroupRuleVariablesAttributes{ref: ref}
}

func (rv ruleGroupRuleVariablesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rv.ref.InternalTokens()
}

func (rv ruleGroupRuleVariablesAttributes) IpSets() terra.SetValue[ruleGroupRuleVariablesIpSetsAttributes] {
	return terra.ReferenceAsSet[ruleGroupRuleVariablesIpSetsAttributes](rv.ref.Append("ip_sets"))
}

func (rv ruleGroupRuleVariablesAttributes) PortSets() terra.SetValue[ruleGroupRuleVariablesPortSetsAttributes] {
	return terra.ReferenceAsSet[ruleGroupRuleVariablesPortSetsAttributes](rv.ref.Append("port_sets"))
}

type ruleGroupRuleVariablesIpSetsAttributes struct {
	ref terra.Reference
}

func (is ruleGroupRuleVariablesIpSetsAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is ruleGroupRuleVariablesIpSetsAttributes) InternalWithRef(ref terra.Reference) ruleGroupRuleVariablesIpSetsAttributes {
	return ruleGroupRuleVariablesIpSetsAttributes{ref: ref}
}

func (is ruleGroupRuleVariablesIpSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is ruleGroupRuleVariablesIpSetsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("key"))
}

func (is ruleGroupRuleVariablesIpSetsAttributes) IpSet() terra.ListValue[ruleGroupRuleVariablesIpSetsIpSetAttributes] {
	return terra.ReferenceAsList[ruleGroupRuleVariablesIpSetsIpSetAttributes](is.ref.Append("ip_set"))
}

type ruleGroupRuleVariablesIpSetsIpSetAttributes struct {
	ref terra.Reference
}

func (is ruleGroupRuleVariablesIpSetsIpSetAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is ruleGroupRuleVariablesIpSetsIpSetAttributes) InternalWithRef(ref terra.Reference) ruleGroupRuleVariablesIpSetsIpSetAttributes {
	return ruleGroupRuleVariablesIpSetsIpSetAttributes{ref: ref}
}

func (is ruleGroupRuleVariablesIpSetsIpSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is ruleGroupRuleVariablesIpSetsIpSetAttributes) Definition() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](is.ref.Append("definition"))
}

type ruleGroupRuleVariablesPortSetsAttributes struct {
	ref terra.Reference
}

func (ps ruleGroupRuleVariablesPortSetsAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps ruleGroupRuleVariablesPortSetsAttributes) InternalWithRef(ref terra.Reference) ruleGroupRuleVariablesPortSetsAttributes {
	return ruleGroupRuleVariablesPortSetsAttributes{ref: ref}
}

func (ps ruleGroupRuleVariablesPortSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps ruleGroupRuleVariablesPortSetsAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ps.ref.Append("key"))
}

func (ps ruleGroupRuleVariablesPortSetsAttributes) PortSet() terra.ListValue[ruleGroupRuleVariablesPortSetsPortSetAttributes] {
	return terra.ReferenceAsList[ruleGroupRuleVariablesPortSetsPortSetAttributes](ps.ref.Append("port_set"))
}

type ruleGroupRuleVariablesPortSetsPortSetAttributes struct {
	ref terra.Reference
}

func (ps ruleGroupRuleVariablesPortSetsPortSetAttributes) InternalRef() (terra.Reference, error) {
	return ps.ref, nil
}

func (ps ruleGroupRuleVariablesPortSetsPortSetAttributes) InternalWithRef(ref terra.Reference) ruleGroupRuleVariablesPortSetsPortSetAttributes {
	return ruleGroupRuleVariablesPortSetsPortSetAttributes{ref: ref}
}

func (ps ruleGroupRuleVariablesPortSetsPortSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ps.ref.InternalTokens()
}

func (ps ruleGroupRuleVariablesPortSetsPortSetAttributes) Definition() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ps.ref.Append("definition"))
}

type ruleGroupRulesSourceAttributes struct {
	ref terra.Reference
}

func (rs ruleGroupRulesSourceAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs ruleGroupRulesSourceAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceAttributes {
	return ruleGroupRulesSourceAttributes{ref: ref}
}

func (rs ruleGroupRulesSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs ruleGroupRulesSourceAttributes) RulesString() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("rules_string"))
}

func (rs ruleGroupRulesSourceAttributes) RulesSourceList() terra.ListValue[ruleGroupRulesSourceRulesSourceListAttributes] {
	return terra.ReferenceAsList[ruleGroupRulesSourceRulesSourceListAttributes](rs.ref.Append("rules_source_list"))
}

func (rs ruleGroupRulesSourceAttributes) StatefulRule() terra.ListValue[ruleGroupRulesSourceStatefulRuleAttributes] {
	return terra.ReferenceAsList[ruleGroupRulesSourceStatefulRuleAttributes](rs.ref.Append("stateful_rule"))
}

func (rs ruleGroupRulesSourceAttributes) StatelessRulesAndCustomActions() terra.ListValue[ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes] {
	return terra.ReferenceAsList[ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes](rs.ref.Append("stateless_rules_and_custom_actions"))
}

type ruleGroupRulesSourceRulesSourceListAttributes struct {
	ref terra.Reference
}

func (rsl ruleGroupRulesSourceRulesSourceListAttributes) InternalRef() (terra.Reference, error) {
	return rsl.ref, nil
}

func (rsl ruleGroupRulesSourceRulesSourceListAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceRulesSourceListAttributes {
	return ruleGroupRulesSourceRulesSourceListAttributes{ref: ref}
}

func (rsl ruleGroupRulesSourceRulesSourceListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsl.ref.InternalTokens()
}

func (rsl ruleGroupRulesSourceRulesSourceListAttributes) GeneratedRulesType() terra.StringValue {
	return terra.ReferenceAsString(rsl.ref.Append("generated_rules_type"))
}

func (rsl ruleGroupRulesSourceRulesSourceListAttributes) TargetTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rsl.ref.Append("target_types"))
}

func (rsl ruleGroupRulesSourceRulesSourceListAttributes) Targets() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rsl.ref.Append("targets"))
}

type ruleGroupRulesSourceStatefulRuleAttributes struct {
	ref terra.Reference
}

func (sr ruleGroupRulesSourceStatefulRuleAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr ruleGroupRulesSourceStatefulRuleAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceStatefulRuleAttributes {
	return ruleGroupRulesSourceStatefulRuleAttributes{ref: ref}
}

func (sr ruleGroupRulesSourceStatefulRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr ruleGroupRulesSourceStatefulRuleAttributes) Action() terra.StringValue {
	return terra.ReferenceAsString(sr.ref.Append("action"))
}

func (sr ruleGroupRulesSourceStatefulRuleAttributes) Header() terra.ListValue[ruleGroupRulesSourceStatefulRuleHeaderAttributes] {
	return terra.ReferenceAsList[ruleGroupRulesSourceStatefulRuleHeaderAttributes](sr.ref.Append("header"))
}

func (sr ruleGroupRulesSourceStatefulRuleAttributes) RuleOption() terra.SetValue[ruleGroupRulesSourceStatefulRuleRuleOptionAttributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSourceStatefulRuleRuleOptionAttributes](sr.ref.Append("rule_option"))
}

type ruleGroupRulesSourceStatefulRuleHeaderAttributes struct {
	ref terra.Reference
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceStatefulRuleHeaderAttributes {
	return ruleGroupRulesSourceStatefulRuleHeaderAttributes{ref: ref}
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("destination"))
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) DestinationPort() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("destination_port"))
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("direction"))
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("protocol"))
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("source"))
}

func (h ruleGroupRulesSourceStatefulRuleHeaderAttributes) SourcePort() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("source_port"))
}

type ruleGroupRulesSourceStatefulRuleRuleOptionAttributes struct {
	ref terra.Reference
}

func (ro ruleGroupRulesSourceStatefulRuleRuleOptionAttributes) InternalRef() (terra.Reference, error) {
	return ro.ref, nil
}

func (ro ruleGroupRulesSourceStatefulRuleRuleOptionAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceStatefulRuleRuleOptionAttributes {
	return ruleGroupRulesSourceStatefulRuleRuleOptionAttributes{ref: ref}
}

func (ro ruleGroupRulesSourceStatefulRuleRuleOptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ro.ref.InternalTokens()
}

func (ro ruleGroupRulesSourceStatefulRuleRuleOptionAttributes) Keyword() terra.StringValue {
	return terra.ReferenceAsString(ro.ref.Append("keyword"))
}

func (ro ruleGroupRulesSourceStatefulRuleRuleOptionAttributes) Settings() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ro.ref.Append("settings"))
}

type ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes struct {
	ref terra.Reference
}

func (sraca ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) InternalRef() (terra.Reference, error) {
	return sraca.ref, nil
}

func (sraca ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes {
	return ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes{ref: ref}
}

func (sraca ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sraca.ref.InternalTokens()
}

func (sraca ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) CustomAction() terra.SetValue[ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes](sraca.ref.Append("custom_action"))
}

func (sraca ruleGroupRulesSourceStatelessRulesAndCustomActionsAttributes) StatelessRule() terra.SetValue[ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes](sraca.ref.Append("stateless_rule"))
}

type ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes struct {
	ref terra.Reference
}

func (ca ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes {
	return ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes{ref: ref}
}

func (ca ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) ActionName() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("action_name"))
}

func (ca ruleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionAttributes) ActionDefinition() terra.ListValue[ruleGroupRulesSourceC2200B43Attributes] {
	return terra.ReferenceAsList[ruleGroupRulesSourceC2200B43Attributes](ca.ref.Append("action_definition"))
}

type ruleGroupRulesSourceC2200B43Attributes struct {
	ref terra.Reference
}

func (ad ruleGroupRulesSourceC2200B43Attributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad ruleGroupRulesSourceC2200B43Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceC2200B43Attributes {
	return ruleGroupRulesSourceC2200B43Attributes{ref: ref}
}

func (ad ruleGroupRulesSourceC2200B43Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ad.ref.InternalTokens()
}

func (ad ruleGroupRulesSourceC2200B43Attributes) PublishMetricAction() terra.ListValue[ruleGroupRulesSource74D8Efc9Attributes] {
	return terra.ReferenceAsList[ruleGroupRulesSource74D8Efc9Attributes](ad.ref.Append("publish_metric_action"))
}

type ruleGroupRulesSource74D8Efc9Attributes struct {
	ref terra.Reference
}

func (pma ruleGroupRulesSource74D8Efc9Attributes) InternalRef() (terra.Reference, error) {
	return pma.ref, nil
}

func (pma ruleGroupRulesSource74D8Efc9Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSource74D8Efc9Attributes {
	return ruleGroupRulesSource74D8Efc9Attributes{ref: ref}
}

func (pma ruleGroupRulesSource74D8Efc9Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pma.ref.InternalTokens()
}

func (pma ruleGroupRulesSource74D8Efc9Attributes) Dimension() terra.SetValue[ruleGroupRulesSource48Bbca71Attributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSource48Bbca71Attributes](pma.ref.Append("dimension"))
}

type ruleGroupRulesSource48Bbca71Attributes struct {
	ref terra.Reference
}

func (d ruleGroupRulesSource48Bbca71Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d ruleGroupRulesSource48Bbca71Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSource48Bbca71Attributes {
	return ruleGroupRulesSource48Bbca71Attributes{ref: ref}
}

func (d ruleGroupRulesSource48Bbca71Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d ruleGroupRulesSource48Bbca71Attributes) Value() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("value"))
}

type ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes struct {
	ref terra.Reference
}

func (sr ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) InternalRef() (terra.Reference, error) {
	return sr.ref, nil
}

func (sr ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes {
	return ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes{ref: ref}
}

func (sr ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sr.ref.InternalTokens()
}

func (sr ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(sr.ref.Append("priority"))
}

func (sr ruleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleAttributes) RuleDefinition() terra.ListValue[ruleGroupRulesSourceD738BecdAttributes] {
	return terra.ReferenceAsList[ruleGroupRulesSourceD738BecdAttributes](sr.ref.Append("rule_definition"))
}

type ruleGroupRulesSourceD738BecdAttributes struct {
	ref terra.Reference
}

func (rd ruleGroupRulesSourceD738BecdAttributes) InternalRef() (terra.Reference, error) {
	return rd.ref, nil
}

func (rd ruleGroupRulesSourceD738BecdAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceD738BecdAttributes {
	return ruleGroupRulesSourceD738BecdAttributes{ref: ref}
}

func (rd ruleGroupRulesSourceD738BecdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rd.ref.InternalTokens()
}

func (rd ruleGroupRulesSourceD738BecdAttributes) Actions() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rd.ref.Append("actions"))
}

func (rd ruleGroupRulesSourceD738BecdAttributes) MatchAttributes() terra.ListValue[ruleGroupRulesSource277A1Fd1Attributes] {
	return terra.ReferenceAsList[ruleGroupRulesSource277A1Fd1Attributes](rd.ref.Append("match_attributes"))
}

type ruleGroupRulesSource277A1Fd1Attributes struct {
	ref terra.Reference
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) InternalRef() (terra.Reference, error) {
	return ma.ref, nil
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSource277A1Fd1Attributes {
	return ruleGroupRulesSource277A1Fd1Attributes{ref: ref}
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ma.ref.InternalTokens()
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) Protocols() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](ma.ref.Append("protocols"))
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) Destination() terra.SetValue[ruleGroupRulesSource99659C25Attributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSource99659C25Attributes](ma.ref.Append("destination"))
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) DestinationPort() terra.SetValue[ruleGroupRulesSourceEc4Ebdc4Attributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSourceEc4Ebdc4Attributes](ma.ref.Append("destination_port"))
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) Source() terra.SetValue[ruleGroupRulesSourceAa10E72FAttributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSourceAa10E72FAttributes](ma.ref.Append("source"))
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) SourcePort() terra.SetValue[ruleGroupRulesSourceF5A90E80Attributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSourceF5A90E80Attributes](ma.ref.Append("source_port"))
}

func (ma ruleGroupRulesSource277A1Fd1Attributes) TcpFlag() terra.SetValue[ruleGroupRulesSourceF034F184Attributes] {
	return terra.ReferenceAsSet[ruleGroupRulesSourceF034F184Attributes](ma.ref.Append("tcp_flag"))
}

type ruleGroupRulesSource99659C25Attributes struct {
	ref terra.Reference
}

func (d ruleGroupRulesSource99659C25Attributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d ruleGroupRulesSource99659C25Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSource99659C25Attributes {
	return ruleGroupRulesSource99659C25Attributes{ref: ref}
}

func (d ruleGroupRulesSource99659C25Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d ruleGroupRulesSource99659C25Attributes) AddressDefinition() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("address_definition"))
}

type ruleGroupRulesSourceEc4Ebdc4Attributes struct {
	ref terra.Reference
}

func (dp ruleGroupRulesSourceEc4Ebdc4Attributes) InternalRef() (terra.Reference, error) {
	return dp.ref, nil
}

func (dp ruleGroupRulesSourceEc4Ebdc4Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceEc4Ebdc4Attributes {
	return ruleGroupRulesSourceEc4Ebdc4Attributes{ref: ref}
}

func (dp ruleGroupRulesSourceEc4Ebdc4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return dp.ref.InternalTokens()
}

func (dp ruleGroupRulesSourceEc4Ebdc4Attributes) FromPort() terra.NumberValue {
	return terra.ReferenceAsNumber(dp.ref.Append("from_port"))
}

func (dp ruleGroupRulesSourceEc4Ebdc4Attributes) ToPort() terra.NumberValue {
	return terra.ReferenceAsNumber(dp.ref.Append("to_port"))
}

type ruleGroupRulesSourceAa10E72FAttributes struct {
	ref terra.Reference
}

func (s ruleGroupRulesSourceAa10E72FAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s ruleGroupRulesSourceAa10E72FAttributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceAa10E72FAttributes {
	return ruleGroupRulesSourceAa10E72FAttributes{ref: ref}
}

func (s ruleGroupRulesSourceAa10E72FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s ruleGroupRulesSourceAa10E72FAttributes) AddressDefinition() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("address_definition"))
}

type ruleGroupRulesSourceF5A90E80Attributes struct {
	ref terra.Reference
}

func (sp ruleGroupRulesSourceF5A90E80Attributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp ruleGroupRulesSourceF5A90E80Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceF5A90E80Attributes {
	return ruleGroupRulesSourceF5A90E80Attributes{ref: ref}
}

func (sp ruleGroupRulesSourceF5A90E80Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp ruleGroupRulesSourceF5A90E80Attributes) FromPort() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("from_port"))
}

func (sp ruleGroupRulesSourceF5A90E80Attributes) ToPort() terra.NumberValue {
	return terra.ReferenceAsNumber(sp.ref.Append("to_port"))
}

type ruleGroupRulesSourceF034F184Attributes struct {
	ref terra.Reference
}

func (tf ruleGroupRulesSourceF034F184Attributes) InternalRef() (terra.Reference, error) {
	return tf.ref, nil
}

func (tf ruleGroupRulesSourceF034F184Attributes) InternalWithRef(ref terra.Reference) ruleGroupRulesSourceF034F184Attributes {
	return ruleGroupRulesSourceF034F184Attributes{ref: ref}
}

func (tf ruleGroupRulesSourceF034F184Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tf.ref.InternalTokens()
}

func (tf ruleGroupRulesSourceF034F184Attributes) Flags() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](tf.ref.Append("flags"))
}

func (tf ruleGroupRulesSourceF034F184Attributes) Masks() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](tf.ref.Append("masks"))
}

type ruleGroupStatefulRuleOptionsAttributes struct {
	ref terra.Reference
}

func (sro ruleGroupStatefulRuleOptionsAttributes) InternalRef() (terra.Reference, error) {
	return sro.ref, nil
}

func (sro ruleGroupStatefulRuleOptionsAttributes) InternalWithRef(ref terra.Reference) ruleGroupStatefulRuleOptionsAttributes {
	return ruleGroupStatefulRuleOptionsAttributes{ref: ref}
}

func (sro ruleGroupStatefulRuleOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sro.ref.InternalTokens()
}

func (sro ruleGroupStatefulRuleOptionsAttributes) RuleOrder() terra.StringValue {
	return terra.ReferenceAsString(sro.ref.Append("rule_order"))
}

type EncryptionConfigurationState struct {
	KeyId string `json:"key_id"`
	Type  string `json:"type"`
}

type RuleGroupState struct {
	ReferenceSets       []RuleGroupReferenceSetsState       `json:"reference_sets"`
	RuleVariables       []RuleGroupRuleVariablesState       `json:"rule_variables"`
	RulesSource         []RuleGroupRulesSourceState         `json:"rules_source"`
	StatefulRuleOptions []RuleGroupStatefulRuleOptionsState `json:"stateful_rule_options"`
}

type RuleGroupReferenceSetsState struct {
	IpSetReferences []RuleGroupReferenceSetsIpSetReferencesState `json:"ip_set_references"`
}

type RuleGroupReferenceSetsIpSetReferencesState struct {
	Key            string                                                     `json:"key"`
	IpSetReference []RuleGroupReferenceSetsIpSetReferencesIpSetReferenceState `json:"ip_set_reference"`
}

type RuleGroupReferenceSetsIpSetReferencesIpSetReferenceState struct {
	ReferenceArn string `json:"reference_arn"`
}

type RuleGroupRuleVariablesState struct {
	IpSets   []RuleGroupRuleVariablesIpSetsState   `json:"ip_sets"`
	PortSets []RuleGroupRuleVariablesPortSetsState `json:"port_sets"`
}

type RuleGroupRuleVariablesIpSetsState struct {
	Key   string                                   `json:"key"`
	IpSet []RuleGroupRuleVariablesIpSetsIpSetState `json:"ip_set"`
}

type RuleGroupRuleVariablesIpSetsIpSetState struct {
	Definition []string `json:"definition"`
}

type RuleGroupRuleVariablesPortSetsState struct {
	Key     string                                       `json:"key"`
	PortSet []RuleGroupRuleVariablesPortSetsPortSetState `json:"port_set"`
}

type RuleGroupRuleVariablesPortSetsPortSetState struct {
	Definition []string `json:"definition"`
}

type RuleGroupRulesSourceState struct {
	RulesString                    string                                                    `json:"rules_string"`
	RulesSourceList                []RuleGroupRulesSourceRulesSourceListState                `json:"rules_source_list"`
	StatefulRule                   []RuleGroupRulesSourceStatefulRuleState                   `json:"stateful_rule"`
	StatelessRulesAndCustomActions []RuleGroupRulesSourceStatelessRulesAndCustomActionsState `json:"stateless_rules_and_custom_actions"`
}

type RuleGroupRulesSourceRulesSourceListState struct {
	GeneratedRulesType string   `json:"generated_rules_type"`
	TargetTypes        []string `json:"target_types"`
	Targets            []string `json:"targets"`
}

type RuleGroupRulesSourceStatefulRuleState struct {
	Action     string                                            `json:"action"`
	Header     []RuleGroupRulesSourceStatefulRuleHeaderState     `json:"header"`
	RuleOption []RuleGroupRulesSourceStatefulRuleRuleOptionState `json:"rule_option"`
}

type RuleGroupRulesSourceStatefulRuleHeaderState struct {
	Destination     string `json:"destination"`
	DestinationPort string `json:"destination_port"`
	Direction       string `json:"direction"`
	Protocol        string `json:"protocol"`
	Source          string `json:"source"`
	SourcePort      string `json:"source_port"`
}

type RuleGroupRulesSourceStatefulRuleRuleOptionState struct {
	Keyword  string   `json:"keyword"`
	Settings []string `json:"settings"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsState struct {
	CustomAction  []RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionState  `json:"custom_action"`
	StatelessRule []RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleState `json:"stateless_rule"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionState struct {
	ActionName       string                              `json:"action_name"`
	ActionDefinition []RuleGroupRulesSourceC2200B43State `json:"action_definition"`
}

type RuleGroupRulesSourceC2200B43State struct {
	PublishMetricAction []RuleGroupRulesSource74D8Efc9State `json:"publish_metric_action"`
}

type RuleGroupRulesSource74D8Efc9State struct {
	Dimension []RuleGroupRulesSource48Bbca71State `json:"dimension"`
}

type RuleGroupRulesSource48Bbca71State struct {
	Value string `json:"value"`
}

type RuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleState struct {
	Priority       float64                             `json:"priority"`
	RuleDefinition []RuleGroupRulesSourceD738BecdState `json:"rule_definition"`
}

type RuleGroupRulesSourceD738BecdState struct {
	Actions         []string                            `json:"actions"`
	MatchAttributes []RuleGroupRulesSource277A1Fd1State `json:"match_attributes"`
}

type RuleGroupRulesSource277A1Fd1State struct {
	Protocols       []float64                           `json:"protocols"`
	Destination     []RuleGroupRulesSource99659C25State `json:"destination"`
	DestinationPort []RuleGroupRulesSourceEc4Ebdc4State `json:"destination_port"`
	Source          []RuleGroupRulesSourceAa10E72FState `json:"source"`
	SourcePort      []RuleGroupRulesSourceF5A90E80State `json:"source_port"`
	TcpFlag         []RuleGroupRulesSourceF034F184State `json:"tcp_flag"`
}

type RuleGroupRulesSource99659C25State struct {
	AddressDefinition string `json:"address_definition"`
}

type RuleGroupRulesSourceEc4Ebdc4State struct {
	FromPort float64 `json:"from_port"`
	ToPort   float64 `json:"to_port"`
}

type RuleGroupRulesSourceAa10E72FState struct {
	AddressDefinition string `json:"address_definition"`
}

type RuleGroupRulesSourceF5A90E80State struct {
	FromPort float64 `json:"from_port"`
	ToPort   float64 `json:"to_port"`
}

type RuleGroupRulesSourceF034F184State struct {
	Flags []string `json:"flags"`
	Masks []string `json:"masks"`
}

type RuleGroupStatefulRuleOptionsState struct {
	RuleOrder string `json:"rule_order"`
}
