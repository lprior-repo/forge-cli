// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_bot_association

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LexBot struct {
	// LexRegion is optional.
	LexRegion terra.StringValue `hcl:"lex_region,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type lexBotAttributes struct {
	ref terra.Reference
}

func (lb lexBotAttributes) InternalRef() (terra.Reference, error) {
	return lb.ref, nil
}

func (lb lexBotAttributes) InternalWithRef(ref terra.Reference) lexBotAttributes {
	return lexBotAttributes{ref: ref}
}

func (lb lexBotAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lb.ref.InternalTokens()
}

func (lb lexBotAttributes) LexRegion() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("lex_region"))
}

func (lb lexBotAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lb.ref.Append("name"))
}

type LexBotState struct {
	LexRegion string `json:"lex_region"`
	Name      string `json:"name"`
}
