// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpclattice_target_group_attachment

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Target struct {
	// Id is required.
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
	// Port is optional.
	Port terra.NumberValue `hcl:"port,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
}

type targetAttributes struct {
	ref terra.Reference
}

func (t targetAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t targetAttributes) InternalWithRef(ref terra.Reference) targetAttributes {
	return targetAttributes{ref: ref}
}

func (t targetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t targetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("id"))
}

func (t targetAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("port"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type TargetState struct {
	Id   string  `json:"id"`
	Port float64 `json:"port"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
