// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkmanager_core_network_policy_document

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_networkmanager_core_network_policy_document.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ancnpd *DataSource) DataSource() string {
	return "aws_networkmanager_core_network_policy_document"
}

// LocalName returns the local name for [DataSource].
func (ancnpd *DataSource) LocalName() string {
	return ancnpd.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ancnpd *DataSource) Configuration() interface{} {
	return ancnpd.Args
}

// Attributes returns the attributes for [DataSource].
func (ancnpd *DataSource) Attributes() dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes {
	return dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes{ref: terra.ReferenceDataSource(ancnpd)}
}

// DataArgs contains the configurations for aws_networkmanager_core_network_policy_document.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
	// AttachmentPolicies is min=0.
	AttachmentPolicies []DataAttachmentPolicies `hcl:"attachment_policies,block" validate:"min=0"`
	// CoreNetworkConfiguration is min=1.
	CoreNetworkConfiguration []DataCoreNetworkConfiguration `hcl:"core_network_configuration,block" validate:"min=1"`
	// SegmentActions is min=0.
	SegmentActions []DataSegmentActions `hcl:"segment_actions,block" validate:"min=0"`
	// Segments is min=1.
	Segments []DataSegments `hcl:"segments,block" validate:"min=1"`
}

type dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_networkmanager_core_network_policy_document.
func (ancnpd dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ancnpd.ref.Append("id"))
}

// Json returns a reference to field json of aws_networkmanager_core_network_policy_document.
func (ancnpd dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes) Json() terra.StringValue {
	return terra.ReferenceAsString(ancnpd.ref.Append("json"))
}

// Version returns a reference to field version of aws_networkmanager_core_network_policy_document.
func (ancnpd dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(ancnpd.ref.Append("version"))
}

func (ancnpd dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes) AttachmentPolicies() terra.ListValue[DataattachmentPoliciesAttributes] {
	return terra.ReferenceAsList[DataattachmentPoliciesAttributes](ancnpd.ref.Append("attachment_policies"))
}

func (ancnpd dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes) CoreNetworkConfiguration() terra.ListValue[DatacoreNetworkConfigurationAttributes] {
	return terra.ReferenceAsList[DatacoreNetworkConfigurationAttributes](ancnpd.ref.Append("core_network_configuration"))
}

func (ancnpd dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes) SegmentActions() terra.ListValue[DatasegmentActionsAttributes] {
	return terra.ReferenceAsList[DatasegmentActionsAttributes](ancnpd.ref.Append("segment_actions"))
}

func (ancnpd dataAwsNetworkmanagerCoreNetworkPolicyDocumentAttributes) Segments() terra.ListValue[DatasegmentsAttributes] {
	return terra.ReferenceAsList[DatasegmentsAttributes](ancnpd.ref.Append("segments"))
}
