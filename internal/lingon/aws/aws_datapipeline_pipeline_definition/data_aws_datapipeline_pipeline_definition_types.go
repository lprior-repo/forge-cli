// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_datapipeline_pipeline_definition

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataParameterValue struct{}

type DataparameterObjectAttributes struct {
	ref terra.Reference
}

func (po DataparameterObjectAttributes) InternalRef() (terra.Reference, error) {
	return po.ref, nil
}

func (po DataparameterObjectAttributes) InternalWithRef(ref terra.Reference) DataparameterObjectAttributes {
	return DataparameterObjectAttributes{ref: ref}
}

func (po DataparameterObjectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return po.ref.InternalTokens()
}

func (po DataparameterObjectAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(po.ref.Append("id"))
}

func (po DataparameterObjectAttributes) Attribute() terra.SetValue[DataparameterObjectAttributeAttributes] {
	return terra.ReferenceAsSet[DataparameterObjectAttributeAttributes](po.ref.Append("attribute"))
}

type DataparameterObjectAttributeAttributes struct {
	ref terra.Reference
}

func (a DataparameterObjectAttributeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DataparameterObjectAttributeAttributes) InternalWithRef(ref terra.Reference) DataparameterObjectAttributeAttributes {
	return DataparameterObjectAttributeAttributes{ref: ref}
}

func (a DataparameterObjectAttributeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DataparameterObjectAttributeAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("key"))
}

func (a DataparameterObjectAttributeAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("string_value"))
}

type DatapipelineObjectAttributes struct {
	ref terra.Reference
}

func (po DatapipelineObjectAttributes) InternalRef() (terra.Reference, error) {
	return po.ref, nil
}

func (po DatapipelineObjectAttributes) InternalWithRef(ref terra.Reference) DatapipelineObjectAttributes {
	return DatapipelineObjectAttributes{ref: ref}
}

func (po DatapipelineObjectAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return po.ref.InternalTokens()
}

func (po DatapipelineObjectAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(po.ref.Append("id"))
}

func (po DatapipelineObjectAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(po.ref.Append("name"))
}

func (po DatapipelineObjectAttributes) Field() terra.SetValue[DatapipelineObjectFieldAttributes] {
	return terra.ReferenceAsSet[DatapipelineObjectFieldAttributes](po.ref.Append("field"))
}

type DatapipelineObjectFieldAttributes struct {
	ref terra.Reference
}

func (f DatapipelineObjectFieldAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DatapipelineObjectFieldAttributes) InternalWithRef(ref terra.Reference) DatapipelineObjectFieldAttributes {
	return DatapipelineObjectFieldAttributes{ref: ref}
}

func (f DatapipelineObjectFieldAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DatapipelineObjectFieldAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("key"))
}

func (f DatapipelineObjectFieldAttributes) RefValue() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("ref_value"))
}

func (f DatapipelineObjectFieldAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("string_value"))
}

type DataparameterValueAttributes struct {
	ref terra.Reference
}

func (pv DataparameterValueAttributes) InternalRef() (terra.Reference, error) {
	return pv.ref, nil
}

func (pv DataparameterValueAttributes) InternalWithRef(ref terra.Reference) DataparameterValueAttributes {
	return DataparameterValueAttributes{ref: ref}
}

func (pv DataparameterValueAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pv.ref.InternalTokens()
}

func (pv DataparameterValueAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pv.ref.Append("id"))
}

func (pv DataparameterValueAttributes) StringValue() terra.StringValue {
	return terra.ReferenceAsString(pv.ref.Append("string_value"))
}

type DataParameterObjectState struct {
	Id        string                              `json:"id"`
	Attribute []DataParameterObjectAttributeState `json:"attribute"`
}

type DataParameterObjectAttributeState struct {
	Key         string `json:"key"`
	StringValue string `json:"string_value"`
}

type DataPipelineObjectState struct {
	Id    string                         `json:"id"`
	Name  string                         `json:"name"`
	Field []DataPipelineObjectFieldState `json:"field"`
}

type DataPipelineObjectFieldState struct {
	Key         string `json:"key"`
	RefValue    string `json:"ref_value"`
	StringValue string `json:"string_value"`
}

type DataParameterValueState struct {
	Id          string `json:"id"`
	StringValue string `json:"string_value"`
}
