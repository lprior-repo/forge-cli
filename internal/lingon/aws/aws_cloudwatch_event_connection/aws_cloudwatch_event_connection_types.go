// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudwatch_event_connection

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AuthParameters struct {
	// AuthParametersApiKey is optional.
	ApiKey *AuthParametersApiKey `hcl:"api_key,block"`
	// AuthParametersBasic is optional.
	Basic *AuthParametersBasic `hcl:"basic,block"`
	// AuthParametersInvocationHttpParameters is optional.
	InvocationHttpParameters *AuthParametersInvocationHttpParameters `hcl:"invocation_http_parameters,block"`
	// AuthParametersOauth is optional.
	Oauth *AuthParametersOauth `hcl:"oauth,block"`
}

type AuthParametersApiKey struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type AuthParametersBasic struct {
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type AuthParametersInvocationHttpParameters struct {
	// AuthParametersInvocationHttpParametersBody is min=0.
	Body []AuthParametersInvocationHttpParametersBody `hcl:"body,block" validate:"min=0"`
	// AuthParametersInvocationHttpParametersHeader is min=0.
	Header []AuthParametersInvocationHttpParametersHeader `hcl:"header,block" validate:"min=0"`
	// AuthParametersInvocationHttpParametersQueryString is min=0.
	QueryString []AuthParametersInvocationHttpParametersQueryString `hcl:"query_string,block" validate:"min=0"`
}

type AuthParametersInvocationHttpParametersBody struct {
	// IsValueSecret is optional.
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersInvocationHttpParametersHeader struct {
	// IsValueSecret is optional.
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersInvocationHttpParametersQueryString struct {
	// IsValueSecret is optional.
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersOauth struct {
	// AuthorizationEndpoint is required.
	AuthorizationEndpoint terra.StringValue `hcl:"authorization_endpoint,attr" validate:"required"`
	// HttpMethod is required.
	HttpMethod terra.StringValue `hcl:"http_method,attr" validate:"required"`
	// AuthParametersOauthClientParameters is optional.
	ClientParameters *AuthParametersOauthClientParameters `hcl:"client_parameters,block"`
	// AuthParametersOauthOauthHttpParameters is required.
	OauthHttpParameters *AuthParametersOauthOauthHttpParameters `hcl:"oauth_http_parameters,block" validate:"required"`
}

type AuthParametersOauthClientParameters struct {
	// ClientId is required.
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret is required.
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
}

type AuthParametersOauthOauthHttpParameters struct {
	// AuthParametersOauthOauthHttpParametersBody is min=0.
	Body []AuthParametersOauthOauthHttpParametersBody `hcl:"body,block" validate:"min=0"`
	// AuthParametersOauthOauthHttpParametersHeader is min=0.
	Header []AuthParametersOauthOauthHttpParametersHeader `hcl:"header,block" validate:"min=0"`
	// AuthParametersOauthOauthHttpParametersQueryString is min=0.
	QueryString []AuthParametersOauthOauthHttpParametersQueryString `hcl:"query_string,block" validate:"min=0"`
}

type AuthParametersOauthOauthHttpParametersBody struct {
	// IsValueSecret is optional.
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersOauthOauthHttpParametersHeader struct {
	// IsValueSecret is optional.
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type AuthParametersOauthOauthHttpParametersQueryString struct {
	// IsValueSecret is optional.
	IsValueSecret terra.BoolValue `hcl:"is_value_secret,attr"`
	// Key is optional.
	Key terra.StringValue `hcl:"key,attr"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type authParametersAttributes struct {
	ref terra.Reference
}

func (ap authParametersAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap authParametersAttributes) InternalWithRef(ref terra.Reference) authParametersAttributes {
	return authParametersAttributes{ref: ref}
}

func (ap authParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap authParametersAttributes) ApiKey() terra.ListValue[authParametersApiKeyAttributes] {
	return terra.ReferenceAsList[authParametersApiKeyAttributes](ap.ref.Append("api_key"))
}

func (ap authParametersAttributes) Basic() terra.ListValue[authParametersBasicAttributes] {
	return terra.ReferenceAsList[authParametersBasicAttributes](ap.ref.Append("basic"))
}

func (ap authParametersAttributes) InvocationHttpParameters() terra.ListValue[authParametersInvocationHttpParametersAttributes] {
	return terra.ReferenceAsList[authParametersInvocationHttpParametersAttributes](ap.ref.Append("invocation_http_parameters"))
}

func (ap authParametersAttributes) Oauth() terra.ListValue[authParametersOauthAttributes] {
	return terra.ReferenceAsList[authParametersOauthAttributes](ap.ref.Append("oauth"))
}

type authParametersApiKeyAttributes struct {
	ref terra.Reference
}

func (ak authParametersApiKeyAttributes) InternalRef() (terra.Reference, error) {
	return ak.ref, nil
}

func (ak authParametersApiKeyAttributes) InternalWithRef(ref terra.Reference) authParametersApiKeyAttributes {
	return authParametersApiKeyAttributes{ref: ref}
}

func (ak authParametersApiKeyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ak.ref.InternalTokens()
}

func (ak authParametersApiKeyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("key"))
}

func (ak authParametersApiKeyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ak.ref.Append("value"))
}

type authParametersBasicAttributes struct {
	ref terra.Reference
}

func (b authParametersBasicAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b authParametersBasicAttributes) InternalWithRef(ref terra.Reference) authParametersBasicAttributes {
	return authParametersBasicAttributes{ref: ref}
}

func (b authParametersBasicAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b authParametersBasicAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("password"))
}

func (b authParametersBasicAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("username"))
}

type authParametersInvocationHttpParametersAttributes struct {
	ref terra.Reference
}

func (ihp authParametersInvocationHttpParametersAttributes) InternalRef() (terra.Reference, error) {
	return ihp.ref, nil
}

func (ihp authParametersInvocationHttpParametersAttributes) InternalWithRef(ref terra.Reference) authParametersInvocationHttpParametersAttributes {
	return authParametersInvocationHttpParametersAttributes{ref: ref}
}

func (ihp authParametersInvocationHttpParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ihp.ref.InternalTokens()
}

func (ihp authParametersInvocationHttpParametersAttributes) Body() terra.ListValue[authParametersInvocationHttpParametersBodyAttributes] {
	return terra.ReferenceAsList[authParametersInvocationHttpParametersBodyAttributes](ihp.ref.Append("body"))
}

func (ihp authParametersInvocationHttpParametersAttributes) Header() terra.ListValue[authParametersInvocationHttpParametersHeaderAttributes] {
	return terra.ReferenceAsList[authParametersInvocationHttpParametersHeaderAttributes](ihp.ref.Append("header"))
}

func (ihp authParametersInvocationHttpParametersAttributes) QueryString() terra.ListValue[authParametersInvocationHttpParametersQueryStringAttributes] {
	return terra.ReferenceAsList[authParametersInvocationHttpParametersQueryStringAttributes](ihp.ref.Append("query_string"))
}

type authParametersInvocationHttpParametersBodyAttributes struct {
	ref terra.Reference
}

func (b authParametersInvocationHttpParametersBodyAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b authParametersInvocationHttpParametersBodyAttributes) InternalWithRef(ref terra.Reference) authParametersInvocationHttpParametersBodyAttributes {
	return authParametersInvocationHttpParametersBodyAttributes{ref: ref}
}

func (b authParametersInvocationHttpParametersBodyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b authParametersInvocationHttpParametersBodyAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(b.ref.Append("is_value_secret"))
}

func (b authParametersInvocationHttpParametersBodyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("key"))
}

func (b authParametersInvocationHttpParametersBodyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("value"))
}

type authParametersInvocationHttpParametersHeaderAttributes struct {
	ref terra.Reference
}

func (h authParametersInvocationHttpParametersHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h authParametersInvocationHttpParametersHeaderAttributes) InternalWithRef(ref terra.Reference) authParametersInvocationHttpParametersHeaderAttributes {
	return authParametersInvocationHttpParametersHeaderAttributes{ref: ref}
}

func (h authParametersInvocationHttpParametersHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h authParametersInvocationHttpParametersHeaderAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("is_value_secret"))
}

func (h authParametersInvocationHttpParametersHeaderAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("key"))
}

func (h authParametersInvocationHttpParametersHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("value"))
}

type authParametersInvocationHttpParametersQueryStringAttributes struct {
	ref terra.Reference
}

func (qs authParametersInvocationHttpParametersQueryStringAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs authParametersInvocationHttpParametersQueryStringAttributes) InternalWithRef(ref terra.Reference) authParametersInvocationHttpParametersQueryStringAttributes {
	return authParametersInvocationHttpParametersQueryStringAttributes{ref: ref}
}

func (qs authParametersInvocationHttpParametersQueryStringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs authParametersInvocationHttpParametersQueryStringAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(qs.ref.Append("is_value_secret"))
}

func (qs authParametersInvocationHttpParametersQueryStringAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("key"))
}

func (qs authParametersInvocationHttpParametersQueryStringAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("value"))
}

type authParametersOauthAttributes struct {
	ref terra.Reference
}

func (o authParametersOauthAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o authParametersOauthAttributes) InternalWithRef(ref terra.Reference) authParametersOauthAttributes {
	return authParametersOauthAttributes{ref: ref}
}

func (o authParametersOauthAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o authParametersOauthAttributes) AuthorizationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("authorization_endpoint"))
}

func (o authParametersOauthAttributes) HttpMethod() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("http_method"))
}

func (o authParametersOauthAttributes) ClientParameters() terra.ListValue[authParametersOauthClientParametersAttributes] {
	return terra.ReferenceAsList[authParametersOauthClientParametersAttributes](o.ref.Append("client_parameters"))
}

func (o authParametersOauthAttributes) OauthHttpParameters() terra.ListValue[authParametersOauthOauthHttpParametersAttributes] {
	return terra.ReferenceAsList[authParametersOauthOauthHttpParametersAttributes](o.ref.Append("oauth_http_parameters"))
}

type authParametersOauthClientParametersAttributes struct {
	ref terra.Reference
}

func (cp authParametersOauthClientParametersAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp authParametersOauthClientParametersAttributes) InternalWithRef(ref terra.Reference) authParametersOauthClientParametersAttributes {
	return authParametersOauthClientParametersAttributes{ref: ref}
}

func (cp authParametersOauthClientParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp authParametersOauthClientParametersAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("client_id"))
}

func (cp authParametersOauthClientParametersAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("client_secret"))
}

type authParametersOauthOauthHttpParametersAttributes struct {
	ref terra.Reference
}

func (ohp authParametersOauthOauthHttpParametersAttributes) InternalRef() (terra.Reference, error) {
	return ohp.ref, nil
}

func (ohp authParametersOauthOauthHttpParametersAttributes) InternalWithRef(ref terra.Reference) authParametersOauthOauthHttpParametersAttributes {
	return authParametersOauthOauthHttpParametersAttributes{ref: ref}
}

func (ohp authParametersOauthOauthHttpParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ohp.ref.InternalTokens()
}

func (ohp authParametersOauthOauthHttpParametersAttributes) Body() terra.ListValue[authParametersOauthOauthHttpParametersBodyAttributes] {
	return terra.ReferenceAsList[authParametersOauthOauthHttpParametersBodyAttributes](ohp.ref.Append("body"))
}

func (ohp authParametersOauthOauthHttpParametersAttributes) Header() terra.ListValue[authParametersOauthOauthHttpParametersHeaderAttributes] {
	return terra.ReferenceAsList[authParametersOauthOauthHttpParametersHeaderAttributes](ohp.ref.Append("header"))
}

func (ohp authParametersOauthOauthHttpParametersAttributes) QueryString() terra.ListValue[authParametersOauthOauthHttpParametersQueryStringAttributes] {
	return terra.ReferenceAsList[authParametersOauthOauthHttpParametersQueryStringAttributes](ohp.ref.Append("query_string"))
}

type authParametersOauthOauthHttpParametersBodyAttributes struct {
	ref terra.Reference
}

func (b authParametersOauthOauthHttpParametersBodyAttributes) InternalRef() (terra.Reference, error) {
	return b.ref, nil
}

func (b authParametersOauthOauthHttpParametersBodyAttributes) InternalWithRef(ref terra.Reference) authParametersOauthOauthHttpParametersBodyAttributes {
	return authParametersOauthOauthHttpParametersBodyAttributes{ref: ref}
}

func (b authParametersOauthOauthHttpParametersBodyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return b.ref.InternalTokens()
}

func (b authParametersOauthOauthHttpParametersBodyAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(b.ref.Append("is_value_secret"))
}

func (b authParametersOauthOauthHttpParametersBodyAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("key"))
}

func (b authParametersOauthOauthHttpParametersBodyAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(b.ref.Append("value"))
}

type authParametersOauthOauthHttpParametersHeaderAttributes struct {
	ref terra.Reference
}

func (h authParametersOauthOauthHttpParametersHeaderAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h authParametersOauthOauthHttpParametersHeaderAttributes) InternalWithRef(ref terra.Reference) authParametersOauthOauthHttpParametersHeaderAttributes {
	return authParametersOauthOauthHttpParametersHeaderAttributes{ref: ref}
}

func (h authParametersOauthOauthHttpParametersHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h authParametersOauthOauthHttpParametersHeaderAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(h.ref.Append("is_value_secret"))
}

func (h authParametersOauthOauthHttpParametersHeaderAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("key"))
}

func (h authParametersOauthOauthHttpParametersHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("value"))
}

type authParametersOauthOauthHttpParametersQueryStringAttributes struct {
	ref terra.Reference
}

func (qs authParametersOauthOauthHttpParametersQueryStringAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs authParametersOauthOauthHttpParametersQueryStringAttributes) InternalWithRef(ref terra.Reference) authParametersOauthOauthHttpParametersQueryStringAttributes {
	return authParametersOauthOauthHttpParametersQueryStringAttributes{ref: ref}
}

func (qs authParametersOauthOauthHttpParametersQueryStringAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs authParametersOauthOauthHttpParametersQueryStringAttributes) IsValueSecret() terra.BoolValue {
	return terra.ReferenceAsBool(qs.ref.Append("is_value_secret"))
}

func (qs authParametersOauthOauthHttpParametersQueryStringAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("key"))
}

func (qs authParametersOauthOauthHttpParametersQueryStringAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("value"))
}

type AuthParametersState struct {
	ApiKey                   []AuthParametersApiKeyState                   `json:"api_key"`
	Basic                    []AuthParametersBasicState                    `json:"basic"`
	InvocationHttpParameters []AuthParametersInvocationHttpParametersState `json:"invocation_http_parameters"`
	Oauth                    []AuthParametersOauthState                    `json:"oauth"`
}

type AuthParametersApiKeyState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type AuthParametersBasicState struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type AuthParametersInvocationHttpParametersState struct {
	Body        []AuthParametersInvocationHttpParametersBodyState        `json:"body"`
	Header      []AuthParametersInvocationHttpParametersHeaderState      `json:"header"`
	QueryString []AuthParametersInvocationHttpParametersQueryStringState `json:"query_string"`
}

type AuthParametersInvocationHttpParametersBodyState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersInvocationHttpParametersHeaderState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersInvocationHttpParametersQueryStringState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersOauthState struct {
	AuthorizationEndpoint string                                        `json:"authorization_endpoint"`
	HttpMethod            string                                        `json:"http_method"`
	ClientParameters      []AuthParametersOauthClientParametersState    `json:"client_parameters"`
	OauthHttpParameters   []AuthParametersOauthOauthHttpParametersState `json:"oauth_http_parameters"`
}

type AuthParametersOauthClientParametersState struct {
	ClientId     string `json:"client_id"`
	ClientSecret string `json:"client_secret"`
}

type AuthParametersOauthOauthHttpParametersState struct {
	Body        []AuthParametersOauthOauthHttpParametersBodyState        `json:"body"`
	Header      []AuthParametersOauthOauthHttpParametersHeaderState      `json:"header"`
	QueryString []AuthParametersOauthOauthHttpParametersQueryStringState `json:"query_string"`
}

type AuthParametersOauthOauthHttpParametersBodyState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersOauthOauthHttpParametersHeaderState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}

type AuthParametersOauthOauthHttpParametersQueryStringState struct {
	IsValueSecret bool   `json:"is_value_secret"`
	Key           string `json:"key"`
	Value         string `json:"value"`
}
