// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appflow_flow

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DestinationFlowConfig struct {
	// ApiVersion is optional.
	ApiVersion terra.StringValue `hcl:"api_version,attr"`
	// ConnectorProfileName is optional.
	ConnectorProfileName terra.StringValue `hcl:"connector_profile_name,attr"`
	// ConnectorType is required.
	ConnectorType terra.StringValue `hcl:"connector_type,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorProperties is required.
	DestinationConnectorProperties *DestinationFlowConfigDestinationConnectorProperties `hcl:"destination_connector_properties,block" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorProperties struct {
	// DestinationFlowConfigDestinationConnectorPropertiesCustomConnector is optional.
	CustomConnector *DestinationFlowConfigDestinationConnectorPropertiesCustomConnector `hcl:"custom_connector,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles is optional.
	CustomerProfiles *DestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles `hcl:"customer_profiles,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesEventBridge is optional.
	EventBridge *DestinationFlowConfigDestinationConnectorPropertiesEventBridge `hcl:"event_bridge,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesHoneycode is optional.
	Honeycode *DestinationFlowConfigDestinationConnectorPropertiesHoneycode `hcl:"honeycode,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics is optional.
	LookoutMetrics *DestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics `hcl:"lookout_metrics,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesMarketo is optional.
	Marketo *DestinationFlowConfigDestinationConnectorPropertiesMarketo `hcl:"marketo,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesRedshift is optional.
	Redshift *DestinationFlowConfigDestinationConnectorPropertiesRedshift `hcl:"redshift,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesS3 is optional.
	S3 *DestinationFlowConfigDestinationConnectorPropertiesS3 `hcl:"s3,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSalesforce is optional.
	Salesforce *DestinationFlowConfigDestinationConnectorPropertiesSalesforce `hcl:"salesforce,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSapoData is optional.
	SapoData *DestinationFlowConfigDestinationConnectorPropertiesSapoData `hcl:"sapo_data,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSnowflake is optional.
	Snowflake *DestinationFlowConfigDestinationConnectorPropertiesSnowflake `hcl:"snowflake,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesUpsolver is optional.
	Upsolver *DestinationFlowConfigDestinationConnectorPropertiesUpsolver `hcl:"upsolver,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesZendesk is optional.
	Zendesk *DestinationFlowConfigDestinationConnectorPropertiesZendesk `hcl:"zendesk,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnector struct {
	// CustomProperties is optional.
	CustomProperties terra.MapValue[terra.StringValue] `hcl:"custom_properties,attr"`
	// EntityName is required.
	EntityName terra.StringValue `hcl:"entity_name,attr" validate:"required"`
	// IdFieldNames is optional.
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// WriteOperationType is optional.
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles struct {
	// DomainName is required.
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// ObjectTypeName is optional.
	ObjectTypeName terra.StringValue `hcl:"object_type_name,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridge struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycode struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics struct{}

type DestinationFlowConfigDestinationConnectorPropertiesMarketo struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshift struct {
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// IntermediateBucketName is required.
	IntermediateBucketName terra.StringValue `hcl:"intermediate_bucket_name,attr" validate:"required"`
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3 struct {
	// BucketName is required.
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig is optional.
	S3OutputFormatConfig *DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig `hcl:"s3_output_format_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfig struct {
	// FileType is optional.
	FileType terra.StringValue `hcl:"file_type,attr"`
	// PreserveSourceDataTyping is optional.
	PreserveSourceDataTyping terra.BoolValue `hcl:"preserve_source_data_typing,attr"`
	// DestinationFlowConfigDestinationConnectorProperties9A1Db91B is optional.
	AggregationConfig *DestinationFlowConfigDestinationConnectorProperties9A1Db91B `hcl:"aggregation_config,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4 is optional.
	PrefixConfig *DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4 `hcl:"prefix_config,block"`
}

type DestinationFlowConfigDestinationConnectorProperties9A1Db91B struct {
	// AggregationType is optional.
	AggregationType terra.StringValue `hcl:"aggregation_type,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4 struct {
	// PrefixFormat is optional.
	PrefixFormat terra.StringValue `hcl:"prefix_format,attr"`
	// PrefixType is optional.
	PrefixType terra.StringValue `hcl:"prefix_type,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforce struct {
	// IdFieldNames is optional.
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// WriteOperationType is optional.
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoData struct {
	// IdFieldNames is optional.
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// ObjectPath is required.
	ObjectPath terra.StringValue `hcl:"object_path,attr" validate:"required"`
	// WriteOperationType is optional.
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig `hcl:"error_handling_config,block"`
	// DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig is optional.
	SuccessResponseHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig `hcl:"success_response_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflake struct {
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// IntermediateBucketName is required.
	IntermediateBucketName terra.StringValue `hcl:"intermediate_bucket_name,attr" validate:"required"`
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolver struct {
	// BucketName is required.
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig is required.
	S3OutputFormatConfig *DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig `hcl:"s3_output_format_config,block" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfig struct {
	// FileType is optional.
	FileType terra.StringValue `hcl:"file_type,attr"`
	// DestinationFlowConfigDestinationConnectorProperties8122C4C1 is optional.
	AggregationConfig *DestinationFlowConfigDestinationConnectorProperties8122C4C1 `hcl:"aggregation_config,block"`
	// DestinationFlowConfigDestinationConnectorProperties2Eb41171 is required.
	PrefixConfig *DestinationFlowConfigDestinationConnectorProperties2Eb41171 `hcl:"prefix_config,block" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorProperties8122C4C1 struct {
	// AggregationType is optional.
	AggregationType terra.StringValue `hcl:"aggregation_type,attr"`
}

type DestinationFlowConfigDestinationConnectorProperties2Eb41171 struct {
	// PrefixFormat is optional.
	PrefixFormat terra.StringValue `hcl:"prefix_format,attr"`
	// PrefixType is required.
	PrefixType terra.StringValue `hcl:"prefix_type,attr" validate:"required"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendesk struct {
	// IdFieldNames is optional.
	IdFieldNames terra.ListValue[terra.StringValue] `hcl:"id_field_names,attr"`
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
	// WriteOperationType is optional.
	WriteOperationType terra.StringValue `hcl:"write_operation_type,attr"`
	// DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig is optional.
	ErrorHandlingConfig *DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig `hcl:"error_handling_config,block"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfig struct {
	// BucketName is optional.
	BucketName terra.StringValue `hcl:"bucket_name,attr"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// FailOnFirstDestinationError is optional.
	FailOnFirstDestinationError terra.BoolValue `hcl:"fail_on_first_destination_error,attr"`
}

type SourceFlowConfig struct {
	// ApiVersion is optional.
	ApiVersion terra.StringValue `hcl:"api_version,attr"`
	// ConnectorProfileName is optional.
	ConnectorProfileName terra.StringValue `hcl:"connector_profile_name,attr"`
	// ConnectorType is required.
	ConnectorType terra.StringValue `hcl:"connector_type,attr" validate:"required"`
	// SourceFlowConfigIncrementalPullConfig is optional.
	IncrementalPullConfig *SourceFlowConfigIncrementalPullConfig `hcl:"incremental_pull_config,block"`
	// SourceFlowConfigSourceConnectorProperties is required.
	SourceConnectorProperties *SourceFlowConfigSourceConnectorProperties `hcl:"source_connector_properties,block" validate:"required"`
}

type SourceFlowConfigIncrementalPullConfig struct {
	// DatetimeTypeFieldName is optional.
	DatetimeTypeFieldName terra.StringValue `hcl:"datetime_type_field_name,attr"`
}

type SourceFlowConfigSourceConnectorProperties struct {
	// SourceFlowConfigSourceConnectorPropertiesAmplitude is optional.
	Amplitude *SourceFlowConfigSourceConnectorPropertiesAmplitude `hcl:"amplitude,block"`
	// SourceFlowConfigSourceConnectorPropertiesCustomConnector is optional.
	CustomConnector *SourceFlowConfigSourceConnectorPropertiesCustomConnector `hcl:"custom_connector,block"`
	// SourceFlowConfigSourceConnectorPropertiesDatadog is optional.
	Datadog *SourceFlowConfigSourceConnectorPropertiesDatadog `hcl:"datadog,block"`
	// SourceFlowConfigSourceConnectorPropertiesDynatrace is optional.
	Dynatrace *SourceFlowConfigSourceConnectorPropertiesDynatrace `hcl:"dynatrace,block"`
	// SourceFlowConfigSourceConnectorPropertiesGoogleAnalytics is optional.
	GoogleAnalytics *SourceFlowConfigSourceConnectorPropertiesGoogleAnalytics `hcl:"google_analytics,block"`
	// SourceFlowConfigSourceConnectorPropertiesInforNexus is optional.
	InforNexus *SourceFlowConfigSourceConnectorPropertiesInforNexus `hcl:"infor_nexus,block"`
	// SourceFlowConfigSourceConnectorPropertiesMarketo is optional.
	Marketo *SourceFlowConfigSourceConnectorPropertiesMarketo `hcl:"marketo,block"`
	// SourceFlowConfigSourceConnectorPropertiesS3 is optional.
	S3 *SourceFlowConfigSourceConnectorPropertiesS3 `hcl:"s3,block"`
	// SourceFlowConfigSourceConnectorPropertiesSalesforce is optional.
	Salesforce *SourceFlowConfigSourceConnectorPropertiesSalesforce `hcl:"salesforce,block"`
	// SourceFlowConfigSourceConnectorPropertiesSapoData is optional.
	SapoData *SourceFlowConfigSourceConnectorPropertiesSapoData `hcl:"sapo_data,block"`
	// SourceFlowConfigSourceConnectorPropertiesServiceNow is optional.
	ServiceNow *SourceFlowConfigSourceConnectorPropertiesServiceNow `hcl:"service_now,block"`
	// SourceFlowConfigSourceConnectorPropertiesSingular is optional.
	Singular *SourceFlowConfigSourceConnectorPropertiesSingular `hcl:"singular,block"`
	// SourceFlowConfigSourceConnectorPropertiesSlack is optional.
	Slack *SourceFlowConfigSourceConnectorPropertiesSlack `hcl:"slack,block"`
	// SourceFlowConfigSourceConnectorPropertiesTrendmicro is optional.
	Trendmicro *SourceFlowConfigSourceConnectorPropertiesTrendmicro `hcl:"trendmicro,block"`
	// SourceFlowConfigSourceConnectorPropertiesVeeva is optional.
	Veeva *SourceFlowConfigSourceConnectorPropertiesVeeva `hcl:"veeva,block"`
	// SourceFlowConfigSourceConnectorPropertiesZendesk is optional.
	Zendesk *SourceFlowConfigSourceConnectorPropertiesZendesk `hcl:"zendesk,block"`
}

type SourceFlowConfigSourceConnectorPropertiesAmplitude struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesCustomConnector struct {
	// CustomProperties is optional.
	CustomProperties terra.MapValue[terra.StringValue] `hcl:"custom_properties,attr"`
	// EntityName is required.
	EntityName terra.StringValue `hcl:"entity_name,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesDatadog struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesDynatrace struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesGoogleAnalytics struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesInforNexus struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesMarketo struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesS3 struct {
	// BucketName is required.
	BucketName terra.StringValue `hcl:"bucket_name,attr" validate:"required"`
	// BucketPrefix is optional.
	BucketPrefix terra.StringValue `hcl:"bucket_prefix,attr"`
	// SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig is optional.
	S3InputFormatConfig *SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig `hcl:"s3_input_format_config,block"`
}

type SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig struct {
	// S3InputFileType is optional.
	S3InputFileType terra.StringValue `hcl:"s3_input_file_type,attr"`
}

type SourceFlowConfigSourceConnectorPropertiesSalesforce struct {
	// EnableDynamicFieldUpdate is optional.
	EnableDynamicFieldUpdate terra.BoolValue `hcl:"enable_dynamic_field_update,attr"`
	// IncludeDeletedRecords is optional.
	IncludeDeletedRecords terra.BoolValue `hcl:"include_deleted_records,attr"`
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesSapoData struct {
	// ObjectPath is required.
	ObjectPath terra.StringValue `hcl:"object_path,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesServiceNow struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesSingular struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesSlack struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesTrendmicro struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesVeeva struct {
	// DocumentType is optional.
	DocumentType terra.StringValue `hcl:"document_type,attr"`
	// IncludeAllVersions is optional.
	IncludeAllVersions terra.BoolValue `hcl:"include_all_versions,attr"`
	// IncludeRenditions is optional.
	IncludeRenditions terra.BoolValue `hcl:"include_renditions,attr"`
	// IncludeSourceFiles is optional.
	IncludeSourceFiles terra.BoolValue `hcl:"include_source_files,attr"`
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type SourceFlowConfigSourceConnectorPropertiesZendesk struct {
	// Object is required.
	Object terra.StringValue `hcl:"object,attr" validate:"required"`
}

type Task struct {
	// DestinationField is optional.
	DestinationField terra.StringValue `hcl:"destination_field,attr"`
	// SourceFields is required.
	SourceFields terra.ListValue[terra.StringValue] `hcl:"source_fields,attr" validate:"required"`
	// TaskProperties is optional.
	TaskProperties terra.MapValue[terra.StringValue] `hcl:"task_properties,attr"`
	// TaskType is required.
	TaskType terra.StringValue `hcl:"task_type,attr" validate:"required"`
	// TaskConnectorOperator is min=0.
	ConnectorOperator []TaskConnectorOperator `hcl:"connector_operator,block" validate:"min=0"`
}

type TaskConnectorOperator struct {
	// Amplitude is optional.
	Amplitude terra.StringValue `hcl:"amplitude,attr"`
	// CustomConnector is optional.
	CustomConnector terra.StringValue `hcl:"custom_connector,attr"`
	// Datadog is optional.
	Datadog terra.StringValue `hcl:"datadog,attr"`
	// Dynatrace is optional.
	Dynatrace terra.StringValue `hcl:"dynatrace,attr"`
	// GoogleAnalytics is optional.
	GoogleAnalytics terra.StringValue `hcl:"google_analytics,attr"`
	// InforNexus is optional.
	InforNexus terra.StringValue `hcl:"infor_nexus,attr"`
	// Marketo is optional.
	Marketo terra.StringValue `hcl:"marketo,attr"`
	// S3 is optional.
	S3 terra.StringValue `hcl:"s3,attr"`
	// Salesforce is optional.
	Salesforce terra.StringValue `hcl:"salesforce,attr"`
	// SapoData is optional.
	SapoData terra.StringValue `hcl:"sapo_data,attr"`
	// ServiceNow is optional.
	ServiceNow terra.StringValue `hcl:"service_now,attr"`
	// Singular is optional.
	Singular terra.StringValue `hcl:"singular,attr"`
	// Slack is optional.
	Slack terra.StringValue `hcl:"slack,attr"`
	// Trendmicro is optional.
	Trendmicro terra.StringValue `hcl:"trendmicro,attr"`
	// Veeva is optional.
	Veeva terra.StringValue `hcl:"veeva,attr"`
	// Zendesk is optional.
	Zendesk terra.StringValue `hcl:"zendesk,attr"`
}

type TriggerConfig struct {
	// TriggerType is required.
	TriggerType terra.StringValue `hcl:"trigger_type,attr" validate:"required"`
	// TriggerConfigTriggerProperties is optional.
	TriggerProperties *TriggerConfigTriggerProperties `hcl:"trigger_properties,block"`
}

type TriggerConfigTriggerProperties struct {
	// TriggerConfigTriggerPropertiesScheduled is optional.
	Scheduled *TriggerConfigTriggerPropertiesScheduled `hcl:"scheduled,block"`
}

type TriggerConfigTriggerPropertiesScheduled struct {
	// DataPullMode is optional.
	DataPullMode terra.StringValue `hcl:"data_pull_mode,attr"`
	// FirstExecutionFrom is optional.
	FirstExecutionFrom terra.StringValue `hcl:"first_execution_from,attr"`
	// ScheduleEndTime is optional.
	ScheduleEndTime terra.StringValue `hcl:"schedule_end_time,attr"`
	// ScheduleExpression is required.
	ScheduleExpression terra.StringValue `hcl:"schedule_expression,attr" validate:"required"`
	// ScheduleOffset is optional.
	ScheduleOffset terra.NumberValue `hcl:"schedule_offset,attr"`
	// ScheduleStartTime is optional.
	ScheduleStartTime terra.StringValue `hcl:"schedule_start_time,attr"`
	// Timezone is optional.
	Timezone terra.StringValue `hcl:"timezone,attr"`
}

type destinationFlowConfigAttributes struct {
	ref terra.Reference
}

func (dfc destinationFlowConfigAttributes) InternalRef() (terra.Reference, error) {
	return dfc.ref, nil
}

func (dfc destinationFlowConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigAttributes {
	return destinationFlowConfigAttributes{ref: ref}
}

func (dfc destinationFlowConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dfc.ref.InternalTokens()
}

func (dfc destinationFlowConfigAttributes) ApiVersion() terra.StringValue {
	return terra.ReferenceAsString(dfc.ref.Append("api_version"))
}

func (dfc destinationFlowConfigAttributes) ConnectorProfileName() terra.StringValue {
	return terra.ReferenceAsString(dfc.ref.Append("connector_profile_name"))
}

func (dfc destinationFlowConfigAttributes) ConnectorType() terra.StringValue {
	return terra.ReferenceAsString(dfc.ref.Append("connector_type"))
}

func (dfc destinationFlowConfigAttributes) DestinationConnectorProperties() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesAttributes](dfc.ref.Append("destination_connector_properties"))
}

type destinationFlowConfigDestinationConnectorPropertiesAttributes struct {
	ref terra.Reference
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return dcp.ref, nil
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesAttributes{ref: ref}
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dcp.ref.InternalTokens()
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) CustomConnector() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes](dcp.ref.Append("custom_connector"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) CustomerProfiles() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes](dcp.ref.Append("customer_profiles"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) EventBridge() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes](dcp.ref.Append("event_bridge"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) Honeycode() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes](dcp.ref.Append("honeycode"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) LookoutMetrics() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes](dcp.ref.Append("lookout_metrics"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) Marketo() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes](dcp.ref.Append("marketo"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) Redshift() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes](dcp.ref.Append("redshift"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) S3() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesS3Attributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesS3Attributes](dcp.ref.Append("s3"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) Salesforce() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes](dcp.ref.Append("salesforce"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) SapoData() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes](dcp.ref.Append("sapo_data"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) Snowflake() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes](dcp.ref.Append("snowflake"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) Upsolver() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes](dcp.ref.Append("upsolver"))
}

func (dcp destinationFlowConfigDestinationConnectorPropertiesAttributes) Zendesk() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes](dcp.ref.Append("zendesk"))
}

type destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes{ref: ref}
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) CustomProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cc.ref.Append("custom_properties"))
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) EntityName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("entity_name"))
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](cc.ref.Append("id_field_names"))
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("write_operation_type"))
}

func (cc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes](cc.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes struct {
	ref terra.Reference
}

func (cp destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes{ref: ref}
}

func (cp destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("domain_name"))
}

func (cp destinationFlowConfigDestinationConnectorPropertiesCustomerProfilesAttributes) ObjectTypeName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("object_type_name"))
}

type destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes struct {
	ref terra.Reference
}

func (eb destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) InternalRef() (terra.Reference, error) {
	return eb.ref, nil
}

func (eb destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes{ref: ref}
}

func (eb destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return eb.ref.InternalTokens()
}

func (eb destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(eb.ref.Append("object"))
}

func (eb destinationFlowConfigDestinationConnectorPropertiesEventBridgeAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes](eb.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes struct {
	ref terra.Reference
}

func (h destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes{ref: ref}
}

func (h destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(h.ref.Append("object"))
}

func (h destinationFlowConfigDestinationConnectorPropertiesHoneycodeAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes](h.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes struct {
	ref terra.Reference
}

func (lm destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes) InternalRef() (terra.Reference, error) {
	return lm.ref, nil
}

func (lm destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes{ref: ref}
}

func (lm destinationFlowConfigDestinationConnectorPropertiesLookoutMetricsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lm.ref.InternalTokens()
}

type destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes struct {
	ref terra.Reference
}

func (m destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes{ref: ref}
}

func (m destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("object"))
}

func (m destinationFlowConfigDestinationConnectorPropertiesMarketoAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes](m.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes struct {
	ref terra.Reference
}

func (r destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes{ref: ref}
}

func (r destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket_prefix"))
}

func (r destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) IntermediateBucketName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("intermediate_bucket_name"))
}

func (r destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("object"))
}

func (r destinationFlowConfigDestinationConnectorPropertiesRedshiftAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes](r.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesS3Attributes struct {
	ref terra.Reference
}

func (s destinationFlowConfigDestinationConnectorPropertiesS3Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s destinationFlowConfigDestinationConnectorPropertiesS3Attributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesS3Attributes {
	return destinationFlowConfigDestinationConnectorPropertiesS3Attributes{ref: ref}
}

func (s destinationFlowConfigDestinationConnectorPropertiesS3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s destinationFlowConfigDestinationConnectorPropertiesS3Attributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_name"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesS3Attributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesS3Attributes) S3OutputFormatConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes](s.ref.Append("s3_output_format_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes struct {
	ref terra.Reference
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) InternalRef() (terra.Reference, error) {
	return sofc.ref, nil
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes{ref: ref}
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sofc.ref.InternalTokens()
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) FileType() terra.StringValue {
	return terra.ReferenceAsString(sofc.ref.Append("file_type"))
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) PreserveSourceDataTyping() terra.BoolValue {
	return terra.ReferenceAsBool(sofc.ref.Append("preserve_source_data_typing"))
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) AggregationConfig() terra.ListValue[destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes](sofc.ref.Append("aggregation_config"))
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigAttributes) PrefixConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes](sofc.ref.Append("prefix_config"))
}

type destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes struct {
	ref terra.Reference
}

func (ac destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes {
	return destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes{ref: ref}
}

func (ac destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac destinationFlowConfigDestinationConnectorProperties9A1Db91BAttributes) AggregationType() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("aggregation_type"))
}

type destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes struct {
	ref terra.Reference
}

func (pc destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes {
	return destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes{ref: ref}
}

func (pc destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) PrefixFormat() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_format"))
}

func (pc destinationFlowConfigDestinationConnectorPropertiesB7Cf01B4Attributes) PrefixType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_type"))
}

type destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes struct {
	ref terra.Reference
}

func (s destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes{ref: ref}
}

func (s destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](s.ref.Append("id_field_names"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("write_operation_type"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesSalesforceAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes](s.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes struct {
	ref terra.Reference
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes{ref: ref}
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](sd.ref.Append("id_field_names"))
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) ObjectPath() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("object_path"))
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("write_operation_type"))
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes](sd.ref.Append("error_handling_config"))
}

func (sd destinationFlowConfigDestinationConnectorPropertiesSapoDataAttributes) SuccessResponseHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes](sd.ref.Append("success_response_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes struct {
	ref terra.Reference
}

func (srhc destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return srhc.ref, nil
}

func (srhc destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes{ref: ref}
}

func (srhc destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srhc.ref.InternalTokens()
}

func (srhc destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(srhc.ref.Append("bucket_name"))
}

func (srhc destinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(srhc.ref.Append("bucket_prefix"))
}

type destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes struct {
	ref terra.Reference
}

func (s destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes{ref: ref}
}

func (s destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) IntermediateBucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("intermediate_bucket_name"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

func (s destinationFlowConfigDestinationConnectorPropertiesSnowflakeAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes](s.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes struct {
	ref terra.Reference
}

func (u destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) InternalRef() (terra.Reference, error) {
	return u.ref, nil
}

func (u destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes{ref: ref}
}

func (u destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return u.ref.InternalTokens()
}

func (u destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("bucket_name"))
}

func (u destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(u.ref.Append("bucket_prefix"))
}

func (u destinationFlowConfigDestinationConnectorPropertiesUpsolverAttributes) S3OutputFormatConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes](u.ref.Append("s3_output_format_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes struct {
	ref terra.Reference
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) InternalRef() (terra.Reference, error) {
	return sofc.ref, nil
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes{ref: ref}
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sofc.ref.InternalTokens()
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) FileType() terra.StringValue {
	return terra.ReferenceAsString(sofc.ref.Append("file_type"))
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) AggregationConfig() terra.ListValue[destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes](sofc.ref.Append("aggregation_config"))
}

func (sofc destinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigAttributes) PrefixConfig() terra.ListValue[destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes](sofc.ref.Append("prefix_config"))
}

type destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes struct {
	ref terra.Reference
}

func (ac destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes {
	return destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes{ref: ref}
}

func (ac destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac destinationFlowConfigDestinationConnectorProperties8122C4C1Attributes) AggregationType() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("aggregation_type"))
}

type destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes struct {
	ref terra.Reference
}

func (pc destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes {
	return destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes{ref: ref}
}

func (pc destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) PrefixFormat() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_format"))
}

func (pc destinationFlowConfigDestinationConnectorProperties2Eb41171Attributes) PrefixType() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("prefix_type"))
}

type destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes struct {
	ref terra.Reference
}

func (z destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) InternalRef() (terra.Reference, error) {
	return z.ref, nil
}

func (z destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes{ref: ref}
}

func (z destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return z.ref.InternalTokens()
}

func (z destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) IdFieldNames() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](z.ref.Append("id_field_names"))
}

func (z destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("object"))
}

func (z destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) WriteOperationType() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("write_operation_type"))
}

func (z destinationFlowConfigDestinationConnectorPropertiesZendeskAttributes) ErrorHandlingConfig() terra.ListValue[destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes] {
	return terra.ReferenceAsList[destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes](z.ref.Append("error_handling_config"))
}

type destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes struct {
	ref terra.Reference
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) InternalRef() (terra.Reference, error) {
	return ehc.ref, nil
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) InternalWithRef(ref terra.Reference) destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes {
	return destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes{ref: ref}
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ehc.ref.InternalTokens()
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_name"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(ehc.ref.Append("bucket_prefix"))
}

func (ehc destinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigAttributes) FailOnFirstDestinationError() terra.BoolValue {
	return terra.ReferenceAsBool(ehc.ref.Append("fail_on_first_destination_error"))
}

type sourceFlowConfigAttributes struct {
	ref terra.Reference
}

func (sfc sourceFlowConfigAttributes) InternalRef() (terra.Reference, error) {
	return sfc.ref, nil
}

func (sfc sourceFlowConfigAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigAttributes {
	return sourceFlowConfigAttributes{ref: ref}
}

func (sfc sourceFlowConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sfc.ref.InternalTokens()
}

func (sfc sourceFlowConfigAttributes) ApiVersion() terra.StringValue {
	return terra.ReferenceAsString(sfc.ref.Append("api_version"))
}

func (sfc sourceFlowConfigAttributes) ConnectorProfileName() terra.StringValue {
	return terra.ReferenceAsString(sfc.ref.Append("connector_profile_name"))
}

func (sfc sourceFlowConfigAttributes) ConnectorType() terra.StringValue {
	return terra.ReferenceAsString(sfc.ref.Append("connector_type"))
}

func (sfc sourceFlowConfigAttributes) IncrementalPullConfig() terra.ListValue[sourceFlowConfigIncrementalPullConfigAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigIncrementalPullConfigAttributes](sfc.ref.Append("incremental_pull_config"))
}

func (sfc sourceFlowConfigAttributes) SourceConnectorProperties() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesAttributes](sfc.ref.Append("source_connector_properties"))
}

type sourceFlowConfigIncrementalPullConfigAttributes struct {
	ref terra.Reference
}

func (ipc sourceFlowConfigIncrementalPullConfigAttributes) InternalRef() (terra.Reference, error) {
	return ipc.ref, nil
}

func (ipc sourceFlowConfigIncrementalPullConfigAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigIncrementalPullConfigAttributes {
	return sourceFlowConfigIncrementalPullConfigAttributes{ref: ref}
}

func (ipc sourceFlowConfigIncrementalPullConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ipc.ref.InternalTokens()
}

func (ipc sourceFlowConfigIncrementalPullConfigAttributes) DatetimeTypeFieldName() terra.StringValue {
	return terra.ReferenceAsString(ipc.ref.Append("datetime_type_field_name"))
}

type sourceFlowConfigSourceConnectorPropertiesAttributes struct {
	ref terra.Reference
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return scp.ref, nil
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesAttributes {
	return sourceFlowConfigSourceConnectorPropertiesAttributes{ref: ref}
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scp.ref.InternalTokens()
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Amplitude() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes](scp.ref.Append("amplitude"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) CustomConnector() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes](scp.ref.Append("custom_connector"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Datadog() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesDatadogAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesDatadogAttributes](scp.ref.Append("datadog"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Dynatrace() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes](scp.ref.Append("dynatrace"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) GoogleAnalytics() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes](scp.ref.Append("google_analytics"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) InforNexus() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes](scp.ref.Append("infor_nexus"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Marketo() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesMarketoAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesMarketoAttributes](scp.ref.Append("marketo"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) S3() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesS3Attributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesS3Attributes](scp.ref.Append("s3"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Salesforce() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes](scp.ref.Append("salesforce"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) SapoData() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes](scp.ref.Append("sapo_data"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) ServiceNow() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes](scp.ref.Append("service_now"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Singular() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesSingularAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesSingularAttributes](scp.ref.Append("singular"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Slack() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesSlackAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesSlackAttributes](scp.ref.Append("slack"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Trendmicro() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes](scp.ref.Append("trendmicro"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Veeva() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesVeevaAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesVeevaAttributes](scp.ref.Append("veeva"))
}

func (scp sourceFlowConfigSourceConnectorPropertiesAttributes) Zendesk() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesZendeskAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesZendeskAttributes](scp.ref.Append("zendesk"))
}

type sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes struct {
	ref terra.Reference
}

func (a sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes {
	return sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes{ref: ref}
}

func (a sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a sourceFlowConfigSourceConnectorPropertiesAmplitudeAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes struct {
	ref terra.Reference
}

func (cc sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes {
	return sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes{ref: ref}
}

func (cc sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) CustomProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](cc.ref.Append("custom_properties"))
}

func (cc sourceFlowConfigSourceConnectorPropertiesCustomConnectorAttributes) EntityName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("entity_name"))
}

type sourceFlowConfigSourceConnectorPropertiesDatadogAttributes struct {
	ref terra.Reference
}

func (d sourceFlowConfigSourceConnectorPropertiesDatadogAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d sourceFlowConfigSourceConnectorPropertiesDatadogAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesDatadogAttributes {
	return sourceFlowConfigSourceConnectorPropertiesDatadogAttributes{ref: ref}
}

func (d sourceFlowConfigSourceConnectorPropertiesDatadogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d sourceFlowConfigSourceConnectorPropertiesDatadogAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes struct {
	ref terra.Reference
}

func (d sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes {
	return sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes{ref: ref}
}

func (d sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d sourceFlowConfigSourceConnectorPropertiesDynatraceAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes struct {
	ref terra.Reference
}

func (ga sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) InternalRef() (terra.Reference, error) {
	return ga.ref, nil
}

func (ga sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes {
	return sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes{ref: ref}
}

func (ga sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ga.ref.InternalTokens()
}

func (ga sourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(ga.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes struct {
	ref terra.Reference
}

func (in sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) InternalRef() (terra.Reference, error) {
	return in.ref, nil
}

func (in sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes {
	return sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes{ref: ref}
}

func (in sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return in.ref.InternalTokens()
}

func (in sourceFlowConfigSourceConnectorPropertiesInforNexusAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(in.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesMarketoAttributes struct {
	ref terra.Reference
}

func (m sourceFlowConfigSourceConnectorPropertiesMarketoAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m sourceFlowConfigSourceConnectorPropertiesMarketoAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesMarketoAttributes {
	return sourceFlowConfigSourceConnectorPropertiesMarketoAttributes{ref: ref}
}

func (m sourceFlowConfigSourceConnectorPropertiesMarketoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m sourceFlowConfigSourceConnectorPropertiesMarketoAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesS3Attributes struct {
	ref terra.Reference
}

func (s sourceFlowConfigSourceConnectorPropertiesS3Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s sourceFlowConfigSourceConnectorPropertiesS3Attributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesS3Attributes {
	return sourceFlowConfigSourceConnectorPropertiesS3Attributes{ref: ref}
}

func (s sourceFlowConfigSourceConnectorPropertiesS3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s sourceFlowConfigSourceConnectorPropertiesS3Attributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_name"))
}

func (s sourceFlowConfigSourceConnectorPropertiesS3Attributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("bucket_prefix"))
}

func (s sourceFlowConfigSourceConnectorPropertiesS3Attributes) S3InputFormatConfig() terra.ListValue[sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes] {
	return terra.ReferenceAsList[sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes](s.ref.Append("s3_input_format_config"))
}

type sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes struct {
	ref terra.Reference
}

func (sifc sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) InternalRef() (terra.Reference, error) {
	return sifc.ref, nil
}

func (sifc sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes {
	return sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes{ref: ref}
}

func (sifc sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sifc.ref.InternalTokens()
}

func (sifc sourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigAttributes) S3InputFileType() terra.StringValue {
	return terra.ReferenceAsString(sifc.ref.Append("s3_input_file_type"))
}

type sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes struct {
	ref terra.Reference
}

func (s sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes {
	return sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes{ref: ref}
}

func (s sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) EnableDynamicFieldUpdate() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("enable_dynamic_field_update"))
}

func (s sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) IncludeDeletedRecords() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("include_deleted_records"))
}

func (s sourceFlowConfigSourceConnectorPropertiesSalesforceAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes struct {
	ref terra.Reference
}

func (sd sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) InternalRef() (terra.Reference, error) {
	return sd.ref, nil
}

func (sd sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes {
	return sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes{ref: ref}
}

func (sd sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sd.ref.InternalTokens()
}

func (sd sourceFlowConfigSourceConnectorPropertiesSapoDataAttributes) ObjectPath() terra.StringValue {
	return terra.ReferenceAsString(sd.ref.Append("object_path"))
}

type sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes struct {
	ref terra.Reference
}

func (sn sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) InternalRef() (terra.Reference, error) {
	return sn.ref, nil
}

func (sn sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes {
	return sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes{ref: ref}
}

func (sn sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sn.ref.InternalTokens()
}

func (sn sourceFlowConfigSourceConnectorPropertiesServiceNowAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(sn.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesSingularAttributes struct {
	ref terra.Reference
}

func (s sourceFlowConfigSourceConnectorPropertiesSingularAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s sourceFlowConfigSourceConnectorPropertiesSingularAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesSingularAttributes {
	return sourceFlowConfigSourceConnectorPropertiesSingularAttributes{ref: ref}
}

func (s sourceFlowConfigSourceConnectorPropertiesSingularAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s sourceFlowConfigSourceConnectorPropertiesSingularAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesSlackAttributes struct {
	ref terra.Reference
}

func (s sourceFlowConfigSourceConnectorPropertiesSlackAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s sourceFlowConfigSourceConnectorPropertiesSlackAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesSlackAttributes {
	return sourceFlowConfigSourceConnectorPropertiesSlackAttributes{ref: ref}
}

func (s sourceFlowConfigSourceConnectorPropertiesSlackAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s sourceFlowConfigSourceConnectorPropertiesSlackAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes struct {
	ref terra.Reference
}

func (t sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes {
	return sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes{ref: ref}
}

func (t sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t sourceFlowConfigSourceConnectorPropertiesTrendmicroAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesVeevaAttributes struct {
	ref terra.Reference
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesVeevaAttributes {
	return sourceFlowConfigSourceConnectorPropertiesVeevaAttributes{ref: ref}
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) DocumentType() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("document_type"))
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) IncludeAllVersions() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("include_all_versions"))
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) IncludeRenditions() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("include_renditions"))
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) IncludeSourceFiles() terra.BoolValue {
	return terra.ReferenceAsBool(v.ref.Append("include_source_files"))
}

func (v sourceFlowConfigSourceConnectorPropertiesVeevaAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("object"))
}

type sourceFlowConfigSourceConnectorPropertiesZendeskAttributes struct {
	ref terra.Reference
}

func (z sourceFlowConfigSourceConnectorPropertiesZendeskAttributes) InternalRef() (terra.Reference, error) {
	return z.ref, nil
}

func (z sourceFlowConfigSourceConnectorPropertiesZendeskAttributes) InternalWithRef(ref terra.Reference) sourceFlowConfigSourceConnectorPropertiesZendeskAttributes {
	return sourceFlowConfigSourceConnectorPropertiesZendeskAttributes{ref: ref}
}

func (z sourceFlowConfigSourceConnectorPropertiesZendeskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return z.ref.InternalTokens()
}

func (z sourceFlowConfigSourceConnectorPropertiesZendeskAttributes) Object() terra.StringValue {
	return terra.ReferenceAsString(z.ref.Append("object"))
}

type taskAttributes struct {
	ref terra.Reference
}

func (t taskAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t taskAttributes) InternalWithRef(ref terra.Reference) taskAttributes {
	return taskAttributes{ref: ref}
}

func (t taskAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t taskAttributes) DestinationField() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("destination_field"))
}

func (t taskAttributes) SourceFields() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](t.ref.Append("source_fields"))
}

func (t taskAttributes) TaskProperties() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](t.ref.Append("task_properties"))
}

func (t taskAttributes) TaskType() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("task_type"))
}

func (t taskAttributes) ConnectorOperator() terra.ListValue[taskConnectorOperatorAttributes] {
	return terra.ReferenceAsList[taskConnectorOperatorAttributes](t.ref.Append("connector_operator"))
}

type taskConnectorOperatorAttributes struct {
	ref terra.Reference
}

func (co taskConnectorOperatorAttributes) InternalRef() (terra.Reference, error) {
	return co.ref, nil
}

func (co taskConnectorOperatorAttributes) InternalWithRef(ref terra.Reference) taskConnectorOperatorAttributes {
	return taskConnectorOperatorAttributes{ref: ref}
}

func (co taskConnectorOperatorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return co.ref.InternalTokens()
}

func (co taskConnectorOperatorAttributes) Amplitude() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("amplitude"))
}

func (co taskConnectorOperatorAttributes) CustomConnector() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("custom_connector"))
}

func (co taskConnectorOperatorAttributes) Datadog() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("datadog"))
}

func (co taskConnectorOperatorAttributes) Dynatrace() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("dynatrace"))
}

func (co taskConnectorOperatorAttributes) GoogleAnalytics() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("google_analytics"))
}

func (co taskConnectorOperatorAttributes) InforNexus() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("infor_nexus"))
}

func (co taskConnectorOperatorAttributes) Marketo() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("marketo"))
}

func (co taskConnectorOperatorAttributes) S3() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("s3"))
}

func (co taskConnectorOperatorAttributes) Salesforce() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("salesforce"))
}

func (co taskConnectorOperatorAttributes) SapoData() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("sapo_data"))
}

func (co taskConnectorOperatorAttributes) ServiceNow() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("service_now"))
}

func (co taskConnectorOperatorAttributes) Singular() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("singular"))
}

func (co taskConnectorOperatorAttributes) Slack() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("slack"))
}

func (co taskConnectorOperatorAttributes) Trendmicro() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("trendmicro"))
}

func (co taskConnectorOperatorAttributes) Veeva() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("veeva"))
}

func (co taskConnectorOperatorAttributes) Zendesk() terra.StringValue {
	return terra.ReferenceAsString(co.ref.Append("zendesk"))
}

type triggerConfigAttributes struct {
	ref terra.Reference
}

func (tc triggerConfigAttributes) InternalRef() (terra.Reference, error) {
	return tc.ref, nil
}

func (tc triggerConfigAttributes) InternalWithRef(ref terra.Reference) triggerConfigAttributes {
	return triggerConfigAttributes{ref: ref}
}

func (tc triggerConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tc.ref.InternalTokens()
}

func (tc triggerConfigAttributes) TriggerType() terra.StringValue {
	return terra.ReferenceAsString(tc.ref.Append("trigger_type"))
}

func (tc triggerConfigAttributes) TriggerProperties() terra.ListValue[triggerConfigTriggerPropertiesAttributes] {
	return terra.ReferenceAsList[triggerConfigTriggerPropertiesAttributes](tc.ref.Append("trigger_properties"))
}

type triggerConfigTriggerPropertiesAttributes struct {
	ref terra.Reference
}

func (tp triggerConfigTriggerPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return tp.ref, nil
}

func (tp triggerConfigTriggerPropertiesAttributes) InternalWithRef(ref terra.Reference) triggerConfigTriggerPropertiesAttributes {
	return triggerConfigTriggerPropertiesAttributes{ref: ref}
}

func (tp triggerConfigTriggerPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tp.ref.InternalTokens()
}

func (tp triggerConfigTriggerPropertiesAttributes) Scheduled() terra.ListValue[triggerConfigTriggerPropertiesScheduledAttributes] {
	return terra.ReferenceAsList[triggerConfigTriggerPropertiesScheduledAttributes](tp.ref.Append("scheduled"))
}

type triggerConfigTriggerPropertiesScheduledAttributes struct {
	ref terra.Reference
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) InternalWithRef(ref terra.Reference) triggerConfigTriggerPropertiesScheduledAttributes {
	return triggerConfigTriggerPropertiesScheduledAttributes{ref: ref}
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) DataPullMode() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("data_pull_mode"))
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) FirstExecutionFrom() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("first_execution_from"))
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) ScheduleEndTime() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schedule_end_time"))
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) ScheduleExpression() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schedule_expression"))
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) ScheduleOffset() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("schedule_offset"))
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) ScheduleStartTime() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("schedule_start_time"))
}

func (s triggerConfigTriggerPropertiesScheduledAttributes) Timezone() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("timezone"))
}

type DestinationFlowConfigState struct {
	ApiVersion                     string                                                     `json:"api_version"`
	ConnectorProfileName           string                                                     `json:"connector_profile_name"`
	ConnectorType                  string                                                     `json:"connector_type"`
	DestinationConnectorProperties []DestinationFlowConfigDestinationConnectorPropertiesState `json:"destination_connector_properties"`
}

type DestinationFlowConfigDestinationConnectorPropertiesState struct {
	CustomConnector  []DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorState  `json:"custom_connector"`
	CustomerProfiles []DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesState `json:"customer_profiles"`
	EventBridge      []DestinationFlowConfigDestinationConnectorPropertiesEventBridgeState      `json:"event_bridge"`
	Honeycode        []DestinationFlowConfigDestinationConnectorPropertiesHoneycodeState        `json:"honeycode"`
	LookoutMetrics   []DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsState   `json:"lookout_metrics"`
	Marketo          []DestinationFlowConfigDestinationConnectorPropertiesMarketoState          `json:"marketo"`
	Redshift         []DestinationFlowConfigDestinationConnectorPropertiesRedshiftState         `json:"redshift"`
	S3               []DestinationFlowConfigDestinationConnectorPropertiesS3State               `json:"s3"`
	Salesforce       []DestinationFlowConfigDestinationConnectorPropertiesSalesforceState       `json:"salesforce"`
	SapoData         []DestinationFlowConfigDestinationConnectorPropertiesSapoDataState         `json:"sapo_data"`
	Snowflake        []DestinationFlowConfigDestinationConnectorPropertiesSnowflakeState        `json:"snowflake"`
	Upsolver         []DestinationFlowConfigDestinationConnectorPropertiesUpsolverState         `json:"upsolver"`
	Zendesk          []DestinationFlowConfigDestinationConnectorPropertiesZendeskState          `json:"zendesk"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorState struct {
	CustomProperties    map[string]string                                                                            `json:"custom_properties"`
	EntityName          string                                                                                       `json:"entity_name"`
	IdFieldNames        []string                                                                                     `json:"id_field_names"`
	WriteOperationType  string                                                                                       `json:"write_operation_type"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomConnectorErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesCustomerProfilesState struct {
	DomainName     string `json:"domain_name"`
	ObjectTypeName string `json:"object_type_name"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeState struct {
	Object              string                                                                                   `json:"object"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesEventBridgeErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeState struct {
	Object              string                                                                                 `json:"object"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesHoneycodeErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesLookoutMetricsState struct{}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoState struct {
	Object              string                                                                               `json:"object"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesMarketoErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftState struct {
	BucketPrefix           string                                                                                `json:"bucket_prefix"`
	IntermediateBucketName string                                                                                `json:"intermediate_bucket_name"`
	Object                 string                                                                                `json:"object"`
	ErrorHandlingConfig    []DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesRedshiftErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3State struct {
	BucketName           string                                                                           `json:"bucket_name"`
	BucketPrefix         string                                                                           `json:"bucket_prefix"`
	S3OutputFormatConfig []DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigState `json:"s3_output_format_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigState struct {
	FileType                 string                                                             `json:"file_type"`
	PreserveSourceDataTyping bool                                                               `json:"preserve_source_data_typing"`
	AggregationConfig        []DestinationFlowConfigDestinationConnectorProperties9A1Db91BState `json:"aggregation_config"`
	PrefixConfig             []DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4State `json:"prefix_config"`
}

type DestinationFlowConfigDestinationConnectorProperties9A1Db91BState struct {
	AggregationType string `json:"aggregation_type"`
}

type DestinationFlowConfigDestinationConnectorPropertiesB7Cf01B4State struct {
	PrefixFormat string `json:"prefix_format"`
	PrefixType   string `json:"prefix_type"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceState struct {
	IdFieldNames        []string                                                                                `json:"id_field_names"`
	Object              string                                                                                  `json:"object"`
	WriteOperationType  string                                                                                  `json:"write_operation_type"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSalesforceErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataState struct {
	IdFieldNames                  []string                                                                                        `json:"id_field_names"`
	ObjectPath                    string                                                                                          `json:"object_path"`
	WriteOperationType            string                                                                                          `json:"write_operation_type"`
	ErrorHandlingConfig           []DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigState           `json:"error_handling_config"`
	SuccessResponseHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigState `json:"success_response_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfigState struct {
	BucketName   string `json:"bucket_name"`
	BucketPrefix string `json:"bucket_prefix"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeState struct {
	BucketPrefix           string                                                                                 `json:"bucket_prefix"`
	IntermediateBucketName string                                                                                 `json:"intermediate_bucket_name"`
	Object                 string                                                                                 `json:"object"`
	ErrorHandlingConfig    []DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesSnowflakeErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverState struct {
	BucketName           string                                                                                 `json:"bucket_name"`
	BucketPrefix         string                                                                                 `json:"bucket_prefix"`
	S3OutputFormatConfig []DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigState `json:"s3_output_format_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesUpsolverS3OutputFormatConfigState struct {
	FileType          string                                                             `json:"file_type"`
	AggregationConfig []DestinationFlowConfigDestinationConnectorProperties8122C4C1State `json:"aggregation_config"`
	PrefixConfig      []DestinationFlowConfigDestinationConnectorProperties2Eb41171State `json:"prefix_config"`
}

type DestinationFlowConfigDestinationConnectorProperties8122C4C1State struct {
	AggregationType string `json:"aggregation_type"`
}

type DestinationFlowConfigDestinationConnectorProperties2Eb41171State struct {
	PrefixFormat string `json:"prefix_format"`
	PrefixType   string `json:"prefix_type"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskState struct {
	IdFieldNames        []string                                                                             `json:"id_field_names"`
	Object              string                                                                               `json:"object"`
	WriteOperationType  string                                                                               `json:"write_operation_type"`
	ErrorHandlingConfig []DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigState `json:"error_handling_config"`
}

type DestinationFlowConfigDestinationConnectorPropertiesZendeskErrorHandlingConfigState struct {
	BucketName                  string `json:"bucket_name"`
	BucketPrefix                string `json:"bucket_prefix"`
	FailOnFirstDestinationError bool   `json:"fail_on_first_destination_error"`
}

type SourceFlowConfigState struct {
	ApiVersion                string                                           `json:"api_version"`
	ConnectorProfileName      string                                           `json:"connector_profile_name"`
	ConnectorType             string                                           `json:"connector_type"`
	IncrementalPullConfig     []SourceFlowConfigIncrementalPullConfigState     `json:"incremental_pull_config"`
	SourceConnectorProperties []SourceFlowConfigSourceConnectorPropertiesState `json:"source_connector_properties"`
}

type SourceFlowConfigIncrementalPullConfigState struct {
	DatetimeTypeFieldName string `json:"datetime_type_field_name"`
}

type SourceFlowConfigSourceConnectorPropertiesState struct {
	Amplitude       []SourceFlowConfigSourceConnectorPropertiesAmplitudeState       `json:"amplitude"`
	CustomConnector []SourceFlowConfigSourceConnectorPropertiesCustomConnectorState `json:"custom_connector"`
	Datadog         []SourceFlowConfigSourceConnectorPropertiesDatadogState         `json:"datadog"`
	Dynatrace       []SourceFlowConfigSourceConnectorPropertiesDynatraceState       `json:"dynatrace"`
	GoogleAnalytics []SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsState `json:"google_analytics"`
	InforNexus      []SourceFlowConfigSourceConnectorPropertiesInforNexusState      `json:"infor_nexus"`
	Marketo         []SourceFlowConfigSourceConnectorPropertiesMarketoState         `json:"marketo"`
	S3              []SourceFlowConfigSourceConnectorPropertiesS3State              `json:"s3"`
	Salesforce      []SourceFlowConfigSourceConnectorPropertiesSalesforceState      `json:"salesforce"`
	SapoData        []SourceFlowConfigSourceConnectorPropertiesSapoDataState        `json:"sapo_data"`
	ServiceNow      []SourceFlowConfigSourceConnectorPropertiesServiceNowState      `json:"service_now"`
	Singular        []SourceFlowConfigSourceConnectorPropertiesSingularState        `json:"singular"`
	Slack           []SourceFlowConfigSourceConnectorPropertiesSlackState           `json:"slack"`
	Trendmicro      []SourceFlowConfigSourceConnectorPropertiesTrendmicroState      `json:"trendmicro"`
	Veeva           []SourceFlowConfigSourceConnectorPropertiesVeevaState           `json:"veeva"`
	Zendesk         []SourceFlowConfigSourceConnectorPropertiesZendeskState         `json:"zendesk"`
}

type SourceFlowConfigSourceConnectorPropertiesAmplitudeState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesCustomConnectorState struct {
	CustomProperties map[string]string `json:"custom_properties"`
	EntityName       string            `json:"entity_name"`
}

type SourceFlowConfigSourceConnectorPropertiesDatadogState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesDynatraceState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesInforNexusState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesMarketoState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesS3State struct {
	BucketName          string                                                                `json:"bucket_name"`
	BucketPrefix        string                                                                `json:"bucket_prefix"`
	S3InputFormatConfig []SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigState `json:"s3_input_format_config"`
}

type SourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfigState struct {
	S3InputFileType string `json:"s3_input_file_type"`
}

type SourceFlowConfigSourceConnectorPropertiesSalesforceState struct {
	EnableDynamicFieldUpdate bool   `json:"enable_dynamic_field_update"`
	IncludeDeletedRecords    bool   `json:"include_deleted_records"`
	Object                   string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesSapoDataState struct {
	ObjectPath string `json:"object_path"`
}

type SourceFlowConfigSourceConnectorPropertiesServiceNowState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesSingularState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesSlackState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesTrendmicroState struct {
	Object string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesVeevaState struct {
	DocumentType       string `json:"document_type"`
	IncludeAllVersions bool   `json:"include_all_versions"`
	IncludeRenditions  bool   `json:"include_renditions"`
	IncludeSourceFiles bool   `json:"include_source_files"`
	Object             string `json:"object"`
}

type SourceFlowConfigSourceConnectorPropertiesZendeskState struct {
	Object string `json:"object"`
}

type TaskState struct {
	DestinationField  string                       `json:"destination_field"`
	SourceFields      []string                     `json:"source_fields"`
	TaskProperties    map[string]string            `json:"task_properties"`
	TaskType          string                       `json:"task_type"`
	ConnectorOperator []TaskConnectorOperatorState `json:"connector_operator"`
}

type TaskConnectorOperatorState struct {
	Amplitude       string `json:"amplitude"`
	CustomConnector string `json:"custom_connector"`
	Datadog         string `json:"datadog"`
	Dynatrace       string `json:"dynatrace"`
	GoogleAnalytics string `json:"google_analytics"`
	InforNexus      string `json:"infor_nexus"`
	Marketo         string `json:"marketo"`
	S3              string `json:"s3"`
	Salesforce      string `json:"salesforce"`
	SapoData        string `json:"sapo_data"`
	ServiceNow      string `json:"service_now"`
	Singular        string `json:"singular"`
	Slack           string `json:"slack"`
	Trendmicro      string `json:"trendmicro"`
	Veeva           string `json:"veeva"`
	Zendesk         string `json:"zendesk"`
}

type TriggerConfigState struct {
	TriggerType       string                                `json:"trigger_type"`
	TriggerProperties []TriggerConfigTriggerPropertiesState `json:"trigger_properties"`
}

type TriggerConfigTriggerPropertiesState struct {
	Scheduled []TriggerConfigTriggerPropertiesScheduledState `json:"scheduled"`
}

type TriggerConfigTriggerPropertiesScheduledState struct {
	DataPullMode       string  `json:"data_pull_mode"`
	FirstExecutionFrom string  `json:"first_execution_from"`
	ScheduleEndTime    string  `json:"schedule_end_time"`
	ScheduleExpression string  `json:"schedule_expression"`
	ScheduleOffset     float64 `json:"schedule_offset"`
	ScheduleStartTime  string  `json:"schedule_start_time"`
	Timezone           string  `json:"timezone"`
}
