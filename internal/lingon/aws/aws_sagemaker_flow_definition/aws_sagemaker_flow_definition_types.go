// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_flow_definition

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type HumanLoopActivationConfig struct {
	// HumanLoopActivationConfigHumanLoopActivationConditionsConfig is optional.
	HumanLoopActivationConditionsConfig *HumanLoopActivationConfigHumanLoopActivationConditionsConfig `hcl:"human_loop_activation_conditions_config,block"`
}

type HumanLoopActivationConfigHumanLoopActivationConditionsConfig struct {
	// HumanLoopActivationConditions is required.
	HumanLoopActivationConditions terra.StringValue `hcl:"human_loop_activation_conditions,attr" validate:"required"`
}

type HumanLoopConfig struct {
	// HumanTaskUiArn is required.
	HumanTaskUiArn terra.StringValue `hcl:"human_task_ui_arn,attr" validate:"required"`
	// TaskAvailabilityLifetimeInSeconds is optional.
	TaskAvailabilityLifetimeInSeconds terra.NumberValue `hcl:"task_availability_lifetime_in_seconds,attr"`
	// TaskCount is required.
	TaskCount terra.NumberValue `hcl:"task_count,attr" validate:"required"`
	// TaskDescription is required.
	TaskDescription terra.StringValue `hcl:"task_description,attr" validate:"required"`
	// TaskKeywords is optional.
	TaskKeywords terra.SetValue[terra.StringValue] `hcl:"task_keywords,attr"`
	// TaskTimeLimitInSeconds is optional.
	TaskTimeLimitInSeconds terra.NumberValue `hcl:"task_time_limit_in_seconds,attr"`
	// TaskTitle is required.
	TaskTitle terra.StringValue `hcl:"task_title,attr" validate:"required"`
	// WorkteamArn is required.
	WorkteamArn terra.StringValue `hcl:"workteam_arn,attr" validate:"required"`
	// HumanLoopConfigPublicWorkforceTaskPrice is optional.
	PublicWorkforceTaskPrice *HumanLoopConfigPublicWorkforceTaskPrice `hcl:"public_workforce_task_price,block"`
}

type HumanLoopConfigPublicWorkforceTaskPrice struct {
	// HumanLoopConfigPublicWorkforceTaskPriceAmountInUsd is optional.
	AmountInUsd *HumanLoopConfigPublicWorkforceTaskPriceAmountInUsd `hcl:"amount_in_usd,block"`
}

type HumanLoopConfigPublicWorkforceTaskPriceAmountInUsd struct {
	// Cents is optional.
	Cents terra.NumberValue `hcl:"cents,attr"`
	// Dollars is optional.
	Dollars terra.NumberValue `hcl:"dollars,attr"`
	// TenthFractionsOfACent is optional.
	TenthFractionsOfACent terra.NumberValue `hcl:"tenth_fractions_of_a_cent,attr"`
}

type HumanLoopRequestSource struct {
	// AwsManagedHumanLoopRequestSource is required.
	AwsManagedHumanLoopRequestSource terra.StringValue `hcl:"aws_managed_human_loop_request_source,attr" validate:"required"`
}

type OutputConfig struct {
	// KmsKeyId is optional.
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// S3OutputPath is required.
	S3OutputPath terra.StringValue `hcl:"s3_output_path,attr" validate:"required"`
}

type humanLoopActivationConfigAttributes struct {
	ref terra.Reference
}

func (hlac humanLoopActivationConfigAttributes) InternalRef() (terra.Reference, error) {
	return hlac.ref, nil
}

func (hlac humanLoopActivationConfigAttributes) InternalWithRef(ref terra.Reference) humanLoopActivationConfigAttributes {
	return humanLoopActivationConfigAttributes{ref: ref}
}

func (hlac humanLoopActivationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlac.ref.InternalTokens()
}

func (hlac humanLoopActivationConfigAttributes) HumanLoopActivationConditionsConfig() terra.ListValue[humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes] {
	return terra.ReferenceAsList[humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes](hlac.ref.Append("human_loop_activation_conditions_config"))
}

type humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes struct {
	ref terra.Reference
}

func (hlacc humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) InternalRef() (terra.Reference, error) {
	return hlacc.ref, nil
}

func (hlacc humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) InternalWithRef(ref terra.Reference) humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes {
	return humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes{ref: ref}
}

func (hlacc humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlacc.ref.InternalTokens()
}

func (hlacc humanLoopActivationConfigHumanLoopActivationConditionsConfigAttributes) HumanLoopActivationConditions() terra.StringValue {
	return terra.ReferenceAsString(hlacc.ref.Append("human_loop_activation_conditions"))
}

type humanLoopConfigAttributes struct {
	ref terra.Reference
}

func (hlc humanLoopConfigAttributes) InternalRef() (terra.Reference, error) {
	return hlc.ref, nil
}

func (hlc humanLoopConfigAttributes) InternalWithRef(ref terra.Reference) humanLoopConfigAttributes {
	return humanLoopConfigAttributes{ref: ref}
}

func (hlc humanLoopConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlc.ref.InternalTokens()
}

func (hlc humanLoopConfigAttributes) HumanTaskUiArn() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("human_task_ui_arn"))
}

func (hlc humanLoopConfigAttributes) TaskAvailabilityLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(hlc.ref.Append("task_availability_lifetime_in_seconds"))
}

func (hlc humanLoopConfigAttributes) TaskCount() terra.NumberValue {
	return terra.ReferenceAsNumber(hlc.ref.Append("task_count"))
}

func (hlc humanLoopConfigAttributes) TaskDescription() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("task_description"))
}

func (hlc humanLoopConfigAttributes) TaskKeywords() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](hlc.ref.Append("task_keywords"))
}

func (hlc humanLoopConfigAttributes) TaskTimeLimitInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(hlc.ref.Append("task_time_limit_in_seconds"))
}

func (hlc humanLoopConfigAttributes) TaskTitle() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("task_title"))
}

func (hlc humanLoopConfigAttributes) WorkteamArn() terra.StringValue {
	return terra.ReferenceAsString(hlc.ref.Append("workteam_arn"))
}

func (hlc humanLoopConfigAttributes) PublicWorkforceTaskPrice() terra.ListValue[humanLoopConfigPublicWorkforceTaskPriceAttributes] {
	return terra.ReferenceAsList[humanLoopConfigPublicWorkforceTaskPriceAttributes](hlc.ref.Append("public_workforce_task_price"))
}

type humanLoopConfigPublicWorkforceTaskPriceAttributes struct {
	ref terra.Reference
}

func (pwtp humanLoopConfigPublicWorkforceTaskPriceAttributes) InternalRef() (terra.Reference, error) {
	return pwtp.ref, nil
}

func (pwtp humanLoopConfigPublicWorkforceTaskPriceAttributes) InternalWithRef(ref terra.Reference) humanLoopConfigPublicWorkforceTaskPriceAttributes {
	return humanLoopConfigPublicWorkforceTaskPriceAttributes{ref: ref}
}

func (pwtp humanLoopConfigPublicWorkforceTaskPriceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pwtp.ref.InternalTokens()
}

func (pwtp humanLoopConfigPublicWorkforceTaskPriceAttributes) AmountInUsd() terra.ListValue[humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes] {
	return terra.ReferenceAsList[humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes](pwtp.ref.Append("amount_in_usd"))
}

type humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes struct {
	ref terra.Reference
}

func (aiu humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) InternalRef() (terra.Reference, error) {
	return aiu.ref, nil
}

func (aiu humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) InternalWithRef(ref terra.Reference) humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes {
	return humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes{ref: ref}
}

func (aiu humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aiu.ref.InternalTokens()
}

func (aiu humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) Cents() terra.NumberValue {
	return terra.ReferenceAsNumber(aiu.ref.Append("cents"))
}

func (aiu humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) Dollars() terra.NumberValue {
	return terra.ReferenceAsNumber(aiu.ref.Append("dollars"))
}

func (aiu humanLoopConfigPublicWorkforceTaskPriceAmountInUsdAttributes) TenthFractionsOfACent() terra.NumberValue {
	return terra.ReferenceAsNumber(aiu.ref.Append("tenth_fractions_of_a_cent"))
}

type humanLoopRequestSourceAttributes struct {
	ref terra.Reference
}

func (hlrs humanLoopRequestSourceAttributes) InternalRef() (terra.Reference, error) {
	return hlrs.ref, nil
}

func (hlrs humanLoopRequestSourceAttributes) InternalWithRef(ref terra.Reference) humanLoopRequestSourceAttributes {
	return humanLoopRequestSourceAttributes{ref: ref}
}

func (hlrs humanLoopRequestSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hlrs.ref.InternalTokens()
}

func (hlrs humanLoopRequestSourceAttributes) AwsManagedHumanLoopRequestSource() terra.StringValue {
	return terra.ReferenceAsString(hlrs.ref.Append("aws_managed_human_loop_request_source"))
}

type outputConfigAttributes struct {
	ref terra.Reference
}

func (oc outputConfigAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc outputConfigAttributes) InternalWithRef(ref terra.Reference) outputConfigAttributes {
	return outputConfigAttributes{ref: ref}
}

func (oc outputConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc outputConfigAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("kms_key_id"))
}

func (oc outputConfigAttributes) S3OutputPath() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("s3_output_path"))
}

type HumanLoopActivationConfigState struct {
	HumanLoopActivationConditionsConfig []HumanLoopActivationConfigHumanLoopActivationConditionsConfigState `json:"human_loop_activation_conditions_config"`
}

type HumanLoopActivationConfigHumanLoopActivationConditionsConfigState struct {
	HumanLoopActivationConditions string `json:"human_loop_activation_conditions"`
}

type HumanLoopConfigState struct {
	HumanTaskUiArn                    string                                         `json:"human_task_ui_arn"`
	TaskAvailabilityLifetimeInSeconds float64                                        `json:"task_availability_lifetime_in_seconds"`
	TaskCount                         float64                                        `json:"task_count"`
	TaskDescription                   string                                         `json:"task_description"`
	TaskKeywords                      []string                                       `json:"task_keywords"`
	TaskTimeLimitInSeconds            float64                                        `json:"task_time_limit_in_seconds"`
	TaskTitle                         string                                         `json:"task_title"`
	WorkteamArn                       string                                         `json:"workteam_arn"`
	PublicWorkforceTaskPrice          []HumanLoopConfigPublicWorkforceTaskPriceState `json:"public_workforce_task_price"`
}

type HumanLoopConfigPublicWorkforceTaskPriceState struct {
	AmountInUsd []HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdState `json:"amount_in_usd"`
}

type HumanLoopConfigPublicWorkforceTaskPriceAmountInUsdState struct {
	Cents                 float64 `json:"cents"`
	Dollars               float64 `json:"dollars"`
	TenthFractionsOfACent float64 `json:"tenth_fractions_of_a_cent"`
}

type HumanLoopRequestSourceState struct {
	AwsManagedHumanLoopRequestSource string `json:"aws_managed_human_loop_request_source"`
}

type OutputConfigState struct {
	KmsKeyId     string `json:"kms_key_id"`
	S3OutputPath string `json:"s3_output_path"`
}
