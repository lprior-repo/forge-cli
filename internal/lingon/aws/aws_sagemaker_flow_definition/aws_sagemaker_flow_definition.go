// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_flow_definition

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_sagemaker_flow_definition.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsSagemakerFlowDefinitionState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asfd *Resource) Type() string {
	return "aws_sagemaker_flow_definition"
}

// LocalName returns the local name for [Resource].
func (asfd *Resource) LocalName() string {
	return asfd.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asfd *Resource) Configuration() interface{} {
	return asfd.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asfd *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asfd)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asfd *Resource) Dependencies() terra.Dependencies {
	return asfd.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asfd *Resource) LifecycleManagement() *terra.Lifecycle {
	return asfd.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asfd *Resource) Attributes() awsSagemakerFlowDefinitionAttributes {
	return awsSagemakerFlowDefinitionAttributes{ref: terra.ReferenceResource(asfd)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asfd *Resource) ImportState(state io.Reader) error {
	asfd.state = &awsSagemakerFlowDefinitionState{}
	if err := json.NewDecoder(state).Decode(asfd.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asfd.Type(), asfd.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asfd *Resource) State() (*awsSagemakerFlowDefinitionState, bool) {
	return asfd.state, asfd.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asfd *Resource) StateMust() *awsSagemakerFlowDefinitionState {
	if asfd.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asfd.Type(), asfd.LocalName()))
	}
	return asfd.state
}

// Args contains the configurations for aws_sagemaker_flow_definition.
type Args struct {
	// FlowDefinitionName is required.
	FlowDefinitionName terra.StringValue `hcl:"flow_definition_name,attr" validate:"required"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// RoleArn is required.
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll is optional.
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// HumanLoopActivationConfig is optional.
	HumanLoopActivationConfig *HumanLoopActivationConfig `hcl:"human_loop_activation_config,block"`
	// HumanLoopConfig is required.
	HumanLoopConfig *HumanLoopConfig `hcl:"human_loop_config,block" validate:"required"`
	// HumanLoopRequestSource is optional.
	HumanLoopRequestSource *HumanLoopRequestSource `hcl:"human_loop_request_source,block"`
	// OutputConfig is required.
	OutputConfig *OutputConfig `hcl:"output_config,block" validate:"required"`
}

type awsSagemakerFlowDefinitionAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_sagemaker_flow_definition.
func (asfd awsSagemakerFlowDefinitionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(asfd.ref.Append("arn"))
}

// FlowDefinitionName returns a reference to field flow_definition_name of aws_sagemaker_flow_definition.
func (asfd awsSagemakerFlowDefinitionAttributes) FlowDefinitionName() terra.StringValue {
	return terra.ReferenceAsString(asfd.ref.Append("flow_definition_name"))
}

// Id returns a reference to field id of aws_sagemaker_flow_definition.
func (asfd awsSagemakerFlowDefinitionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asfd.ref.Append("id"))
}

// RoleArn returns a reference to field role_arn of aws_sagemaker_flow_definition.
func (asfd awsSagemakerFlowDefinitionAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(asfd.ref.Append("role_arn"))
}

// Tags returns a reference to field tags of aws_sagemaker_flow_definition.
func (asfd awsSagemakerFlowDefinitionAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asfd.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_sagemaker_flow_definition.
func (asfd awsSagemakerFlowDefinitionAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](asfd.ref.Append("tags_all"))
}

func (asfd awsSagemakerFlowDefinitionAttributes) HumanLoopActivationConfig() terra.ListValue[humanLoopActivationConfigAttributes] {
	return terra.ReferenceAsList[humanLoopActivationConfigAttributes](asfd.ref.Append("human_loop_activation_config"))
}

func (asfd awsSagemakerFlowDefinitionAttributes) HumanLoopConfig() terra.ListValue[humanLoopConfigAttributes] {
	return terra.ReferenceAsList[humanLoopConfigAttributes](asfd.ref.Append("human_loop_config"))
}

func (asfd awsSagemakerFlowDefinitionAttributes) HumanLoopRequestSource() terra.ListValue[humanLoopRequestSourceAttributes] {
	return terra.ReferenceAsList[humanLoopRequestSourceAttributes](asfd.ref.Append("human_loop_request_source"))
}

func (asfd awsSagemakerFlowDefinitionAttributes) OutputConfig() terra.ListValue[outputConfigAttributes] {
	return terra.ReferenceAsList[outputConfigAttributes](asfd.ref.Append("output_config"))
}

type awsSagemakerFlowDefinitionState struct {
	Arn                       string                           `json:"arn"`
	FlowDefinitionName        string                           `json:"flow_definition_name"`
	Id                        string                           `json:"id"`
	RoleArn                   string                           `json:"role_arn"`
	Tags                      map[string]string                `json:"tags"`
	TagsAll                   map[string]string                `json:"tags_all"`
	HumanLoopActivationConfig []HumanLoopActivationConfigState `json:"human_loop_activation_config"`
	HumanLoopConfig           []HumanLoopConfigState           `json:"human_loop_config"`
	HumanLoopRequestSource    []HumanLoopRequestSourceState    `json:"human_loop_request_source"`
	OutputConfig              []OutputConfigState              `json:"output_config"`
}
