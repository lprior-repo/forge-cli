// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_app_image_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type KernelGatewayImageConfig struct {
	// KernelGatewayImageConfigFileSystemConfig is optional.
	FileSystemConfig *KernelGatewayImageConfigFileSystemConfig `hcl:"file_system_config,block"`
	// KernelGatewayImageConfigKernelSpec is required.
	KernelSpec *KernelGatewayImageConfigKernelSpec `hcl:"kernel_spec,block" validate:"required"`
}

type KernelGatewayImageConfigFileSystemConfig struct {
	// DefaultGid is optional.
	DefaultGid terra.NumberValue `hcl:"default_gid,attr"`
	// DefaultUid is optional.
	DefaultUid terra.NumberValue `hcl:"default_uid,attr"`
	// MountPath is optional.
	MountPath terra.StringValue `hcl:"mount_path,attr"`
}

type KernelGatewayImageConfigKernelSpec struct {
	// DisplayName is optional.
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type kernelGatewayImageConfigAttributes struct {
	ref terra.Reference
}

func (kgic kernelGatewayImageConfigAttributes) InternalRef() (terra.Reference, error) {
	return kgic.ref, nil
}

func (kgic kernelGatewayImageConfigAttributes) InternalWithRef(ref terra.Reference) kernelGatewayImageConfigAttributes {
	return kernelGatewayImageConfigAttributes{ref: ref}
}

func (kgic kernelGatewayImageConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgic.ref.InternalTokens()
}

func (kgic kernelGatewayImageConfigAttributes) FileSystemConfig() terra.ListValue[kernelGatewayImageConfigFileSystemConfigAttributes] {
	return terra.ReferenceAsList[kernelGatewayImageConfigFileSystemConfigAttributes](kgic.ref.Append("file_system_config"))
}

func (kgic kernelGatewayImageConfigAttributes) KernelSpec() terra.ListValue[kernelGatewayImageConfigKernelSpecAttributes] {
	return terra.ReferenceAsList[kernelGatewayImageConfigKernelSpecAttributes](kgic.ref.Append("kernel_spec"))
}

type kernelGatewayImageConfigFileSystemConfigAttributes struct {
	ref terra.Reference
}

func (fsc kernelGatewayImageConfigFileSystemConfigAttributes) InternalRef() (terra.Reference, error) {
	return fsc.ref, nil
}

func (fsc kernelGatewayImageConfigFileSystemConfigAttributes) InternalWithRef(ref terra.Reference) kernelGatewayImageConfigFileSystemConfigAttributes {
	return kernelGatewayImageConfigFileSystemConfigAttributes{ref: ref}
}

func (fsc kernelGatewayImageConfigFileSystemConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fsc.ref.InternalTokens()
}

func (fsc kernelGatewayImageConfigFileSystemConfigAttributes) DefaultGid() terra.NumberValue {
	return terra.ReferenceAsNumber(fsc.ref.Append("default_gid"))
}

func (fsc kernelGatewayImageConfigFileSystemConfigAttributes) DefaultUid() terra.NumberValue {
	return terra.ReferenceAsNumber(fsc.ref.Append("default_uid"))
}

func (fsc kernelGatewayImageConfigFileSystemConfigAttributes) MountPath() terra.StringValue {
	return terra.ReferenceAsString(fsc.ref.Append("mount_path"))
}

type kernelGatewayImageConfigKernelSpecAttributes struct {
	ref terra.Reference
}

func (ks kernelGatewayImageConfigKernelSpecAttributes) InternalRef() (terra.Reference, error) {
	return ks.ref, nil
}

func (ks kernelGatewayImageConfigKernelSpecAttributes) InternalWithRef(ref terra.Reference) kernelGatewayImageConfigKernelSpecAttributes {
	return kernelGatewayImageConfigKernelSpecAttributes{ref: ref}
}

func (ks kernelGatewayImageConfigKernelSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ks.ref.InternalTokens()
}

func (ks kernelGatewayImageConfigKernelSpecAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ks.ref.Append("display_name"))
}

func (ks kernelGatewayImageConfigKernelSpecAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ks.ref.Append("name"))
}

type KernelGatewayImageConfigState struct {
	FileSystemConfig []KernelGatewayImageConfigFileSystemConfigState `json:"file_system_config"`
	KernelSpec       []KernelGatewayImageConfigKernelSpecState       `json:"kernel_spec"`
}

type KernelGatewayImageConfigFileSystemConfigState struct {
	DefaultGid float64 `json:"default_gid"`
	DefaultUid float64 `json:"default_uid"`
	MountPath  string  `json:"mount_path"`
}

type KernelGatewayImageConfigKernelSpecState struct {
	DisplayName string `json:"display_name"`
	Name        string `json:"name"`
}
