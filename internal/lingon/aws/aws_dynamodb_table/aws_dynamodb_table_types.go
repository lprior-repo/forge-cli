// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_dynamodb_table

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Attribute struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type GlobalSecondaryIndex struct {
	// HashKey is required.
	HashKey terra.StringValue `hcl:"hash_key,attr" validate:"required"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NonKeyAttributes is optional.
	NonKeyAttributes terra.SetValue[terra.StringValue] `hcl:"non_key_attributes,attr"`
	// ProjectionType is required.
	ProjectionType terra.StringValue `hcl:"projection_type,attr" validate:"required"`
	// RangeKey is optional.
	RangeKey terra.StringValue `hcl:"range_key,attr"`
	// ReadCapacity is optional.
	ReadCapacity terra.NumberValue `hcl:"read_capacity,attr"`
	// WriteCapacity is optional.
	WriteCapacity terra.NumberValue `hcl:"write_capacity,attr"`
}

type LocalSecondaryIndex struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NonKeyAttributes is optional.
	NonKeyAttributes terra.ListValue[terra.StringValue] `hcl:"non_key_attributes,attr"`
	// ProjectionType is required.
	ProjectionType terra.StringValue `hcl:"projection_type,attr" validate:"required"`
	// RangeKey is required.
	RangeKey terra.StringValue `hcl:"range_key,attr" validate:"required"`
}

type PointInTimeRecovery struct {
	// Enabled is required.
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
}

type Replica struct {
	// KmsKeyArn is optional.
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
	// PointInTimeRecovery is optional.
	PointInTimeRecovery terra.BoolValue `hcl:"point_in_time_recovery,attr"`
	// PropagateTags is optional.
	PropagateTags terra.BoolValue `hcl:"propagate_tags,attr"`
	// RegionName is required.
	RegionName terra.StringValue `hcl:"region_name,attr" validate:"required"`
}

type ServerSideEncryption struct {
	// Enabled is required.
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// KmsKeyArn is optional.
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type Ttl struct {
	// AttributeName is required.
	AttributeName terra.StringValue `hcl:"attribute_name,attr" validate:"required"`
	// Enabled is optional.
	Enabled terra.BoolValue `hcl:"enabled,attr"`
}

type attributeAttributes struct {
	ref terra.Reference
}

func (a attributeAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a attributeAttributes) InternalWithRef(ref terra.Reference) attributeAttributes {
	return attributeAttributes{ref: ref}
}

func (a attributeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a attributeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("name"))
}

func (a attributeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("type"))
}

type globalSecondaryIndexAttributes struct {
	ref terra.Reference
}

func (gsi globalSecondaryIndexAttributes) InternalRef() (terra.Reference, error) {
	return gsi.ref, nil
}

func (gsi globalSecondaryIndexAttributes) InternalWithRef(ref terra.Reference) globalSecondaryIndexAttributes {
	return globalSecondaryIndexAttributes{ref: ref}
}

func (gsi globalSecondaryIndexAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gsi.ref.InternalTokens()
}

func (gsi globalSecondaryIndexAttributes) HashKey() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("hash_key"))
}

func (gsi globalSecondaryIndexAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("name"))
}

func (gsi globalSecondaryIndexAttributes) NonKeyAttributes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gsi.ref.Append("non_key_attributes"))
}

func (gsi globalSecondaryIndexAttributes) ProjectionType() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("projection_type"))
}

func (gsi globalSecondaryIndexAttributes) RangeKey() terra.StringValue {
	return terra.ReferenceAsString(gsi.ref.Append("range_key"))
}

func (gsi globalSecondaryIndexAttributes) ReadCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(gsi.ref.Append("read_capacity"))
}

func (gsi globalSecondaryIndexAttributes) WriteCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(gsi.ref.Append("write_capacity"))
}

type localSecondaryIndexAttributes struct {
	ref terra.Reference
}

func (lsi localSecondaryIndexAttributes) InternalRef() (terra.Reference, error) {
	return lsi.ref, nil
}

func (lsi localSecondaryIndexAttributes) InternalWithRef(ref terra.Reference) localSecondaryIndexAttributes {
	return localSecondaryIndexAttributes{ref: ref}
}

func (lsi localSecondaryIndexAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lsi.ref.InternalTokens()
}

func (lsi localSecondaryIndexAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lsi.ref.Append("name"))
}

func (lsi localSecondaryIndexAttributes) NonKeyAttributes() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](lsi.ref.Append("non_key_attributes"))
}

func (lsi localSecondaryIndexAttributes) ProjectionType() terra.StringValue {
	return terra.ReferenceAsString(lsi.ref.Append("projection_type"))
}

func (lsi localSecondaryIndexAttributes) RangeKey() terra.StringValue {
	return terra.ReferenceAsString(lsi.ref.Append("range_key"))
}

type pointInTimeRecoveryAttributes struct {
	ref terra.Reference
}

func (pitr pointInTimeRecoveryAttributes) InternalRef() (terra.Reference, error) {
	return pitr.ref, nil
}

func (pitr pointInTimeRecoveryAttributes) InternalWithRef(ref terra.Reference) pointInTimeRecoveryAttributes {
	return pointInTimeRecoveryAttributes{ref: ref}
}

func (pitr pointInTimeRecoveryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pitr.ref.InternalTokens()
}

func (pitr pointInTimeRecoveryAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(pitr.ref.Append("enabled"))
}

type replicaAttributes struct {
	ref terra.Reference
}

func (r replicaAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r replicaAttributes) InternalWithRef(ref terra.Reference) replicaAttributes {
	return replicaAttributes{ref: ref}
}

func (r replicaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r replicaAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("arn"))
}

func (r replicaAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("kms_key_arn"))
}

func (r replicaAttributes) PointInTimeRecovery() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("point_in_time_recovery"))
}

func (r replicaAttributes) PropagateTags() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("propagate_tags"))
}

func (r replicaAttributes) RegionName() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("region_name"))
}

func (r replicaAttributes) StreamArn() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("stream_arn"))
}

func (r replicaAttributes) StreamLabel() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("stream_label"))
}

type serverSideEncryptionAttributes struct {
	ref terra.Reference
}

func (sse serverSideEncryptionAttributes) InternalRef() (terra.Reference, error) {
	return sse.ref, nil
}

func (sse serverSideEncryptionAttributes) InternalWithRef(ref terra.Reference) serverSideEncryptionAttributes {
	return serverSideEncryptionAttributes{ref: ref}
}

func (sse serverSideEncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sse.ref.InternalTokens()
}

func (sse serverSideEncryptionAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sse.ref.Append("enabled"))
}

func (sse serverSideEncryptionAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(sse.ref.Append("kms_key_arn"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ttlAttributes struct {
	ref terra.Reference
}

func (t ttlAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t ttlAttributes) InternalWithRef(ref terra.Reference) ttlAttributes {
	return ttlAttributes{ref: ref}
}

func (t ttlAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t ttlAttributes) AttributeName() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("attribute_name"))
}

func (t ttlAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("enabled"))
}

type AttributeState struct {
	Name string `json:"name"`
	Type string `json:"type"`
}

type GlobalSecondaryIndexState struct {
	HashKey          string   `json:"hash_key"`
	Name             string   `json:"name"`
	NonKeyAttributes []string `json:"non_key_attributes"`
	ProjectionType   string   `json:"projection_type"`
	RangeKey         string   `json:"range_key"`
	ReadCapacity     float64  `json:"read_capacity"`
	WriteCapacity    float64  `json:"write_capacity"`
}

type LocalSecondaryIndexState struct {
	Name             string   `json:"name"`
	NonKeyAttributes []string `json:"non_key_attributes"`
	ProjectionType   string   `json:"projection_type"`
	RangeKey         string   `json:"range_key"`
}

type PointInTimeRecoveryState struct {
	Enabled bool `json:"enabled"`
}

type ReplicaState struct {
	Arn                 string `json:"arn"`
	KmsKeyArn           string `json:"kms_key_arn"`
	PointInTimeRecovery bool   `json:"point_in_time_recovery"`
	PropagateTags       bool   `json:"propagate_tags"`
	RegionName          string `json:"region_name"`
	StreamArn           string `json:"stream_arn"`
	StreamLabel         string `json:"stream_label"`
}

type ServerSideEncryptionState struct {
	Enabled   bool   `json:"enabled"`
	KmsKeyArn string `json:"kms_key_arn"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type TtlState struct {
	AttributeName string `json:"attribute_name"`
	Enabled       bool   `json:"enabled"`
}
