// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kendra_thesaurus

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SourceS3Path struct {
	// Bucket is required.
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type sourceS3PathAttributes struct {
	ref terra.Reference
}

func (ssp sourceS3PathAttributes) InternalRef() (terra.Reference, error) {
	return ssp.ref, nil
}

func (ssp sourceS3PathAttributes) InternalWithRef(ref terra.Reference) sourceS3PathAttributes {
	return sourceS3PathAttributes{ref: ref}
}

func (ssp sourceS3PathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ssp.ref.InternalTokens()
}

func (ssp sourceS3PathAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(ssp.ref.Append("bucket"))
}

func (ssp sourceS3PathAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(ssp.ref.Append("key"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type SourceS3PathState struct {
	Bucket string `json:"bucket"`
	Key    string `json:"key"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
