// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_distribution

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CustomErrorResponse struct {
	// ErrorCachingMinTtl is optional.
	ErrorCachingMinTtl terra.NumberValue `hcl:"error_caching_min_ttl,attr"`
	// ErrorCode is required.
	ErrorCode terra.NumberValue `hcl:"error_code,attr" validate:"required"`
	// ResponseCode is optional.
	ResponseCode terra.NumberValue `hcl:"response_code,attr"`
	// ResponsePagePath is optional.
	ResponsePagePath terra.StringValue `hcl:"response_page_path,attr"`
}

type DefaultCacheBehavior struct {
	// AllowedMethods is required.
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr" validate:"required"`
	// CachePolicyId is optional.
	CachePolicyId terra.StringValue `hcl:"cache_policy_id,attr"`
	// CachedMethods is required.
	CachedMethods terra.SetValue[terra.StringValue] `hcl:"cached_methods,attr" validate:"required"`
	// Compress is optional.
	Compress terra.BoolValue `hcl:"compress,attr"`
	// DefaultTtl is optional.
	DefaultTtl terra.NumberValue `hcl:"default_ttl,attr"`
	// FieldLevelEncryptionId is optional.
	FieldLevelEncryptionId terra.StringValue `hcl:"field_level_encryption_id,attr"`
	// MaxTtl is optional.
	MaxTtl terra.NumberValue `hcl:"max_ttl,attr"`
	// MinTtl is optional.
	MinTtl terra.NumberValue `hcl:"min_ttl,attr"`
	// OriginRequestPolicyId is optional.
	OriginRequestPolicyId terra.StringValue `hcl:"origin_request_policy_id,attr"`
	// RealtimeLogConfigArn is optional.
	RealtimeLogConfigArn terra.StringValue `hcl:"realtime_log_config_arn,attr"`
	// ResponseHeadersPolicyId is optional.
	ResponseHeadersPolicyId terra.StringValue `hcl:"response_headers_policy_id,attr"`
	// SmoothStreaming is optional.
	SmoothStreaming terra.BoolValue `hcl:"smooth_streaming,attr"`
	// TargetOriginId is required.
	TargetOriginId terra.StringValue `hcl:"target_origin_id,attr" validate:"required"`
	// TrustedKeyGroups is optional.
	TrustedKeyGroups terra.ListValue[terra.StringValue] `hcl:"trusted_key_groups,attr"`
	// TrustedSigners is optional.
	TrustedSigners terra.ListValue[terra.StringValue] `hcl:"trusted_signers,attr"`
	// ViewerProtocolPolicy is required.
	ViewerProtocolPolicy terra.StringValue `hcl:"viewer_protocol_policy,attr" validate:"required"`
	// DefaultCacheBehaviorForwardedValues is optional.
	ForwardedValues *DefaultCacheBehaviorForwardedValues `hcl:"forwarded_values,block"`
	// DefaultCacheBehaviorFunctionAssociation is min=0,max=2.
	FunctionAssociation []DefaultCacheBehaviorFunctionAssociation `hcl:"function_association,block" validate:"min=0,max=2"`
	// DefaultCacheBehaviorLambdaFunctionAssociation is min=0,max=4.
	LambdaFunctionAssociation []DefaultCacheBehaviorLambdaFunctionAssociation `hcl:"lambda_function_association,block" validate:"min=0,max=4"`
}

type DefaultCacheBehaviorForwardedValues struct {
	// Headers is optional.
	Headers terra.SetValue[terra.StringValue] `hcl:"headers,attr"`
	// QueryString is required.
	QueryString terra.BoolValue `hcl:"query_string,attr" validate:"required"`
	// QueryStringCacheKeys is optional.
	QueryStringCacheKeys terra.ListValue[terra.StringValue] `hcl:"query_string_cache_keys,attr"`
	// DefaultCacheBehaviorForwardedValuesCookies is required.
	Cookies *DefaultCacheBehaviorForwardedValuesCookies `hcl:"cookies,block" validate:"required"`
}

type DefaultCacheBehaviorForwardedValuesCookies struct {
	// Forward is required.
	Forward terra.StringValue `hcl:"forward,attr" validate:"required"`
	// WhitelistedNames is optional.
	WhitelistedNames terra.SetValue[terra.StringValue] `hcl:"whitelisted_names,attr"`
}

type DefaultCacheBehaviorFunctionAssociation struct {
	// EventType is required.
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// FunctionArn is required.
	FunctionArn terra.StringValue `hcl:"function_arn,attr" validate:"required"`
}

type DefaultCacheBehaviorLambdaFunctionAssociation struct {
	// EventType is required.
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// IncludeBody is optional.
	IncludeBody terra.BoolValue `hcl:"include_body,attr"`
	// LambdaArn is required.
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
}

type LoggingConfig struct {
	// Bucket is required.
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
	// IncludeCookies is optional.
	IncludeCookies terra.BoolValue `hcl:"include_cookies,attr"`
	// Prefix is optional.
	Prefix terra.StringValue `hcl:"prefix,attr"`
}

type OrderedCacheBehavior struct {
	// AllowedMethods is required.
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr" validate:"required"`
	// CachePolicyId is optional.
	CachePolicyId terra.StringValue `hcl:"cache_policy_id,attr"`
	// CachedMethods is required.
	CachedMethods terra.SetValue[terra.StringValue] `hcl:"cached_methods,attr" validate:"required"`
	// Compress is optional.
	Compress terra.BoolValue `hcl:"compress,attr"`
	// DefaultTtl is optional.
	DefaultTtl terra.NumberValue `hcl:"default_ttl,attr"`
	// FieldLevelEncryptionId is optional.
	FieldLevelEncryptionId terra.StringValue `hcl:"field_level_encryption_id,attr"`
	// MaxTtl is optional.
	MaxTtl terra.NumberValue `hcl:"max_ttl,attr"`
	// MinTtl is optional.
	MinTtl terra.NumberValue `hcl:"min_ttl,attr"`
	// OriginRequestPolicyId is optional.
	OriginRequestPolicyId terra.StringValue `hcl:"origin_request_policy_id,attr"`
	// PathPattern is required.
	PathPattern terra.StringValue `hcl:"path_pattern,attr" validate:"required"`
	// RealtimeLogConfigArn is optional.
	RealtimeLogConfigArn terra.StringValue `hcl:"realtime_log_config_arn,attr"`
	// ResponseHeadersPolicyId is optional.
	ResponseHeadersPolicyId terra.StringValue `hcl:"response_headers_policy_id,attr"`
	// SmoothStreaming is optional.
	SmoothStreaming terra.BoolValue `hcl:"smooth_streaming,attr"`
	// TargetOriginId is required.
	TargetOriginId terra.StringValue `hcl:"target_origin_id,attr" validate:"required"`
	// TrustedKeyGroups is optional.
	TrustedKeyGroups terra.ListValue[terra.StringValue] `hcl:"trusted_key_groups,attr"`
	// TrustedSigners is optional.
	TrustedSigners terra.ListValue[terra.StringValue] `hcl:"trusted_signers,attr"`
	// ViewerProtocolPolicy is required.
	ViewerProtocolPolicy terra.StringValue `hcl:"viewer_protocol_policy,attr" validate:"required"`
	// OrderedCacheBehaviorForwardedValues is optional.
	ForwardedValues *OrderedCacheBehaviorForwardedValues `hcl:"forwarded_values,block"`
	// OrderedCacheBehaviorFunctionAssociation is min=0,max=2.
	FunctionAssociation []OrderedCacheBehaviorFunctionAssociation `hcl:"function_association,block" validate:"min=0,max=2"`
	// OrderedCacheBehaviorLambdaFunctionAssociation is min=0,max=4.
	LambdaFunctionAssociation []OrderedCacheBehaviorLambdaFunctionAssociation `hcl:"lambda_function_association,block" validate:"min=0,max=4"`
}

type OrderedCacheBehaviorForwardedValues struct {
	// Headers is optional.
	Headers terra.SetValue[terra.StringValue] `hcl:"headers,attr"`
	// QueryString is required.
	QueryString terra.BoolValue `hcl:"query_string,attr" validate:"required"`
	// QueryStringCacheKeys is optional.
	QueryStringCacheKeys terra.ListValue[terra.StringValue] `hcl:"query_string_cache_keys,attr"`
	// OrderedCacheBehaviorForwardedValuesCookies is required.
	Cookies *OrderedCacheBehaviorForwardedValuesCookies `hcl:"cookies,block" validate:"required"`
}

type OrderedCacheBehaviorForwardedValuesCookies struct {
	// Forward is required.
	Forward terra.StringValue `hcl:"forward,attr" validate:"required"`
	// WhitelistedNames is optional.
	WhitelistedNames terra.SetValue[terra.StringValue] `hcl:"whitelisted_names,attr"`
}

type OrderedCacheBehaviorFunctionAssociation struct {
	// EventType is required.
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// FunctionArn is required.
	FunctionArn terra.StringValue `hcl:"function_arn,attr" validate:"required"`
}

type OrderedCacheBehaviorLambdaFunctionAssociation struct {
	// EventType is required.
	EventType terra.StringValue `hcl:"event_type,attr" validate:"required"`
	// IncludeBody is optional.
	IncludeBody terra.BoolValue `hcl:"include_body,attr"`
	// LambdaArn is required.
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
}

type Origin struct {
	// ConnectionAttempts is optional.
	ConnectionAttempts terra.NumberValue `hcl:"connection_attempts,attr"`
	// ConnectionTimeout is optional.
	ConnectionTimeout terra.NumberValue `hcl:"connection_timeout,attr"`
	// DomainName is required.
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// OriginAccessControlId is optional.
	OriginAccessControlId terra.StringValue `hcl:"origin_access_control_id,attr"`
	// OriginId is required.
	OriginId terra.StringValue `hcl:"origin_id,attr" validate:"required"`
	// OriginPath is optional.
	OriginPath terra.StringValue `hcl:"origin_path,attr"`
	// OriginCustomHeader is min=0.
	CustomHeader []OriginCustomHeader `hcl:"custom_header,block" validate:"min=0"`
	// OriginCustomOriginConfig is optional.
	CustomOriginConfig *OriginCustomOriginConfig `hcl:"custom_origin_config,block"`
	// OriginOriginShield is optional.
	OriginShield *OriginOriginShield `hcl:"origin_shield,block"`
	// OriginS3OriginConfig is optional.
	S3OriginConfig *OriginS3OriginConfig `hcl:"s3_origin_config,block"`
}

type OriginCustomHeader struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type OriginCustomOriginConfig struct {
	// HttpPort is required.
	HttpPort terra.NumberValue `hcl:"http_port,attr" validate:"required"`
	// HttpsPort is required.
	HttpsPort terra.NumberValue `hcl:"https_port,attr" validate:"required"`
	// OriginKeepaliveTimeout is optional.
	OriginKeepaliveTimeout terra.NumberValue `hcl:"origin_keepalive_timeout,attr"`
	// OriginProtocolPolicy is required.
	OriginProtocolPolicy terra.StringValue `hcl:"origin_protocol_policy,attr" validate:"required"`
	// OriginReadTimeout is optional.
	OriginReadTimeout terra.NumberValue `hcl:"origin_read_timeout,attr"`
	// OriginSslProtocols is required.
	OriginSslProtocols terra.SetValue[terra.StringValue] `hcl:"origin_ssl_protocols,attr" validate:"required"`
}

type OriginOriginShield struct {
	// Enabled is required.
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// OriginShieldRegion is required.
	OriginShieldRegion terra.StringValue `hcl:"origin_shield_region,attr" validate:"required"`
}

type OriginS3OriginConfig struct {
	// OriginAccessIdentity is required.
	OriginAccessIdentity terra.StringValue `hcl:"origin_access_identity,attr" validate:"required"`
}

type OriginGroup struct {
	// OriginId is required.
	OriginId terra.StringValue `hcl:"origin_id,attr" validate:"required"`
	// OriginGroupFailoverCriteria is required.
	FailoverCriteria *OriginGroupFailoverCriteria `hcl:"failover_criteria,block" validate:"required"`
	// OriginGroupMember is min=2,max=2.
	Member []OriginGroupMember `hcl:"member,block" validate:"min=2,max=2"`
}

type OriginGroupFailoverCriteria struct {
	// StatusCodes is required.
	StatusCodes terra.SetValue[terra.NumberValue] `hcl:"status_codes,attr" validate:"required"`
}

type OriginGroupMember struct {
	// OriginId is required.
	OriginId terra.StringValue `hcl:"origin_id,attr" validate:"required"`
}

type Restrictions struct {
	// RestrictionsGeoRestriction is required.
	GeoRestriction *RestrictionsGeoRestriction `hcl:"geo_restriction,block" validate:"required"`
}

type RestrictionsGeoRestriction struct {
	// Locations is optional.
	Locations terra.SetValue[terra.StringValue] `hcl:"locations,attr"`
	// RestrictionType is required.
	RestrictionType terra.StringValue `hcl:"restriction_type,attr" validate:"required"`
}

type ViewerCertificate struct {
	// AcmCertificateArn is optional.
	AcmCertificateArn terra.StringValue `hcl:"acm_certificate_arn,attr"`
	// CloudfrontDefaultCertificate is optional.
	CloudfrontDefaultCertificate terra.BoolValue `hcl:"cloudfront_default_certificate,attr"`
	// IamCertificateId is optional.
	IamCertificateId terra.StringValue `hcl:"iam_certificate_id,attr"`
	// MinimumProtocolVersion is optional.
	MinimumProtocolVersion terra.StringValue `hcl:"minimum_protocol_version,attr"`
	// SslSupportMethod is optional.
	SslSupportMethod terra.StringValue `hcl:"ssl_support_method,attr"`
}

type trustedKeyGroupsAttributes struct {
	ref terra.Reference
}

func (tkg trustedKeyGroupsAttributes) InternalRef() (terra.Reference, error) {
	return tkg.ref, nil
}

func (tkg trustedKeyGroupsAttributes) InternalWithRef(ref terra.Reference) trustedKeyGroupsAttributes {
	return trustedKeyGroupsAttributes{ref: ref}
}

func (tkg trustedKeyGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tkg.ref.InternalTokens()
}

func (tkg trustedKeyGroupsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(tkg.ref.Append("enabled"))
}

func (tkg trustedKeyGroupsAttributes) Items() terra.ListValue[trustedKeyGroupsItemsAttributes] {
	return terra.ReferenceAsList[trustedKeyGroupsItemsAttributes](tkg.ref.Append("items"))
}

type trustedKeyGroupsItemsAttributes struct {
	ref terra.Reference
}

func (i trustedKeyGroupsItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i trustedKeyGroupsItemsAttributes) InternalWithRef(ref terra.Reference) trustedKeyGroupsItemsAttributes {
	return trustedKeyGroupsItemsAttributes{ref: ref}
}

func (i trustedKeyGroupsItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i trustedKeyGroupsItemsAttributes) KeyGroupId() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("key_group_id"))
}

func (i trustedKeyGroupsItemsAttributes) KeyPairIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("key_pair_ids"))
}

type trustedSignersAttributes struct {
	ref terra.Reference
}

func (ts trustedSignersAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts trustedSignersAttributes) InternalWithRef(ref terra.Reference) trustedSignersAttributes {
	return trustedSignersAttributes{ref: ref}
}

func (ts trustedSignersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts trustedSignersAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ts.ref.Append("enabled"))
}

func (ts trustedSignersAttributes) Items() terra.ListValue[trustedSignersItemsAttributes] {
	return terra.ReferenceAsList[trustedSignersItemsAttributes](ts.ref.Append("items"))
}

type trustedSignersItemsAttributes struct {
	ref terra.Reference
}

func (i trustedSignersItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i trustedSignersItemsAttributes) InternalWithRef(ref terra.Reference) trustedSignersItemsAttributes {
	return trustedSignersItemsAttributes{ref: ref}
}

func (i trustedSignersItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i trustedSignersItemsAttributes) AwsAccountNumber() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("aws_account_number"))
}

func (i trustedSignersItemsAttributes) KeyPairIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](i.ref.Append("key_pair_ids"))
}

type customErrorResponseAttributes struct {
	ref terra.Reference
}

func (cer customErrorResponseAttributes) InternalRef() (terra.Reference, error) {
	return cer.ref, nil
}

func (cer customErrorResponseAttributes) InternalWithRef(ref terra.Reference) customErrorResponseAttributes {
	return customErrorResponseAttributes{ref: ref}
}

func (cer customErrorResponseAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cer.ref.InternalTokens()
}

func (cer customErrorResponseAttributes) ErrorCachingMinTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(cer.ref.Append("error_caching_min_ttl"))
}

func (cer customErrorResponseAttributes) ErrorCode() terra.NumberValue {
	return terra.ReferenceAsNumber(cer.ref.Append("error_code"))
}

func (cer customErrorResponseAttributes) ResponseCode() terra.NumberValue {
	return terra.ReferenceAsNumber(cer.ref.Append("response_code"))
}

func (cer customErrorResponseAttributes) ResponsePagePath() terra.StringValue {
	return terra.ReferenceAsString(cer.ref.Append("response_page_path"))
}

type defaultCacheBehaviorAttributes struct {
	ref terra.Reference
}

func (dcb defaultCacheBehaviorAttributes) InternalRef() (terra.Reference, error) {
	return dcb.ref, nil
}

func (dcb defaultCacheBehaviorAttributes) InternalWithRef(ref terra.Reference) defaultCacheBehaviorAttributes {
	return defaultCacheBehaviorAttributes{ref: ref}
}

func (dcb defaultCacheBehaviorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dcb.ref.InternalTokens()
}

func (dcb defaultCacheBehaviorAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dcb.ref.Append("allowed_methods"))
}

func (dcb defaultCacheBehaviorAttributes) CachePolicyId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("cache_policy_id"))
}

func (dcb defaultCacheBehaviorAttributes) CachedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dcb.ref.Append("cached_methods"))
}

func (dcb defaultCacheBehaviorAttributes) Compress() terra.BoolValue {
	return terra.ReferenceAsBool(dcb.ref.Append("compress"))
}

func (dcb defaultCacheBehaviorAttributes) DefaultTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(dcb.ref.Append("default_ttl"))
}

func (dcb defaultCacheBehaviorAttributes) FieldLevelEncryptionId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("field_level_encryption_id"))
}

func (dcb defaultCacheBehaviorAttributes) MaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(dcb.ref.Append("max_ttl"))
}

func (dcb defaultCacheBehaviorAttributes) MinTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(dcb.ref.Append("min_ttl"))
}

func (dcb defaultCacheBehaviorAttributes) OriginRequestPolicyId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("origin_request_policy_id"))
}

func (dcb defaultCacheBehaviorAttributes) RealtimeLogConfigArn() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("realtime_log_config_arn"))
}

func (dcb defaultCacheBehaviorAttributes) ResponseHeadersPolicyId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("response_headers_policy_id"))
}

func (dcb defaultCacheBehaviorAttributes) SmoothStreaming() terra.BoolValue {
	return terra.ReferenceAsBool(dcb.ref.Append("smooth_streaming"))
}

func (dcb defaultCacheBehaviorAttributes) TargetOriginId() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("target_origin_id"))
}

func (dcb defaultCacheBehaviorAttributes) TrustedKeyGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dcb.ref.Append("trusted_key_groups"))
}

func (dcb defaultCacheBehaviorAttributes) TrustedSigners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](dcb.ref.Append("trusted_signers"))
}

func (dcb defaultCacheBehaviorAttributes) ViewerProtocolPolicy() terra.StringValue {
	return terra.ReferenceAsString(dcb.ref.Append("viewer_protocol_policy"))
}

func (dcb defaultCacheBehaviorAttributes) ForwardedValues() terra.ListValue[defaultCacheBehaviorForwardedValuesAttributes] {
	return terra.ReferenceAsList[defaultCacheBehaviorForwardedValuesAttributes](dcb.ref.Append("forwarded_values"))
}

func (dcb defaultCacheBehaviorAttributes) FunctionAssociation() terra.SetValue[defaultCacheBehaviorFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[defaultCacheBehaviorFunctionAssociationAttributes](dcb.ref.Append("function_association"))
}

func (dcb defaultCacheBehaviorAttributes) LambdaFunctionAssociation() terra.SetValue[defaultCacheBehaviorLambdaFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[defaultCacheBehaviorLambdaFunctionAssociationAttributes](dcb.ref.Append("lambda_function_association"))
}

type defaultCacheBehaviorForwardedValuesAttributes struct {
	ref terra.Reference
}

func (fv defaultCacheBehaviorForwardedValuesAttributes) InternalRef() (terra.Reference, error) {
	return fv.ref, nil
}

func (fv defaultCacheBehaviorForwardedValuesAttributes) InternalWithRef(ref terra.Reference) defaultCacheBehaviorForwardedValuesAttributes {
	return defaultCacheBehaviorForwardedValuesAttributes{ref: ref}
}

func (fv defaultCacheBehaviorForwardedValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fv.ref.InternalTokens()
}

func (fv defaultCacheBehaviorForwardedValuesAttributes) Headers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](fv.ref.Append("headers"))
}

func (fv defaultCacheBehaviorForwardedValuesAttributes) QueryString() terra.BoolValue {
	return terra.ReferenceAsBool(fv.ref.Append("query_string"))
}

func (fv defaultCacheBehaviorForwardedValuesAttributes) QueryStringCacheKeys() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fv.ref.Append("query_string_cache_keys"))
}

func (fv defaultCacheBehaviorForwardedValuesAttributes) Cookies() terra.ListValue[defaultCacheBehaviorForwardedValuesCookiesAttributes] {
	return terra.ReferenceAsList[defaultCacheBehaviorForwardedValuesCookiesAttributes](fv.ref.Append("cookies"))
}

type defaultCacheBehaviorForwardedValuesCookiesAttributes struct {
	ref terra.Reference
}

func (c defaultCacheBehaviorForwardedValuesCookiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c defaultCacheBehaviorForwardedValuesCookiesAttributes) InternalWithRef(ref terra.Reference) defaultCacheBehaviorForwardedValuesCookiesAttributes {
	return defaultCacheBehaviorForwardedValuesCookiesAttributes{ref: ref}
}

func (c defaultCacheBehaviorForwardedValuesCookiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c defaultCacheBehaviorForwardedValuesCookiesAttributes) Forward() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("forward"))
}

func (c defaultCacheBehaviorForwardedValuesCookiesAttributes) WhitelistedNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("whitelisted_names"))
}

type defaultCacheBehaviorFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (fa defaultCacheBehaviorFunctionAssociationAttributes) InternalRef() (terra.Reference, error) {
	return fa.ref, nil
}

func (fa defaultCacheBehaviorFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) defaultCacheBehaviorFunctionAssociationAttributes {
	return defaultCacheBehaviorFunctionAssociationAttributes{ref: ref}
}

func (fa defaultCacheBehaviorFunctionAssociationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fa.ref.InternalTokens()
}

func (fa defaultCacheBehaviorFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("event_type"))
}

func (fa defaultCacheBehaviorFunctionAssociationAttributes) FunctionArn() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("function_arn"))
}

type defaultCacheBehaviorLambdaFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (lfa defaultCacheBehaviorLambdaFunctionAssociationAttributes) InternalRef() (terra.Reference, error) {
	return lfa.ref, nil
}

func (lfa defaultCacheBehaviorLambdaFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) defaultCacheBehaviorLambdaFunctionAssociationAttributes {
	return defaultCacheBehaviorLambdaFunctionAssociationAttributes{ref: ref}
}

func (lfa defaultCacheBehaviorLambdaFunctionAssociationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lfa.ref.InternalTokens()
}

func (lfa defaultCacheBehaviorLambdaFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("event_type"))
}

func (lfa defaultCacheBehaviorLambdaFunctionAssociationAttributes) IncludeBody() terra.BoolValue {
	return terra.ReferenceAsBool(lfa.ref.Append("include_body"))
}

func (lfa defaultCacheBehaviorLambdaFunctionAssociationAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("lambda_arn"))
}

type loggingConfigAttributes struct {
	ref terra.Reference
}

func (lc loggingConfigAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc loggingConfigAttributes) InternalWithRef(ref terra.Reference) loggingConfigAttributes {
	return loggingConfigAttributes{ref: ref}
}

func (lc loggingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc loggingConfigAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("bucket"))
}

func (lc loggingConfigAttributes) IncludeCookies() terra.BoolValue {
	return terra.ReferenceAsBool(lc.ref.Append("include_cookies"))
}

func (lc loggingConfigAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("prefix"))
}

type orderedCacheBehaviorAttributes struct {
	ref terra.Reference
}

func (ocb orderedCacheBehaviorAttributes) InternalRef() (terra.Reference, error) {
	return ocb.ref, nil
}

func (ocb orderedCacheBehaviorAttributes) InternalWithRef(ref terra.Reference) orderedCacheBehaviorAttributes {
	return orderedCacheBehaviorAttributes{ref: ref}
}

func (ocb orderedCacheBehaviorAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ocb.ref.InternalTokens()
}

func (ocb orderedCacheBehaviorAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ocb.ref.Append("allowed_methods"))
}

func (ocb orderedCacheBehaviorAttributes) CachePolicyId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("cache_policy_id"))
}

func (ocb orderedCacheBehaviorAttributes) CachedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ocb.ref.Append("cached_methods"))
}

func (ocb orderedCacheBehaviorAttributes) Compress() terra.BoolValue {
	return terra.ReferenceAsBool(ocb.ref.Append("compress"))
}

func (ocb orderedCacheBehaviorAttributes) DefaultTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(ocb.ref.Append("default_ttl"))
}

func (ocb orderedCacheBehaviorAttributes) FieldLevelEncryptionId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("field_level_encryption_id"))
}

func (ocb orderedCacheBehaviorAttributes) MaxTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(ocb.ref.Append("max_ttl"))
}

func (ocb orderedCacheBehaviorAttributes) MinTtl() terra.NumberValue {
	return terra.ReferenceAsNumber(ocb.ref.Append("min_ttl"))
}

func (ocb orderedCacheBehaviorAttributes) OriginRequestPolicyId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("origin_request_policy_id"))
}

func (ocb orderedCacheBehaviorAttributes) PathPattern() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("path_pattern"))
}

func (ocb orderedCacheBehaviorAttributes) RealtimeLogConfigArn() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("realtime_log_config_arn"))
}

func (ocb orderedCacheBehaviorAttributes) ResponseHeadersPolicyId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("response_headers_policy_id"))
}

func (ocb orderedCacheBehaviorAttributes) SmoothStreaming() terra.BoolValue {
	return terra.ReferenceAsBool(ocb.ref.Append("smooth_streaming"))
}

func (ocb orderedCacheBehaviorAttributes) TargetOriginId() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("target_origin_id"))
}

func (ocb orderedCacheBehaviorAttributes) TrustedKeyGroups() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ocb.ref.Append("trusted_key_groups"))
}

func (ocb orderedCacheBehaviorAttributes) TrustedSigners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ocb.ref.Append("trusted_signers"))
}

func (ocb orderedCacheBehaviorAttributes) ViewerProtocolPolicy() terra.StringValue {
	return terra.ReferenceAsString(ocb.ref.Append("viewer_protocol_policy"))
}

func (ocb orderedCacheBehaviorAttributes) ForwardedValues() terra.ListValue[orderedCacheBehaviorForwardedValuesAttributes] {
	return terra.ReferenceAsList[orderedCacheBehaviorForwardedValuesAttributes](ocb.ref.Append("forwarded_values"))
}

func (ocb orderedCacheBehaviorAttributes) FunctionAssociation() terra.SetValue[orderedCacheBehaviorFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[orderedCacheBehaviorFunctionAssociationAttributes](ocb.ref.Append("function_association"))
}

func (ocb orderedCacheBehaviorAttributes) LambdaFunctionAssociation() terra.SetValue[orderedCacheBehaviorLambdaFunctionAssociationAttributes] {
	return terra.ReferenceAsSet[orderedCacheBehaviorLambdaFunctionAssociationAttributes](ocb.ref.Append("lambda_function_association"))
}

type orderedCacheBehaviorForwardedValuesAttributes struct {
	ref terra.Reference
}

func (fv orderedCacheBehaviorForwardedValuesAttributes) InternalRef() (terra.Reference, error) {
	return fv.ref, nil
}

func (fv orderedCacheBehaviorForwardedValuesAttributes) InternalWithRef(ref terra.Reference) orderedCacheBehaviorForwardedValuesAttributes {
	return orderedCacheBehaviorForwardedValuesAttributes{ref: ref}
}

func (fv orderedCacheBehaviorForwardedValuesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fv.ref.InternalTokens()
}

func (fv orderedCacheBehaviorForwardedValuesAttributes) Headers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](fv.ref.Append("headers"))
}

func (fv orderedCacheBehaviorForwardedValuesAttributes) QueryString() terra.BoolValue {
	return terra.ReferenceAsBool(fv.ref.Append("query_string"))
}

func (fv orderedCacheBehaviorForwardedValuesAttributes) QueryStringCacheKeys() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fv.ref.Append("query_string_cache_keys"))
}

func (fv orderedCacheBehaviorForwardedValuesAttributes) Cookies() terra.ListValue[orderedCacheBehaviorForwardedValuesCookiesAttributes] {
	return terra.ReferenceAsList[orderedCacheBehaviorForwardedValuesCookiesAttributes](fv.ref.Append("cookies"))
}

type orderedCacheBehaviorForwardedValuesCookiesAttributes struct {
	ref terra.Reference
}

func (c orderedCacheBehaviorForwardedValuesCookiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c orderedCacheBehaviorForwardedValuesCookiesAttributes) InternalWithRef(ref terra.Reference) orderedCacheBehaviorForwardedValuesCookiesAttributes {
	return orderedCacheBehaviorForwardedValuesCookiesAttributes{ref: ref}
}

func (c orderedCacheBehaviorForwardedValuesCookiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c orderedCacheBehaviorForwardedValuesCookiesAttributes) Forward() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("forward"))
}

func (c orderedCacheBehaviorForwardedValuesCookiesAttributes) WhitelistedNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("whitelisted_names"))
}

type orderedCacheBehaviorFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (fa orderedCacheBehaviorFunctionAssociationAttributes) InternalRef() (terra.Reference, error) {
	return fa.ref, nil
}

func (fa orderedCacheBehaviorFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) orderedCacheBehaviorFunctionAssociationAttributes {
	return orderedCacheBehaviorFunctionAssociationAttributes{ref: ref}
}

func (fa orderedCacheBehaviorFunctionAssociationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fa.ref.InternalTokens()
}

func (fa orderedCacheBehaviorFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("event_type"))
}

func (fa orderedCacheBehaviorFunctionAssociationAttributes) FunctionArn() terra.StringValue {
	return terra.ReferenceAsString(fa.ref.Append("function_arn"))
}

type orderedCacheBehaviorLambdaFunctionAssociationAttributes struct {
	ref terra.Reference
}

func (lfa orderedCacheBehaviorLambdaFunctionAssociationAttributes) InternalRef() (terra.Reference, error) {
	return lfa.ref, nil
}

func (lfa orderedCacheBehaviorLambdaFunctionAssociationAttributes) InternalWithRef(ref terra.Reference) orderedCacheBehaviorLambdaFunctionAssociationAttributes {
	return orderedCacheBehaviorLambdaFunctionAssociationAttributes{ref: ref}
}

func (lfa orderedCacheBehaviorLambdaFunctionAssociationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lfa.ref.InternalTokens()
}

func (lfa orderedCacheBehaviorLambdaFunctionAssociationAttributes) EventType() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("event_type"))
}

func (lfa orderedCacheBehaviorLambdaFunctionAssociationAttributes) IncludeBody() terra.BoolValue {
	return terra.ReferenceAsBool(lfa.ref.Append("include_body"))
}

func (lfa orderedCacheBehaviorLambdaFunctionAssociationAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceAsString(lfa.ref.Append("lambda_arn"))
}

type originAttributes struct {
	ref terra.Reference
}

func (o originAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o originAttributes) InternalWithRef(ref terra.Reference) originAttributes {
	return originAttributes{ref: ref}
}

func (o originAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o originAttributes) ConnectionAttempts() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("connection_attempts"))
}

func (o originAttributes) ConnectionTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("connection_timeout"))
}

func (o originAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("domain_name"))
}

func (o originAttributes) OriginAccessControlId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("origin_access_control_id"))
}

func (o originAttributes) OriginId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("origin_id"))
}

func (o originAttributes) OriginPath() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("origin_path"))
}

func (o originAttributes) CustomHeader() terra.SetValue[originCustomHeaderAttributes] {
	return terra.ReferenceAsSet[originCustomHeaderAttributes](o.ref.Append("custom_header"))
}

func (o originAttributes) CustomOriginConfig() terra.ListValue[originCustomOriginConfigAttributes] {
	return terra.ReferenceAsList[originCustomOriginConfigAttributes](o.ref.Append("custom_origin_config"))
}

func (o originAttributes) OriginShield() terra.ListValue[originOriginShieldAttributes] {
	return terra.ReferenceAsList[originOriginShieldAttributes](o.ref.Append("origin_shield"))
}

func (o originAttributes) S3OriginConfig() terra.ListValue[originS3OriginConfigAttributes] {
	return terra.ReferenceAsList[originS3OriginConfigAttributes](o.ref.Append("s3_origin_config"))
}

type originCustomHeaderAttributes struct {
	ref terra.Reference
}

func (ch originCustomHeaderAttributes) InternalRef() (terra.Reference, error) {
	return ch.ref, nil
}

func (ch originCustomHeaderAttributes) InternalWithRef(ref terra.Reference) originCustomHeaderAttributes {
	return originCustomHeaderAttributes{ref: ref}
}

func (ch originCustomHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ch.ref.InternalTokens()
}

func (ch originCustomHeaderAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ch.ref.Append("name"))
}

func (ch originCustomHeaderAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(ch.ref.Append("value"))
}

type originCustomOriginConfigAttributes struct {
	ref terra.Reference
}

func (coc originCustomOriginConfigAttributes) InternalRef() (terra.Reference, error) {
	return coc.ref, nil
}

func (coc originCustomOriginConfigAttributes) InternalWithRef(ref terra.Reference) originCustomOriginConfigAttributes {
	return originCustomOriginConfigAttributes{ref: ref}
}

func (coc originCustomOriginConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return coc.ref.InternalTokens()
}

func (coc originCustomOriginConfigAttributes) HttpPort() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("http_port"))
}

func (coc originCustomOriginConfigAttributes) HttpsPort() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("https_port"))
}

func (coc originCustomOriginConfigAttributes) OriginKeepaliveTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("origin_keepalive_timeout"))
}

func (coc originCustomOriginConfigAttributes) OriginProtocolPolicy() terra.StringValue {
	return terra.ReferenceAsString(coc.ref.Append("origin_protocol_policy"))
}

func (coc originCustomOriginConfigAttributes) OriginReadTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(coc.ref.Append("origin_read_timeout"))
}

func (coc originCustomOriginConfigAttributes) OriginSslProtocols() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](coc.ref.Append("origin_ssl_protocols"))
}

type originOriginShieldAttributes struct {
	ref terra.Reference
}

func (os originOriginShieldAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os originOriginShieldAttributes) InternalWithRef(ref terra.Reference) originOriginShieldAttributes {
	return originOriginShieldAttributes{ref: ref}
}

func (os originOriginShieldAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os originOriginShieldAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(os.ref.Append("enabled"))
}

func (os originOriginShieldAttributes) OriginShieldRegion() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("origin_shield_region"))
}

type originS3OriginConfigAttributes struct {
	ref terra.Reference
}

func (soc originS3OriginConfigAttributes) InternalRef() (terra.Reference, error) {
	return soc.ref, nil
}

func (soc originS3OriginConfigAttributes) InternalWithRef(ref terra.Reference) originS3OriginConfigAttributes {
	return originS3OriginConfigAttributes{ref: ref}
}

func (soc originS3OriginConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return soc.ref.InternalTokens()
}

func (soc originS3OriginConfigAttributes) OriginAccessIdentity() terra.StringValue {
	return terra.ReferenceAsString(soc.ref.Append("origin_access_identity"))
}

type originGroupAttributes struct {
	ref terra.Reference
}

func (og originGroupAttributes) InternalRef() (terra.Reference, error) {
	return og.ref, nil
}

func (og originGroupAttributes) InternalWithRef(ref terra.Reference) originGroupAttributes {
	return originGroupAttributes{ref: ref}
}

func (og originGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return og.ref.InternalTokens()
}

func (og originGroupAttributes) OriginId() terra.StringValue {
	return terra.ReferenceAsString(og.ref.Append("origin_id"))
}

func (og originGroupAttributes) FailoverCriteria() terra.ListValue[originGroupFailoverCriteriaAttributes] {
	return terra.ReferenceAsList[originGroupFailoverCriteriaAttributes](og.ref.Append("failover_criteria"))
}

func (og originGroupAttributes) Member() terra.ListValue[originGroupMemberAttributes] {
	return terra.ReferenceAsList[originGroupMemberAttributes](og.ref.Append("member"))
}

type originGroupFailoverCriteriaAttributes struct {
	ref terra.Reference
}

func (fc originGroupFailoverCriteriaAttributes) InternalRef() (terra.Reference, error) {
	return fc.ref, nil
}

func (fc originGroupFailoverCriteriaAttributes) InternalWithRef(ref terra.Reference) originGroupFailoverCriteriaAttributes {
	return originGroupFailoverCriteriaAttributes{ref: ref}
}

func (fc originGroupFailoverCriteriaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fc.ref.InternalTokens()
}

func (fc originGroupFailoverCriteriaAttributes) StatusCodes() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](fc.ref.Append("status_codes"))
}

type originGroupMemberAttributes struct {
	ref terra.Reference
}

func (m originGroupMemberAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m originGroupMemberAttributes) InternalWithRef(ref terra.Reference) originGroupMemberAttributes {
	return originGroupMemberAttributes{ref: ref}
}

func (m originGroupMemberAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m originGroupMemberAttributes) OriginId() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("origin_id"))
}

type restrictionsAttributes struct {
	ref terra.Reference
}

func (r restrictionsAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r restrictionsAttributes) InternalWithRef(ref terra.Reference) restrictionsAttributes {
	return restrictionsAttributes{ref: ref}
}

func (r restrictionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r restrictionsAttributes) GeoRestriction() terra.ListValue[restrictionsGeoRestrictionAttributes] {
	return terra.ReferenceAsList[restrictionsGeoRestrictionAttributes](r.ref.Append("geo_restriction"))
}

type restrictionsGeoRestrictionAttributes struct {
	ref terra.Reference
}

func (gr restrictionsGeoRestrictionAttributes) InternalRef() (terra.Reference, error) {
	return gr.ref, nil
}

func (gr restrictionsGeoRestrictionAttributes) InternalWithRef(ref terra.Reference) restrictionsGeoRestrictionAttributes {
	return restrictionsGeoRestrictionAttributes{ref: ref}
}

func (gr restrictionsGeoRestrictionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gr.ref.InternalTokens()
}

func (gr restrictionsGeoRestrictionAttributes) Locations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gr.ref.Append("locations"))
}

func (gr restrictionsGeoRestrictionAttributes) RestrictionType() terra.StringValue {
	return terra.ReferenceAsString(gr.ref.Append("restriction_type"))
}

type viewerCertificateAttributes struct {
	ref terra.Reference
}

func (vc viewerCertificateAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc viewerCertificateAttributes) InternalWithRef(ref terra.Reference) viewerCertificateAttributes {
	return viewerCertificateAttributes{ref: ref}
}

func (vc viewerCertificateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc viewerCertificateAttributes) AcmCertificateArn() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("acm_certificate_arn"))
}

func (vc viewerCertificateAttributes) CloudfrontDefaultCertificate() terra.BoolValue {
	return terra.ReferenceAsBool(vc.ref.Append("cloudfront_default_certificate"))
}

func (vc viewerCertificateAttributes) IamCertificateId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("iam_certificate_id"))
}

func (vc viewerCertificateAttributes) MinimumProtocolVersion() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("minimum_protocol_version"))
}

func (vc viewerCertificateAttributes) SslSupportMethod() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("ssl_support_method"))
}

type TrustedKeyGroupsState struct {
	Enabled bool                         `json:"enabled"`
	Items   []TrustedKeyGroupsItemsState `json:"items"`
}

type TrustedKeyGroupsItemsState struct {
	KeyGroupId string   `json:"key_group_id"`
	KeyPairIds []string `json:"key_pair_ids"`
}

type TrustedSignersState struct {
	Enabled bool                       `json:"enabled"`
	Items   []TrustedSignersItemsState `json:"items"`
}

type TrustedSignersItemsState struct {
	AwsAccountNumber string   `json:"aws_account_number"`
	KeyPairIds       []string `json:"key_pair_ids"`
}

type CustomErrorResponseState struct {
	ErrorCachingMinTtl float64 `json:"error_caching_min_ttl"`
	ErrorCode          float64 `json:"error_code"`
	ResponseCode       float64 `json:"response_code"`
	ResponsePagePath   string  `json:"response_page_path"`
}

type DefaultCacheBehaviorState struct {
	AllowedMethods            []string                                             `json:"allowed_methods"`
	CachePolicyId             string                                               `json:"cache_policy_id"`
	CachedMethods             []string                                             `json:"cached_methods"`
	Compress                  bool                                                 `json:"compress"`
	DefaultTtl                float64                                              `json:"default_ttl"`
	FieldLevelEncryptionId    string                                               `json:"field_level_encryption_id"`
	MaxTtl                    float64                                              `json:"max_ttl"`
	MinTtl                    float64                                              `json:"min_ttl"`
	OriginRequestPolicyId     string                                               `json:"origin_request_policy_id"`
	RealtimeLogConfigArn      string                                               `json:"realtime_log_config_arn"`
	ResponseHeadersPolicyId   string                                               `json:"response_headers_policy_id"`
	SmoothStreaming           bool                                                 `json:"smooth_streaming"`
	TargetOriginId            string                                               `json:"target_origin_id"`
	TrustedKeyGroups          []string                                             `json:"trusted_key_groups"`
	TrustedSigners            []string                                             `json:"trusted_signers"`
	ViewerProtocolPolicy      string                                               `json:"viewer_protocol_policy"`
	ForwardedValues           []DefaultCacheBehaviorForwardedValuesState           `json:"forwarded_values"`
	FunctionAssociation       []DefaultCacheBehaviorFunctionAssociationState       `json:"function_association"`
	LambdaFunctionAssociation []DefaultCacheBehaviorLambdaFunctionAssociationState `json:"lambda_function_association"`
}

type DefaultCacheBehaviorForwardedValuesState struct {
	Headers              []string                                          `json:"headers"`
	QueryString          bool                                              `json:"query_string"`
	QueryStringCacheKeys []string                                          `json:"query_string_cache_keys"`
	Cookies              []DefaultCacheBehaviorForwardedValuesCookiesState `json:"cookies"`
}

type DefaultCacheBehaviorForwardedValuesCookiesState struct {
	Forward          string   `json:"forward"`
	WhitelistedNames []string `json:"whitelisted_names"`
}

type DefaultCacheBehaviorFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	FunctionArn string `json:"function_arn"`
}

type DefaultCacheBehaviorLambdaFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	IncludeBody bool   `json:"include_body"`
	LambdaArn   string `json:"lambda_arn"`
}

type LoggingConfigState struct {
	Bucket         string `json:"bucket"`
	IncludeCookies bool   `json:"include_cookies"`
	Prefix         string `json:"prefix"`
}

type OrderedCacheBehaviorState struct {
	AllowedMethods            []string                                             `json:"allowed_methods"`
	CachePolicyId             string                                               `json:"cache_policy_id"`
	CachedMethods             []string                                             `json:"cached_methods"`
	Compress                  bool                                                 `json:"compress"`
	DefaultTtl                float64                                              `json:"default_ttl"`
	FieldLevelEncryptionId    string                                               `json:"field_level_encryption_id"`
	MaxTtl                    float64                                              `json:"max_ttl"`
	MinTtl                    float64                                              `json:"min_ttl"`
	OriginRequestPolicyId     string                                               `json:"origin_request_policy_id"`
	PathPattern               string                                               `json:"path_pattern"`
	RealtimeLogConfigArn      string                                               `json:"realtime_log_config_arn"`
	ResponseHeadersPolicyId   string                                               `json:"response_headers_policy_id"`
	SmoothStreaming           bool                                                 `json:"smooth_streaming"`
	TargetOriginId            string                                               `json:"target_origin_id"`
	TrustedKeyGroups          []string                                             `json:"trusted_key_groups"`
	TrustedSigners            []string                                             `json:"trusted_signers"`
	ViewerProtocolPolicy      string                                               `json:"viewer_protocol_policy"`
	ForwardedValues           []OrderedCacheBehaviorForwardedValuesState           `json:"forwarded_values"`
	FunctionAssociation       []OrderedCacheBehaviorFunctionAssociationState       `json:"function_association"`
	LambdaFunctionAssociation []OrderedCacheBehaviorLambdaFunctionAssociationState `json:"lambda_function_association"`
}

type OrderedCacheBehaviorForwardedValuesState struct {
	Headers              []string                                          `json:"headers"`
	QueryString          bool                                              `json:"query_string"`
	QueryStringCacheKeys []string                                          `json:"query_string_cache_keys"`
	Cookies              []OrderedCacheBehaviorForwardedValuesCookiesState `json:"cookies"`
}

type OrderedCacheBehaviorForwardedValuesCookiesState struct {
	Forward          string   `json:"forward"`
	WhitelistedNames []string `json:"whitelisted_names"`
}

type OrderedCacheBehaviorFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	FunctionArn string `json:"function_arn"`
}

type OrderedCacheBehaviorLambdaFunctionAssociationState struct {
	EventType   string `json:"event_type"`
	IncludeBody bool   `json:"include_body"`
	LambdaArn   string `json:"lambda_arn"`
}

type OriginState struct {
	ConnectionAttempts    float64                         `json:"connection_attempts"`
	ConnectionTimeout     float64                         `json:"connection_timeout"`
	DomainName            string                          `json:"domain_name"`
	OriginAccessControlId string                          `json:"origin_access_control_id"`
	OriginId              string                          `json:"origin_id"`
	OriginPath            string                          `json:"origin_path"`
	CustomHeader          []OriginCustomHeaderState       `json:"custom_header"`
	CustomOriginConfig    []OriginCustomOriginConfigState `json:"custom_origin_config"`
	OriginShield          []OriginOriginShieldState       `json:"origin_shield"`
	S3OriginConfig        []OriginS3OriginConfigState     `json:"s3_origin_config"`
}

type OriginCustomHeaderState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type OriginCustomOriginConfigState struct {
	HttpPort               float64  `json:"http_port"`
	HttpsPort              float64  `json:"https_port"`
	OriginKeepaliveTimeout float64  `json:"origin_keepalive_timeout"`
	OriginProtocolPolicy   string   `json:"origin_protocol_policy"`
	OriginReadTimeout      float64  `json:"origin_read_timeout"`
	OriginSslProtocols     []string `json:"origin_ssl_protocols"`
}

type OriginOriginShieldState struct {
	Enabled            bool   `json:"enabled"`
	OriginShieldRegion string `json:"origin_shield_region"`
}

type OriginS3OriginConfigState struct {
	OriginAccessIdentity string `json:"origin_access_identity"`
}

type OriginGroupState struct {
	OriginId         string                             `json:"origin_id"`
	FailoverCriteria []OriginGroupFailoverCriteriaState `json:"failover_criteria"`
	Member           []OriginGroupMemberState           `json:"member"`
}

type OriginGroupFailoverCriteriaState struct {
	StatusCodes []float64 `json:"status_codes"`
}

type OriginGroupMemberState struct {
	OriginId string `json:"origin_id"`
}

type RestrictionsState struct {
	GeoRestriction []RestrictionsGeoRestrictionState `json:"geo_restriction"`
}

type RestrictionsGeoRestrictionState struct {
	Locations       []string `json:"locations"`
	RestrictionType string   `json:"restriction_type"`
}

type ViewerCertificateState struct {
	AcmCertificateArn            string `json:"acm_certificate_arn"`
	CloudfrontDefaultCertificate bool   `json:"cloudfront_default_certificate"`
	IamCertificateId             string `json:"iam_certificate_id"`
	MinimumProtocolVersion       string `json:"minimum_protocol_version"`
	SslSupportMethod             string `json:"ssl_support_method"`
}
