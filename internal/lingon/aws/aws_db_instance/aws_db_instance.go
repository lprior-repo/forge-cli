// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_db_instance

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_db_instance.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsDbInstanceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adi *Resource) Type() string {
	return "aws_db_instance"
}

// LocalName returns the local name for [Resource].
func (adi *Resource) LocalName() string {
	return adi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adi *Resource) Configuration() interface{} {
	return adi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adi *Resource) Dependencies() terra.Dependencies {
	return adi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adi *Resource) LifecycleManagement() *terra.Lifecycle {
	return adi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adi *Resource) Attributes() awsDbInstanceAttributes {
	return awsDbInstanceAttributes{ref: terra.ReferenceResource(adi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adi *Resource) ImportState(state io.Reader) error {
	adi.state = &awsDbInstanceState{}
	if err := json.NewDecoder(state).Decode(adi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adi.Type(), adi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adi *Resource) State() (*awsDbInstanceState, bool) {
	return adi.state, adi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adi *Resource) StateMust() *awsDbInstanceState {
	if adi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adi.Type(), adi.LocalName()))
	}
	return adi.state
}

// Args contains the configurations for aws_db_instance.
type Args struct {
	// AllocatedStorage is optional.
	AllocatedStorage terra.NumberValue `hcl:"allocated_storage,attr"`
	// AllowMajorVersionUpgrade is optional.
	AllowMajorVersionUpgrade terra.BoolValue `hcl:"allow_major_version_upgrade,attr"`
	// ApplyImmediately is optional.
	ApplyImmediately terra.BoolValue `hcl:"apply_immediately,attr"`
	// AutoMinorVersionUpgrade is optional.
	AutoMinorVersionUpgrade terra.BoolValue `hcl:"auto_minor_version_upgrade,attr"`
	// AvailabilityZone is optional.
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// BackupRetentionPeriod is optional.
	BackupRetentionPeriod terra.NumberValue `hcl:"backup_retention_period,attr"`
	// BackupWindow is optional.
	BackupWindow terra.StringValue `hcl:"backup_window,attr"`
	// CaCertIdentifier is optional.
	CaCertIdentifier terra.StringValue `hcl:"ca_cert_identifier,attr"`
	// CharacterSetName is optional.
	CharacterSetName terra.StringValue `hcl:"character_set_name,attr"`
	// CopyTagsToSnapshot is optional.
	CopyTagsToSnapshot terra.BoolValue `hcl:"copy_tags_to_snapshot,attr"`
	// CustomIamInstanceProfile is optional.
	CustomIamInstanceProfile terra.StringValue `hcl:"custom_iam_instance_profile,attr"`
	// CustomerOwnedIpEnabled is optional.
	CustomerOwnedIpEnabled terra.BoolValue `hcl:"customer_owned_ip_enabled,attr"`
	// DbName is optional.
	DbName terra.StringValue `hcl:"db_name,attr"`
	// DbSubnetGroupName is optional.
	DbSubnetGroupName terra.StringValue `hcl:"db_subnet_group_name,attr"`
	// DeleteAutomatedBackups is optional.
	DeleteAutomatedBackups terra.BoolValue `hcl:"delete_automated_backups,attr"`
	// DeletionProtection is optional.
	DeletionProtection terra.BoolValue `hcl:"deletion_protection,attr"`
	// Domain is optional.
	Domain terra.StringValue `hcl:"domain,attr"`
	// DomainIamRoleName is optional.
	DomainIamRoleName terra.StringValue `hcl:"domain_iam_role_name,attr"`
	// EnabledCloudwatchLogsExports is optional.
	EnabledCloudwatchLogsExports terra.SetValue[terra.StringValue] `hcl:"enabled_cloudwatch_logs_exports,attr"`
	// Engine is optional.
	Engine terra.StringValue `hcl:"engine,attr"`
	// EngineVersion is optional.
	EngineVersion terra.StringValue `hcl:"engine_version,attr"`
	// FinalSnapshotIdentifier is optional.
	FinalSnapshotIdentifier terra.StringValue `hcl:"final_snapshot_identifier,attr"`
	// IamDatabaseAuthenticationEnabled is optional.
	IamDatabaseAuthenticationEnabled terra.BoolValue `hcl:"iam_database_authentication_enabled,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Identifier is optional.
	Identifier terra.StringValue `hcl:"identifier,attr"`
	// IdentifierPrefix is optional.
	IdentifierPrefix terra.StringValue `hcl:"identifier_prefix,attr"`
	// InstanceClass is required.
	InstanceClass terra.StringValue `hcl:"instance_class,attr" validate:"required"`
	// Iops is optional.
	Iops terra.NumberValue `hcl:"iops,attr"`
	// KmsKeyId is optional.
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// LicenseModel is optional.
	LicenseModel terra.StringValue `hcl:"license_model,attr"`
	// MaintenanceWindow is optional.
	MaintenanceWindow terra.StringValue `hcl:"maintenance_window,attr"`
	// ManageMasterUserPassword is optional.
	ManageMasterUserPassword terra.BoolValue `hcl:"manage_master_user_password,attr"`
	// MasterUserSecretKmsKeyId is optional.
	MasterUserSecretKmsKeyId terra.StringValue `hcl:"master_user_secret_kms_key_id,attr"`
	// MaxAllocatedStorage is optional.
	MaxAllocatedStorage terra.NumberValue `hcl:"max_allocated_storage,attr"`
	// MonitoringInterval is optional.
	MonitoringInterval terra.NumberValue `hcl:"monitoring_interval,attr"`
	// MonitoringRoleArn is optional.
	MonitoringRoleArn terra.StringValue `hcl:"monitoring_role_arn,attr"`
	// MultiAz is optional.
	MultiAz terra.BoolValue `hcl:"multi_az,attr"`
	// NcharCharacterSetName is optional.
	NcharCharacterSetName terra.StringValue `hcl:"nchar_character_set_name,attr"`
	// NetworkType is optional.
	NetworkType terra.StringValue `hcl:"network_type,attr"`
	// OptionGroupName is optional.
	OptionGroupName terra.StringValue `hcl:"option_group_name,attr"`
	// ParameterGroupName is optional.
	ParameterGroupName terra.StringValue `hcl:"parameter_group_name,attr"`
	// Password is optional.
	Password terra.StringValue `hcl:"password,attr"`
	// PerformanceInsightsEnabled is optional.
	PerformanceInsightsEnabled terra.BoolValue `hcl:"performance_insights_enabled,attr"`
	// PerformanceInsightsKmsKeyId is optional.
	PerformanceInsightsKmsKeyId terra.StringValue `hcl:"performance_insights_kms_key_id,attr"`
	// PerformanceInsightsRetentionPeriod is optional.
	PerformanceInsightsRetentionPeriod terra.NumberValue `hcl:"performance_insights_retention_period,attr"`
	// Port is optional.
	Port terra.NumberValue `hcl:"port,attr"`
	// PubliclyAccessible is optional.
	PubliclyAccessible terra.BoolValue `hcl:"publicly_accessible,attr"`
	// ReplicaMode is optional.
	ReplicaMode terra.StringValue `hcl:"replica_mode,attr"`
	// ReplicateSourceDb is optional.
	ReplicateSourceDb terra.StringValue `hcl:"replicate_source_db,attr"`
	// SkipFinalSnapshot is optional.
	SkipFinalSnapshot terra.BoolValue `hcl:"skip_final_snapshot,attr"`
	// SnapshotIdentifier is optional.
	SnapshotIdentifier terra.StringValue `hcl:"snapshot_identifier,attr"`
	// StorageEncrypted is optional.
	StorageEncrypted terra.BoolValue `hcl:"storage_encrypted,attr"`
	// StorageThroughput is optional.
	StorageThroughput terra.NumberValue `hcl:"storage_throughput,attr"`
	// StorageType is optional.
	StorageType terra.StringValue `hcl:"storage_type,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll is optional.
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Timezone is optional.
	Timezone terra.StringValue `hcl:"timezone,attr"`
	// Username is optional.
	Username terra.StringValue `hcl:"username,attr"`
	// VpcSecurityGroupIds is optional.
	VpcSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"vpc_security_group_ids,attr"`
	// BlueGreenUpdate is optional.
	BlueGreenUpdate *BlueGreenUpdate `hcl:"blue_green_update,block"`
	// RestoreToPointInTime is optional.
	RestoreToPointInTime *RestoreToPointInTime `hcl:"restore_to_point_in_time,block"`
	// S3Import is optional.
	S3Import *S3Import `hcl:"s3_import,block"`
	// Timeouts is optional.
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsDbInstanceAttributes struct {
	ref terra.Reference
}

// Address returns a reference to field address of aws_db_instance.
func (adi awsDbInstanceAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("address"))
}

// AllocatedStorage returns a reference to field allocated_storage of aws_db_instance.
func (adi awsDbInstanceAttributes) AllocatedStorage() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("allocated_storage"))
}

// AllowMajorVersionUpgrade returns a reference to field allow_major_version_upgrade of aws_db_instance.
func (adi awsDbInstanceAttributes) AllowMajorVersionUpgrade() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("allow_major_version_upgrade"))
}

// ApplyImmediately returns a reference to field apply_immediately of aws_db_instance.
func (adi awsDbInstanceAttributes) ApplyImmediately() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("apply_immediately"))
}

// Arn returns a reference to field arn of aws_db_instance.
func (adi awsDbInstanceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("arn"))
}

// AutoMinorVersionUpgrade returns a reference to field auto_minor_version_upgrade of aws_db_instance.
func (adi awsDbInstanceAttributes) AutoMinorVersionUpgrade() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("auto_minor_version_upgrade"))
}

// AvailabilityZone returns a reference to field availability_zone of aws_db_instance.
func (adi awsDbInstanceAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("availability_zone"))
}

// BackupRetentionPeriod returns a reference to field backup_retention_period of aws_db_instance.
func (adi awsDbInstanceAttributes) BackupRetentionPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("backup_retention_period"))
}

// BackupWindow returns a reference to field backup_window of aws_db_instance.
func (adi awsDbInstanceAttributes) BackupWindow() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("backup_window"))
}

// CaCertIdentifier returns a reference to field ca_cert_identifier of aws_db_instance.
func (adi awsDbInstanceAttributes) CaCertIdentifier() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("ca_cert_identifier"))
}

// CharacterSetName returns a reference to field character_set_name of aws_db_instance.
func (adi awsDbInstanceAttributes) CharacterSetName() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("character_set_name"))
}

// CopyTagsToSnapshot returns a reference to field copy_tags_to_snapshot of aws_db_instance.
func (adi awsDbInstanceAttributes) CopyTagsToSnapshot() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("copy_tags_to_snapshot"))
}

// CustomIamInstanceProfile returns a reference to field custom_iam_instance_profile of aws_db_instance.
func (adi awsDbInstanceAttributes) CustomIamInstanceProfile() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("custom_iam_instance_profile"))
}

// CustomerOwnedIpEnabled returns a reference to field customer_owned_ip_enabled of aws_db_instance.
func (adi awsDbInstanceAttributes) CustomerOwnedIpEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("customer_owned_ip_enabled"))
}

// DbName returns a reference to field db_name of aws_db_instance.
func (adi awsDbInstanceAttributes) DbName() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("db_name"))
}

// DbSubnetGroupName returns a reference to field db_subnet_group_name of aws_db_instance.
func (adi awsDbInstanceAttributes) DbSubnetGroupName() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("db_subnet_group_name"))
}

// DeleteAutomatedBackups returns a reference to field delete_automated_backups of aws_db_instance.
func (adi awsDbInstanceAttributes) DeleteAutomatedBackups() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("delete_automated_backups"))
}

// DeletionProtection returns a reference to field deletion_protection of aws_db_instance.
func (adi awsDbInstanceAttributes) DeletionProtection() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("deletion_protection"))
}

// Domain returns a reference to field domain of aws_db_instance.
func (adi awsDbInstanceAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("domain"))
}

// DomainIamRoleName returns a reference to field domain_iam_role_name of aws_db_instance.
func (adi awsDbInstanceAttributes) DomainIamRoleName() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("domain_iam_role_name"))
}

// EnabledCloudwatchLogsExports returns a reference to field enabled_cloudwatch_logs_exports of aws_db_instance.
func (adi awsDbInstanceAttributes) EnabledCloudwatchLogsExports() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](adi.ref.Append("enabled_cloudwatch_logs_exports"))
}

// Endpoint returns a reference to field endpoint of aws_db_instance.
func (adi awsDbInstanceAttributes) Endpoint() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("endpoint"))
}

// Engine returns a reference to field engine of aws_db_instance.
func (adi awsDbInstanceAttributes) Engine() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("engine"))
}

// EngineVersion returns a reference to field engine_version of aws_db_instance.
func (adi awsDbInstanceAttributes) EngineVersion() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("engine_version"))
}

// EngineVersionActual returns a reference to field engine_version_actual of aws_db_instance.
func (adi awsDbInstanceAttributes) EngineVersionActual() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("engine_version_actual"))
}

// FinalSnapshotIdentifier returns a reference to field final_snapshot_identifier of aws_db_instance.
func (adi awsDbInstanceAttributes) FinalSnapshotIdentifier() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("final_snapshot_identifier"))
}

// HostedZoneId returns a reference to field hosted_zone_id of aws_db_instance.
func (adi awsDbInstanceAttributes) HostedZoneId() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("hosted_zone_id"))
}

// IamDatabaseAuthenticationEnabled returns a reference to field iam_database_authentication_enabled of aws_db_instance.
func (adi awsDbInstanceAttributes) IamDatabaseAuthenticationEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("iam_database_authentication_enabled"))
}

// Id returns a reference to field id of aws_db_instance.
func (adi awsDbInstanceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("id"))
}

// Identifier returns a reference to field identifier of aws_db_instance.
func (adi awsDbInstanceAttributes) Identifier() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("identifier"))
}

// IdentifierPrefix returns a reference to field identifier_prefix of aws_db_instance.
func (adi awsDbInstanceAttributes) IdentifierPrefix() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("identifier_prefix"))
}

// InstanceClass returns a reference to field instance_class of aws_db_instance.
func (adi awsDbInstanceAttributes) InstanceClass() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("instance_class"))
}

// Iops returns a reference to field iops of aws_db_instance.
func (adi awsDbInstanceAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("iops"))
}

// KmsKeyId returns a reference to field kms_key_id of aws_db_instance.
func (adi awsDbInstanceAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("kms_key_id"))
}

// LatestRestorableTime returns a reference to field latest_restorable_time of aws_db_instance.
func (adi awsDbInstanceAttributes) LatestRestorableTime() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("latest_restorable_time"))
}

// LicenseModel returns a reference to field license_model of aws_db_instance.
func (adi awsDbInstanceAttributes) LicenseModel() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("license_model"))
}

// MaintenanceWindow returns a reference to field maintenance_window of aws_db_instance.
func (adi awsDbInstanceAttributes) MaintenanceWindow() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("maintenance_window"))
}

// ManageMasterUserPassword returns a reference to field manage_master_user_password of aws_db_instance.
func (adi awsDbInstanceAttributes) ManageMasterUserPassword() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("manage_master_user_password"))
}

// MasterUserSecretKmsKeyId returns a reference to field master_user_secret_kms_key_id of aws_db_instance.
func (adi awsDbInstanceAttributes) MasterUserSecretKmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("master_user_secret_kms_key_id"))
}

// MaxAllocatedStorage returns a reference to field max_allocated_storage of aws_db_instance.
func (adi awsDbInstanceAttributes) MaxAllocatedStorage() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("max_allocated_storage"))
}

// MonitoringInterval returns a reference to field monitoring_interval of aws_db_instance.
func (adi awsDbInstanceAttributes) MonitoringInterval() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("monitoring_interval"))
}

// MonitoringRoleArn returns a reference to field monitoring_role_arn of aws_db_instance.
func (adi awsDbInstanceAttributes) MonitoringRoleArn() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("monitoring_role_arn"))
}

// MultiAz returns a reference to field multi_az of aws_db_instance.
func (adi awsDbInstanceAttributes) MultiAz() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("multi_az"))
}

// NcharCharacterSetName returns a reference to field nchar_character_set_name of aws_db_instance.
func (adi awsDbInstanceAttributes) NcharCharacterSetName() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("nchar_character_set_name"))
}

// NetworkType returns a reference to field network_type of aws_db_instance.
func (adi awsDbInstanceAttributes) NetworkType() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("network_type"))
}

// OptionGroupName returns a reference to field option_group_name of aws_db_instance.
func (adi awsDbInstanceAttributes) OptionGroupName() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("option_group_name"))
}

// ParameterGroupName returns a reference to field parameter_group_name of aws_db_instance.
func (adi awsDbInstanceAttributes) ParameterGroupName() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("parameter_group_name"))
}

// Password returns a reference to field password of aws_db_instance.
func (adi awsDbInstanceAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("password"))
}

// PerformanceInsightsEnabled returns a reference to field performance_insights_enabled of aws_db_instance.
func (adi awsDbInstanceAttributes) PerformanceInsightsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("performance_insights_enabled"))
}

// PerformanceInsightsKmsKeyId returns a reference to field performance_insights_kms_key_id of aws_db_instance.
func (adi awsDbInstanceAttributes) PerformanceInsightsKmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("performance_insights_kms_key_id"))
}

// PerformanceInsightsRetentionPeriod returns a reference to field performance_insights_retention_period of aws_db_instance.
func (adi awsDbInstanceAttributes) PerformanceInsightsRetentionPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("performance_insights_retention_period"))
}

// Port returns a reference to field port of aws_db_instance.
func (adi awsDbInstanceAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("port"))
}

// PubliclyAccessible returns a reference to field publicly_accessible of aws_db_instance.
func (adi awsDbInstanceAttributes) PubliclyAccessible() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("publicly_accessible"))
}

// ReplicaMode returns a reference to field replica_mode of aws_db_instance.
func (adi awsDbInstanceAttributes) ReplicaMode() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("replica_mode"))
}

// Replicas returns a reference to field replicas of aws_db_instance.
func (adi awsDbInstanceAttributes) Replicas() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](adi.ref.Append("replicas"))
}

// ReplicateSourceDb returns a reference to field replicate_source_db of aws_db_instance.
func (adi awsDbInstanceAttributes) ReplicateSourceDb() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("replicate_source_db"))
}

// ResourceId returns a reference to field resource_id of aws_db_instance.
func (adi awsDbInstanceAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("resource_id"))
}

// SkipFinalSnapshot returns a reference to field skip_final_snapshot of aws_db_instance.
func (adi awsDbInstanceAttributes) SkipFinalSnapshot() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("skip_final_snapshot"))
}

// SnapshotIdentifier returns a reference to field snapshot_identifier of aws_db_instance.
func (adi awsDbInstanceAttributes) SnapshotIdentifier() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("snapshot_identifier"))
}

// Status returns a reference to field status of aws_db_instance.
func (adi awsDbInstanceAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("status"))
}

// StorageEncrypted returns a reference to field storage_encrypted of aws_db_instance.
func (adi awsDbInstanceAttributes) StorageEncrypted() terra.BoolValue {
	return terra.ReferenceAsBool(adi.ref.Append("storage_encrypted"))
}

// StorageThroughput returns a reference to field storage_throughput of aws_db_instance.
func (adi awsDbInstanceAttributes) StorageThroughput() terra.NumberValue {
	return terra.ReferenceAsNumber(adi.ref.Append("storage_throughput"))
}

// StorageType returns a reference to field storage_type of aws_db_instance.
func (adi awsDbInstanceAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("storage_type"))
}

// Tags returns a reference to field tags of aws_db_instance.
func (adi awsDbInstanceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adi.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_db_instance.
func (adi awsDbInstanceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adi.ref.Append("tags_all"))
}

// Timezone returns a reference to field timezone of aws_db_instance.
func (adi awsDbInstanceAttributes) Timezone() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("timezone"))
}

// Username returns a reference to field username of aws_db_instance.
func (adi awsDbInstanceAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(adi.ref.Append("username"))
}

// VpcSecurityGroupIds returns a reference to field vpc_security_group_ids of aws_db_instance.
func (adi awsDbInstanceAttributes) VpcSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](adi.ref.Append("vpc_security_group_ids"))
}

func (adi awsDbInstanceAttributes) ListenerEndpoint() terra.ListValue[listenerEndpointAttributes] {
	return terra.ReferenceAsList[listenerEndpointAttributes](adi.ref.Append("listener_endpoint"))
}

func (adi awsDbInstanceAttributes) MasterUserSecret() terra.ListValue[masterUserSecretAttributes] {
	return terra.ReferenceAsList[masterUserSecretAttributes](adi.ref.Append("master_user_secret"))
}

func (adi awsDbInstanceAttributes) BlueGreenUpdate() terra.ListValue[blueGreenUpdateAttributes] {
	return terra.ReferenceAsList[blueGreenUpdateAttributes](adi.ref.Append("blue_green_update"))
}

func (adi awsDbInstanceAttributes) RestoreToPointInTime() terra.ListValue[restoreToPointInTimeAttributes] {
	return terra.ReferenceAsList[restoreToPointInTimeAttributes](adi.ref.Append("restore_to_point_in_time"))
}

func (adi awsDbInstanceAttributes) S3Import() terra.ListValue[s3ImportAttributes] {
	return terra.ReferenceAsList[s3ImportAttributes](adi.ref.Append("s3_import"))
}

func (adi awsDbInstanceAttributes) Timeouts() timeoutsAttributes {
	return terra.ReferenceAsSingle[timeoutsAttributes](adi.ref.Append("timeouts"))
}

type awsDbInstanceState struct {
	Address                            string                      `json:"address"`
	AllocatedStorage                   float64                     `json:"allocated_storage"`
	AllowMajorVersionUpgrade           bool                        `json:"allow_major_version_upgrade"`
	ApplyImmediately                   bool                        `json:"apply_immediately"`
	Arn                                string                      `json:"arn"`
	AutoMinorVersionUpgrade            bool                        `json:"auto_minor_version_upgrade"`
	AvailabilityZone                   string                      `json:"availability_zone"`
	BackupRetentionPeriod              float64                     `json:"backup_retention_period"`
	BackupWindow                       string                      `json:"backup_window"`
	CaCertIdentifier                   string                      `json:"ca_cert_identifier"`
	CharacterSetName                   string                      `json:"character_set_name"`
	CopyTagsToSnapshot                 bool                        `json:"copy_tags_to_snapshot"`
	CustomIamInstanceProfile           string                      `json:"custom_iam_instance_profile"`
	CustomerOwnedIpEnabled             bool                        `json:"customer_owned_ip_enabled"`
	DbName                             string                      `json:"db_name"`
	DbSubnetGroupName                  string                      `json:"db_subnet_group_name"`
	DeleteAutomatedBackups             bool                        `json:"delete_automated_backups"`
	DeletionProtection                 bool                        `json:"deletion_protection"`
	Domain                             string                      `json:"domain"`
	DomainIamRoleName                  string                      `json:"domain_iam_role_name"`
	EnabledCloudwatchLogsExports       []string                    `json:"enabled_cloudwatch_logs_exports"`
	Endpoint                           string                      `json:"endpoint"`
	Engine                             string                      `json:"engine"`
	EngineVersion                      string                      `json:"engine_version"`
	EngineVersionActual                string                      `json:"engine_version_actual"`
	FinalSnapshotIdentifier            string                      `json:"final_snapshot_identifier"`
	HostedZoneId                       string                      `json:"hosted_zone_id"`
	IamDatabaseAuthenticationEnabled   bool                        `json:"iam_database_authentication_enabled"`
	Id                                 string                      `json:"id"`
	Identifier                         string                      `json:"identifier"`
	IdentifierPrefix                   string                      `json:"identifier_prefix"`
	InstanceClass                      string                      `json:"instance_class"`
	Iops                               float64                     `json:"iops"`
	KmsKeyId                           string                      `json:"kms_key_id"`
	LatestRestorableTime               string                      `json:"latest_restorable_time"`
	LicenseModel                       string                      `json:"license_model"`
	MaintenanceWindow                  string                      `json:"maintenance_window"`
	ManageMasterUserPassword           bool                        `json:"manage_master_user_password"`
	MasterUserSecretKmsKeyId           string                      `json:"master_user_secret_kms_key_id"`
	MaxAllocatedStorage                float64                     `json:"max_allocated_storage"`
	MonitoringInterval                 float64                     `json:"monitoring_interval"`
	MonitoringRoleArn                  string                      `json:"monitoring_role_arn"`
	MultiAz                            bool                        `json:"multi_az"`
	NcharCharacterSetName              string                      `json:"nchar_character_set_name"`
	NetworkType                        string                      `json:"network_type"`
	OptionGroupName                    string                      `json:"option_group_name"`
	ParameterGroupName                 string                      `json:"parameter_group_name"`
	Password                           string                      `json:"password"`
	PerformanceInsightsEnabled         bool                        `json:"performance_insights_enabled"`
	PerformanceInsightsKmsKeyId        string                      `json:"performance_insights_kms_key_id"`
	PerformanceInsightsRetentionPeriod float64                     `json:"performance_insights_retention_period"`
	Port                               float64                     `json:"port"`
	PubliclyAccessible                 bool                        `json:"publicly_accessible"`
	ReplicaMode                        string                      `json:"replica_mode"`
	Replicas                           []string                    `json:"replicas"`
	ReplicateSourceDb                  string                      `json:"replicate_source_db"`
	ResourceId                         string                      `json:"resource_id"`
	SkipFinalSnapshot                  bool                        `json:"skip_final_snapshot"`
	SnapshotIdentifier                 string                      `json:"snapshot_identifier"`
	Status                             string                      `json:"status"`
	StorageEncrypted                   bool                        `json:"storage_encrypted"`
	StorageThroughput                  float64                     `json:"storage_throughput"`
	StorageType                        string                      `json:"storage_type"`
	Tags                               map[string]string           `json:"tags"`
	TagsAll                            map[string]string           `json:"tags_all"`
	Timezone                           string                      `json:"timezone"`
	Username                           string                      `json:"username"`
	VpcSecurityGroupIds                []string                    `json:"vpc_security_group_ids"`
	ListenerEndpoint                   []ListenerEndpointState     `json:"listener_endpoint"`
	MasterUserSecret                   []MasterUserSecretState     `json:"master_user_secret"`
	BlueGreenUpdate                    []BlueGreenUpdateState      `json:"blue_green_update"`
	RestoreToPointInTime               []RestoreToPointInTimeState `json:"restore_to_point_in_time"`
	S3Import                           []S3ImportState             `json:"s3_import"`
	Timeouts                           *TimeoutsState              `json:"timeouts"`
}
