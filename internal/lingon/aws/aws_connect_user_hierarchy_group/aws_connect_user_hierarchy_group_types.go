// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_user_hierarchy_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type hierarchyPathAttributes struct {
	ref terra.Reference
}

func (hp hierarchyPathAttributes) InternalRef() (terra.Reference, error) {
	return hp.ref, nil
}

func (hp hierarchyPathAttributes) InternalWithRef(ref terra.Reference) hierarchyPathAttributes {
	return hierarchyPathAttributes{ref: ref}
}

func (hp hierarchyPathAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hp.ref.InternalTokens()
}

func (hp hierarchyPathAttributes) LevelFive() terra.ListValue[hierarchyPathLevelFiveAttributes] {
	return terra.ReferenceAsList[hierarchyPathLevelFiveAttributes](hp.ref.Append("level_five"))
}

func (hp hierarchyPathAttributes) LevelFour() terra.ListValue[hierarchyPathLevelFourAttributes] {
	return terra.ReferenceAsList[hierarchyPathLevelFourAttributes](hp.ref.Append("level_four"))
}

func (hp hierarchyPathAttributes) LevelOne() terra.ListValue[hierarchyPathLevelOneAttributes] {
	return terra.ReferenceAsList[hierarchyPathLevelOneAttributes](hp.ref.Append("level_one"))
}

func (hp hierarchyPathAttributes) LevelThree() terra.ListValue[hierarchyPathLevelThreeAttributes] {
	return terra.ReferenceAsList[hierarchyPathLevelThreeAttributes](hp.ref.Append("level_three"))
}

func (hp hierarchyPathAttributes) LevelTwo() terra.ListValue[hierarchyPathLevelTwoAttributes] {
	return terra.ReferenceAsList[hierarchyPathLevelTwoAttributes](hp.ref.Append("level_two"))
}

type hierarchyPathLevelFiveAttributes struct {
	ref terra.Reference
}

func (lf hierarchyPathLevelFiveAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf hierarchyPathLevelFiveAttributes) InternalWithRef(ref terra.Reference) hierarchyPathLevelFiveAttributes {
	return hierarchyPathLevelFiveAttributes{ref: ref}
}

func (lf hierarchyPathLevelFiveAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf hierarchyPathLevelFiveAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf hierarchyPathLevelFiveAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf hierarchyPathLevelFiveAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type hierarchyPathLevelFourAttributes struct {
	ref terra.Reference
}

func (lf hierarchyPathLevelFourAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf hierarchyPathLevelFourAttributes) InternalWithRef(ref terra.Reference) hierarchyPathLevelFourAttributes {
	return hierarchyPathLevelFourAttributes{ref: ref}
}

func (lf hierarchyPathLevelFourAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf hierarchyPathLevelFourAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf hierarchyPathLevelFourAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf hierarchyPathLevelFourAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type hierarchyPathLevelOneAttributes struct {
	ref terra.Reference
}

func (lo hierarchyPathLevelOneAttributes) InternalRef() (terra.Reference, error) {
	return lo.ref, nil
}

func (lo hierarchyPathLevelOneAttributes) InternalWithRef(ref terra.Reference) hierarchyPathLevelOneAttributes {
	return hierarchyPathLevelOneAttributes{ref: ref}
}

func (lo hierarchyPathLevelOneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lo.ref.InternalTokens()
}

func (lo hierarchyPathLevelOneAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("arn"))
}

func (lo hierarchyPathLevelOneAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("id"))
}

func (lo hierarchyPathLevelOneAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("name"))
}

type hierarchyPathLevelThreeAttributes struct {
	ref terra.Reference
}

func (lt hierarchyPathLevelThreeAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt hierarchyPathLevelThreeAttributes) InternalWithRef(ref terra.Reference) hierarchyPathLevelThreeAttributes {
	return hierarchyPathLevelThreeAttributes{ref: ref}
}

func (lt hierarchyPathLevelThreeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt hierarchyPathLevelThreeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt hierarchyPathLevelThreeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt hierarchyPathLevelThreeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type hierarchyPathLevelTwoAttributes struct {
	ref terra.Reference
}

func (lt hierarchyPathLevelTwoAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt hierarchyPathLevelTwoAttributes) InternalWithRef(ref terra.Reference) hierarchyPathLevelTwoAttributes {
	return hierarchyPathLevelTwoAttributes{ref: ref}
}

func (lt hierarchyPathLevelTwoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt hierarchyPathLevelTwoAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt hierarchyPathLevelTwoAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt hierarchyPathLevelTwoAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type HierarchyPathState struct {
	LevelFive  []HierarchyPathLevelFiveState  `json:"level_five"`
	LevelFour  []HierarchyPathLevelFourState  `json:"level_four"`
	LevelOne   []HierarchyPathLevelOneState   `json:"level_one"`
	LevelThree []HierarchyPathLevelThreeState `json:"level_three"`
	LevelTwo   []HierarchyPathLevelTwoState   `json:"level_two"`
}

type HierarchyPathLevelFiveState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelFourState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelOneState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelThreeState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type HierarchyPathLevelTwoState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}
