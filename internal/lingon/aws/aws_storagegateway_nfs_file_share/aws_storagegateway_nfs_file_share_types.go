// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_storagegateway_nfs_file_share

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CacheAttributes struct {
	// CacheStaleTimeoutInSeconds is optional.
	CacheStaleTimeoutInSeconds terra.NumberValue `hcl:"cache_stale_timeout_in_seconds,attr"`
}

type NfsFileShareDefaults struct {
	// DirectoryMode is optional.
	DirectoryMode terra.StringValue `hcl:"directory_mode,attr"`
	// FileMode is optional.
	FileMode terra.StringValue `hcl:"file_mode,attr"`
	// GroupId is optional.
	GroupId terra.StringValue `hcl:"group_id,attr"`
	// OwnerId is optional.
	OwnerId terra.StringValue `hcl:"owner_id,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type cacheAttributesAttributes struct {
	ref terra.Reference
}

func (ca cacheAttributesAttributes) InternalRef() (terra.Reference, error) {
	return ca.ref, nil
}

func (ca cacheAttributesAttributes) InternalWithRef(ref terra.Reference) cacheAttributesAttributes {
	return cacheAttributesAttributes{ref: ref}
}

func (ca cacheAttributesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ca.ref.InternalTokens()
}

func (ca cacheAttributesAttributes) CacheStaleTimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(ca.ref.Append("cache_stale_timeout_in_seconds"))
}

type nfsFileShareDefaultsAttributes struct {
	ref terra.Reference
}

func (nfsd nfsFileShareDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return nfsd.ref, nil
}

func (nfsd nfsFileShareDefaultsAttributes) InternalWithRef(ref terra.Reference) nfsFileShareDefaultsAttributes {
	return nfsFileShareDefaultsAttributes{ref: ref}
}

func (nfsd nfsFileShareDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nfsd.ref.InternalTokens()
}

func (nfsd nfsFileShareDefaultsAttributes) DirectoryMode() terra.StringValue {
	return terra.ReferenceAsString(nfsd.ref.Append("directory_mode"))
}

func (nfsd nfsFileShareDefaultsAttributes) FileMode() terra.StringValue {
	return terra.ReferenceAsString(nfsd.ref.Append("file_mode"))
}

func (nfsd nfsFileShareDefaultsAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(nfsd.ref.Append("group_id"))
}

func (nfsd nfsFileShareDefaultsAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(nfsd.ref.Append("owner_id"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type CacheAttributesState struct {
	CacheStaleTimeoutInSeconds float64 `json:"cache_stale_timeout_in_seconds"`
}

type NfsFileShareDefaultsState struct {
	DirectoryMode string `json:"directory_mode"`
	FileMode      string `json:"file_mode"`
	GroupId       string `json:"group_id"`
	OwnerId       string `json:"owner_id"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
