// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_config_configuration_aggregator

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccountAggregationSource struct {
	// AccountIds is required.
	AccountIds terra.ListValue[terra.StringValue] `hcl:"account_ids,attr" validate:"required"`
	// AllRegions is optional.
	AllRegions terra.BoolValue `hcl:"all_regions,attr"`
	// Regions is optional.
	Regions terra.ListValue[terra.StringValue] `hcl:"regions,attr"`
}

type OrganizationAggregationSource struct {
	// AllRegions is optional.
	AllRegions terra.BoolValue `hcl:"all_regions,attr"`
	// Regions is optional.
	Regions terra.ListValue[terra.StringValue] `hcl:"regions,attr"`
	// RoleArn is required.
	RoleArn terra.StringValue `hcl:"role_arn,attr" validate:"required"`
}

type accountAggregationSourceAttributes struct {
	ref terra.Reference
}

func (aas accountAggregationSourceAttributes) InternalRef() (terra.Reference, error) {
	return aas.ref, nil
}

func (aas accountAggregationSourceAttributes) InternalWithRef(ref terra.Reference) accountAggregationSourceAttributes {
	return accountAggregationSourceAttributes{ref: ref}
}

func (aas accountAggregationSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aas.ref.InternalTokens()
}

func (aas accountAggregationSourceAttributes) AccountIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aas.ref.Append("account_ids"))
}

func (aas accountAggregationSourceAttributes) AllRegions() terra.BoolValue {
	return terra.ReferenceAsBool(aas.ref.Append("all_regions"))
}

func (aas accountAggregationSourceAttributes) Regions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aas.ref.Append("regions"))
}

type organizationAggregationSourceAttributes struct {
	ref terra.Reference
}

func (oas organizationAggregationSourceAttributes) InternalRef() (terra.Reference, error) {
	return oas.ref, nil
}

func (oas organizationAggregationSourceAttributes) InternalWithRef(ref terra.Reference) organizationAggregationSourceAttributes {
	return organizationAggregationSourceAttributes{ref: ref}
}

func (oas organizationAggregationSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oas.ref.InternalTokens()
}

func (oas organizationAggregationSourceAttributes) AllRegions() terra.BoolValue {
	return terra.ReferenceAsBool(oas.ref.Append("all_regions"))
}

func (oas organizationAggregationSourceAttributes) Regions() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oas.ref.Append("regions"))
}

func (oas organizationAggregationSourceAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(oas.ref.Append("role_arn"))
}

type AccountAggregationSourceState struct {
	AccountIds []string `json:"account_ids"`
	AllRegions bool     `json:"all_regions"`
	Regions    []string `json:"regions"`
}

type OrganizationAggregationSourceState struct {
	AllRegions bool     `json:"all_regions"`
	Regions    []string `json:"regions"`
	RoleArn    string   `json:"role_arn"`
}
