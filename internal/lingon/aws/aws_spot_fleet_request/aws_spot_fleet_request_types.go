// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_spot_fleet_request

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type LaunchSpecification struct {
	// Ami is required.
	Ami terra.StringValue `hcl:"ami,attr" validate:"required"`
	// AssociatePublicIpAddress is optional.
	AssociatePublicIpAddress terra.BoolValue `hcl:"associate_public_ip_address,attr"`
	// AvailabilityZone is optional.
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// EbsOptimized is optional.
	EbsOptimized terra.BoolValue `hcl:"ebs_optimized,attr"`
	// IamInstanceProfile is optional.
	IamInstanceProfile terra.StringValue `hcl:"iam_instance_profile,attr"`
	// IamInstanceProfileArn is optional.
	IamInstanceProfileArn terra.StringValue `hcl:"iam_instance_profile_arn,attr"`
	// InstanceType is required.
	InstanceType terra.StringValue `hcl:"instance_type,attr" validate:"required"`
	// KeyName is optional.
	KeyName terra.StringValue `hcl:"key_name,attr"`
	// Monitoring is optional.
	Monitoring terra.BoolValue `hcl:"monitoring,attr"`
	// PlacementGroup is optional.
	PlacementGroup terra.StringValue `hcl:"placement_group,attr"`
	// PlacementTenancy is optional.
	PlacementTenancy terra.StringValue `hcl:"placement_tenancy,attr"`
	// SpotPrice is optional.
	SpotPrice terra.StringValue `hcl:"spot_price,attr"`
	// SubnetId is optional.
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// UserData is optional.
	UserData terra.StringValue `hcl:"user_data,attr"`
	// VpcSecurityGroupIds is optional.
	VpcSecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"vpc_security_group_ids,attr"`
	// WeightedCapacity is optional.
	WeightedCapacity terra.StringValue `hcl:"weighted_capacity,attr"`
	// LaunchSpecificationEbsBlockDevice is min=0.
	EbsBlockDevice []LaunchSpecificationEbsBlockDevice `hcl:"ebs_block_device,block" validate:"min=0"`
	// LaunchSpecificationEphemeralBlockDevice is min=0.
	EphemeralBlockDevice []LaunchSpecificationEphemeralBlockDevice `hcl:"ephemeral_block_device,block" validate:"min=0"`
	// LaunchSpecificationRootBlockDevice is min=0.
	RootBlockDevice []LaunchSpecificationRootBlockDevice `hcl:"root_block_device,block" validate:"min=0"`
}

type LaunchSpecificationEbsBlockDevice struct {
	// DeleteOnTermination is optional.
	DeleteOnTermination terra.BoolValue `hcl:"delete_on_termination,attr"`
	// DeviceName is required.
	DeviceName terra.StringValue `hcl:"device_name,attr" validate:"required"`
	// Encrypted is optional.
	Encrypted terra.BoolValue `hcl:"encrypted,attr"`
	// Iops is optional.
	Iops terra.NumberValue `hcl:"iops,attr"`
	// KmsKeyId is optional.
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// SnapshotId is optional.
	SnapshotId terra.StringValue `hcl:"snapshot_id,attr"`
	// Throughput is optional.
	Throughput terra.NumberValue `hcl:"throughput,attr"`
	// VolumeSize is optional.
	VolumeSize terra.NumberValue `hcl:"volume_size,attr"`
	// VolumeType is optional.
	VolumeType terra.StringValue `hcl:"volume_type,attr"`
}

type LaunchSpecificationEphemeralBlockDevice struct {
	// DeviceName is required.
	DeviceName terra.StringValue `hcl:"device_name,attr" validate:"required"`
	// VirtualName is required.
	VirtualName terra.StringValue `hcl:"virtual_name,attr" validate:"required"`
}

type LaunchSpecificationRootBlockDevice struct {
	// DeleteOnTermination is optional.
	DeleteOnTermination terra.BoolValue `hcl:"delete_on_termination,attr"`
	// Encrypted is optional.
	Encrypted terra.BoolValue `hcl:"encrypted,attr"`
	// Iops is optional.
	Iops terra.NumberValue `hcl:"iops,attr"`
	// KmsKeyId is optional.
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// Throughput is optional.
	Throughput terra.NumberValue `hcl:"throughput,attr"`
	// VolumeSize is optional.
	VolumeSize terra.NumberValue `hcl:"volume_size,attr"`
	// VolumeType is optional.
	VolumeType terra.StringValue `hcl:"volume_type,attr"`
}

type LaunchTemplateConfig struct {
	// LaunchTemplateConfigLaunchTemplateSpecification is required.
	LaunchTemplateSpecification *LaunchTemplateConfigLaunchTemplateSpecification `hcl:"launch_template_specification,block" validate:"required"`
	// LaunchTemplateConfigOverrides is min=0.
	Overrides []LaunchTemplateConfigOverrides `hcl:"overrides,block" validate:"min=0"`
}

type LaunchTemplateConfigLaunchTemplateSpecification struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
}

type LaunchTemplateConfigOverrides struct {
	// AvailabilityZone is optional.
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// Priority is optional.
	Priority terra.NumberValue `hcl:"priority,attr"`
	// SpotPrice is optional.
	SpotPrice terra.StringValue `hcl:"spot_price,attr"`
	// SubnetId is optional.
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
	// WeightedCapacity is optional.
	WeightedCapacity terra.NumberValue `hcl:"weighted_capacity,attr"`
	// LaunchTemplateConfigOverridesInstanceRequirements is optional.
	InstanceRequirements *LaunchTemplateConfigOverridesInstanceRequirements `hcl:"instance_requirements,block"`
}

type LaunchTemplateConfigOverridesInstanceRequirements struct {
	// AcceleratorManufacturers is optional.
	AcceleratorManufacturers terra.SetValue[terra.StringValue] `hcl:"accelerator_manufacturers,attr"`
	// AcceleratorNames is optional.
	AcceleratorNames terra.SetValue[terra.StringValue] `hcl:"accelerator_names,attr"`
	// AcceleratorTypes is optional.
	AcceleratorTypes terra.SetValue[terra.StringValue] `hcl:"accelerator_types,attr"`
	// AllowedInstanceTypes is optional.
	AllowedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"allowed_instance_types,attr"`
	// BareMetal is optional.
	BareMetal terra.StringValue `hcl:"bare_metal,attr"`
	// BurstablePerformance is optional.
	BurstablePerformance terra.StringValue `hcl:"burstable_performance,attr"`
	// CpuManufacturers is optional.
	CpuManufacturers terra.SetValue[terra.StringValue] `hcl:"cpu_manufacturers,attr"`
	// ExcludedInstanceTypes is optional.
	ExcludedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"excluded_instance_types,attr"`
	// InstanceGenerations is optional.
	InstanceGenerations terra.SetValue[terra.StringValue] `hcl:"instance_generations,attr"`
	// LocalStorage is optional.
	LocalStorage terra.StringValue `hcl:"local_storage,attr"`
	// LocalStorageTypes is optional.
	LocalStorageTypes terra.SetValue[terra.StringValue] `hcl:"local_storage_types,attr"`
	// OnDemandMaxPricePercentageOverLowestPrice is optional.
	OnDemandMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"on_demand_max_price_percentage_over_lowest_price,attr"`
	// RequireHibernateSupport is optional.
	RequireHibernateSupport terra.BoolValue `hcl:"require_hibernate_support,attr"`
	// SpotMaxPricePercentageOverLowestPrice is optional.
	SpotMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"spot_max_price_percentage_over_lowest_price,attr"`
	// LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCount is optional.
	AcceleratorCount *LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCount `hcl:"accelerator_count,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMib is optional.
	AcceleratorTotalMemoryMib *LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMib `hcl:"accelerator_total_memory_mib,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbps is optional.
	BaselineEbsBandwidthMbps *LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbps `hcl:"baseline_ebs_bandwidth_mbps,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpu is optional.
	MemoryGibPerVcpu *LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpu `hcl:"memory_gib_per_vcpu,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsMemoryMib is optional.
	MemoryMib *LaunchTemplateConfigOverridesInstanceRequirementsMemoryMib `hcl:"memory_mib,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbps is optional.
	NetworkBandwidthGbps *LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbps `hcl:"network_bandwidth_gbps,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCount is optional.
	NetworkInterfaceCount *LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCount `hcl:"network_interface_count,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGb is optional.
	TotalLocalStorageGb *LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGb `hcl:"total_local_storage_gb,block"`
	// LaunchTemplateConfigOverridesInstanceRequirementsVcpuCount is optional.
	VcpuCount *LaunchTemplateConfigOverridesInstanceRequirementsVcpuCount `hcl:"vcpu_count,block"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCount struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMib struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbps struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpu struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryMib struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbps struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCount struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGb struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsVcpuCount struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type SpotMaintenanceStrategies struct {
	// SpotMaintenanceStrategiesCapacityRebalance is optional.
	CapacityRebalance *SpotMaintenanceStrategiesCapacityRebalance `hcl:"capacity_rebalance,block"`
}

type SpotMaintenanceStrategiesCapacityRebalance struct {
	// ReplacementStrategy is optional.
	ReplacementStrategy terra.StringValue `hcl:"replacement_strategy,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type launchSpecificationAttributes struct {
	ref terra.Reference
}

func (ls launchSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return ls.ref, nil
}

func (ls launchSpecificationAttributes) InternalWithRef(ref terra.Reference) launchSpecificationAttributes {
	return launchSpecificationAttributes{ref: ref}
}

func (ls launchSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ls.ref.InternalTokens()
}

func (ls launchSpecificationAttributes) Ami() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("ami"))
}

func (ls launchSpecificationAttributes) AssociatePublicIpAddress() terra.BoolValue {
	return terra.ReferenceAsBool(ls.ref.Append("associate_public_ip_address"))
}

func (ls launchSpecificationAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("availability_zone"))
}

func (ls launchSpecificationAttributes) EbsOptimized() terra.BoolValue {
	return terra.ReferenceAsBool(ls.ref.Append("ebs_optimized"))
}

func (ls launchSpecificationAttributes) IamInstanceProfile() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("iam_instance_profile"))
}

func (ls launchSpecificationAttributes) IamInstanceProfileArn() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("iam_instance_profile_arn"))
}

func (ls launchSpecificationAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("instance_type"))
}

func (ls launchSpecificationAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("key_name"))
}

func (ls launchSpecificationAttributes) Monitoring() terra.BoolValue {
	return terra.ReferenceAsBool(ls.ref.Append("monitoring"))
}

func (ls launchSpecificationAttributes) PlacementGroup() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("placement_group"))
}

func (ls launchSpecificationAttributes) PlacementTenancy() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("placement_tenancy"))
}

func (ls launchSpecificationAttributes) SpotPrice() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("spot_price"))
}

func (ls launchSpecificationAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("subnet_id"))
}

func (ls launchSpecificationAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ls.ref.Append("tags"))
}

func (ls launchSpecificationAttributes) UserData() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("user_data"))
}

func (ls launchSpecificationAttributes) VpcSecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ls.ref.Append("vpc_security_group_ids"))
}

func (ls launchSpecificationAttributes) WeightedCapacity() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("weighted_capacity"))
}

func (ls launchSpecificationAttributes) EbsBlockDevice() terra.SetValue[launchSpecificationEbsBlockDeviceAttributes] {
	return terra.ReferenceAsSet[launchSpecificationEbsBlockDeviceAttributes](ls.ref.Append("ebs_block_device"))
}

func (ls launchSpecificationAttributes) EphemeralBlockDevice() terra.SetValue[launchSpecificationEphemeralBlockDeviceAttributes] {
	return terra.ReferenceAsSet[launchSpecificationEphemeralBlockDeviceAttributes](ls.ref.Append("ephemeral_block_device"))
}

func (ls launchSpecificationAttributes) RootBlockDevice() terra.SetValue[launchSpecificationRootBlockDeviceAttributes] {
	return terra.ReferenceAsSet[launchSpecificationRootBlockDeviceAttributes](ls.ref.Append("root_block_device"))
}

type launchSpecificationEbsBlockDeviceAttributes struct {
	ref terra.Reference
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) InternalRef() (terra.Reference, error) {
	return ebd.ref, nil
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) InternalWithRef(ref terra.Reference) launchSpecificationEbsBlockDeviceAttributes {
	return launchSpecificationEbsBlockDeviceAttributes{ref: ref}
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ebd.ref.InternalTokens()
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) DeleteOnTermination() terra.BoolValue {
	return terra.ReferenceAsBool(ebd.ref.Append("delete_on_termination"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("device_name"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(ebd.ref.Append("encrypted"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(ebd.ref.Append("iops"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("kms_key_id"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("snapshot_id"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(ebd.ref.Append("throughput"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(ebd.ref.Append("volume_size"))
}

func (ebd launchSpecificationEbsBlockDeviceAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("volume_type"))
}

type launchSpecificationEphemeralBlockDeviceAttributes struct {
	ref terra.Reference
}

func (ebd launchSpecificationEphemeralBlockDeviceAttributes) InternalRef() (terra.Reference, error) {
	return ebd.ref, nil
}

func (ebd launchSpecificationEphemeralBlockDeviceAttributes) InternalWithRef(ref terra.Reference) launchSpecificationEphemeralBlockDeviceAttributes {
	return launchSpecificationEphemeralBlockDeviceAttributes{ref: ref}
}

func (ebd launchSpecificationEphemeralBlockDeviceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ebd.ref.InternalTokens()
}

func (ebd launchSpecificationEphemeralBlockDeviceAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("device_name"))
}

func (ebd launchSpecificationEphemeralBlockDeviceAttributes) VirtualName() terra.StringValue {
	return terra.ReferenceAsString(ebd.ref.Append("virtual_name"))
}

type launchSpecificationRootBlockDeviceAttributes struct {
	ref terra.Reference
}

func (rbd launchSpecificationRootBlockDeviceAttributes) InternalRef() (terra.Reference, error) {
	return rbd.ref, nil
}

func (rbd launchSpecificationRootBlockDeviceAttributes) InternalWithRef(ref terra.Reference) launchSpecificationRootBlockDeviceAttributes {
	return launchSpecificationRootBlockDeviceAttributes{ref: ref}
}

func (rbd launchSpecificationRootBlockDeviceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rbd.ref.InternalTokens()
}

func (rbd launchSpecificationRootBlockDeviceAttributes) DeleteOnTermination() terra.BoolValue {
	return terra.ReferenceAsBool(rbd.ref.Append("delete_on_termination"))
}

func (rbd launchSpecificationRootBlockDeviceAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(rbd.ref.Append("encrypted"))
}

func (rbd launchSpecificationRootBlockDeviceAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(rbd.ref.Append("iops"))
}

func (rbd launchSpecificationRootBlockDeviceAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(rbd.ref.Append("kms_key_id"))
}

func (rbd launchSpecificationRootBlockDeviceAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(rbd.ref.Append("throughput"))
}

func (rbd launchSpecificationRootBlockDeviceAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(rbd.ref.Append("volume_size"))
}

func (rbd launchSpecificationRootBlockDeviceAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(rbd.ref.Append("volume_type"))
}

type launchTemplateConfigAttributes struct {
	ref terra.Reference
}

func (ltc launchTemplateConfigAttributes) InternalRef() (terra.Reference, error) {
	return ltc.ref, nil
}

func (ltc launchTemplateConfigAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigAttributes {
	return launchTemplateConfigAttributes{ref: ref}
}

func (ltc launchTemplateConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ltc.ref.InternalTokens()
}

func (ltc launchTemplateConfigAttributes) LaunchTemplateSpecification() terra.ListValue[launchTemplateConfigLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigLaunchTemplateSpecificationAttributes](ltc.ref.Append("launch_template_specification"))
}

func (ltc launchTemplateConfigAttributes) Overrides() terra.SetValue[launchTemplateConfigOverridesAttributes] {
	return terra.ReferenceAsSet[launchTemplateConfigOverridesAttributes](ltc.ref.Append("overrides"))
}

type launchTemplateConfigLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigLaunchTemplateSpecificationAttributes {
	return launchTemplateConfigLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("id"))
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("name"))
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type launchTemplateConfigOverridesAttributes struct {
	ref terra.Reference
}

func (o launchTemplateConfigOverridesAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o launchTemplateConfigOverridesAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesAttributes {
	return launchTemplateConfigOverridesAttributes{ref: ref}
}

func (o launchTemplateConfigOverridesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o launchTemplateConfigOverridesAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("availability_zone"))
}

func (o launchTemplateConfigOverridesAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("instance_type"))
}

func (o launchTemplateConfigOverridesAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("priority"))
}

func (o launchTemplateConfigOverridesAttributes) SpotPrice() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("spot_price"))
}

func (o launchTemplateConfigOverridesAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("subnet_id"))
}

func (o launchTemplateConfigOverridesAttributes) WeightedCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("weighted_capacity"))
}

func (o launchTemplateConfigOverridesAttributes) InstanceRequirements() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsAttributes](o.ref.Append("instance_requirements"))
}

type launchTemplateConfigOverridesInstanceRequirementsAttributes struct {
	ref terra.Reference
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsAttributes{ref: ref}
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_manufacturers"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_names"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_types"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) AllowedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("allowed_instance_types"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) BareMetal() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("bare_metal"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) BurstablePerformance() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("burstable_performance"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) CpuManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("cpu_manufacturers"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) ExcludedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("excluded_instance_types"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) InstanceGenerations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("instance_generations"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) LocalStorage() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("local_storage"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) LocalStorageTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("local_storage_types"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) OnDemandMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("on_demand_max_price_percentage_over_lowest_price"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) RequireHibernateSupport() terra.BoolValue {
	return terra.ReferenceAsBool(ir.ref.Append("require_hibernate_support"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) SpotMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("spot_max_price_percentage_over_lowest_price"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorCount() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes](ir.ref.Append("accelerator_count"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) AcceleratorTotalMemoryMib() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes](ir.ref.Append("accelerator_total_memory_mib"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) BaselineEbsBandwidthMbps() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes](ir.ref.Append("baseline_ebs_bandwidth_mbps"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) MemoryGibPerVcpu() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes](ir.ref.Append("memory_gib_per_vcpu"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) MemoryMib() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes](ir.ref.Append("memory_mib"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) NetworkBandwidthGbps() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes](ir.ref.Append("network_bandwidth_gbps"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) NetworkInterfaceCount() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes](ir.ref.Append("network_interface_count"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) TotalLocalStorageGb() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes](ir.ref.Append("total_local_storage_gb"))
}

func (ir launchTemplateConfigOverridesInstanceRequirementsAttributes) VcpuCount() terra.ListValue[launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes](ir.ref.Append("vcpu_count"))
}

type launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes struct {
	ref terra.Reference
}

func (ac launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes{ref: ref}
}

func (ac launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("max"))
}

func (ac launchTemplateConfigOverridesInstanceRequirementsAcceleratorCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes struct {
	ref terra.Reference
}

func (atmm launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return atmm.ref, nil
}

func (atmm launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes{ref: ref}
}

func (atmm launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atmm.ref.InternalTokens()
}

func (atmm launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("max"))
}

func (atmm launchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes struct {
	ref terra.Reference
}

func (bebm launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalRef() (terra.Reference, error) {
	return bebm.ref, nil
}

func (bebm launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes{ref: ref}
}

func (bebm launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bebm.ref.InternalTokens()
}

func (bebm launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("max"))
}

func (bebm launchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes struct {
	ref terra.Reference
}

func (mgpv launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) InternalRef() (terra.Reference, error) {
	return mgpv.ref, nil
}

func (mgpv launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes{ref: ref}
}

func (mgpv launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgpv.ref.InternalTokens()
}

func (mgpv launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("max"))
}

func (mgpv launchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes struct {
	ref terra.Reference
}

func (mm launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return mm.ref, nil
}

func (mm launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes{ref: ref}
}

func (mm launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mm.ref.InternalTokens()
}

func (mm launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("max"))
}

func (mm launchTemplateConfigOverridesInstanceRequirementsMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes struct {
	ref terra.Reference
}

func (nbg launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalRef() (terra.Reference, error) {
	return nbg.ref, nil
}

func (nbg launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes{ref: ref}
}

func (nbg launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nbg.ref.InternalTokens()
}

func (nbg launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("max"))
}

func (nbg launchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes struct {
	ref terra.Reference
}

func (nic launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) InternalRef() (terra.Reference, error) {
	return nic.ref, nil
}

func (nic launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes{ref: ref}
}

func (nic launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nic.ref.InternalTokens()
}

func (nic launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("max"))
}

func (nic launchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes struct {
	ref terra.Reference
}

func (tlsg launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) InternalRef() (terra.Reference, error) {
	return tlsg.ref, nil
}

func (tlsg launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes{ref: ref}
}

func (tlsg launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tlsg.ref.InternalTokens()
}

func (tlsg launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("max"))
}

func (tlsg launchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("min"))
}

type launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes struct {
	ref terra.Reference
}

func (vc launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes {
	return launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes{ref: ref}
}

func (vc launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("max"))
}

func (vc launchTemplateConfigOverridesInstanceRequirementsVcpuCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("min"))
}

type spotMaintenanceStrategiesAttributes struct {
	ref terra.Reference
}

func (sms spotMaintenanceStrategiesAttributes) InternalRef() (terra.Reference, error) {
	return sms.ref, nil
}

func (sms spotMaintenanceStrategiesAttributes) InternalWithRef(ref terra.Reference) spotMaintenanceStrategiesAttributes {
	return spotMaintenanceStrategiesAttributes{ref: ref}
}

func (sms spotMaintenanceStrategiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sms.ref.InternalTokens()
}

func (sms spotMaintenanceStrategiesAttributes) CapacityRebalance() terra.ListValue[spotMaintenanceStrategiesCapacityRebalanceAttributes] {
	return terra.ReferenceAsList[spotMaintenanceStrategiesCapacityRebalanceAttributes](sms.ref.Append("capacity_rebalance"))
}

type spotMaintenanceStrategiesCapacityRebalanceAttributes struct {
	ref terra.Reference
}

func (cr spotMaintenanceStrategiesCapacityRebalanceAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr spotMaintenanceStrategiesCapacityRebalanceAttributes) InternalWithRef(ref terra.Reference) spotMaintenanceStrategiesCapacityRebalanceAttributes {
	return spotMaintenanceStrategiesCapacityRebalanceAttributes{ref: ref}
}

func (cr spotMaintenanceStrategiesCapacityRebalanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr spotMaintenanceStrategiesCapacityRebalanceAttributes) ReplacementStrategy() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("replacement_strategy"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type LaunchSpecificationState struct {
	Ami                      string                                         `json:"ami"`
	AssociatePublicIpAddress bool                                           `json:"associate_public_ip_address"`
	AvailabilityZone         string                                         `json:"availability_zone"`
	EbsOptimized             bool                                           `json:"ebs_optimized"`
	IamInstanceProfile       string                                         `json:"iam_instance_profile"`
	IamInstanceProfileArn    string                                         `json:"iam_instance_profile_arn"`
	InstanceType             string                                         `json:"instance_type"`
	KeyName                  string                                         `json:"key_name"`
	Monitoring               bool                                           `json:"monitoring"`
	PlacementGroup           string                                         `json:"placement_group"`
	PlacementTenancy         string                                         `json:"placement_tenancy"`
	SpotPrice                string                                         `json:"spot_price"`
	SubnetId                 string                                         `json:"subnet_id"`
	Tags                     map[string]string                              `json:"tags"`
	UserData                 string                                         `json:"user_data"`
	VpcSecurityGroupIds      []string                                       `json:"vpc_security_group_ids"`
	WeightedCapacity         string                                         `json:"weighted_capacity"`
	EbsBlockDevice           []LaunchSpecificationEbsBlockDeviceState       `json:"ebs_block_device"`
	EphemeralBlockDevice     []LaunchSpecificationEphemeralBlockDeviceState `json:"ephemeral_block_device"`
	RootBlockDevice          []LaunchSpecificationRootBlockDeviceState      `json:"root_block_device"`
}

type LaunchSpecificationEbsBlockDeviceState struct {
	DeleteOnTermination bool    `json:"delete_on_termination"`
	DeviceName          string  `json:"device_name"`
	Encrypted           bool    `json:"encrypted"`
	Iops                float64 `json:"iops"`
	KmsKeyId            string  `json:"kms_key_id"`
	SnapshotId          string  `json:"snapshot_id"`
	Throughput          float64 `json:"throughput"`
	VolumeSize          float64 `json:"volume_size"`
	VolumeType          string  `json:"volume_type"`
}

type LaunchSpecificationEphemeralBlockDeviceState struct {
	DeviceName  string `json:"device_name"`
	VirtualName string `json:"virtual_name"`
}

type LaunchSpecificationRootBlockDeviceState struct {
	DeleteOnTermination bool    `json:"delete_on_termination"`
	Encrypted           bool    `json:"encrypted"`
	Iops                float64 `json:"iops"`
	KmsKeyId            string  `json:"kms_key_id"`
	Throughput          float64 `json:"throughput"`
	VolumeSize          float64 `json:"volume_size"`
	VolumeType          string  `json:"volume_type"`
}

type LaunchTemplateConfigState struct {
	LaunchTemplateSpecification []LaunchTemplateConfigLaunchTemplateSpecificationState `json:"launch_template_specification"`
	Overrides                   []LaunchTemplateConfigOverridesState                   `json:"overrides"`
}

type LaunchTemplateConfigLaunchTemplateSpecificationState struct {
	Id      string `json:"id"`
	Name    string `json:"name"`
	Version string `json:"version"`
}

type LaunchTemplateConfigOverridesState struct {
	AvailabilityZone     string                                                   `json:"availability_zone"`
	InstanceType         string                                                   `json:"instance_type"`
	Priority             float64                                                  `json:"priority"`
	SpotPrice            string                                                   `json:"spot_price"`
	SubnetId             string                                                   `json:"subnet_id"`
	WeightedCapacity     float64                                                  `json:"weighted_capacity"`
	InstanceRequirements []LaunchTemplateConfigOverridesInstanceRequirementsState `json:"instance_requirements"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsState struct {
	AcceleratorManufacturers                  []string                                                                          `json:"accelerator_manufacturers"`
	AcceleratorNames                          []string                                                                          `json:"accelerator_names"`
	AcceleratorTypes                          []string                                                                          `json:"accelerator_types"`
	AllowedInstanceTypes                      []string                                                                          `json:"allowed_instance_types"`
	BareMetal                                 string                                                                            `json:"bare_metal"`
	BurstablePerformance                      string                                                                            `json:"burstable_performance"`
	CpuManufacturers                          []string                                                                          `json:"cpu_manufacturers"`
	ExcludedInstanceTypes                     []string                                                                          `json:"excluded_instance_types"`
	InstanceGenerations                       []string                                                                          `json:"instance_generations"`
	LocalStorage                              string                                                                            `json:"local_storage"`
	LocalStorageTypes                         []string                                                                          `json:"local_storage_types"`
	OnDemandMaxPricePercentageOverLowestPrice float64                                                                           `json:"on_demand_max_price_percentage_over_lowest_price"`
	RequireHibernateSupport                   bool                                                                              `json:"require_hibernate_support"`
	SpotMaxPricePercentageOverLowestPrice     float64                                                                           `json:"spot_max_price_percentage_over_lowest_price"`
	AcceleratorCount                          []LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountState          `json:"accelerator_count"`
	AcceleratorTotalMemoryMib                 []LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibState `json:"accelerator_total_memory_mib"`
	BaselineEbsBandwidthMbps                  []LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsState  `json:"baseline_ebs_bandwidth_mbps"`
	MemoryGibPerVcpu                          []LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuState          `json:"memory_gib_per_vcpu"`
	MemoryMib                                 []LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibState                 `json:"memory_mib"`
	NetworkBandwidthGbps                      []LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsState      `json:"network_bandwidth_gbps"`
	NetworkInterfaceCount                     []LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountState     `json:"network_interface_count"`
	TotalLocalStorageGb                       []LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbState       `json:"total_local_storage_gb"`
	VcpuCount                                 []LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountState                 `json:"vcpu_count"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsAcceleratorTotalMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsBaselineEbsBandwidthMbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryGibPerVcpuState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkBandwidthGbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsNetworkInterfaceCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsTotalLocalStorageGbState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverridesInstanceRequirementsVcpuCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type SpotMaintenanceStrategiesState struct {
	CapacityRebalance []SpotMaintenanceStrategiesCapacityRebalanceState `json:"capacity_rebalance"`
}

type SpotMaintenanceStrategiesCapacityRebalanceState struct {
	ReplacementStrategy string `json:"replacement_strategy"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
