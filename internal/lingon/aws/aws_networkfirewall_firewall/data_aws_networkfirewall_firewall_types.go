// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkfirewall_firewall

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataencryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec DataencryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec DataencryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) DataencryptionConfigurationAttributes {
	return DataencryptionConfigurationAttributes{ref: ref}
}

func (ec DataencryptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec DataencryptionConfigurationAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

func (ec DataencryptionConfigurationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("type"))
}

type DatafirewallStatusAttributes struct {
	ref terra.Reference
}

func (fs DatafirewallStatusAttributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs DatafirewallStatusAttributes) InternalWithRef(ref terra.Reference) DatafirewallStatusAttributes {
	return DatafirewallStatusAttributes{ref: ref}
}

func (fs DatafirewallStatusAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs DatafirewallStatusAttributes) ConfigurationSyncStateSummary() terra.StringValue {
	return terra.ReferenceAsString(fs.ref.Append("configuration_sync_state_summary"))
}

func (fs DatafirewallStatusAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(fs.ref.Append("status"))
}

func (fs DatafirewallStatusAttributes) CapacityUsageSummary() terra.SetValue[DatafirewallStatusCapacityUsageSummaryAttributes] {
	return terra.ReferenceAsSet[DatafirewallStatusCapacityUsageSummaryAttributes](fs.ref.Append("capacity_usage_summary"))
}

func (fs DatafirewallStatusAttributes) SyncStates() terra.SetValue[DatafirewallStatusSyncStatesAttributes] {
	return terra.ReferenceAsSet[DatafirewallStatusSyncStatesAttributes](fs.ref.Append("sync_states"))
}

type DatafirewallStatusCapacityUsageSummaryAttributes struct {
	ref terra.Reference
}

func (cus DatafirewallStatusCapacityUsageSummaryAttributes) InternalRef() (terra.Reference, error) {
	return cus.ref, nil
}

func (cus DatafirewallStatusCapacityUsageSummaryAttributes) InternalWithRef(ref terra.Reference) DatafirewallStatusCapacityUsageSummaryAttributes {
	return DatafirewallStatusCapacityUsageSummaryAttributes{ref: ref}
}

func (cus DatafirewallStatusCapacityUsageSummaryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cus.ref.InternalTokens()
}

func (cus DatafirewallStatusCapacityUsageSummaryAttributes) Cidrs() terra.SetValue[DatafirewallStatusCapacityUsageSummaryCidrsAttributes] {
	return terra.ReferenceAsSet[DatafirewallStatusCapacityUsageSummaryCidrsAttributes](cus.ref.Append("cidrs"))
}

type DatafirewallStatusCapacityUsageSummaryCidrsAttributes struct {
	ref terra.Reference
}

func (c DatafirewallStatusCapacityUsageSummaryCidrsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DatafirewallStatusCapacityUsageSummaryCidrsAttributes) InternalWithRef(ref terra.Reference) DatafirewallStatusCapacityUsageSummaryCidrsAttributes {
	return DatafirewallStatusCapacityUsageSummaryCidrsAttributes{ref: ref}
}

func (c DatafirewallStatusCapacityUsageSummaryCidrsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DatafirewallStatusCapacityUsageSummaryCidrsAttributes) AvailableCidrCount() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("available_cidr_count"))
}

func (c DatafirewallStatusCapacityUsageSummaryCidrsAttributes) UtilizedCidrCount() terra.NumberValue {
	return terra.ReferenceAsNumber(c.ref.Append("utilized_cidr_count"))
}

func (c DatafirewallStatusCapacityUsageSummaryCidrsAttributes) IpSetReferences() terra.SetValue[DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes] {
	return terra.ReferenceAsSet[DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes](c.ref.Append("ip_set_references"))
}

type DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes struct {
	ref terra.Reference
}

func (isr DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) InternalRef() (terra.Reference, error) {
	return isr.ref, nil
}

func (isr DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) InternalWithRef(ref terra.Reference) DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes {
	return DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes{ref: ref}
}

func (isr DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isr.ref.InternalTokens()
}

func (isr DatafirewallStatusCapacityUsageSummaryCidrsIpSetReferencesAttributes) ResolvedCidrCount() terra.NumberValue {
	return terra.ReferenceAsNumber(isr.ref.Append("resolved_cidr_count"))
}

type DatafirewallStatusSyncStatesAttributes struct {
	ref terra.Reference
}

func (ss DatafirewallStatusSyncStatesAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss DatafirewallStatusSyncStatesAttributes) InternalWithRef(ref terra.Reference) DatafirewallStatusSyncStatesAttributes {
	return DatafirewallStatusSyncStatesAttributes{ref: ref}
}

func (ss DatafirewallStatusSyncStatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss DatafirewallStatusSyncStatesAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("availability_zone"))
}

func (ss DatafirewallStatusSyncStatesAttributes) Attachment() terra.ListValue[DatafirewallStatusSyncStatesAttachmentAttributes] {
	return terra.ReferenceAsList[DatafirewallStatusSyncStatesAttachmentAttributes](ss.ref.Append("attachment"))
}

type DatafirewallStatusSyncStatesAttachmentAttributes struct {
	ref terra.Reference
}

func (a DatafirewallStatusSyncStatesAttachmentAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a DatafirewallStatusSyncStatesAttachmentAttributes) InternalWithRef(ref terra.Reference) DatafirewallStatusSyncStatesAttachmentAttributes {
	return DatafirewallStatusSyncStatesAttachmentAttributes{ref: ref}
}

func (a DatafirewallStatusSyncStatesAttachmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a DatafirewallStatusSyncStatesAttachmentAttributes) EndpointId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("endpoint_id"))
}

func (a DatafirewallStatusSyncStatesAttachmentAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("status"))
}

func (a DatafirewallStatusSyncStatesAttachmentAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("subnet_id"))
}

type DatasubnetMappingAttributes struct {
	ref terra.Reference
}

func (sm DatasubnetMappingAttributes) InternalRef() (terra.Reference, error) {
	return sm.ref, nil
}

func (sm DatasubnetMappingAttributes) InternalWithRef(ref terra.Reference) DatasubnetMappingAttributes {
	return DatasubnetMappingAttributes{ref: ref}
}

func (sm DatasubnetMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sm.ref.InternalTokens()
}

func (sm DatasubnetMappingAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(sm.ref.Append("subnet_id"))
}

type DataEncryptionConfigurationState struct {
	KeyId string `json:"key_id"`
	Type  string `json:"type"`
}

type DataFirewallStatusState struct {
	ConfigurationSyncStateSummary string                                        `json:"configuration_sync_state_summary"`
	Status                        string                                        `json:"status"`
	CapacityUsageSummary          []DataFirewallStatusCapacityUsageSummaryState `json:"capacity_usage_summary"`
	SyncStates                    []DataFirewallStatusSyncStatesState           `json:"sync_states"`
}

type DataFirewallStatusCapacityUsageSummaryState struct {
	Cidrs []DataFirewallStatusCapacityUsageSummaryCidrsState `json:"cidrs"`
}

type DataFirewallStatusCapacityUsageSummaryCidrsState struct {
	AvailableCidrCount float64                                                           `json:"available_cidr_count"`
	UtilizedCidrCount  float64                                                           `json:"utilized_cidr_count"`
	IpSetReferences    []DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesState `json:"ip_set_references"`
}

type DataFirewallStatusCapacityUsageSummaryCidrsIpSetReferencesState struct {
	ResolvedCidrCount float64 `json:"resolved_cidr_count"`
}

type DataFirewallStatusSyncStatesState struct {
	AvailabilityZone string                                        `json:"availability_zone"`
	Attachment       []DataFirewallStatusSyncStatesAttachmentState `json:"attachment"`
}

type DataFirewallStatusSyncStatesAttachmentState struct {
	EndpointId string `json:"endpoint_id"`
	Status     string `json:"status"`
	SubnetId   string `json:"subnet_id"`
}

type DataSubnetMappingState struct {
	SubnetId string `json:"subnet_id"`
}
