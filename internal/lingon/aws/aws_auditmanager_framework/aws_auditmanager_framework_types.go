// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_auditmanager_framework

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ControlSets struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ControlSetsControls is min=0.
	Controls []ControlSetsControls `hcl:"controls,block" validate:"min=0"`
}

type ControlSetsControls struct {
	// Id is required.
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
}

type controlSetsAttributes struct {
	ref terra.Reference
}

func (cs controlSetsAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs controlSetsAttributes) InternalWithRef(ref terra.Reference) controlSetsAttributes {
	return controlSetsAttributes{ref: ref}
}

func (cs controlSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs controlSetsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("id"))
}

func (cs controlSetsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("name"))
}

func (cs controlSetsAttributes) Controls() terra.SetValue[controlSetsControlsAttributes] {
	return terra.ReferenceAsSet[controlSetsControlsAttributes](cs.ref.Append("controls"))
}

type controlSetsControlsAttributes struct {
	ref terra.Reference
}

func (c controlSetsControlsAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c controlSetsControlsAttributes) InternalWithRef(ref terra.Reference) controlSetsControlsAttributes {
	return controlSetsControlsAttributes{ref: ref}
}

func (c controlSetsControlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c controlSetsControlsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

type ControlSetsState struct {
	Id       string                     `json:"id"`
	Name     string                     `json:"name"`
	Controls []ControlSetsControlsState `json:"controls"`
}

type ControlSetsControlsState struct {
	Id string `json:"id"`
}
