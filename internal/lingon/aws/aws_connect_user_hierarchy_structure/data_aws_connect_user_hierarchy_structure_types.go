// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_user_hierarchy_structure

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatahierarchyStructureAttributes struct {
	ref terra.Reference
}

func (hs DatahierarchyStructureAttributes) InternalRef() (terra.Reference, error) {
	return hs.ref, nil
}

func (hs DatahierarchyStructureAttributes) InternalWithRef(ref terra.Reference) DatahierarchyStructureAttributes {
	return DatahierarchyStructureAttributes{ref: ref}
}

func (hs DatahierarchyStructureAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hs.ref.InternalTokens()
}

func (hs DatahierarchyStructureAttributes) LevelFive() terra.ListValue[DatahierarchyStructureLevelFiveAttributes] {
	return terra.ReferenceAsList[DatahierarchyStructureLevelFiveAttributes](hs.ref.Append("level_five"))
}

func (hs DatahierarchyStructureAttributes) LevelFour() terra.ListValue[DatahierarchyStructureLevelFourAttributes] {
	return terra.ReferenceAsList[DatahierarchyStructureLevelFourAttributes](hs.ref.Append("level_four"))
}

func (hs DatahierarchyStructureAttributes) LevelOne() terra.ListValue[DatahierarchyStructureLevelOneAttributes] {
	return terra.ReferenceAsList[DatahierarchyStructureLevelOneAttributes](hs.ref.Append("level_one"))
}

func (hs DatahierarchyStructureAttributes) LevelThree() terra.ListValue[DatahierarchyStructureLevelThreeAttributes] {
	return terra.ReferenceAsList[DatahierarchyStructureLevelThreeAttributes](hs.ref.Append("level_three"))
}

func (hs DatahierarchyStructureAttributes) LevelTwo() terra.ListValue[DatahierarchyStructureLevelTwoAttributes] {
	return terra.ReferenceAsList[DatahierarchyStructureLevelTwoAttributes](hs.ref.Append("level_two"))
}

type DatahierarchyStructureLevelFiveAttributes struct {
	ref terra.Reference
}

func (lf DatahierarchyStructureLevelFiveAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf DatahierarchyStructureLevelFiveAttributes) InternalWithRef(ref terra.Reference) DatahierarchyStructureLevelFiveAttributes {
	return DatahierarchyStructureLevelFiveAttributes{ref: ref}
}

func (lf DatahierarchyStructureLevelFiveAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf DatahierarchyStructureLevelFiveAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf DatahierarchyStructureLevelFiveAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf DatahierarchyStructureLevelFiveAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type DatahierarchyStructureLevelFourAttributes struct {
	ref terra.Reference
}

func (lf DatahierarchyStructureLevelFourAttributes) InternalRef() (terra.Reference, error) {
	return lf.ref, nil
}

func (lf DatahierarchyStructureLevelFourAttributes) InternalWithRef(ref terra.Reference) DatahierarchyStructureLevelFourAttributes {
	return DatahierarchyStructureLevelFourAttributes{ref: ref}
}

func (lf DatahierarchyStructureLevelFourAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lf.ref.InternalTokens()
}

func (lf DatahierarchyStructureLevelFourAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("arn"))
}

func (lf DatahierarchyStructureLevelFourAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("id"))
}

func (lf DatahierarchyStructureLevelFourAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lf.ref.Append("name"))
}

type DatahierarchyStructureLevelOneAttributes struct {
	ref terra.Reference
}

func (lo DatahierarchyStructureLevelOneAttributes) InternalRef() (terra.Reference, error) {
	return lo.ref, nil
}

func (lo DatahierarchyStructureLevelOneAttributes) InternalWithRef(ref terra.Reference) DatahierarchyStructureLevelOneAttributes {
	return DatahierarchyStructureLevelOneAttributes{ref: ref}
}

func (lo DatahierarchyStructureLevelOneAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lo.ref.InternalTokens()
}

func (lo DatahierarchyStructureLevelOneAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("arn"))
}

func (lo DatahierarchyStructureLevelOneAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("id"))
}

func (lo DatahierarchyStructureLevelOneAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lo.ref.Append("name"))
}

type DatahierarchyStructureLevelThreeAttributes struct {
	ref terra.Reference
}

func (lt DatahierarchyStructureLevelThreeAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt DatahierarchyStructureLevelThreeAttributes) InternalWithRef(ref terra.Reference) DatahierarchyStructureLevelThreeAttributes {
	return DatahierarchyStructureLevelThreeAttributes{ref: ref}
}

func (lt DatahierarchyStructureLevelThreeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt DatahierarchyStructureLevelThreeAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt DatahierarchyStructureLevelThreeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt DatahierarchyStructureLevelThreeAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type DatahierarchyStructureLevelTwoAttributes struct {
	ref terra.Reference
}

func (lt DatahierarchyStructureLevelTwoAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt DatahierarchyStructureLevelTwoAttributes) InternalWithRef(ref terra.Reference) DatahierarchyStructureLevelTwoAttributes {
	return DatahierarchyStructureLevelTwoAttributes{ref: ref}
}

func (lt DatahierarchyStructureLevelTwoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt DatahierarchyStructureLevelTwoAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("arn"))
}

func (lt DatahierarchyStructureLevelTwoAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt DatahierarchyStructureLevelTwoAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

type DataHierarchyStructureState struct {
	LevelFive  []DataHierarchyStructureLevelFiveState  `json:"level_five"`
	LevelFour  []DataHierarchyStructureLevelFourState  `json:"level_four"`
	LevelOne   []DataHierarchyStructureLevelOneState   `json:"level_one"`
	LevelThree []DataHierarchyStructureLevelThreeState `json:"level_three"`
	LevelTwo   []DataHierarchyStructureLevelTwoState   `json:"level_two"`
}

type DataHierarchyStructureLevelFiveState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelFourState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelOneState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelThreeState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type DataHierarchyStructureLevelTwoState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}
