// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpc_endpoint

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DnsOptions struct {
	// DnsRecordIpType is optional.
	DnsRecordIpType terra.StringValue `hcl:"dns_record_ip_type,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type dnsEntryAttributes struct {
	ref terra.Reference
}

func (de dnsEntryAttributes) InternalRef() (terra.Reference, error) {
	return de.ref, nil
}

func (de dnsEntryAttributes) InternalWithRef(ref terra.Reference) dnsEntryAttributes {
	return dnsEntryAttributes{ref: ref}
}

func (de dnsEntryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return de.ref.InternalTokens()
}

func (de dnsEntryAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(de.ref.Append("dns_name"))
}

func (de dnsEntryAttributes) HostedZoneId() terra.StringValue {
	return terra.ReferenceAsString(de.ref.Append("hosted_zone_id"))
}

type dnsOptionsAttributes struct {
	ref terra.Reference
}

func (do dnsOptionsAttributes) InternalRef() (terra.Reference, error) {
	return do.ref, nil
}

func (do dnsOptionsAttributes) InternalWithRef(ref terra.Reference) dnsOptionsAttributes {
	return dnsOptionsAttributes{ref: ref}
}

func (do dnsOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return do.ref.InternalTokens()
}

func (do dnsOptionsAttributes) DnsRecordIpType() terra.StringValue {
	return terra.ReferenceAsString(do.ref.Append("dns_record_ip_type"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DnsEntryState struct {
	DnsName      string `json:"dns_name"`
	HostedZoneId string `json:"hosted_zone_id"`
}

type DnsOptionsState struct {
	DnsRecordIpType string `json:"dns_record_ip_type"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
