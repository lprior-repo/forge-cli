// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpc_endpoint

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_vpc_endpoint.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ave *DataSource) DataSource() string {
	return "aws_vpc_endpoint"
}

// LocalName returns the local name for [DataSource].
func (ave *DataSource) LocalName() string {
	return ave.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ave *DataSource) Configuration() interface{} {
	return ave.Args
}

// Attributes returns the attributes for [DataSource].
func (ave *DataSource) Attributes() dataAwsVpcEndpointAttributes {
	return dataAwsVpcEndpointAttributes{ref: terra.ReferenceDataSource(ave)}
}

// DataArgs contains the configurations for aws_vpc_endpoint.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// ServiceName is optional.
	ServiceName terra.StringValue `hcl:"service_name,attr"`
	// State is optional.
	State terra.StringValue `hcl:"state,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// VpcId is optional.
	VpcId terra.StringValue `hcl:"vpc_id,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts is optional.
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsVpcEndpointAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("arn"))
}

// CidrBlocks returns a reference to field cidr_blocks of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) CidrBlocks() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ave.ref.Append("cidr_blocks"))
}

// Id returns a reference to field id of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("id"))
}

// IpAddressType returns a reference to field ip_address_type of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) IpAddressType() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("ip_address_type"))
}

// NetworkInterfaceIds returns a reference to field network_interface_ids of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) NetworkInterfaceIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ave.ref.Append("network_interface_ids"))
}

// OwnerId returns a reference to field owner_id of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) OwnerId() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("owner_id"))
}

// Policy returns a reference to field policy of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("policy"))
}

// PrefixListId returns a reference to field prefix_list_id of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("prefix_list_id"))
}

// PrivateDnsEnabled returns a reference to field private_dns_enabled of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) PrivateDnsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ave.ref.Append("private_dns_enabled"))
}

// RequesterManaged returns a reference to field requester_managed of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) RequesterManaged() terra.BoolValue {
	return terra.ReferenceAsBool(ave.ref.Append("requester_managed"))
}

// RouteTableIds returns a reference to field route_table_ids of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) RouteTableIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ave.ref.Append("route_table_ids"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ave.ref.Append("security_group_ids"))
}

// ServiceName returns a reference to field service_name of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) ServiceName() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("service_name"))
}

// State returns a reference to field state of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("state"))
}

// SubnetIds returns a reference to field subnet_ids of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ave.ref.Append("subnet_ids"))
}

// Tags returns a reference to field tags of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ave.ref.Append("tags"))
}

// VpcEndpointType returns a reference to field vpc_endpoint_type of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) VpcEndpointType() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("vpc_endpoint_type"))
}

// VpcId returns a reference to field vpc_id of aws_vpc_endpoint.
func (ave dataAwsVpcEndpointAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(ave.ref.Append("vpc_id"))
}

func (ave dataAwsVpcEndpointAttributes) DnsEntry() terra.ListValue[DatadnsEntryAttributes] {
	return terra.ReferenceAsList[DatadnsEntryAttributes](ave.ref.Append("dns_entry"))
}

func (ave dataAwsVpcEndpointAttributes) DnsOptions() terra.ListValue[DatadnsOptionsAttributes] {
	return terra.ReferenceAsList[DatadnsOptionsAttributes](ave.ref.Append("dns_options"))
}

func (ave dataAwsVpcEndpointAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](ave.ref.Append("filter"))
}

func (ave dataAwsVpcEndpointAttributes) Timeouts() DatatimeoutsAttributes {
	return terra.ReferenceAsSingle[DatatimeoutsAttributes](ave.ref.Append("timeouts"))
}
