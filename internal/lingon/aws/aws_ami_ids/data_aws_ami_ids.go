// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ami_ids

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_ami_ids.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aai *DataSource) DataSource() string {
	return "aws_ami_ids"
}

// LocalName returns the local name for [DataSource].
func (aai *DataSource) LocalName() string {
	return aai.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aai *DataSource) Configuration() interface{} {
	return aai.Args
}

// Attributes returns the attributes for [DataSource].
func (aai *DataSource) Attributes() dataAwsAmiIdsAttributes {
	return dataAwsAmiIdsAttributes{ref: terra.ReferenceDataSource(aai)}
}

// DataArgs contains the configurations for aws_ami_ids.
type DataArgs struct {
	// ExecutableUsers is optional.
	ExecutableUsers terra.ListValue[terra.StringValue] `hcl:"executable_users,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// IncludeDeprecated is optional.
	IncludeDeprecated terra.BoolValue `hcl:"include_deprecated,attr"`
	// NameRegex is optional.
	NameRegex terra.StringValue `hcl:"name_regex,attr"`
	// Owners is required.
	Owners terra.ListValue[terra.StringValue] `hcl:"owners,attr" validate:"required"`
	// SortAscending is optional.
	SortAscending terra.BoolValue `hcl:"sort_ascending,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts is optional.
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsAmiIdsAttributes struct {
	ref terra.Reference
}

// ExecutableUsers returns a reference to field executable_users of aws_ami_ids.
func (aai dataAwsAmiIdsAttributes) ExecutableUsers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aai.ref.Append("executable_users"))
}

// Id returns a reference to field id of aws_ami_ids.
func (aai dataAwsAmiIdsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("id"))
}

// Ids returns a reference to field ids of aws_ami_ids.
func (aai dataAwsAmiIdsAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aai.ref.Append("ids"))
}

// IncludeDeprecated returns a reference to field include_deprecated of aws_ami_ids.
func (aai dataAwsAmiIdsAttributes) IncludeDeprecated() terra.BoolValue {
	return terra.ReferenceAsBool(aai.ref.Append("include_deprecated"))
}

// NameRegex returns a reference to field name_regex of aws_ami_ids.
func (aai dataAwsAmiIdsAttributes) NameRegex() terra.StringValue {
	return terra.ReferenceAsString(aai.ref.Append("name_regex"))
}

// Owners returns a reference to field owners of aws_ami_ids.
func (aai dataAwsAmiIdsAttributes) Owners() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aai.ref.Append("owners"))
}

// SortAscending returns a reference to field sort_ascending of aws_ami_ids.
func (aai dataAwsAmiIdsAttributes) SortAscending() terra.BoolValue {
	return terra.ReferenceAsBool(aai.ref.Append("sort_ascending"))
}

func (aai dataAwsAmiIdsAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](aai.ref.Append("filter"))
}

func (aai dataAwsAmiIdsAttributes) Timeouts() DatatimeoutsAttributes {
	return terra.ReferenceAsSingle[DatatimeoutsAttributes](aai.ref.Append("timeouts"))
}
