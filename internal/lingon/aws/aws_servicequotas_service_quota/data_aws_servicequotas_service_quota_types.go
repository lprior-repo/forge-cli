// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_servicequotas_service_quota

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatausageMetricAttributes struct {
	ref terra.Reference
}

func (um DatausageMetricAttributes) InternalRef() (terra.Reference, error) {
	return um.ref, nil
}

func (um DatausageMetricAttributes) InternalWithRef(ref terra.Reference) DatausageMetricAttributes {
	return DatausageMetricAttributes{ref: ref}
}

func (um DatausageMetricAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return um.ref.InternalTokens()
}

func (um DatausageMetricAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(um.ref.Append("metric_name"))
}

func (um DatausageMetricAttributes) MetricNamespace() terra.StringValue {
	return terra.ReferenceAsString(um.ref.Append("metric_namespace"))
}

func (um DatausageMetricAttributes) MetricStatisticRecommendation() terra.StringValue {
	return terra.ReferenceAsString(um.ref.Append("metric_statistic_recommendation"))
}

func (um DatausageMetricAttributes) MetricDimensions() terra.ListValue[DatausageMetricMetricDimensionsAttributes] {
	return terra.ReferenceAsList[DatausageMetricMetricDimensionsAttributes](um.ref.Append("metric_dimensions"))
}

type DatausageMetricMetricDimensionsAttributes struct {
	ref terra.Reference
}

func (md DatausageMetricMetricDimensionsAttributes) InternalRef() (terra.Reference, error) {
	return md.ref, nil
}

func (md DatausageMetricMetricDimensionsAttributes) InternalWithRef(ref terra.Reference) DatausageMetricMetricDimensionsAttributes {
	return DatausageMetricMetricDimensionsAttributes{ref: ref}
}

func (md DatausageMetricMetricDimensionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return md.ref.InternalTokens()
}

func (md DatausageMetricMetricDimensionsAttributes) Class() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("class"))
}

func (md DatausageMetricMetricDimensionsAttributes) Resource() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("resource"))
}

func (md DatausageMetricMetricDimensionsAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("service"))
}

func (md DatausageMetricMetricDimensionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(md.ref.Append("type"))
}

type DataUsageMetricState struct {
	MetricName                    string                                 `json:"metric_name"`
	MetricNamespace               string                                 `json:"metric_namespace"`
	MetricStatisticRecommendation string                                 `json:"metric_statistic_recommendation"`
	MetricDimensions              []DataUsageMetricMetricDimensionsState `json:"metric_dimensions"`
}

type DataUsageMetricMetricDimensionsState struct {
	Class    string `json:"class"`
	Resource string `json:"resource"`
	Service  string `json:"service"`
	Type     string `json:"type"`
}
