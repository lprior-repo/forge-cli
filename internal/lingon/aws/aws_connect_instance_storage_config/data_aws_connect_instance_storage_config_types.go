// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_instance_storage_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatastorageConfigAttributes struct {
	ref terra.Reference
}

func (sc DatastorageConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DatastorageConfigAttributes) InternalWithRef(ref terra.Reference) DatastorageConfigAttributes {
	return DatastorageConfigAttributes{ref: ref}
}

func (sc DatastorageConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DatastorageConfigAttributes) StorageType() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("storage_type"))
}

func (sc DatastorageConfigAttributes) KinesisFirehoseConfig() terra.ListValue[DatastorageConfigKinesisFirehoseConfigAttributes] {
	return terra.ReferenceAsList[DatastorageConfigKinesisFirehoseConfigAttributes](sc.ref.Append("kinesis_firehose_config"))
}

func (sc DatastorageConfigAttributes) KinesisStreamConfig() terra.ListValue[DatastorageConfigKinesisStreamConfigAttributes] {
	return terra.ReferenceAsList[DatastorageConfigKinesisStreamConfigAttributes](sc.ref.Append("kinesis_stream_config"))
}

func (sc DatastorageConfigAttributes) KinesisVideoStreamConfig() terra.ListValue[DatastorageConfigKinesisVideoStreamConfigAttributes] {
	return terra.ReferenceAsList[DatastorageConfigKinesisVideoStreamConfigAttributes](sc.ref.Append("kinesis_video_stream_config"))
}

func (sc DatastorageConfigAttributes) S3Config() terra.ListValue[DatastorageConfigS3ConfigAttributes] {
	return terra.ReferenceAsList[DatastorageConfigS3ConfigAttributes](sc.ref.Append("s3_config"))
}

type DatastorageConfigKinesisFirehoseConfigAttributes struct {
	ref terra.Reference
}

func (kfc DatastorageConfigKinesisFirehoseConfigAttributes) InternalRef() (terra.Reference, error) {
	return kfc.ref, nil
}

func (kfc DatastorageConfigKinesisFirehoseConfigAttributes) InternalWithRef(ref terra.Reference) DatastorageConfigKinesisFirehoseConfigAttributes {
	return DatastorageConfigKinesisFirehoseConfigAttributes{ref: ref}
}

func (kfc DatastorageConfigKinesisFirehoseConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kfc.ref.InternalTokens()
}

func (kfc DatastorageConfigKinesisFirehoseConfigAttributes) FirehoseArn() terra.StringValue {
	return terra.ReferenceAsString(kfc.ref.Append("firehose_arn"))
}

type DatastorageConfigKinesisStreamConfigAttributes struct {
	ref terra.Reference
}

func (ksc DatastorageConfigKinesisStreamConfigAttributes) InternalRef() (terra.Reference, error) {
	return ksc.ref, nil
}

func (ksc DatastorageConfigKinesisStreamConfigAttributes) InternalWithRef(ref terra.Reference) DatastorageConfigKinesisStreamConfigAttributes {
	return DatastorageConfigKinesisStreamConfigAttributes{ref: ref}
}

func (ksc DatastorageConfigKinesisStreamConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ksc.ref.InternalTokens()
}

func (ksc DatastorageConfigKinesisStreamConfigAttributes) StreamArn() terra.StringValue {
	return terra.ReferenceAsString(ksc.ref.Append("stream_arn"))
}

type DatastorageConfigKinesisVideoStreamConfigAttributes struct {
	ref terra.Reference
}

func (kvsc DatastorageConfigKinesisVideoStreamConfigAttributes) InternalRef() (terra.Reference, error) {
	return kvsc.ref, nil
}

func (kvsc DatastorageConfigKinesisVideoStreamConfigAttributes) InternalWithRef(ref terra.Reference) DatastorageConfigKinesisVideoStreamConfigAttributes {
	return DatastorageConfigKinesisVideoStreamConfigAttributes{ref: ref}
}

func (kvsc DatastorageConfigKinesisVideoStreamConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kvsc.ref.InternalTokens()
}

func (kvsc DatastorageConfigKinesisVideoStreamConfigAttributes) Prefix() terra.StringValue {
	return terra.ReferenceAsString(kvsc.ref.Append("prefix"))
}

func (kvsc DatastorageConfigKinesisVideoStreamConfigAttributes) RetentionPeriodHours() terra.NumberValue {
	return terra.ReferenceAsNumber(kvsc.ref.Append("retention_period_hours"))
}

func (kvsc DatastorageConfigKinesisVideoStreamConfigAttributes) EncryptionConfig() terra.ListValue[DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes] {
	return terra.ReferenceAsList[DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes](kvsc.ref.Append("encryption_config"))
}

type DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes struct {
	ref terra.Reference
}

func (ec DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) InternalWithRef(ref terra.Reference) DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes {
	return DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes{ref: ref}
}

func (ec DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("encryption_type"))
}

func (ec DatastorageConfigKinesisVideoStreamConfigEncryptionConfigAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

type DatastorageConfigS3ConfigAttributes struct {
	ref terra.Reference
}

func (sc DatastorageConfigS3ConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc DatastorageConfigS3ConfigAttributes) InternalWithRef(ref terra.Reference) DatastorageConfigS3ConfigAttributes {
	return DatastorageConfigS3ConfigAttributes{ref: ref}
}

func (sc DatastorageConfigS3ConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc DatastorageConfigS3ConfigAttributes) BucketName() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("bucket_name"))
}

func (sc DatastorageConfigS3ConfigAttributes) BucketPrefix() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("bucket_prefix"))
}

func (sc DatastorageConfigS3ConfigAttributes) EncryptionConfig() terra.ListValue[DatastorageConfigS3ConfigEncryptionConfigAttributes] {
	return terra.ReferenceAsList[DatastorageConfigS3ConfigEncryptionConfigAttributes](sc.ref.Append("encryption_config"))
}

type DatastorageConfigS3ConfigEncryptionConfigAttributes struct {
	ref terra.Reference
}

func (ec DatastorageConfigS3ConfigEncryptionConfigAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec DatastorageConfigS3ConfigEncryptionConfigAttributes) InternalWithRef(ref terra.Reference) DatastorageConfigS3ConfigEncryptionConfigAttributes {
	return DatastorageConfigS3ConfigEncryptionConfigAttributes{ref: ref}
}

func (ec DatastorageConfigS3ConfigEncryptionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec DatastorageConfigS3ConfigEncryptionConfigAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("encryption_type"))
}

func (ec DatastorageConfigS3ConfigEncryptionConfigAttributes) KeyId() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("key_id"))
}

type DataStorageConfigState struct {
	StorageType              string                                           `json:"storage_type"`
	KinesisFirehoseConfig    []DataStorageConfigKinesisFirehoseConfigState    `json:"kinesis_firehose_config"`
	KinesisStreamConfig      []DataStorageConfigKinesisStreamConfigState      `json:"kinesis_stream_config"`
	KinesisVideoStreamConfig []DataStorageConfigKinesisVideoStreamConfigState `json:"kinesis_video_stream_config"`
	S3Config                 []DataStorageConfigS3ConfigState                 `json:"s3_config"`
}

type DataStorageConfigKinesisFirehoseConfigState struct {
	FirehoseArn string `json:"firehose_arn"`
}

type DataStorageConfigKinesisStreamConfigState struct {
	StreamArn string `json:"stream_arn"`
}

type DataStorageConfigKinesisVideoStreamConfigState struct {
	Prefix               string                                                           `json:"prefix"`
	RetentionPeriodHours float64                                                          `json:"retention_period_hours"`
	EncryptionConfig     []DataStorageConfigKinesisVideoStreamConfigEncryptionConfigState `json:"encryption_config"`
}

type DataStorageConfigKinesisVideoStreamConfigEncryptionConfigState struct {
	EncryptionType string `json:"encryption_type"`
	KeyId          string `json:"key_id"`
}

type DataStorageConfigS3ConfigState struct {
	BucketName       string                                           `json:"bucket_name"`
	BucketPrefix     string                                           `json:"bucket_prefix"`
	EncryptionConfig []DataStorageConfigS3ConfigEncryptionConfigState `json:"encryption_config"`
}

type DataStorageConfigS3ConfigEncryptionConfigState struct {
	EncryptionType string `json:"encryption_type"`
	KeyId          string `json:"key_id"`
}
