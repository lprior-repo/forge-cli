// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3control_multi_region_access_point

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Details struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// DetailsPublicAccessBlock is optional.
	PublicAccessBlock *DetailsPublicAccessBlock `hcl:"public_access_block,block"`
	// DetailsRegion is min=1,max=20.
	Region []DetailsRegion `hcl:"region,block" validate:"min=1,max=20"`
}

type DetailsPublicAccessBlock struct {
	// BlockPublicAcls is optional.
	BlockPublicAcls terra.BoolValue `hcl:"block_public_acls,attr"`
	// BlockPublicPolicy is optional.
	BlockPublicPolicy terra.BoolValue `hcl:"block_public_policy,attr"`
	// IgnorePublicAcls is optional.
	IgnorePublicAcls terra.BoolValue `hcl:"ignore_public_acls,attr"`
	// RestrictPublicBuckets is optional.
	RestrictPublicBuckets terra.BoolValue `hcl:"restrict_public_buckets,attr"`
}

type DetailsRegion struct {
	// Bucket is required.
	Bucket terra.StringValue `hcl:"bucket,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
}

type detailsAttributes struct {
	ref terra.Reference
}

func (d detailsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d detailsAttributes) InternalWithRef(ref terra.Reference) detailsAttributes {
	return detailsAttributes{ref: ref}
}

func (d detailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d detailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

func (d detailsAttributes) PublicAccessBlock() terra.ListValue[detailsPublicAccessBlockAttributes] {
	return terra.ReferenceAsList[detailsPublicAccessBlockAttributes](d.ref.Append("public_access_block"))
}

func (d detailsAttributes) Region() terra.SetValue[detailsRegionAttributes] {
	return terra.ReferenceAsSet[detailsRegionAttributes](d.ref.Append("region"))
}

type detailsPublicAccessBlockAttributes struct {
	ref terra.Reference
}

func (pab detailsPublicAccessBlockAttributes) InternalRef() (terra.Reference, error) {
	return pab.ref, nil
}

func (pab detailsPublicAccessBlockAttributes) InternalWithRef(ref terra.Reference) detailsPublicAccessBlockAttributes {
	return detailsPublicAccessBlockAttributes{ref: ref}
}

func (pab detailsPublicAccessBlockAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pab.ref.InternalTokens()
}

func (pab detailsPublicAccessBlockAttributes) BlockPublicAcls() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("block_public_acls"))
}

func (pab detailsPublicAccessBlockAttributes) BlockPublicPolicy() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("block_public_policy"))
}

func (pab detailsPublicAccessBlockAttributes) IgnorePublicAcls() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("ignore_public_acls"))
}

func (pab detailsPublicAccessBlockAttributes) RestrictPublicBuckets() terra.BoolValue {
	return terra.ReferenceAsBool(pab.ref.Append("restrict_public_buckets"))
}

type detailsRegionAttributes struct {
	ref terra.Reference
}

func (r detailsRegionAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r detailsRegionAttributes) InternalWithRef(ref terra.Reference) detailsRegionAttributes {
	return detailsRegionAttributes{ref: ref}
}

func (r detailsRegionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r detailsRegionAttributes) Bucket() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("bucket"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type DetailsState struct {
	Name              string                          `json:"name"`
	PublicAccessBlock []DetailsPublicAccessBlockState `json:"public_access_block"`
	Region            []DetailsRegionState            `json:"region"`
}

type DetailsPublicAccessBlockState struct {
	BlockPublicAcls       bool `json:"block_public_acls"`
	BlockPublicPolicy     bool `json:"block_public_policy"`
	IgnorePublicAcls      bool `json:"ignore_public_acls"`
	RestrictPublicBuckets bool `json:"restrict_public_buckets"`
}

type DetailsRegionState struct {
	Bucket string `json:"bucket"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
