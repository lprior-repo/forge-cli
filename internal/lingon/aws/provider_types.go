// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AssumeRole struct {
	// Duration is optional. The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
	Duration terra.StringValue `hcl:"duration,attr"`
	// ExternalId is optional. A unique identifier that might be required when you assume a role in another account.
	ExternalId terra.StringValue `hcl:"external_id,attr"`
	// Policy is optional. IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
	Policy terra.StringValue `hcl:"policy,attr"`
	// PolicyArns is optional. Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
	PolicyArns terra.SetValue[terra.StringValue] `hcl:"policy_arns,attr"`
	// RoleArn is optional. Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// SessionName is optional. An identifier for the assumed role session.
	SessionName terra.StringValue `hcl:"session_name,attr"`
	// SourceIdentity is optional. Source identity specified by the principal assuming the role.
	SourceIdentity terra.StringValue `hcl:"source_identity,attr"`
	// Tags is optional. Assume role session tags.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TransitiveTagKeys is optional. Assume role session tag keys to pass to any subsequent sessions.
	TransitiveTagKeys terra.SetValue[terra.StringValue] `hcl:"transitive_tag_keys,attr"`
}

type AssumeRoleWithWebIdentity struct {
	// Duration is optional. The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
	Duration terra.StringValue `hcl:"duration,attr"`
	// Policy is optional. IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
	Policy terra.StringValue `hcl:"policy,attr"`
	// PolicyArns is optional. Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
	PolicyArns terra.SetValue[terra.StringValue] `hcl:"policy_arns,attr"`
	// RoleArn is optional. Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// SessionName is optional. An identifier for the assumed role session.
	SessionName terra.StringValue `hcl:"session_name,attr"`
	// WebIdentityToken is optional.
	WebIdentityToken terra.StringValue `hcl:"web_identity_token,attr"`
	// WebIdentityTokenFile is optional.
	WebIdentityTokenFile terra.StringValue `hcl:"web_identity_token_file,attr"`
}

type DefaultTags struct {
	// Tags is optional. Resource tags to default across all resources
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type Endpoints struct {
	// Accessanalyzer is optional. Use this to override the default service endpoint URL
	Accessanalyzer terra.StringValue `hcl:"accessanalyzer,attr"`
	// Account is optional. Use this to override the default service endpoint URL
	Account terra.StringValue `hcl:"account,attr"`
	// Acm is optional. Use this to override the default service endpoint URL
	Acm terra.StringValue `hcl:"acm,attr"`
	// Acmpca is optional. Use this to override the default service endpoint URL
	Acmpca terra.StringValue `hcl:"acmpca,attr"`
	// Alexaforbusiness is optional. Use this to override the default service endpoint URL
	Alexaforbusiness terra.StringValue `hcl:"alexaforbusiness,attr"`
	// Amg is optional. Use this to override the default service endpoint URL
	Amg terra.StringValue `hcl:"amg,attr"`
	// Amp is optional. Use this to override the default service endpoint URL
	Amp terra.StringValue `hcl:"amp,attr"`
	// Amplify is optional. Use this to override the default service endpoint URL
	Amplify terra.StringValue `hcl:"amplify,attr"`
	// Amplifybackend is optional. Use this to override the default service endpoint URL
	Amplifybackend terra.StringValue `hcl:"amplifybackend,attr"`
	// Amplifyuibuilder is optional. Use this to override the default service endpoint URL
	Amplifyuibuilder terra.StringValue `hcl:"amplifyuibuilder,attr"`
	// Apigateway is optional. Use this to override the default service endpoint URL
	Apigateway terra.StringValue `hcl:"apigateway,attr"`
	// Apigatewaymanagementapi is optional. Use this to override the default service endpoint URL
	Apigatewaymanagementapi terra.StringValue `hcl:"apigatewaymanagementapi,attr"`
	// Apigatewayv2 is optional. Use this to override the default service endpoint URL
	Apigatewayv2 terra.StringValue `hcl:"apigatewayv2,attr"`
	// Appautoscaling is optional. Use this to override the default service endpoint URL
	Appautoscaling terra.StringValue `hcl:"appautoscaling,attr"`
	// Appconfig is optional. Use this to override the default service endpoint URL
	Appconfig terra.StringValue `hcl:"appconfig,attr"`
	// Appconfigdata is optional. Use this to override the default service endpoint URL
	Appconfigdata terra.StringValue `hcl:"appconfigdata,attr"`
	// Appflow is optional. Use this to override the default service endpoint URL
	Appflow terra.StringValue `hcl:"appflow,attr"`
	// Appintegrations is optional. Use this to override the default service endpoint URL
	Appintegrations terra.StringValue `hcl:"appintegrations,attr"`
	// Appintegrationsservice is optional. Use this to override the default service endpoint URL
	Appintegrationsservice terra.StringValue `hcl:"appintegrationsservice,attr"`
	// Applicationautoscaling is optional. Use this to override the default service endpoint URL
	Applicationautoscaling terra.StringValue `hcl:"applicationautoscaling,attr"`
	// Applicationcostprofiler is optional. Use this to override the default service endpoint URL
	Applicationcostprofiler terra.StringValue `hcl:"applicationcostprofiler,attr"`
	// Applicationdiscovery is optional. Use this to override the default service endpoint URL
	Applicationdiscovery terra.StringValue `hcl:"applicationdiscovery,attr"`
	// Applicationdiscoveryservice is optional. Use this to override the default service endpoint URL
	Applicationdiscoveryservice terra.StringValue `hcl:"applicationdiscoveryservice,attr"`
	// Applicationinsights is optional. Use this to override the default service endpoint URL
	Applicationinsights terra.StringValue `hcl:"applicationinsights,attr"`
	// Appmesh is optional. Use this to override the default service endpoint URL
	Appmesh terra.StringValue `hcl:"appmesh,attr"`
	// Appregistry is optional. Use this to override the default service endpoint URL
	Appregistry terra.StringValue `hcl:"appregistry,attr"`
	// Apprunner is optional. Use this to override the default service endpoint URL
	Apprunner terra.StringValue `hcl:"apprunner,attr"`
	// Appstream is optional. Use this to override the default service endpoint URL
	Appstream terra.StringValue `hcl:"appstream,attr"`
	// Appsync is optional. Use this to override the default service endpoint URL
	Appsync terra.StringValue `hcl:"appsync,attr"`
	// Athena is optional. Use this to override the default service endpoint URL
	Athena terra.StringValue `hcl:"athena,attr"`
	// Auditmanager is optional. Use this to override the default service endpoint URL
	Auditmanager terra.StringValue `hcl:"auditmanager,attr"`
	// Augmentedairuntime is optional. Use this to override the default service endpoint URL
	Augmentedairuntime terra.StringValue `hcl:"augmentedairuntime,attr"`
	// Autoscaling is optional. Use this to override the default service endpoint URL
	Autoscaling terra.StringValue `hcl:"autoscaling,attr"`
	// Autoscalingplans is optional. Use this to override the default service endpoint URL
	Autoscalingplans terra.StringValue `hcl:"autoscalingplans,attr"`
	// Backup is optional. Use this to override the default service endpoint URL
	Backup terra.StringValue `hcl:"backup,attr"`
	// Backupgateway is optional. Use this to override the default service endpoint URL
	Backupgateway terra.StringValue `hcl:"backupgateway,attr"`
	// Batch is optional. Use this to override the default service endpoint URL
	Batch terra.StringValue `hcl:"batch,attr"`
	// Beanstalk is optional. Use this to override the default service endpoint URL
	Beanstalk terra.StringValue `hcl:"beanstalk,attr"`
	// Billingconductor is optional. Use this to override the default service endpoint URL
	Billingconductor terra.StringValue `hcl:"billingconductor,attr"`
	// Braket is optional. Use this to override the default service endpoint URL
	Braket terra.StringValue `hcl:"braket,attr"`
	// Budgets is optional. Use this to override the default service endpoint URL
	Budgets terra.StringValue `hcl:"budgets,attr"`
	// Ce is optional. Use this to override the default service endpoint URL
	Ce terra.StringValue `hcl:"ce,attr"`
	// Chime is optional. Use this to override the default service endpoint URL
	Chime terra.StringValue `hcl:"chime,attr"`
	// Chimesdkidentity is optional. Use this to override the default service endpoint URL
	Chimesdkidentity terra.StringValue `hcl:"chimesdkidentity,attr"`
	// Chimesdkmediapipelines is optional. Use this to override the default service endpoint URL
	Chimesdkmediapipelines terra.StringValue `hcl:"chimesdkmediapipelines,attr"`
	// Chimesdkmeetings is optional. Use this to override the default service endpoint URL
	Chimesdkmeetings terra.StringValue `hcl:"chimesdkmeetings,attr"`
	// Chimesdkmessaging is optional. Use this to override the default service endpoint URL
	Chimesdkmessaging terra.StringValue `hcl:"chimesdkmessaging,attr"`
	// Chimesdkvoice is optional. Use this to override the default service endpoint URL
	Chimesdkvoice terra.StringValue `hcl:"chimesdkvoice,attr"`
	// Cleanrooms is optional. Use this to override the default service endpoint URL
	Cleanrooms terra.StringValue `hcl:"cleanrooms,attr"`
	// Cloud9 is optional. Use this to override the default service endpoint URL
	Cloud9 terra.StringValue `hcl:"cloud9,attr"`
	// Cloudcontrol is optional. Use this to override the default service endpoint URL
	Cloudcontrol terra.StringValue `hcl:"cloudcontrol,attr"`
	// Cloudcontrolapi is optional. Use this to override the default service endpoint URL
	Cloudcontrolapi terra.StringValue `hcl:"cloudcontrolapi,attr"`
	// Clouddirectory is optional. Use this to override the default service endpoint URL
	Clouddirectory terra.StringValue `hcl:"clouddirectory,attr"`
	// Cloudformation is optional. Use this to override the default service endpoint URL
	Cloudformation terra.StringValue `hcl:"cloudformation,attr"`
	// Cloudfront is optional. Use this to override the default service endpoint URL
	Cloudfront terra.StringValue `hcl:"cloudfront,attr"`
	// Cloudhsm is optional. Use this to override the default service endpoint URL
	Cloudhsm terra.StringValue `hcl:"cloudhsm,attr"`
	// Cloudhsmv2 is optional. Use this to override the default service endpoint URL
	Cloudhsmv2 terra.StringValue `hcl:"cloudhsmv2,attr"`
	// Cloudsearch is optional. Use this to override the default service endpoint URL
	Cloudsearch terra.StringValue `hcl:"cloudsearch,attr"`
	// Cloudsearchdomain is optional. Use this to override the default service endpoint URL
	Cloudsearchdomain terra.StringValue `hcl:"cloudsearchdomain,attr"`
	// Cloudtrail is optional. Use this to override the default service endpoint URL
	Cloudtrail terra.StringValue `hcl:"cloudtrail,attr"`
	// Cloudwatch is optional. Use this to override the default service endpoint URL
	Cloudwatch terra.StringValue `hcl:"cloudwatch,attr"`
	// Cloudwatchevents is optional. Use this to override the default service endpoint URL
	Cloudwatchevents terra.StringValue `hcl:"cloudwatchevents,attr"`
	// Cloudwatchevidently is optional. Use this to override the default service endpoint URL
	Cloudwatchevidently terra.StringValue `hcl:"cloudwatchevidently,attr"`
	// Cloudwatchlog is optional. Use this to override the default service endpoint URL
	Cloudwatchlog terra.StringValue `hcl:"cloudwatchlog,attr"`
	// Cloudwatchlogs is optional. Use this to override the default service endpoint URL
	Cloudwatchlogs terra.StringValue `hcl:"cloudwatchlogs,attr"`
	// Cloudwatchobservabilityaccessmanager is optional. Use this to override the default service endpoint URL
	Cloudwatchobservabilityaccessmanager terra.StringValue `hcl:"cloudwatchobservabilityaccessmanager,attr"`
	// Cloudwatchrum is optional. Use this to override the default service endpoint URL
	Cloudwatchrum terra.StringValue `hcl:"cloudwatchrum,attr"`
	// Codeartifact is optional. Use this to override the default service endpoint URL
	Codeartifact terra.StringValue `hcl:"codeartifact,attr"`
	// Codebuild is optional. Use this to override the default service endpoint URL
	Codebuild terra.StringValue `hcl:"codebuild,attr"`
	// Codecommit is optional. Use this to override the default service endpoint URL
	Codecommit terra.StringValue `hcl:"codecommit,attr"`
	// Codedeploy is optional. Use this to override the default service endpoint URL
	Codedeploy terra.StringValue `hcl:"codedeploy,attr"`
	// Codeguruprofiler is optional. Use this to override the default service endpoint URL
	Codeguruprofiler terra.StringValue `hcl:"codeguruprofiler,attr"`
	// Codegurureviewer is optional. Use this to override the default service endpoint URL
	Codegurureviewer terra.StringValue `hcl:"codegurureviewer,attr"`
	// Codepipeline is optional. Use this to override the default service endpoint URL
	Codepipeline terra.StringValue `hcl:"codepipeline,attr"`
	// Codestar is optional. Use this to override the default service endpoint URL
	Codestar terra.StringValue `hcl:"codestar,attr"`
	// Codestarconnections is optional. Use this to override the default service endpoint URL
	Codestarconnections terra.StringValue `hcl:"codestarconnections,attr"`
	// Codestarnotifications is optional. Use this to override the default service endpoint URL
	Codestarnotifications terra.StringValue `hcl:"codestarnotifications,attr"`
	// Cognitoidentity is optional. Use this to override the default service endpoint URL
	Cognitoidentity terra.StringValue `hcl:"cognitoidentity,attr"`
	// Cognitoidentityprovider is optional. Use this to override the default service endpoint URL
	Cognitoidentityprovider terra.StringValue `hcl:"cognitoidentityprovider,attr"`
	// Cognitoidp is optional. Use this to override the default service endpoint URL
	Cognitoidp terra.StringValue `hcl:"cognitoidp,attr"`
	// Cognitosync is optional. Use this to override the default service endpoint URL
	Cognitosync terra.StringValue `hcl:"cognitosync,attr"`
	// Comprehend is optional. Use this to override the default service endpoint URL
	Comprehend terra.StringValue `hcl:"comprehend,attr"`
	// Comprehendmedical is optional. Use this to override the default service endpoint URL
	Comprehendmedical terra.StringValue `hcl:"comprehendmedical,attr"`
	// Computeoptimizer is optional. Use this to override the default service endpoint URL
	Computeoptimizer terra.StringValue `hcl:"computeoptimizer,attr"`
	// Config is optional. Use this to override the default service endpoint URL
	Config terra.StringValue `hcl:"config,attr"`
	// Configservice is optional. Use this to override the default service endpoint URL
	Configservice terra.StringValue `hcl:"configservice,attr"`
	// Connect is optional. Use this to override the default service endpoint URL
	Connect terra.StringValue `hcl:"connect,attr"`
	// Connectcontactlens is optional. Use this to override the default service endpoint URL
	Connectcontactlens terra.StringValue `hcl:"connectcontactlens,attr"`
	// Connectparticipant is optional. Use this to override the default service endpoint URL
	Connectparticipant terra.StringValue `hcl:"connectparticipant,attr"`
	// Connectwisdomservice is optional. Use this to override the default service endpoint URL
	Connectwisdomservice terra.StringValue `hcl:"connectwisdomservice,attr"`
	// Controltower is optional. Use this to override the default service endpoint URL
	Controltower terra.StringValue `hcl:"controltower,attr"`
	// Costandusagereportservice is optional. Use this to override the default service endpoint URL
	Costandusagereportservice terra.StringValue `hcl:"costandusagereportservice,attr"`
	// Costexplorer is optional. Use this to override the default service endpoint URL
	Costexplorer terra.StringValue `hcl:"costexplorer,attr"`
	// Cur is optional. Use this to override the default service endpoint URL
	Cur terra.StringValue `hcl:"cur,attr"`
	// Customerprofiles is optional. Use this to override the default service endpoint URL
	Customerprofiles terra.StringValue `hcl:"customerprofiles,attr"`
	// Databasemigration is optional. Use this to override the default service endpoint URL
	Databasemigration terra.StringValue `hcl:"databasemigration,attr"`
	// Databasemigrationservice is optional. Use this to override the default service endpoint URL
	Databasemigrationservice terra.StringValue `hcl:"databasemigrationservice,attr"`
	// Databrew is optional. Use this to override the default service endpoint URL
	Databrew terra.StringValue `hcl:"databrew,attr"`
	// Dataexchange is optional. Use this to override the default service endpoint URL
	Dataexchange terra.StringValue `hcl:"dataexchange,attr"`
	// Datapipeline is optional. Use this to override the default service endpoint URL
	Datapipeline terra.StringValue `hcl:"datapipeline,attr"`
	// Datasync is optional. Use this to override the default service endpoint URL
	Datasync terra.StringValue `hcl:"datasync,attr"`
	// Dax is optional. Use this to override the default service endpoint URL
	Dax terra.StringValue `hcl:"dax,attr"`
	// Deploy is optional. Use this to override the default service endpoint URL
	Deploy terra.StringValue `hcl:"deploy,attr"`
	// Detective is optional. Use this to override the default service endpoint URL
	Detective terra.StringValue `hcl:"detective,attr"`
	// Devicefarm is optional. Use this to override the default service endpoint URL
	Devicefarm terra.StringValue `hcl:"devicefarm,attr"`
	// Devopsguru is optional. Use this to override the default service endpoint URL
	Devopsguru terra.StringValue `hcl:"devopsguru,attr"`
	// Directconnect is optional. Use this to override the default service endpoint URL
	Directconnect terra.StringValue `hcl:"directconnect,attr"`
	// Directoryservice is optional. Use this to override the default service endpoint URL
	Directoryservice terra.StringValue `hcl:"directoryservice,attr"`
	// Discovery is optional. Use this to override the default service endpoint URL
	Discovery terra.StringValue `hcl:"discovery,attr"`
	// Dlm is optional. Use this to override the default service endpoint URL
	Dlm terra.StringValue `hcl:"dlm,attr"`
	// Dms is optional. Use this to override the default service endpoint URL
	Dms terra.StringValue `hcl:"dms,attr"`
	// Docdb is optional. Use this to override the default service endpoint URL
	Docdb terra.StringValue `hcl:"docdb,attr"`
	// Docdbelastic is optional. Use this to override the default service endpoint URL
	Docdbelastic terra.StringValue `hcl:"docdbelastic,attr"`
	// Drs is optional. Use this to override the default service endpoint URL
	Drs terra.StringValue `hcl:"drs,attr"`
	// Ds is optional. Use this to override the default service endpoint URL
	Ds terra.StringValue `hcl:"ds,attr"`
	// Dynamodb is optional. Use this to override the default service endpoint URL
	Dynamodb terra.StringValue `hcl:"dynamodb,attr"`
	// Dynamodbstreams is optional. Use this to override the default service endpoint URL
	Dynamodbstreams terra.StringValue `hcl:"dynamodbstreams,attr"`
	// Ebs is optional. Use this to override the default service endpoint URL
	Ebs terra.StringValue `hcl:"ebs,attr"`
	// Ec2 is optional. Use this to override the default service endpoint URL
	Ec2 terra.StringValue `hcl:"ec2,attr"`
	// Ec2Instanceconnect is optional. Use this to override the default service endpoint URL
	Ec2Instanceconnect terra.StringValue `hcl:"ec2instanceconnect,attr"`
	// Ecr is optional. Use this to override the default service endpoint URL
	Ecr terra.StringValue `hcl:"ecr,attr"`
	// Ecrpublic is optional. Use this to override the default service endpoint URL
	Ecrpublic terra.StringValue `hcl:"ecrpublic,attr"`
	// Ecs is optional. Use this to override the default service endpoint URL
	Ecs terra.StringValue `hcl:"ecs,attr"`
	// Efs is optional. Use this to override the default service endpoint URL
	Efs terra.StringValue `hcl:"efs,attr"`
	// Eks is optional. Use this to override the default service endpoint URL
	Eks terra.StringValue `hcl:"eks,attr"`
	// Elasticache is optional. Use this to override the default service endpoint URL
	Elasticache terra.StringValue `hcl:"elasticache,attr"`
	// Elasticbeanstalk is optional. Use this to override the default service endpoint URL
	Elasticbeanstalk terra.StringValue `hcl:"elasticbeanstalk,attr"`
	// Elasticinference is optional. Use this to override the default service endpoint URL
	Elasticinference terra.StringValue `hcl:"elasticinference,attr"`
	// Elasticloadbalancing is optional. Use this to override the default service endpoint URL
	Elasticloadbalancing terra.StringValue `hcl:"elasticloadbalancing,attr"`
	// Elasticloadbalancingv2 is optional. Use this to override the default service endpoint URL
	Elasticloadbalancingv2 terra.StringValue `hcl:"elasticloadbalancingv2,attr"`
	// Elasticsearch is optional. Use this to override the default service endpoint URL
	Elasticsearch terra.StringValue `hcl:"elasticsearch,attr"`
	// Elasticsearchservice is optional. Use this to override the default service endpoint URL
	Elasticsearchservice terra.StringValue `hcl:"elasticsearchservice,attr"`
	// Elastictranscoder is optional. Use this to override the default service endpoint URL
	Elastictranscoder terra.StringValue `hcl:"elastictranscoder,attr"`
	// Elb is optional. Use this to override the default service endpoint URL
	Elb terra.StringValue `hcl:"elb,attr"`
	// Elbv2 is optional. Use this to override the default service endpoint URL
	Elbv2 terra.StringValue `hcl:"elbv2,attr"`
	// Emr is optional. Use this to override the default service endpoint URL
	Emr terra.StringValue `hcl:"emr,attr"`
	// Emrcontainers is optional. Use this to override the default service endpoint URL
	Emrcontainers terra.StringValue `hcl:"emrcontainers,attr"`
	// Emrserverless is optional. Use this to override the default service endpoint URL
	Emrserverless terra.StringValue `hcl:"emrserverless,attr"`
	// Es is optional. Use this to override the default service endpoint URL
	Es terra.StringValue `hcl:"es,attr"`
	// Eventbridge is optional. Use this to override the default service endpoint URL
	Eventbridge terra.StringValue `hcl:"eventbridge,attr"`
	// Events is optional. Use this to override the default service endpoint URL
	Events terra.StringValue `hcl:"events,attr"`
	// Evidently is optional. Use this to override the default service endpoint URL
	Evidently terra.StringValue `hcl:"evidently,attr"`
	// Finspace is optional. Use this to override the default service endpoint URL
	Finspace terra.StringValue `hcl:"finspace,attr"`
	// Finspacedata is optional. Use this to override the default service endpoint URL
	Finspacedata terra.StringValue `hcl:"finspacedata,attr"`
	// Firehose is optional. Use this to override the default service endpoint URL
	Firehose terra.StringValue `hcl:"firehose,attr"`
	// Fis is optional. Use this to override the default service endpoint URL
	Fis terra.StringValue `hcl:"fis,attr"`
	// Fms is optional. Use this to override the default service endpoint URL
	Fms terra.StringValue `hcl:"fms,attr"`
	// Forecast is optional. Use this to override the default service endpoint URL
	Forecast terra.StringValue `hcl:"forecast,attr"`
	// Forecastquery is optional. Use this to override the default service endpoint URL
	Forecastquery terra.StringValue `hcl:"forecastquery,attr"`
	// Forecastqueryservice is optional. Use this to override the default service endpoint URL
	Forecastqueryservice terra.StringValue `hcl:"forecastqueryservice,attr"`
	// Forecastservice is optional. Use this to override the default service endpoint URL
	Forecastservice terra.StringValue `hcl:"forecastservice,attr"`
	// Frauddetector is optional. Use this to override the default service endpoint URL
	Frauddetector terra.StringValue `hcl:"frauddetector,attr"`
	// Fsx is optional. Use this to override the default service endpoint URL
	Fsx terra.StringValue `hcl:"fsx,attr"`
	// Gamelift is optional. Use this to override the default service endpoint URL
	Gamelift terra.StringValue `hcl:"gamelift,attr"`
	// Glacier is optional. Use this to override the default service endpoint URL
	Glacier terra.StringValue `hcl:"glacier,attr"`
	// Globalaccelerator is optional. Use this to override the default service endpoint URL
	Globalaccelerator terra.StringValue `hcl:"globalaccelerator,attr"`
	// Glue is optional. Use this to override the default service endpoint URL
	Glue terra.StringValue `hcl:"glue,attr"`
	// Gluedatabrew is optional. Use this to override the default service endpoint URL
	Gluedatabrew terra.StringValue `hcl:"gluedatabrew,attr"`
	// Grafana is optional. Use this to override the default service endpoint URL
	Grafana terra.StringValue `hcl:"grafana,attr"`
	// Greengrass is optional. Use this to override the default service endpoint URL
	Greengrass terra.StringValue `hcl:"greengrass,attr"`
	// Greengrassv2 is optional. Use this to override the default service endpoint URL
	Greengrassv2 terra.StringValue `hcl:"greengrassv2,attr"`
	// Groundstation is optional. Use this to override the default service endpoint URL
	Groundstation terra.StringValue `hcl:"groundstation,attr"`
	// Guardduty is optional. Use this to override the default service endpoint URL
	Guardduty terra.StringValue `hcl:"guardduty,attr"`
	// Health is optional. Use this to override the default service endpoint URL
	Health terra.StringValue `hcl:"health,attr"`
	// Healthlake is optional. Use this to override the default service endpoint URL
	Healthlake terra.StringValue `hcl:"healthlake,attr"`
	// Honeycode is optional. Use this to override the default service endpoint URL
	Honeycode terra.StringValue `hcl:"honeycode,attr"`
	// Iam is optional. Use this to override the default service endpoint URL
	Iam terra.StringValue `hcl:"iam,attr"`
	// Identitystore is optional. Use this to override the default service endpoint URL
	Identitystore terra.StringValue `hcl:"identitystore,attr"`
	// Imagebuilder is optional. Use this to override the default service endpoint URL
	Imagebuilder terra.StringValue `hcl:"imagebuilder,attr"`
	// Inspector is optional. Use this to override the default service endpoint URL
	Inspector terra.StringValue `hcl:"inspector,attr"`
	// Inspector2 is optional. Use this to override the default service endpoint URL
	Inspector2 terra.StringValue `hcl:"inspector2,attr"`
	// Inspectorv2 is optional. Use this to override the default service endpoint URL
	Inspectorv2 terra.StringValue `hcl:"inspectorv2,attr"`
	// Internetmonitor is optional. Use this to override the default service endpoint URL
	Internetmonitor terra.StringValue `hcl:"internetmonitor,attr"`
	// Iot is optional. Use this to override the default service endpoint URL
	Iot terra.StringValue `hcl:"iot,attr"`
	// Iot1Clickdevices is optional. Use this to override the default service endpoint URL
	Iot1Clickdevices terra.StringValue `hcl:"iot1clickdevices,attr"`
	// Iot1Clickdevicesservice is optional. Use this to override the default service endpoint URL
	Iot1Clickdevicesservice terra.StringValue `hcl:"iot1clickdevicesservice,attr"`
	// Iot1Clickprojects is optional. Use this to override the default service endpoint URL
	Iot1Clickprojects terra.StringValue `hcl:"iot1clickprojects,attr"`
	// Iotanalytics is optional. Use this to override the default service endpoint URL
	Iotanalytics terra.StringValue `hcl:"iotanalytics,attr"`
	// Iotdata is optional. Use this to override the default service endpoint URL
	Iotdata terra.StringValue `hcl:"iotdata,attr"`
	// Iotdataplane is optional. Use this to override the default service endpoint URL
	Iotdataplane terra.StringValue `hcl:"iotdataplane,attr"`
	// Iotdeviceadvisor is optional. Use this to override the default service endpoint URL
	Iotdeviceadvisor terra.StringValue `hcl:"iotdeviceadvisor,attr"`
	// Iotevents is optional. Use this to override the default service endpoint URL
	Iotevents terra.StringValue `hcl:"iotevents,attr"`
	// Ioteventsdata is optional. Use this to override the default service endpoint URL
	Ioteventsdata terra.StringValue `hcl:"ioteventsdata,attr"`
	// Iotfleethub is optional. Use this to override the default service endpoint URL
	Iotfleethub terra.StringValue `hcl:"iotfleethub,attr"`
	// Iotjobsdata is optional. Use this to override the default service endpoint URL
	Iotjobsdata terra.StringValue `hcl:"iotjobsdata,attr"`
	// Iotjobsdataplane is optional. Use this to override the default service endpoint URL
	Iotjobsdataplane terra.StringValue `hcl:"iotjobsdataplane,attr"`
	// Iotsecuretunneling is optional. Use this to override the default service endpoint URL
	Iotsecuretunneling terra.StringValue `hcl:"iotsecuretunneling,attr"`
	// Iotsitewise is optional. Use this to override the default service endpoint URL
	Iotsitewise terra.StringValue `hcl:"iotsitewise,attr"`
	// Iotthingsgraph is optional. Use this to override the default service endpoint URL
	Iotthingsgraph terra.StringValue `hcl:"iotthingsgraph,attr"`
	// Iottwinmaker is optional. Use this to override the default service endpoint URL
	Iottwinmaker terra.StringValue `hcl:"iottwinmaker,attr"`
	// Iotwireless is optional. Use this to override the default service endpoint URL
	Iotwireless terra.StringValue `hcl:"iotwireless,attr"`
	// Ivs is optional. Use this to override the default service endpoint URL
	Ivs terra.StringValue `hcl:"ivs,attr"`
	// Ivschat is optional. Use this to override the default service endpoint URL
	Ivschat terra.StringValue `hcl:"ivschat,attr"`
	// Kafka is optional. Use this to override the default service endpoint URL
	Kafka terra.StringValue `hcl:"kafka,attr"`
	// Kafkaconnect is optional. Use this to override the default service endpoint URL
	Kafkaconnect terra.StringValue `hcl:"kafkaconnect,attr"`
	// Kendra is optional. Use this to override the default service endpoint URL
	Kendra terra.StringValue `hcl:"kendra,attr"`
	// Keyspaces is optional. Use this to override the default service endpoint URL
	Keyspaces terra.StringValue `hcl:"keyspaces,attr"`
	// Kinesis is optional. Use this to override the default service endpoint URL
	Kinesis terra.StringValue `hcl:"kinesis,attr"`
	// Kinesisanalytics is optional. Use this to override the default service endpoint URL
	Kinesisanalytics terra.StringValue `hcl:"kinesisanalytics,attr"`
	// Kinesisanalyticsv2 is optional. Use this to override the default service endpoint URL
	Kinesisanalyticsv2 terra.StringValue `hcl:"kinesisanalyticsv2,attr"`
	// Kinesisvideo is optional. Use this to override the default service endpoint URL
	Kinesisvideo terra.StringValue `hcl:"kinesisvideo,attr"`
	// Kinesisvideoarchivedmedia is optional. Use this to override the default service endpoint URL
	Kinesisvideoarchivedmedia terra.StringValue `hcl:"kinesisvideoarchivedmedia,attr"`
	// Kinesisvideomedia is optional. Use this to override the default service endpoint URL
	Kinesisvideomedia terra.StringValue `hcl:"kinesisvideomedia,attr"`
	// Kinesisvideosignaling is optional. Use this to override the default service endpoint URL
	Kinesisvideosignaling terra.StringValue `hcl:"kinesisvideosignaling,attr"`
	// Kinesisvideosignalingchannels is optional. Use this to override the default service endpoint URL
	Kinesisvideosignalingchannels terra.StringValue `hcl:"kinesisvideosignalingchannels,attr"`
	// Kms is optional. Use this to override the default service endpoint URL
	Kms terra.StringValue `hcl:"kms,attr"`
	// Lakeformation is optional. Use this to override the default service endpoint URL
	Lakeformation terra.StringValue `hcl:"lakeformation,attr"`
	// Lambda is optional. Use this to override the default service endpoint URL
	Lambda terra.StringValue `hcl:"lambda,attr"`
	// Lex is optional. Use this to override the default service endpoint URL
	Lex terra.StringValue `hcl:"lex,attr"`
	// Lexmodelbuilding is optional. Use this to override the default service endpoint URL
	Lexmodelbuilding terra.StringValue `hcl:"lexmodelbuilding,attr"`
	// Lexmodelbuildingservice is optional. Use this to override the default service endpoint URL
	Lexmodelbuildingservice terra.StringValue `hcl:"lexmodelbuildingservice,attr"`
	// Lexmodels is optional. Use this to override the default service endpoint URL
	Lexmodels terra.StringValue `hcl:"lexmodels,attr"`
	// Lexmodelsv2 is optional. Use this to override the default service endpoint URL
	Lexmodelsv2 terra.StringValue `hcl:"lexmodelsv2,attr"`
	// Lexruntime is optional. Use this to override the default service endpoint URL
	Lexruntime terra.StringValue `hcl:"lexruntime,attr"`
	// Lexruntimeservice is optional. Use this to override the default service endpoint URL
	Lexruntimeservice terra.StringValue `hcl:"lexruntimeservice,attr"`
	// Lexruntimev2 is optional. Use this to override the default service endpoint URL
	Lexruntimev2 terra.StringValue `hcl:"lexruntimev2,attr"`
	// Lexv2Models is optional. Use this to override the default service endpoint URL
	Lexv2Models terra.StringValue `hcl:"lexv2models,attr"`
	// Lexv2Runtime is optional. Use this to override the default service endpoint URL
	Lexv2Runtime terra.StringValue `hcl:"lexv2runtime,attr"`
	// Licensemanager is optional. Use this to override the default service endpoint URL
	Licensemanager terra.StringValue `hcl:"licensemanager,attr"`
	// Lightsail is optional. Use this to override the default service endpoint URL
	Lightsail terra.StringValue `hcl:"lightsail,attr"`
	// Location is optional. Use this to override the default service endpoint URL
	Location terra.StringValue `hcl:"location,attr"`
	// Locationservice is optional. Use this to override the default service endpoint URL
	Locationservice terra.StringValue `hcl:"locationservice,attr"`
	// Logs is optional. Use this to override the default service endpoint URL
	Logs terra.StringValue `hcl:"logs,attr"`
	// Lookoutequipment is optional. Use this to override the default service endpoint URL
	Lookoutequipment terra.StringValue `hcl:"lookoutequipment,attr"`
	// Lookoutforvision is optional. Use this to override the default service endpoint URL
	Lookoutforvision terra.StringValue `hcl:"lookoutforvision,attr"`
	// Lookoutmetrics is optional. Use this to override the default service endpoint URL
	Lookoutmetrics terra.StringValue `hcl:"lookoutmetrics,attr"`
	// Lookoutvision is optional. Use this to override the default service endpoint URL
	Lookoutvision terra.StringValue `hcl:"lookoutvision,attr"`
	// Machinelearning is optional. Use this to override the default service endpoint URL
	Machinelearning terra.StringValue `hcl:"machinelearning,attr"`
	// Macie is optional. Use this to override the default service endpoint URL
	Macie terra.StringValue `hcl:"macie,attr"`
	// Macie2 is optional. Use this to override the default service endpoint URL
	Macie2 terra.StringValue `hcl:"macie2,attr"`
	// Managedblockchain is optional. Use this to override the default service endpoint URL
	Managedblockchain terra.StringValue `hcl:"managedblockchain,attr"`
	// Managedgrafana is optional. Use this to override the default service endpoint URL
	Managedgrafana terra.StringValue `hcl:"managedgrafana,attr"`
	// Marketplacecatalog is optional. Use this to override the default service endpoint URL
	Marketplacecatalog terra.StringValue `hcl:"marketplacecatalog,attr"`
	// Marketplacecommerceanalytics is optional. Use this to override the default service endpoint URL
	Marketplacecommerceanalytics terra.StringValue `hcl:"marketplacecommerceanalytics,attr"`
	// Marketplaceentitlement is optional. Use this to override the default service endpoint URL
	Marketplaceentitlement terra.StringValue `hcl:"marketplaceentitlement,attr"`
	// Marketplaceentitlementservice is optional. Use this to override the default service endpoint URL
	Marketplaceentitlementservice terra.StringValue `hcl:"marketplaceentitlementservice,attr"`
	// Marketplacemetering is optional. Use this to override the default service endpoint URL
	Marketplacemetering terra.StringValue `hcl:"marketplacemetering,attr"`
	// Mediaconnect is optional. Use this to override the default service endpoint URL
	Mediaconnect terra.StringValue `hcl:"mediaconnect,attr"`
	// Mediaconvert is optional. Use this to override the default service endpoint URL
	Mediaconvert terra.StringValue `hcl:"mediaconvert,attr"`
	// Medialive is optional. Use this to override the default service endpoint URL
	Medialive terra.StringValue `hcl:"medialive,attr"`
	// Mediapackage is optional. Use this to override the default service endpoint URL
	Mediapackage terra.StringValue `hcl:"mediapackage,attr"`
	// Mediapackagevod is optional. Use this to override the default service endpoint URL
	Mediapackagevod terra.StringValue `hcl:"mediapackagevod,attr"`
	// Mediastore is optional. Use this to override the default service endpoint URL
	Mediastore terra.StringValue `hcl:"mediastore,attr"`
	// Mediastoredata is optional. Use this to override the default service endpoint URL
	Mediastoredata terra.StringValue `hcl:"mediastoredata,attr"`
	// Mediatailor is optional. Use this to override the default service endpoint URL
	Mediatailor terra.StringValue `hcl:"mediatailor,attr"`
	// Memorydb is optional. Use this to override the default service endpoint URL
	Memorydb terra.StringValue `hcl:"memorydb,attr"`
	// Meteringmarketplace is optional. Use this to override the default service endpoint URL
	Meteringmarketplace terra.StringValue `hcl:"meteringmarketplace,attr"`
	// Mgh is optional. Use this to override the default service endpoint URL
	Mgh terra.StringValue `hcl:"mgh,attr"`
	// Mgn is optional. Use this to override the default service endpoint URL
	Mgn terra.StringValue `hcl:"mgn,attr"`
	// Migrationhub is optional. Use this to override the default service endpoint URL
	Migrationhub terra.StringValue `hcl:"migrationhub,attr"`
	// Migrationhubconfig is optional. Use this to override the default service endpoint URL
	Migrationhubconfig terra.StringValue `hcl:"migrationhubconfig,attr"`
	// Migrationhubrefactorspaces is optional. Use this to override the default service endpoint URL
	Migrationhubrefactorspaces terra.StringValue `hcl:"migrationhubrefactorspaces,attr"`
	// Migrationhubstrategy is optional. Use this to override the default service endpoint URL
	Migrationhubstrategy terra.StringValue `hcl:"migrationhubstrategy,attr"`
	// Migrationhubstrategyrecommendations is optional. Use this to override the default service endpoint URL
	Migrationhubstrategyrecommendations terra.StringValue `hcl:"migrationhubstrategyrecommendations,attr"`
	// Mobile is optional. Use this to override the default service endpoint URL
	Mobile terra.StringValue `hcl:"mobile,attr"`
	// Mq is optional. Use this to override the default service endpoint URL
	Mq terra.StringValue `hcl:"mq,attr"`
	// Msk is optional. Use this to override the default service endpoint URL
	Msk terra.StringValue `hcl:"msk,attr"`
	// Mturk is optional. Use this to override the default service endpoint URL
	Mturk terra.StringValue `hcl:"mturk,attr"`
	// Mwaa is optional. Use this to override the default service endpoint URL
	Mwaa terra.StringValue `hcl:"mwaa,attr"`
	// Neptune is optional. Use this to override the default service endpoint URL
	Neptune terra.StringValue `hcl:"neptune,attr"`
	// Networkfirewall is optional. Use this to override the default service endpoint URL
	Networkfirewall terra.StringValue `hcl:"networkfirewall,attr"`
	// Networkmanager is optional. Use this to override the default service endpoint URL
	Networkmanager terra.StringValue `hcl:"networkmanager,attr"`
	// Nimble is optional. Use this to override the default service endpoint URL
	Nimble terra.StringValue `hcl:"nimble,attr"`
	// Nimblestudio is optional. Use this to override the default service endpoint URL
	Nimblestudio terra.StringValue `hcl:"nimblestudio,attr"`
	// Oam is optional. Use this to override the default service endpoint URL
	Oam terra.StringValue `hcl:"oam,attr"`
	// Opensearch is optional. Use this to override the default service endpoint URL
	Opensearch terra.StringValue `hcl:"opensearch,attr"`
	// Opensearchserverless is optional. Use this to override the default service endpoint URL
	Opensearchserverless terra.StringValue `hcl:"opensearchserverless,attr"`
	// Opensearchservice is optional. Use this to override the default service endpoint URL
	Opensearchservice terra.StringValue `hcl:"opensearchservice,attr"`
	// Opsworks is optional. Use this to override the default service endpoint URL
	Opsworks terra.StringValue `hcl:"opsworks,attr"`
	// Opsworkscm is optional. Use this to override the default service endpoint URL
	Opsworkscm terra.StringValue `hcl:"opsworkscm,attr"`
	// Organizations is optional. Use this to override the default service endpoint URL
	Organizations terra.StringValue `hcl:"organizations,attr"`
	// Outposts is optional. Use this to override the default service endpoint URL
	Outposts terra.StringValue `hcl:"outposts,attr"`
	// Panorama is optional. Use this to override the default service endpoint URL
	Panorama terra.StringValue `hcl:"panorama,attr"`
	// Personalize is optional. Use this to override the default service endpoint URL
	Personalize terra.StringValue `hcl:"personalize,attr"`
	// Personalizeevents is optional. Use this to override the default service endpoint URL
	Personalizeevents terra.StringValue `hcl:"personalizeevents,attr"`
	// Personalizeruntime is optional. Use this to override the default service endpoint URL
	Personalizeruntime terra.StringValue `hcl:"personalizeruntime,attr"`
	// Pi is optional. Use this to override the default service endpoint URL
	Pi terra.StringValue `hcl:"pi,attr"`
	// Pinpoint is optional. Use this to override the default service endpoint URL
	Pinpoint terra.StringValue `hcl:"pinpoint,attr"`
	// Pinpointemail is optional. Use this to override the default service endpoint URL
	Pinpointemail terra.StringValue `hcl:"pinpointemail,attr"`
	// Pinpointsmsvoice is optional. Use this to override the default service endpoint URL
	Pinpointsmsvoice terra.StringValue `hcl:"pinpointsmsvoice,attr"`
	// Pipes is optional. Use this to override the default service endpoint URL
	Pipes terra.StringValue `hcl:"pipes,attr"`
	// Polly is optional. Use this to override the default service endpoint URL
	Polly terra.StringValue `hcl:"polly,attr"`
	// Pricing is optional. Use this to override the default service endpoint URL
	Pricing terra.StringValue `hcl:"pricing,attr"`
	// Prometheus is optional. Use this to override the default service endpoint URL
	Prometheus terra.StringValue `hcl:"prometheus,attr"`
	// Prometheusservice is optional. Use this to override the default service endpoint URL
	Prometheusservice terra.StringValue `hcl:"prometheusservice,attr"`
	// Proton is optional. Use this to override the default service endpoint URL
	Proton terra.StringValue `hcl:"proton,attr"`
	// Qldb is optional. Use this to override the default service endpoint URL
	Qldb terra.StringValue `hcl:"qldb,attr"`
	// Qldbsession is optional. Use this to override the default service endpoint URL
	Qldbsession terra.StringValue `hcl:"qldbsession,attr"`
	// Quicksight is optional. Use this to override the default service endpoint URL
	Quicksight terra.StringValue `hcl:"quicksight,attr"`
	// Ram is optional. Use this to override the default service endpoint URL
	Ram terra.StringValue `hcl:"ram,attr"`
	// Rbin is optional. Use this to override the default service endpoint URL
	Rbin terra.StringValue `hcl:"rbin,attr"`
	// Rds is optional. Use this to override the default service endpoint URL
	Rds terra.StringValue `hcl:"rds,attr"`
	// Rdsdata is optional. Use this to override the default service endpoint URL
	Rdsdata terra.StringValue `hcl:"rdsdata,attr"`
	// Rdsdataservice is optional. Use this to override the default service endpoint URL
	Rdsdataservice terra.StringValue `hcl:"rdsdataservice,attr"`
	// Recyclebin is optional. Use this to override the default service endpoint URL
	Recyclebin terra.StringValue `hcl:"recyclebin,attr"`
	// Redshift is optional. Use this to override the default service endpoint URL
	Redshift terra.StringValue `hcl:"redshift,attr"`
	// Redshiftdata is optional. Use this to override the default service endpoint URL
	Redshiftdata terra.StringValue `hcl:"redshiftdata,attr"`
	// Redshiftdataapiservice is optional. Use this to override the default service endpoint URL
	Redshiftdataapiservice terra.StringValue `hcl:"redshiftdataapiservice,attr"`
	// Redshiftserverless is optional. Use this to override the default service endpoint URL
	Redshiftserverless terra.StringValue `hcl:"redshiftserverless,attr"`
	// Rekognition is optional. Use this to override the default service endpoint URL
	Rekognition terra.StringValue `hcl:"rekognition,attr"`
	// Resiliencehub is optional. Use this to override the default service endpoint URL
	Resiliencehub terra.StringValue `hcl:"resiliencehub,attr"`
	// Resourceexplorer2 is optional. Use this to override the default service endpoint URL
	Resourceexplorer2 terra.StringValue `hcl:"resourceexplorer2,attr"`
	// Resourcegroups is optional. Use this to override the default service endpoint URL
	Resourcegroups terra.StringValue `hcl:"resourcegroups,attr"`
	// Resourcegroupstagging is optional. Use this to override the default service endpoint URL
	Resourcegroupstagging terra.StringValue `hcl:"resourcegroupstagging,attr"`
	// Resourcegroupstaggingapi is optional. Use this to override the default service endpoint URL
	Resourcegroupstaggingapi terra.StringValue `hcl:"resourcegroupstaggingapi,attr"`
	// Robomaker is optional. Use this to override the default service endpoint URL
	Robomaker terra.StringValue `hcl:"robomaker,attr"`
	// Rolesanywhere is optional. Use this to override the default service endpoint URL
	Rolesanywhere terra.StringValue `hcl:"rolesanywhere,attr"`
	// Route53 is optional. Use this to override the default service endpoint URL
	Route53 terra.StringValue `hcl:"route53,attr"`
	// Route53Domains is optional. Use this to override the default service endpoint URL
	Route53Domains terra.StringValue `hcl:"route53domains,attr"`
	// Route53Recoverycluster is optional. Use this to override the default service endpoint URL
	Route53Recoverycluster terra.StringValue `hcl:"route53recoverycluster,attr"`
	// Route53Recoverycontrolconfig is optional. Use this to override the default service endpoint URL
	Route53Recoverycontrolconfig terra.StringValue `hcl:"route53recoverycontrolconfig,attr"`
	// Route53Recoveryreadiness is optional. Use this to override the default service endpoint URL
	Route53Recoveryreadiness terra.StringValue `hcl:"route53recoveryreadiness,attr"`
	// Route53Resolver is optional. Use this to override the default service endpoint URL
	Route53Resolver terra.StringValue `hcl:"route53resolver,attr"`
	// Rum is optional. Use this to override the default service endpoint URL
	Rum terra.StringValue `hcl:"rum,attr"`
	// S3 is optional. Use this to override the default service endpoint URL
	S3 terra.StringValue `hcl:"s3,attr"`
	// S3Api is optional. Use this to override the default service endpoint URL
	S3Api terra.StringValue `hcl:"s3api,attr"`
	// S3Control is optional. Use this to override the default service endpoint URL
	S3Control terra.StringValue `hcl:"s3control,attr"`
	// S3Outposts is optional. Use this to override the default service endpoint URL
	S3Outposts terra.StringValue `hcl:"s3outposts,attr"`
	// Sagemaker is optional. Use this to override the default service endpoint URL
	Sagemaker terra.StringValue `hcl:"sagemaker,attr"`
	// Sagemakera2Iruntime is optional. Use this to override the default service endpoint URL
	Sagemakera2Iruntime terra.StringValue `hcl:"sagemakera2iruntime,attr"`
	// Sagemakeredge is optional. Use this to override the default service endpoint URL
	Sagemakeredge terra.StringValue `hcl:"sagemakeredge,attr"`
	// Sagemakeredgemanager is optional. Use this to override the default service endpoint URL
	Sagemakeredgemanager terra.StringValue `hcl:"sagemakeredgemanager,attr"`
	// Sagemakerfeaturestoreruntime is optional. Use this to override the default service endpoint URL
	Sagemakerfeaturestoreruntime terra.StringValue `hcl:"sagemakerfeaturestoreruntime,attr"`
	// Sagemakerruntime is optional. Use this to override the default service endpoint URL
	Sagemakerruntime terra.StringValue `hcl:"sagemakerruntime,attr"`
	// Savingsplans is optional. Use this to override the default service endpoint URL
	Savingsplans terra.StringValue `hcl:"savingsplans,attr"`
	// Scheduler is optional. Use this to override the default service endpoint URL
	Scheduler terra.StringValue `hcl:"scheduler,attr"`
	// Schemas is optional. Use this to override the default service endpoint URL
	Schemas terra.StringValue `hcl:"schemas,attr"`
	// Sdb is optional. Use this to override the default service endpoint URL
	Sdb terra.StringValue `hcl:"sdb,attr"`
	// Secretsmanager is optional. Use this to override the default service endpoint URL
	Secretsmanager terra.StringValue `hcl:"secretsmanager,attr"`
	// Securityhub is optional. Use this to override the default service endpoint URL
	Securityhub terra.StringValue `hcl:"securityhub,attr"`
	// Securitylake is optional. Use this to override the default service endpoint URL
	Securitylake terra.StringValue `hcl:"securitylake,attr"`
	// Serverlessapplicationrepository is optional. Use this to override the default service endpoint URL
	Serverlessapplicationrepository terra.StringValue `hcl:"serverlessapplicationrepository,attr"`
	// Serverlessapprepo is optional. Use this to override the default service endpoint URL
	Serverlessapprepo terra.StringValue `hcl:"serverlessapprepo,attr"`
	// Serverlessrepo is optional. Use this to override the default service endpoint URL
	Serverlessrepo terra.StringValue `hcl:"serverlessrepo,attr"`
	// Servicecatalog is optional. Use this to override the default service endpoint URL
	Servicecatalog terra.StringValue `hcl:"servicecatalog,attr"`
	// Servicecatalogappregistry is optional. Use this to override the default service endpoint URL
	Servicecatalogappregistry terra.StringValue `hcl:"servicecatalogappregistry,attr"`
	// Servicediscovery is optional. Use this to override the default service endpoint URL
	Servicediscovery terra.StringValue `hcl:"servicediscovery,attr"`
	// Servicequotas is optional. Use this to override the default service endpoint URL
	Servicequotas terra.StringValue `hcl:"servicequotas,attr"`
	// Ses is optional. Use this to override the default service endpoint URL
	Ses terra.StringValue `hcl:"ses,attr"`
	// Sesv2 is optional. Use this to override the default service endpoint URL
	Sesv2 terra.StringValue `hcl:"sesv2,attr"`
	// Sfn is optional. Use this to override the default service endpoint URL
	Sfn terra.StringValue `hcl:"sfn,attr"`
	// Shield is optional. Use this to override the default service endpoint URL
	Shield terra.StringValue `hcl:"shield,attr"`
	// Signer is optional. Use this to override the default service endpoint URL
	Signer terra.StringValue `hcl:"signer,attr"`
	// Simpledb is optional. Use this to override the default service endpoint URL
	Simpledb terra.StringValue `hcl:"simpledb,attr"`
	// Sms is optional. Use this to override the default service endpoint URL
	Sms terra.StringValue `hcl:"sms,attr"`
	// Snowball is optional. Use this to override the default service endpoint URL
	Snowball terra.StringValue `hcl:"snowball,attr"`
	// Snowdevicemanagement is optional. Use this to override the default service endpoint URL
	Snowdevicemanagement terra.StringValue `hcl:"snowdevicemanagement,attr"`
	// Sns is optional. Use this to override the default service endpoint URL
	Sns terra.StringValue `hcl:"sns,attr"`
	// Sqs is optional. Use this to override the default service endpoint URL
	Sqs terra.StringValue `hcl:"sqs,attr"`
	// Ssm is optional. Use this to override the default service endpoint URL
	Ssm terra.StringValue `hcl:"ssm,attr"`
	// Ssmcontacts is optional. Use this to override the default service endpoint URL
	Ssmcontacts terra.StringValue `hcl:"ssmcontacts,attr"`
	// Ssmincidents is optional. Use this to override the default service endpoint URL
	Ssmincidents terra.StringValue `hcl:"ssmincidents,attr"`
	// Sso is optional. Use this to override the default service endpoint URL
	Sso terra.StringValue `hcl:"sso,attr"`
	// Ssoadmin is optional. Use this to override the default service endpoint URL
	Ssoadmin terra.StringValue `hcl:"ssoadmin,attr"`
	// Ssooidc is optional. Use this to override the default service endpoint URL
	Ssooidc terra.StringValue `hcl:"ssooidc,attr"`
	// Stepfunctions is optional. Use this to override the default service endpoint URL
	Stepfunctions terra.StringValue `hcl:"stepfunctions,attr"`
	// Storagegateway is optional. Use this to override the default service endpoint URL
	Storagegateway terra.StringValue `hcl:"storagegateway,attr"`
	// Sts is optional. Use this to override the default service endpoint URL
	Sts terra.StringValue `hcl:"sts,attr"`
	// Support is optional. Use this to override the default service endpoint URL
	Support terra.StringValue `hcl:"support,attr"`
	// Swf is optional. Use this to override the default service endpoint URL
	Swf terra.StringValue `hcl:"swf,attr"`
	// Synthetics is optional. Use this to override the default service endpoint URL
	Synthetics terra.StringValue `hcl:"synthetics,attr"`
	// Textract is optional. Use this to override the default service endpoint URL
	Textract terra.StringValue `hcl:"textract,attr"`
	// Timestreamquery is optional. Use this to override the default service endpoint URL
	Timestreamquery terra.StringValue `hcl:"timestreamquery,attr"`
	// Timestreamwrite is optional. Use this to override the default service endpoint URL
	Timestreamwrite terra.StringValue `hcl:"timestreamwrite,attr"`
	// Transcribe is optional. Use this to override the default service endpoint URL
	Transcribe terra.StringValue `hcl:"transcribe,attr"`
	// Transcribeservice is optional. Use this to override the default service endpoint URL
	Transcribeservice terra.StringValue `hcl:"transcribeservice,attr"`
	// Transcribestreaming is optional. Use this to override the default service endpoint URL
	Transcribestreaming terra.StringValue `hcl:"transcribestreaming,attr"`
	// Transcribestreamingservice is optional. Use this to override the default service endpoint URL
	Transcribestreamingservice terra.StringValue `hcl:"transcribestreamingservice,attr"`
	// Transfer is optional. Use this to override the default service endpoint URL
	Transfer terra.StringValue `hcl:"transfer,attr"`
	// Translate is optional. Use this to override the default service endpoint URL
	Translate terra.StringValue `hcl:"translate,attr"`
	// Voiceid is optional. Use this to override the default service endpoint URL
	Voiceid terra.StringValue `hcl:"voiceid,attr"`
	// Vpclattice is optional. Use this to override the default service endpoint URL
	Vpclattice terra.StringValue `hcl:"vpclattice,attr"`
	// Waf is optional. Use this to override the default service endpoint URL
	Waf terra.StringValue `hcl:"waf,attr"`
	// Wafregional is optional. Use this to override the default service endpoint URL
	Wafregional terra.StringValue `hcl:"wafregional,attr"`
	// Wafv2 is optional. Use this to override the default service endpoint URL
	Wafv2 terra.StringValue `hcl:"wafv2,attr"`
	// Wellarchitected is optional. Use this to override the default service endpoint URL
	Wellarchitected terra.StringValue `hcl:"wellarchitected,attr"`
	// Wisdom is optional. Use this to override the default service endpoint URL
	Wisdom terra.StringValue `hcl:"wisdom,attr"`
	// Workdocs is optional. Use this to override the default service endpoint URL
	Workdocs terra.StringValue `hcl:"workdocs,attr"`
	// Worklink is optional. Use this to override the default service endpoint URL
	Worklink terra.StringValue `hcl:"worklink,attr"`
	// Workmail is optional. Use this to override the default service endpoint URL
	Workmail terra.StringValue `hcl:"workmail,attr"`
	// Workmailmessageflow is optional. Use this to override the default service endpoint URL
	Workmailmessageflow terra.StringValue `hcl:"workmailmessageflow,attr"`
	// Workspaces is optional. Use this to override the default service endpoint URL
	Workspaces terra.StringValue `hcl:"workspaces,attr"`
	// Workspacesweb is optional. Use this to override the default service endpoint URL
	Workspacesweb terra.StringValue `hcl:"workspacesweb,attr"`
	// Xray is optional. Use this to override the default service endpoint URL
	Xray terra.StringValue `hcl:"xray,attr"`
}

type IgnoreTags struct {
	// KeyPrefixes is optional. Resource tag key prefixes to ignore across all resources.
	KeyPrefixes terra.SetValue[terra.StringValue] `hcl:"key_prefixes,attr"`
	// Keys is optional. Resource tag keys to ignore across all resources.
	Keys terra.SetValue[terra.StringValue] `hcl:"keys,attr"`
}

type assumeRoleAttributes struct {
	ref terra.Reference
}

func (ar assumeRoleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar assumeRoleAttributes) InternalWithRef(ref terra.Reference) assumeRoleAttributes {
	return assumeRoleAttributes{ref: ref}
}

func (ar assumeRoleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ar.ref.InternalTokens()
}

func (ar assumeRoleAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("duration"))
}

func (ar assumeRoleAttributes) ExternalId() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("external_id"))
}

func (ar assumeRoleAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("policy"))
}

func (ar assumeRoleAttributes) PolicyArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ar.ref.Append("policy_arns"))
}

func (ar assumeRoleAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("role_arn"))
}

func (ar assumeRoleAttributes) SessionName() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("session_name"))
}

func (ar assumeRoleAttributes) SourceIdentity() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("source_identity"))
}

func (ar assumeRoleAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ar.ref.Append("tags"))
}

func (ar assumeRoleAttributes) TransitiveTagKeys() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ar.ref.Append("transitive_tag_keys"))
}

type assumeRoleWithWebIdentityAttributes struct {
	ref terra.Reference
}

func (arwwi assumeRoleWithWebIdentityAttributes) InternalRef() (terra.Reference, error) {
	return arwwi.ref, nil
}

func (arwwi assumeRoleWithWebIdentityAttributes) InternalWithRef(ref terra.Reference) assumeRoleWithWebIdentityAttributes {
	return assumeRoleWithWebIdentityAttributes{ref: ref}
}

func (arwwi assumeRoleWithWebIdentityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return arwwi.ref.InternalTokens()
}

func (arwwi assumeRoleWithWebIdentityAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(arwwi.ref.Append("duration"))
}

func (arwwi assumeRoleWithWebIdentityAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(arwwi.ref.Append("policy"))
}

func (arwwi assumeRoleWithWebIdentityAttributes) PolicyArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](arwwi.ref.Append("policy_arns"))
}

func (arwwi assumeRoleWithWebIdentityAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(arwwi.ref.Append("role_arn"))
}

func (arwwi assumeRoleWithWebIdentityAttributes) SessionName() terra.StringValue {
	return terra.ReferenceAsString(arwwi.ref.Append("session_name"))
}

func (arwwi assumeRoleWithWebIdentityAttributes) WebIdentityToken() terra.StringValue {
	return terra.ReferenceAsString(arwwi.ref.Append("web_identity_token"))
}

func (arwwi assumeRoleWithWebIdentityAttributes) WebIdentityTokenFile() terra.StringValue {
	return terra.ReferenceAsString(arwwi.ref.Append("web_identity_token_file"))
}

type defaultTagsAttributes struct {
	ref terra.Reference
}

func (dt defaultTagsAttributes) InternalRef() (terra.Reference, error) {
	return dt.ref, nil
}

func (dt defaultTagsAttributes) InternalWithRef(ref terra.Reference) defaultTagsAttributes {
	return defaultTagsAttributes{ref: ref}
}

func (dt defaultTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dt.ref.InternalTokens()
}

func (dt defaultTagsAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](dt.ref.Append("tags"))
}

type endpointsAttributes struct {
	ref terra.Reference
}

func (e endpointsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e endpointsAttributes) InternalWithRef(ref terra.Reference) endpointsAttributes {
	return endpointsAttributes{ref: ref}
}

func (e endpointsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e endpointsAttributes) Accessanalyzer() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("accessanalyzer"))
}

func (e endpointsAttributes) Account() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("account"))
}

func (e endpointsAttributes) Acm() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("acm"))
}

func (e endpointsAttributes) Acmpca() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("acmpca"))
}

func (e endpointsAttributes) Alexaforbusiness() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("alexaforbusiness"))
}

func (e endpointsAttributes) Amg() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("amg"))
}

func (e endpointsAttributes) Amp() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("amp"))
}

func (e endpointsAttributes) Amplify() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("amplify"))
}

func (e endpointsAttributes) Amplifybackend() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("amplifybackend"))
}

func (e endpointsAttributes) Amplifyuibuilder() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("amplifyuibuilder"))
}

func (e endpointsAttributes) Apigateway() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("apigateway"))
}

func (e endpointsAttributes) Apigatewaymanagementapi() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("apigatewaymanagementapi"))
}

func (e endpointsAttributes) Apigatewayv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("apigatewayv2"))
}

func (e endpointsAttributes) Appautoscaling() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appautoscaling"))
}

func (e endpointsAttributes) Appconfig() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appconfig"))
}

func (e endpointsAttributes) Appconfigdata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appconfigdata"))
}

func (e endpointsAttributes) Appflow() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appflow"))
}

func (e endpointsAttributes) Appintegrations() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appintegrations"))
}

func (e endpointsAttributes) Appintegrationsservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appintegrationsservice"))
}

func (e endpointsAttributes) Applicationautoscaling() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("applicationautoscaling"))
}

func (e endpointsAttributes) Applicationcostprofiler() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("applicationcostprofiler"))
}

func (e endpointsAttributes) Applicationdiscovery() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("applicationdiscovery"))
}

func (e endpointsAttributes) Applicationdiscoveryservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("applicationdiscoveryservice"))
}

func (e endpointsAttributes) Applicationinsights() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("applicationinsights"))
}

func (e endpointsAttributes) Appmesh() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appmesh"))
}

func (e endpointsAttributes) Appregistry() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appregistry"))
}

func (e endpointsAttributes) Apprunner() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("apprunner"))
}

func (e endpointsAttributes) Appstream() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appstream"))
}

func (e endpointsAttributes) Appsync() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("appsync"))
}

func (e endpointsAttributes) Athena() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("athena"))
}

func (e endpointsAttributes) Auditmanager() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("auditmanager"))
}

func (e endpointsAttributes) Augmentedairuntime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("augmentedairuntime"))
}

func (e endpointsAttributes) Autoscaling() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("autoscaling"))
}

func (e endpointsAttributes) Autoscalingplans() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("autoscalingplans"))
}

func (e endpointsAttributes) Backup() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("backup"))
}

func (e endpointsAttributes) Backupgateway() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("backupgateway"))
}

func (e endpointsAttributes) Batch() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("batch"))
}

func (e endpointsAttributes) Beanstalk() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("beanstalk"))
}

func (e endpointsAttributes) Billingconductor() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("billingconductor"))
}

func (e endpointsAttributes) Braket() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("braket"))
}

func (e endpointsAttributes) Budgets() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("budgets"))
}

func (e endpointsAttributes) Ce() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ce"))
}

func (e endpointsAttributes) Chime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("chime"))
}

func (e endpointsAttributes) Chimesdkidentity() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("chimesdkidentity"))
}

func (e endpointsAttributes) Chimesdkmediapipelines() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("chimesdkmediapipelines"))
}

func (e endpointsAttributes) Chimesdkmeetings() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("chimesdkmeetings"))
}

func (e endpointsAttributes) Chimesdkmessaging() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("chimesdkmessaging"))
}

func (e endpointsAttributes) Chimesdkvoice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("chimesdkvoice"))
}

func (e endpointsAttributes) Cleanrooms() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cleanrooms"))
}

func (e endpointsAttributes) Cloud9() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloud9"))
}

func (e endpointsAttributes) Cloudcontrol() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudcontrol"))
}

func (e endpointsAttributes) Cloudcontrolapi() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudcontrolapi"))
}

func (e endpointsAttributes) Clouddirectory() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("clouddirectory"))
}

func (e endpointsAttributes) Cloudformation() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudformation"))
}

func (e endpointsAttributes) Cloudfront() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudfront"))
}

func (e endpointsAttributes) Cloudhsm() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudhsm"))
}

func (e endpointsAttributes) Cloudhsmv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudhsmv2"))
}

func (e endpointsAttributes) Cloudsearch() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudsearch"))
}

func (e endpointsAttributes) Cloudsearchdomain() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudsearchdomain"))
}

func (e endpointsAttributes) Cloudtrail() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudtrail"))
}

func (e endpointsAttributes) Cloudwatch() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudwatch"))
}

func (e endpointsAttributes) Cloudwatchevents() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudwatchevents"))
}

func (e endpointsAttributes) Cloudwatchevidently() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudwatchevidently"))
}

func (e endpointsAttributes) Cloudwatchlog() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudwatchlog"))
}

func (e endpointsAttributes) Cloudwatchlogs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudwatchlogs"))
}

func (e endpointsAttributes) Cloudwatchobservabilityaccessmanager() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudwatchobservabilityaccessmanager"))
}

func (e endpointsAttributes) Cloudwatchrum() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cloudwatchrum"))
}

func (e endpointsAttributes) Codeartifact() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codeartifact"))
}

func (e endpointsAttributes) Codebuild() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codebuild"))
}

func (e endpointsAttributes) Codecommit() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codecommit"))
}

func (e endpointsAttributes) Codedeploy() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codedeploy"))
}

func (e endpointsAttributes) Codeguruprofiler() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codeguruprofiler"))
}

func (e endpointsAttributes) Codegurureviewer() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codegurureviewer"))
}

func (e endpointsAttributes) Codepipeline() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codepipeline"))
}

func (e endpointsAttributes) Codestar() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codestar"))
}

func (e endpointsAttributes) Codestarconnections() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codestarconnections"))
}

func (e endpointsAttributes) Codestarnotifications() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("codestarnotifications"))
}

func (e endpointsAttributes) Cognitoidentity() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cognitoidentity"))
}

func (e endpointsAttributes) Cognitoidentityprovider() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cognitoidentityprovider"))
}

func (e endpointsAttributes) Cognitoidp() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cognitoidp"))
}

func (e endpointsAttributes) Cognitosync() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cognitosync"))
}

func (e endpointsAttributes) Comprehend() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("comprehend"))
}

func (e endpointsAttributes) Comprehendmedical() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("comprehendmedical"))
}

func (e endpointsAttributes) Computeoptimizer() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("computeoptimizer"))
}

func (e endpointsAttributes) Config() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("config"))
}

func (e endpointsAttributes) Configservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("configservice"))
}

func (e endpointsAttributes) Connect() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("connect"))
}

func (e endpointsAttributes) Connectcontactlens() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("connectcontactlens"))
}

func (e endpointsAttributes) Connectparticipant() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("connectparticipant"))
}

func (e endpointsAttributes) Connectwisdomservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("connectwisdomservice"))
}

func (e endpointsAttributes) Controltower() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("controltower"))
}

func (e endpointsAttributes) Costandusagereportservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("costandusagereportservice"))
}

func (e endpointsAttributes) Costexplorer() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("costexplorer"))
}

func (e endpointsAttributes) Cur() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("cur"))
}

func (e endpointsAttributes) Customerprofiles() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("customerprofiles"))
}

func (e endpointsAttributes) Databasemigration() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("databasemigration"))
}

func (e endpointsAttributes) Databasemigrationservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("databasemigrationservice"))
}

func (e endpointsAttributes) Databrew() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("databrew"))
}

func (e endpointsAttributes) Dataexchange() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("dataexchange"))
}

func (e endpointsAttributes) Datapipeline() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("datapipeline"))
}

func (e endpointsAttributes) Datasync() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("datasync"))
}

func (e endpointsAttributes) Dax() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("dax"))
}

func (e endpointsAttributes) Deploy() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("deploy"))
}

func (e endpointsAttributes) Detective() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("detective"))
}

func (e endpointsAttributes) Devicefarm() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("devicefarm"))
}

func (e endpointsAttributes) Devopsguru() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("devopsguru"))
}

func (e endpointsAttributes) Directconnect() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("directconnect"))
}

func (e endpointsAttributes) Directoryservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("directoryservice"))
}

func (e endpointsAttributes) Discovery() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("discovery"))
}

func (e endpointsAttributes) Dlm() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("dlm"))
}

func (e endpointsAttributes) Dms() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("dms"))
}

func (e endpointsAttributes) Docdb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("docdb"))
}

func (e endpointsAttributes) Docdbelastic() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("docdbelastic"))
}

func (e endpointsAttributes) Drs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("drs"))
}

func (e endpointsAttributes) Ds() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ds"))
}

func (e endpointsAttributes) Dynamodb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("dynamodb"))
}

func (e endpointsAttributes) Dynamodbstreams() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("dynamodbstreams"))
}

func (e endpointsAttributes) Ebs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ebs"))
}

func (e endpointsAttributes) Ec2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ec2"))
}

func (e endpointsAttributes) Ec2Instanceconnect() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ec2instanceconnect"))
}

func (e endpointsAttributes) Ecr() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ecr"))
}

func (e endpointsAttributes) Ecrpublic() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ecrpublic"))
}

func (e endpointsAttributes) Ecs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ecs"))
}

func (e endpointsAttributes) Efs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("efs"))
}

func (e endpointsAttributes) Eks() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("eks"))
}

func (e endpointsAttributes) Elasticache() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elasticache"))
}

func (e endpointsAttributes) Elasticbeanstalk() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elasticbeanstalk"))
}

func (e endpointsAttributes) Elasticinference() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elasticinference"))
}

func (e endpointsAttributes) Elasticloadbalancing() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elasticloadbalancing"))
}

func (e endpointsAttributes) Elasticloadbalancingv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elasticloadbalancingv2"))
}

func (e endpointsAttributes) Elasticsearch() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elasticsearch"))
}

func (e endpointsAttributes) Elasticsearchservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elasticsearchservice"))
}

func (e endpointsAttributes) Elastictranscoder() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elastictranscoder"))
}

func (e endpointsAttributes) Elb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elb"))
}

func (e endpointsAttributes) Elbv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("elbv2"))
}

func (e endpointsAttributes) Emr() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("emr"))
}

func (e endpointsAttributes) Emrcontainers() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("emrcontainers"))
}

func (e endpointsAttributes) Emrserverless() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("emrserverless"))
}

func (e endpointsAttributes) Es() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("es"))
}

func (e endpointsAttributes) Eventbridge() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("eventbridge"))
}

func (e endpointsAttributes) Events() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("events"))
}

func (e endpointsAttributes) Evidently() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("evidently"))
}

func (e endpointsAttributes) Finspace() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("finspace"))
}

func (e endpointsAttributes) Finspacedata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("finspacedata"))
}

func (e endpointsAttributes) Firehose() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("firehose"))
}

func (e endpointsAttributes) Fis() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("fis"))
}

func (e endpointsAttributes) Fms() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("fms"))
}

func (e endpointsAttributes) Forecast() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("forecast"))
}

func (e endpointsAttributes) Forecastquery() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("forecastquery"))
}

func (e endpointsAttributes) Forecastqueryservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("forecastqueryservice"))
}

func (e endpointsAttributes) Forecastservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("forecastservice"))
}

func (e endpointsAttributes) Frauddetector() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("frauddetector"))
}

func (e endpointsAttributes) Fsx() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("fsx"))
}

func (e endpointsAttributes) Gamelift() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("gamelift"))
}

func (e endpointsAttributes) Glacier() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("glacier"))
}

func (e endpointsAttributes) Globalaccelerator() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("globalaccelerator"))
}

func (e endpointsAttributes) Glue() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("glue"))
}

func (e endpointsAttributes) Gluedatabrew() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("gluedatabrew"))
}

func (e endpointsAttributes) Grafana() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("grafana"))
}

func (e endpointsAttributes) Greengrass() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("greengrass"))
}

func (e endpointsAttributes) Greengrassv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("greengrassv2"))
}

func (e endpointsAttributes) Groundstation() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("groundstation"))
}

func (e endpointsAttributes) Guardduty() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("guardduty"))
}

func (e endpointsAttributes) Health() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("health"))
}

func (e endpointsAttributes) Healthlake() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("healthlake"))
}

func (e endpointsAttributes) Honeycode() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("honeycode"))
}

func (e endpointsAttributes) Iam() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iam"))
}

func (e endpointsAttributes) Identitystore() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("identitystore"))
}

func (e endpointsAttributes) Imagebuilder() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("imagebuilder"))
}

func (e endpointsAttributes) Inspector() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("inspector"))
}

func (e endpointsAttributes) Inspector2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("inspector2"))
}

func (e endpointsAttributes) Inspectorv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("inspectorv2"))
}

func (e endpointsAttributes) Internetmonitor() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("internetmonitor"))
}

func (e endpointsAttributes) Iot() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iot"))
}

func (e endpointsAttributes) Iot1Clickdevices() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iot1clickdevices"))
}

func (e endpointsAttributes) Iot1Clickdevicesservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iot1clickdevicesservice"))
}

func (e endpointsAttributes) Iot1Clickprojects() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iot1clickprojects"))
}

func (e endpointsAttributes) Iotanalytics() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotanalytics"))
}

func (e endpointsAttributes) Iotdata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotdata"))
}

func (e endpointsAttributes) Iotdataplane() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotdataplane"))
}

func (e endpointsAttributes) Iotdeviceadvisor() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotdeviceadvisor"))
}

func (e endpointsAttributes) Iotevents() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotevents"))
}

func (e endpointsAttributes) Ioteventsdata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ioteventsdata"))
}

func (e endpointsAttributes) Iotfleethub() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotfleethub"))
}

func (e endpointsAttributes) Iotjobsdata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotjobsdata"))
}

func (e endpointsAttributes) Iotjobsdataplane() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotjobsdataplane"))
}

func (e endpointsAttributes) Iotsecuretunneling() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotsecuretunneling"))
}

func (e endpointsAttributes) Iotsitewise() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotsitewise"))
}

func (e endpointsAttributes) Iotthingsgraph() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotthingsgraph"))
}

func (e endpointsAttributes) Iottwinmaker() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iottwinmaker"))
}

func (e endpointsAttributes) Iotwireless() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("iotwireless"))
}

func (e endpointsAttributes) Ivs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ivs"))
}

func (e endpointsAttributes) Ivschat() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ivschat"))
}

func (e endpointsAttributes) Kafka() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kafka"))
}

func (e endpointsAttributes) Kafkaconnect() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kafkaconnect"))
}

func (e endpointsAttributes) Kendra() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kendra"))
}

func (e endpointsAttributes) Keyspaces() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("keyspaces"))
}

func (e endpointsAttributes) Kinesis() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesis"))
}

func (e endpointsAttributes) Kinesisanalytics() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesisanalytics"))
}

func (e endpointsAttributes) Kinesisanalyticsv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesisanalyticsv2"))
}

func (e endpointsAttributes) Kinesisvideo() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesisvideo"))
}

func (e endpointsAttributes) Kinesisvideoarchivedmedia() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesisvideoarchivedmedia"))
}

func (e endpointsAttributes) Kinesisvideomedia() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesisvideomedia"))
}

func (e endpointsAttributes) Kinesisvideosignaling() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesisvideosignaling"))
}

func (e endpointsAttributes) Kinesisvideosignalingchannels() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kinesisvideosignalingchannels"))
}

func (e endpointsAttributes) Kms() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kms"))
}

func (e endpointsAttributes) Lakeformation() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lakeformation"))
}

func (e endpointsAttributes) Lambda() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lambda"))
}

func (e endpointsAttributes) Lex() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lex"))
}

func (e endpointsAttributes) Lexmodelbuilding() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexmodelbuilding"))
}

func (e endpointsAttributes) Lexmodelbuildingservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexmodelbuildingservice"))
}

func (e endpointsAttributes) Lexmodels() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexmodels"))
}

func (e endpointsAttributes) Lexmodelsv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexmodelsv2"))
}

func (e endpointsAttributes) Lexruntime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexruntime"))
}

func (e endpointsAttributes) Lexruntimeservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexruntimeservice"))
}

func (e endpointsAttributes) Lexruntimev2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexruntimev2"))
}

func (e endpointsAttributes) Lexv2Models() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexv2models"))
}

func (e endpointsAttributes) Lexv2Runtime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lexv2runtime"))
}

func (e endpointsAttributes) Licensemanager() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("licensemanager"))
}

func (e endpointsAttributes) Lightsail() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lightsail"))
}

func (e endpointsAttributes) Location() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("location"))
}

func (e endpointsAttributes) Locationservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("locationservice"))
}

func (e endpointsAttributes) Logs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("logs"))
}

func (e endpointsAttributes) Lookoutequipment() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lookoutequipment"))
}

func (e endpointsAttributes) Lookoutforvision() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lookoutforvision"))
}

func (e endpointsAttributes) Lookoutmetrics() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lookoutmetrics"))
}

func (e endpointsAttributes) Lookoutvision() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("lookoutvision"))
}

func (e endpointsAttributes) Machinelearning() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("machinelearning"))
}

func (e endpointsAttributes) Macie() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("macie"))
}

func (e endpointsAttributes) Macie2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("macie2"))
}

func (e endpointsAttributes) Managedblockchain() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("managedblockchain"))
}

func (e endpointsAttributes) Managedgrafana() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("managedgrafana"))
}

func (e endpointsAttributes) Marketplacecatalog() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("marketplacecatalog"))
}

func (e endpointsAttributes) Marketplacecommerceanalytics() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("marketplacecommerceanalytics"))
}

func (e endpointsAttributes) Marketplaceentitlement() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("marketplaceentitlement"))
}

func (e endpointsAttributes) Marketplaceentitlementservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("marketplaceentitlementservice"))
}

func (e endpointsAttributes) Marketplacemetering() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("marketplacemetering"))
}

func (e endpointsAttributes) Mediaconnect() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mediaconnect"))
}

func (e endpointsAttributes) Mediaconvert() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mediaconvert"))
}

func (e endpointsAttributes) Medialive() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("medialive"))
}

func (e endpointsAttributes) Mediapackage() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mediapackage"))
}

func (e endpointsAttributes) Mediapackagevod() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mediapackagevod"))
}

func (e endpointsAttributes) Mediastore() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mediastore"))
}

func (e endpointsAttributes) Mediastoredata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mediastoredata"))
}

func (e endpointsAttributes) Mediatailor() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mediatailor"))
}

func (e endpointsAttributes) Memorydb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("memorydb"))
}

func (e endpointsAttributes) Meteringmarketplace() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("meteringmarketplace"))
}

func (e endpointsAttributes) Mgh() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mgh"))
}

func (e endpointsAttributes) Mgn() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mgn"))
}

func (e endpointsAttributes) Migrationhub() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("migrationhub"))
}

func (e endpointsAttributes) Migrationhubconfig() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("migrationhubconfig"))
}

func (e endpointsAttributes) Migrationhubrefactorspaces() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("migrationhubrefactorspaces"))
}

func (e endpointsAttributes) Migrationhubstrategy() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("migrationhubstrategy"))
}

func (e endpointsAttributes) Migrationhubstrategyrecommendations() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("migrationhubstrategyrecommendations"))
}

func (e endpointsAttributes) Mobile() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mobile"))
}

func (e endpointsAttributes) Mq() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mq"))
}

func (e endpointsAttributes) Msk() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("msk"))
}

func (e endpointsAttributes) Mturk() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mturk"))
}

func (e endpointsAttributes) Mwaa() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("mwaa"))
}

func (e endpointsAttributes) Neptune() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("neptune"))
}

func (e endpointsAttributes) Networkfirewall() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("networkfirewall"))
}

func (e endpointsAttributes) Networkmanager() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("networkmanager"))
}

func (e endpointsAttributes) Nimble() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("nimble"))
}

func (e endpointsAttributes) Nimblestudio() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("nimblestudio"))
}

func (e endpointsAttributes) Oam() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("oam"))
}

func (e endpointsAttributes) Opensearch() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("opensearch"))
}

func (e endpointsAttributes) Opensearchserverless() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("opensearchserverless"))
}

func (e endpointsAttributes) Opensearchservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("opensearchservice"))
}

func (e endpointsAttributes) Opsworks() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("opsworks"))
}

func (e endpointsAttributes) Opsworkscm() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("opsworkscm"))
}

func (e endpointsAttributes) Organizations() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("organizations"))
}

func (e endpointsAttributes) Outposts() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("outposts"))
}

func (e endpointsAttributes) Panorama() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("panorama"))
}

func (e endpointsAttributes) Personalize() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("personalize"))
}

func (e endpointsAttributes) Personalizeevents() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("personalizeevents"))
}

func (e endpointsAttributes) Personalizeruntime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("personalizeruntime"))
}

func (e endpointsAttributes) Pi() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("pi"))
}

func (e endpointsAttributes) Pinpoint() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("pinpoint"))
}

func (e endpointsAttributes) Pinpointemail() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("pinpointemail"))
}

func (e endpointsAttributes) Pinpointsmsvoice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("pinpointsmsvoice"))
}

func (e endpointsAttributes) Pipes() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("pipes"))
}

func (e endpointsAttributes) Polly() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("polly"))
}

func (e endpointsAttributes) Pricing() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("pricing"))
}

func (e endpointsAttributes) Prometheus() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("prometheus"))
}

func (e endpointsAttributes) Prometheusservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("prometheusservice"))
}

func (e endpointsAttributes) Proton() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("proton"))
}

func (e endpointsAttributes) Qldb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("qldb"))
}

func (e endpointsAttributes) Qldbsession() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("qldbsession"))
}

func (e endpointsAttributes) Quicksight() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("quicksight"))
}

func (e endpointsAttributes) Ram() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ram"))
}

func (e endpointsAttributes) Rbin() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("rbin"))
}

func (e endpointsAttributes) Rds() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("rds"))
}

func (e endpointsAttributes) Rdsdata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("rdsdata"))
}

func (e endpointsAttributes) Rdsdataservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("rdsdataservice"))
}

func (e endpointsAttributes) Recyclebin() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("recyclebin"))
}

func (e endpointsAttributes) Redshift() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("redshift"))
}

func (e endpointsAttributes) Redshiftdata() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("redshiftdata"))
}

func (e endpointsAttributes) Redshiftdataapiservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("redshiftdataapiservice"))
}

func (e endpointsAttributes) Redshiftserverless() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("redshiftserverless"))
}

func (e endpointsAttributes) Rekognition() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("rekognition"))
}

func (e endpointsAttributes) Resiliencehub() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("resiliencehub"))
}

func (e endpointsAttributes) Resourceexplorer2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("resourceexplorer2"))
}

func (e endpointsAttributes) Resourcegroups() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("resourcegroups"))
}

func (e endpointsAttributes) Resourcegroupstagging() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("resourcegroupstagging"))
}

func (e endpointsAttributes) Resourcegroupstaggingapi() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("resourcegroupstaggingapi"))
}

func (e endpointsAttributes) Robomaker() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("robomaker"))
}

func (e endpointsAttributes) Rolesanywhere() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("rolesanywhere"))
}

func (e endpointsAttributes) Route53() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("route53"))
}

func (e endpointsAttributes) Route53Domains() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("route53domains"))
}

func (e endpointsAttributes) Route53Recoverycluster() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("route53recoverycluster"))
}

func (e endpointsAttributes) Route53Recoverycontrolconfig() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("route53recoverycontrolconfig"))
}

func (e endpointsAttributes) Route53Recoveryreadiness() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("route53recoveryreadiness"))
}

func (e endpointsAttributes) Route53Resolver() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("route53resolver"))
}

func (e endpointsAttributes) Rum() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("rum"))
}

func (e endpointsAttributes) S3() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("s3"))
}

func (e endpointsAttributes) S3Api() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("s3api"))
}

func (e endpointsAttributes) S3Control() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("s3control"))
}

func (e endpointsAttributes) S3Outposts() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("s3outposts"))
}

func (e endpointsAttributes) Sagemaker() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sagemaker"))
}

func (e endpointsAttributes) Sagemakera2Iruntime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sagemakera2iruntime"))
}

func (e endpointsAttributes) Sagemakeredge() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sagemakeredge"))
}

func (e endpointsAttributes) Sagemakeredgemanager() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sagemakeredgemanager"))
}

func (e endpointsAttributes) Sagemakerfeaturestoreruntime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sagemakerfeaturestoreruntime"))
}

func (e endpointsAttributes) Sagemakerruntime() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sagemakerruntime"))
}

func (e endpointsAttributes) Savingsplans() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("savingsplans"))
}

func (e endpointsAttributes) Scheduler() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("scheduler"))
}

func (e endpointsAttributes) Schemas() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("schemas"))
}

func (e endpointsAttributes) Sdb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sdb"))
}

func (e endpointsAttributes) Secretsmanager() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("secretsmanager"))
}

func (e endpointsAttributes) Securityhub() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("securityhub"))
}

func (e endpointsAttributes) Securitylake() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("securitylake"))
}

func (e endpointsAttributes) Serverlessapplicationrepository() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("serverlessapplicationrepository"))
}

func (e endpointsAttributes) Serverlessapprepo() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("serverlessapprepo"))
}

func (e endpointsAttributes) Serverlessrepo() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("serverlessrepo"))
}

func (e endpointsAttributes) Servicecatalog() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("servicecatalog"))
}

func (e endpointsAttributes) Servicecatalogappregistry() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("servicecatalogappregistry"))
}

func (e endpointsAttributes) Servicediscovery() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("servicediscovery"))
}

func (e endpointsAttributes) Servicequotas() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("servicequotas"))
}

func (e endpointsAttributes) Ses() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ses"))
}

func (e endpointsAttributes) Sesv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sesv2"))
}

func (e endpointsAttributes) Sfn() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sfn"))
}

func (e endpointsAttributes) Shield() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("shield"))
}

func (e endpointsAttributes) Signer() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("signer"))
}

func (e endpointsAttributes) Simpledb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("simpledb"))
}

func (e endpointsAttributes) Sms() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sms"))
}

func (e endpointsAttributes) Snowball() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("snowball"))
}

func (e endpointsAttributes) Snowdevicemanagement() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("snowdevicemanagement"))
}

func (e endpointsAttributes) Sns() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sns"))
}

func (e endpointsAttributes) Sqs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sqs"))
}

func (e endpointsAttributes) Ssm() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ssm"))
}

func (e endpointsAttributes) Ssmcontacts() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ssmcontacts"))
}

func (e endpointsAttributes) Ssmincidents() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ssmincidents"))
}

func (e endpointsAttributes) Sso() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sso"))
}

func (e endpointsAttributes) Ssoadmin() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ssoadmin"))
}

func (e endpointsAttributes) Ssooidc() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("ssooidc"))
}

func (e endpointsAttributes) Stepfunctions() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("stepfunctions"))
}

func (e endpointsAttributes) Storagegateway() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("storagegateway"))
}

func (e endpointsAttributes) Sts() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("sts"))
}

func (e endpointsAttributes) Support() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("support"))
}

func (e endpointsAttributes) Swf() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("swf"))
}

func (e endpointsAttributes) Synthetics() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("synthetics"))
}

func (e endpointsAttributes) Textract() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("textract"))
}

func (e endpointsAttributes) Timestreamquery() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("timestreamquery"))
}

func (e endpointsAttributes) Timestreamwrite() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("timestreamwrite"))
}

func (e endpointsAttributes) Transcribe() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("transcribe"))
}

func (e endpointsAttributes) Transcribeservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("transcribeservice"))
}

func (e endpointsAttributes) Transcribestreaming() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("transcribestreaming"))
}

func (e endpointsAttributes) Transcribestreamingservice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("transcribestreamingservice"))
}

func (e endpointsAttributes) Transfer() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("transfer"))
}

func (e endpointsAttributes) Translate() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("translate"))
}

func (e endpointsAttributes) Voiceid() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("voiceid"))
}

func (e endpointsAttributes) Vpclattice() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("vpclattice"))
}

func (e endpointsAttributes) Waf() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("waf"))
}

func (e endpointsAttributes) Wafregional() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("wafregional"))
}

func (e endpointsAttributes) Wafv2() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("wafv2"))
}

func (e endpointsAttributes) Wellarchitected() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("wellarchitected"))
}

func (e endpointsAttributes) Wisdom() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("wisdom"))
}

func (e endpointsAttributes) Workdocs() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("workdocs"))
}

func (e endpointsAttributes) Worklink() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("worklink"))
}

func (e endpointsAttributes) Workmail() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("workmail"))
}

func (e endpointsAttributes) Workmailmessageflow() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("workmailmessageflow"))
}

func (e endpointsAttributes) Workspaces() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("workspaces"))
}

func (e endpointsAttributes) Workspacesweb() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("workspacesweb"))
}

func (e endpointsAttributes) Xray() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("xray"))
}

type ignoreTagsAttributes struct {
	ref terra.Reference
}

func (it ignoreTagsAttributes) InternalRef() (terra.Reference, error) {
	return it.ref, nil
}

func (it ignoreTagsAttributes) InternalWithRef(ref terra.Reference) ignoreTagsAttributes {
	return ignoreTagsAttributes{ref: ref}
}

func (it ignoreTagsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return it.ref.InternalTokens()
}

func (it ignoreTagsAttributes) KeyPrefixes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](it.ref.Append("key_prefixes"))
}

func (it ignoreTagsAttributes) Keys() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](it.ref.Append("keys"))
}

type AssumeRoleState struct {
	Duration          string            `json:"duration"`
	ExternalId        string            `json:"external_id"`
	Policy            string            `json:"policy"`
	PolicyArns        []string          `json:"policy_arns"`
	RoleArn           string            `json:"role_arn"`
	SessionName       string            `json:"session_name"`
	SourceIdentity    string            `json:"source_identity"`
	Tags              map[string]string `json:"tags"`
	TransitiveTagKeys []string          `json:"transitive_tag_keys"`
}

type AssumeRoleWithWebIdentityState struct {
	Duration             string   `json:"duration"`
	Policy               string   `json:"policy"`
	PolicyArns           []string `json:"policy_arns"`
	RoleArn              string   `json:"role_arn"`
	SessionName          string   `json:"session_name"`
	WebIdentityToken     string   `json:"web_identity_token"`
	WebIdentityTokenFile string   `json:"web_identity_token_file"`
}

type DefaultTagsState struct {
	Tags map[string]string `json:"tags"`
}

type EndpointsState struct {
	Accessanalyzer                       string `json:"accessanalyzer"`
	Account                              string `json:"account"`
	Acm                                  string `json:"acm"`
	Acmpca                               string `json:"acmpca"`
	Alexaforbusiness                     string `json:"alexaforbusiness"`
	Amg                                  string `json:"amg"`
	Amp                                  string `json:"amp"`
	Amplify                              string `json:"amplify"`
	Amplifybackend                       string `json:"amplifybackend"`
	Amplifyuibuilder                     string `json:"amplifyuibuilder"`
	Apigateway                           string `json:"apigateway"`
	Apigatewaymanagementapi              string `json:"apigatewaymanagementapi"`
	Apigatewayv2                         string `json:"apigatewayv2"`
	Appautoscaling                       string `json:"appautoscaling"`
	Appconfig                            string `json:"appconfig"`
	Appconfigdata                        string `json:"appconfigdata"`
	Appflow                              string `json:"appflow"`
	Appintegrations                      string `json:"appintegrations"`
	Appintegrationsservice               string `json:"appintegrationsservice"`
	Applicationautoscaling               string `json:"applicationautoscaling"`
	Applicationcostprofiler              string `json:"applicationcostprofiler"`
	Applicationdiscovery                 string `json:"applicationdiscovery"`
	Applicationdiscoveryservice          string `json:"applicationdiscoveryservice"`
	Applicationinsights                  string `json:"applicationinsights"`
	Appmesh                              string `json:"appmesh"`
	Appregistry                          string `json:"appregistry"`
	Apprunner                            string `json:"apprunner"`
	Appstream                            string `json:"appstream"`
	Appsync                              string `json:"appsync"`
	Athena                               string `json:"athena"`
	Auditmanager                         string `json:"auditmanager"`
	Augmentedairuntime                   string `json:"augmentedairuntime"`
	Autoscaling                          string `json:"autoscaling"`
	Autoscalingplans                     string `json:"autoscalingplans"`
	Backup                               string `json:"backup"`
	Backupgateway                        string `json:"backupgateway"`
	Batch                                string `json:"batch"`
	Beanstalk                            string `json:"beanstalk"`
	Billingconductor                     string `json:"billingconductor"`
	Braket                               string `json:"braket"`
	Budgets                              string `json:"budgets"`
	Ce                                   string `json:"ce"`
	Chime                                string `json:"chime"`
	Chimesdkidentity                     string `json:"chimesdkidentity"`
	Chimesdkmediapipelines               string `json:"chimesdkmediapipelines"`
	Chimesdkmeetings                     string `json:"chimesdkmeetings"`
	Chimesdkmessaging                    string `json:"chimesdkmessaging"`
	Chimesdkvoice                        string `json:"chimesdkvoice"`
	Cleanrooms                           string `json:"cleanrooms"`
	Cloud9                               string `json:"cloud9"`
	Cloudcontrol                         string `json:"cloudcontrol"`
	Cloudcontrolapi                      string `json:"cloudcontrolapi"`
	Clouddirectory                       string `json:"clouddirectory"`
	Cloudformation                       string `json:"cloudformation"`
	Cloudfront                           string `json:"cloudfront"`
	Cloudhsm                             string `json:"cloudhsm"`
	Cloudhsmv2                           string `json:"cloudhsmv2"`
	Cloudsearch                          string `json:"cloudsearch"`
	Cloudsearchdomain                    string `json:"cloudsearchdomain"`
	Cloudtrail                           string `json:"cloudtrail"`
	Cloudwatch                           string `json:"cloudwatch"`
	Cloudwatchevents                     string `json:"cloudwatchevents"`
	Cloudwatchevidently                  string `json:"cloudwatchevidently"`
	Cloudwatchlog                        string `json:"cloudwatchlog"`
	Cloudwatchlogs                       string `json:"cloudwatchlogs"`
	Cloudwatchobservabilityaccessmanager string `json:"cloudwatchobservabilityaccessmanager"`
	Cloudwatchrum                        string `json:"cloudwatchrum"`
	Codeartifact                         string `json:"codeartifact"`
	Codebuild                            string `json:"codebuild"`
	Codecommit                           string `json:"codecommit"`
	Codedeploy                           string `json:"codedeploy"`
	Codeguruprofiler                     string `json:"codeguruprofiler"`
	Codegurureviewer                     string `json:"codegurureviewer"`
	Codepipeline                         string `json:"codepipeline"`
	Codestar                             string `json:"codestar"`
	Codestarconnections                  string `json:"codestarconnections"`
	Codestarnotifications                string `json:"codestarnotifications"`
	Cognitoidentity                      string `json:"cognitoidentity"`
	Cognitoidentityprovider              string `json:"cognitoidentityprovider"`
	Cognitoidp                           string `json:"cognitoidp"`
	Cognitosync                          string `json:"cognitosync"`
	Comprehend                           string `json:"comprehend"`
	Comprehendmedical                    string `json:"comprehendmedical"`
	Computeoptimizer                     string `json:"computeoptimizer"`
	Config                               string `json:"config"`
	Configservice                        string `json:"configservice"`
	Connect                              string `json:"connect"`
	Connectcontactlens                   string `json:"connectcontactlens"`
	Connectparticipant                   string `json:"connectparticipant"`
	Connectwisdomservice                 string `json:"connectwisdomservice"`
	Controltower                         string `json:"controltower"`
	Costandusagereportservice            string `json:"costandusagereportservice"`
	Costexplorer                         string `json:"costexplorer"`
	Cur                                  string `json:"cur"`
	Customerprofiles                     string `json:"customerprofiles"`
	Databasemigration                    string `json:"databasemigration"`
	Databasemigrationservice             string `json:"databasemigrationservice"`
	Databrew                             string `json:"databrew"`
	Dataexchange                         string `json:"dataexchange"`
	Datapipeline                         string `json:"datapipeline"`
	Datasync                             string `json:"datasync"`
	Dax                                  string `json:"dax"`
	Deploy                               string `json:"deploy"`
	Detective                            string `json:"detective"`
	Devicefarm                           string `json:"devicefarm"`
	Devopsguru                           string `json:"devopsguru"`
	Directconnect                        string `json:"directconnect"`
	Directoryservice                     string `json:"directoryservice"`
	Discovery                            string `json:"discovery"`
	Dlm                                  string `json:"dlm"`
	Dms                                  string `json:"dms"`
	Docdb                                string `json:"docdb"`
	Docdbelastic                         string `json:"docdbelastic"`
	Drs                                  string `json:"drs"`
	Ds                                   string `json:"ds"`
	Dynamodb                             string `json:"dynamodb"`
	Dynamodbstreams                      string `json:"dynamodbstreams"`
	Ebs                                  string `json:"ebs"`
	Ec2                                  string `json:"ec2"`
	Ec2Instanceconnect                   string `json:"ec2instanceconnect"`
	Ecr                                  string `json:"ecr"`
	Ecrpublic                            string `json:"ecrpublic"`
	Ecs                                  string `json:"ecs"`
	Efs                                  string `json:"efs"`
	Eks                                  string `json:"eks"`
	Elasticache                          string `json:"elasticache"`
	Elasticbeanstalk                     string `json:"elasticbeanstalk"`
	Elasticinference                     string `json:"elasticinference"`
	Elasticloadbalancing                 string `json:"elasticloadbalancing"`
	Elasticloadbalancingv2               string `json:"elasticloadbalancingv2"`
	Elasticsearch                        string `json:"elasticsearch"`
	Elasticsearchservice                 string `json:"elasticsearchservice"`
	Elastictranscoder                    string `json:"elastictranscoder"`
	Elb                                  string `json:"elb"`
	Elbv2                                string `json:"elbv2"`
	Emr                                  string `json:"emr"`
	Emrcontainers                        string `json:"emrcontainers"`
	Emrserverless                        string `json:"emrserverless"`
	Es                                   string `json:"es"`
	Eventbridge                          string `json:"eventbridge"`
	Events                               string `json:"events"`
	Evidently                            string `json:"evidently"`
	Finspace                             string `json:"finspace"`
	Finspacedata                         string `json:"finspacedata"`
	Firehose                             string `json:"firehose"`
	Fis                                  string `json:"fis"`
	Fms                                  string `json:"fms"`
	Forecast                             string `json:"forecast"`
	Forecastquery                        string `json:"forecastquery"`
	Forecastqueryservice                 string `json:"forecastqueryservice"`
	Forecastservice                      string `json:"forecastservice"`
	Frauddetector                        string `json:"frauddetector"`
	Fsx                                  string `json:"fsx"`
	Gamelift                             string `json:"gamelift"`
	Glacier                              string `json:"glacier"`
	Globalaccelerator                    string `json:"globalaccelerator"`
	Glue                                 string `json:"glue"`
	Gluedatabrew                         string `json:"gluedatabrew"`
	Grafana                              string `json:"grafana"`
	Greengrass                           string `json:"greengrass"`
	Greengrassv2                         string `json:"greengrassv2"`
	Groundstation                        string `json:"groundstation"`
	Guardduty                            string `json:"guardduty"`
	Health                               string `json:"health"`
	Healthlake                           string `json:"healthlake"`
	Honeycode                            string `json:"honeycode"`
	Iam                                  string `json:"iam"`
	Identitystore                        string `json:"identitystore"`
	Imagebuilder                         string `json:"imagebuilder"`
	Inspector                            string `json:"inspector"`
	Inspector2                           string `json:"inspector2"`
	Inspectorv2                          string `json:"inspectorv2"`
	Internetmonitor                      string `json:"internetmonitor"`
	Iot                                  string `json:"iot"`
	Iot1Clickdevices                     string `json:"iot1clickdevices"`
	Iot1Clickdevicesservice              string `json:"iot1clickdevicesservice"`
	Iot1Clickprojects                    string `json:"iot1clickprojects"`
	Iotanalytics                         string `json:"iotanalytics"`
	Iotdata                              string `json:"iotdata"`
	Iotdataplane                         string `json:"iotdataplane"`
	Iotdeviceadvisor                     string `json:"iotdeviceadvisor"`
	Iotevents                            string `json:"iotevents"`
	Ioteventsdata                        string `json:"ioteventsdata"`
	Iotfleethub                          string `json:"iotfleethub"`
	Iotjobsdata                          string `json:"iotjobsdata"`
	Iotjobsdataplane                     string `json:"iotjobsdataplane"`
	Iotsecuretunneling                   string `json:"iotsecuretunneling"`
	Iotsitewise                          string `json:"iotsitewise"`
	Iotthingsgraph                       string `json:"iotthingsgraph"`
	Iottwinmaker                         string `json:"iottwinmaker"`
	Iotwireless                          string `json:"iotwireless"`
	Ivs                                  string `json:"ivs"`
	Ivschat                              string `json:"ivschat"`
	Kafka                                string `json:"kafka"`
	Kafkaconnect                         string `json:"kafkaconnect"`
	Kendra                               string `json:"kendra"`
	Keyspaces                            string `json:"keyspaces"`
	Kinesis                              string `json:"kinesis"`
	Kinesisanalytics                     string `json:"kinesisanalytics"`
	Kinesisanalyticsv2                   string `json:"kinesisanalyticsv2"`
	Kinesisvideo                         string `json:"kinesisvideo"`
	Kinesisvideoarchivedmedia            string `json:"kinesisvideoarchivedmedia"`
	Kinesisvideomedia                    string `json:"kinesisvideomedia"`
	Kinesisvideosignaling                string `json:"kinesisvideosignaling"`
	Kinesisvideosignalingchannels        string `json:"kinesisvideosignalingchannels"`
	Kms                                  string `json:"kms"`
	Lakeformation                        string `json:"lakeformation"`
	Lambda                               string `json:"lambda"`
	Lex                                  string `json:"lex"`
	Lexmodelbuilding                     string `json:"lexmodelbuilding"`
	Lexmodelbuildingservice              string `json:"lexmodelbuildingservice"`
	Lexmodels                            string `json:"lexmodels"`
	Lexmodelsv2                          string `json:"lexmodelsv2"`
	Lexruntime                           string `json:"lexruntime"`
	Lexruntimeservice                    string `json:"lexruntimeservice"`
	Lexruntimev2                         string `json:"lexruntimev2"`
	Lexv2Models                          string `json:"lexv2models"`
	Lexv2Runtime                         string `json:"lexv2runtime"`
	Licensemanager                       string `json:"licensemanager"`
	Lightsail                            string `json:"lightsail"`
	Location                             string `json:"location"`
	Locationservice                      string `json:"locationservice"`
	Logs                                 string `json:"logs"`
	Lookoutequipment                     string `json:"lookoutequipment"`
	Lookoutforvision                     string `json:"lookoutforvision"`
	Lookoutmetrics                       string `json:"lookoutmetrics"`
	Lookoutvision                        string `json:"lookoutvision"`
	Machinelearning                      string `json:"machinelearning"`
	Macie                                string `json:"macie"`
	Macie2                               string `json:"macie2"`
	Managedblockchain                    string `json:"managedblockchain"`
	Managedgrafana                       string `json:"managedgrafana"`
	Marketplacecatalog                   string `json:"marketplacecatalog"`
	Marketplacecommerceanalytics         string `json:"marketplacecommerceanalytics"`
	Marketplaceentitlement               string `json:"marketplaceentitlement"`
	Marketplaceentitlementservice        string `json:"marketplaceentitlementservice"`
	Marketplacemetering                  string `json:"marketplacemetering"`
	Mediaconnect                         string `json:"mediaconnect"`
	Mediaconvert                         string `json:"mediaconvert"`
	Medialive                            string `json:"medialive"`
	Mediapackage                         string `json:"mediapackage"`
	Mediapackagevod                      string `json:"mediapackagevod"`
	Mediastore                           string `json:"mediastore"`
	Mediastoredata                       string `json:"mediastoredata"`
	Mediatailor                          string `json:"mediatailor"`
	Memorydb                             string `json:"memorydb"`
	Meteringmarketplace                  string `json:"meteringmarketplace"`
	Mgh                                  string `json:"mgh"`
	Mgn                                  string `json:"mgn"`
	Migrationhub                         string `json:"migrationhub"`
	Migrationhubconfig                   string `json:"migrationhubconfig"`
	Migrationhubrefactorspaces           string `json:"migrationhubrefactorspaces"`
	Migrationhubstrategy                 string `json:"migrationhubstrategy"`
	Migrationhubstrategyrecommendations  string `json:"migrationhubstrategyrecommendations"`
	Mobile                               string `json:"mobile"`
	Mq                                   string `json:"mq"`
	Msk                                  string `json:"msk"`
	Mturk                                string `json:"mturk"`
	Mwaa                                 string `json:"mwaa"`
	Neptune                              string `json:"neptune"`
	Networkfirewall                      string `json:"networkfirewall"`
	Networkmanager                       string `json:"networkmanager"`
	Nimble                               string `json:"nimble"`
	Nimblestudio                         string `json:"nimblestudio"`
	Oam                                  string `json:"oam"`
	Opensearch                           string `json:"opensearch"`
	Opensearchserverless                 string `json:"opensearchserverless"`
	Opensearchservice                    string `json:"opensearchservice"`
	Opsworks                             string `json:"opsworks"`
	Opsworkscm                           string `json:"opsworkscm"`
	Organizations                        string `json:"organizations"`
	Outposts                             string `json:"outposts"`
	Panorama                             string `json:"panorama"`
	Personalize                          string `json:"personalize"`
	Personalizeevents                    string `json:"personalizeevents"`
	Personalizeruntime                   string `json:"personalizeruntime"`
	Pi                                   string `json:"pi"`
	Pinpoint                             string `json:"pinpoint"`
	Pinpointemail                        string `json:"pinpointemail"`
	Pinpointsmsvoice                     string `json:"pinpointsmsvoice"`
	Pipes                                string `json:"pipes"`
	Polly                                string `json:"polly"`
	Pricing                              string `json:"pricing"`
	Prometheus                           string `json:"prometheus"`
	Prometheusservice                    string `json:"prometheusservice"`
	Proton                               string `json:"proton"`
	Qldb                                 string `json:"qldb"`
	Qldbsession                          string `json:"qldbsession"`
	Quicksight                           string `json:"quicksight"`
	Ram                                  string `json:"ram"`
	Rbin                                 string `json:"rbin"`
	Rds                                  string `json:"rds"`
	Rdsdata                              string `json:"rdsdata"`
	Rdsdataservice                       string `json:"rdsdataservice"`
	Recyclebin                           string `json:"recyclebin"`
	Redshift                             string `json:"redshift"`
	Redshiftdata                         string `json:"redshiftdata"`
	Redshiftdataapiservice               string `json:"redshiftdataapiservice"`
	Redshiftserverless                   string `json:"redshiftserverless"`
	Rekognition                          string `json:"rekognition"`
	Resiliencehub                        string `json:"resiliencehub"`
	Resourceexplorer2                    string `json:"resourceexplorer2"`
	Resourcegroups                       string `json:"resourcegroups"`
	Resourcegroupstagging                string `json:"resourcegroupstagging"`
	Resourcegroupstaggingapi             string `json:"resourcegroupstaggingapi"`
	Robomaker                            string `json:"robomaker"`
	Rolesanywhere                        string `json:"rolesanywhere"`
	Route53                              string `json:"route53"`
	Route53Domains                       string `json:"route53domains"`
	Route53Recoverycluster               string `json:"route53recoverycluster"`
	Route53Recoverycontrolconfig         string `json:"route53recoverycontrolconfig"`
	Route53Recoveryreadiness             string `json:"route53recoveryreadiness"`
	Route53Resolver                      string `json:"route53resolver"`
	Rum                                  string `json:"rum"`
	S3                                   string `json:"s3"`
	S3Api                                string `json:"s3api"`
	S3Control                            string `json:"s3control"`
	S3Outposts                           string `json:"s3outposts"`
	Sagemaker                            string `json:"sagemaker"`
	Sagemakera2Iruntime                  string `json:"sagemakera2iruntime"`
	Sagemakeredge                        string `json:"sagemakeredge"`
	Sagemakeredgemanager                 string `json:"sagemakeredgemanager"`
	Sagemakerfeaturestoreruntime         string `json:"sagemakerfeaturestoreruntime"`
	Sagemakerruntime                     string `json:"sagemakerruntime"`
	Savingsplans                         string `json:"savingsplans"`
	Scheduler                            string `json:"scheduler"`
	Schemas                              string `json:"schemas"`
	Sdb                                  string `json:"sdb"`
	Secretsmanager                       string `json:"secretsmanager"`
	Securityhub                          string `json:"securityhub"`
	Securitylake                         string `json:"securitylake"`
	Serverlessapplicationrepository      string `json:"serverlessapplicationrepository"`
	Serverlessapprepo                    string `json:"serverlessapprepo"`
	Serverlessrepo                       string `json:"serverlessrepo"`
	Servicecatalog                       string `json:"servicecatalog"`
	Servicecatalogappregistry            string `json:"servicecatalogappregistry"`
	Servicediscovery                     string `json:"servicediscovery"`
	Servicequotas                        string `json:"servicequotas"`
	Ses                                  string `json:"ses"`
	Sesv2                                string `json:"sesv2"`
	Sfn                                  string `json:"sfn"`
	Shield                               string `json:"shield"`
	Signer                               string `json:"signer"`
	Simpledb                             string `json:"simpledb"`
	Sms                                  string `json:"sms"`
	Snowball                             string `json:"snowball"`
	Snowdevicemanagement                 string `json:"snowdevicemanagement"`
	Sns                                  string `json:"sns"`
	Sqs                                  string `json:"sqs"`
	Ssm                                  string `json:"ssm"`
	Ssmcontacts                          string `json:"ssmcontacts"`
	Ssmincidents                         string `json:"ssmincidents"`
	Sso                                  string `json:"sso"`
	Ssoadmin                             string `json:"ssoadmin"`
	Ssooidc                              string `json:"ssooidc"`
	Stepfunctions                        string `json:"stepfunctions"`
	Storagegateway                       string `json:"storagegateway"`
	Sts                                  string `json:"sts"`
	Support                              string `json:"support"`
	Swf                                  string `json:"swf"`
	Synthetics                           string `json:"synthetics"`
	Textract                             string `json:"textract"`
	Timestreamquery                      string `json:"timestreamquery"`
	Timestreamwrite                      string `json:"timestreamwrite"`
	Transcribe                           string `json:"transcribe"`
	Transcribeservice                    string `json:"transcribeservice"`
	Transcribestreaming                  string `json:"transcribestreaming"`
	Transcribestreamingservice           string `json:"transcribestreamingservice"`
	Transfer                             string `json:"transfer"`
	Translate                            string `json:"translate"`
	Voiceid                              string `json:"voiceid"`
	Vpclattice                           string `json:"vpclattice"`
	Waf                                  string `json:"waf"`
	Wafregional                          string `json:"wafregional"`
	Wafv2                                string `json:"wafv2"`
	Wellarchitected                      string `json:"wellarchitected"`
	Wisdom                               string `json:"wisdom"`
	Workdocs                             string `json:"workdocs"`
	Worklink                             string `json:"worklink"`
	Workmail                             string `json:"workmail"`
	Workmailmessageflow                  string `json:"workmailmessageflow"`
	Workspaces                           string `json:"workspaces"`
	Workspacesweb                        string `json:"workspacesweb"`
	Xray                                 string `json:"xray"`
}

type IgnoreTagsState struct {
	KeyPrefixes []string `json:"key_prefixes"`
	Keys        []string `json:"keys"`
}
