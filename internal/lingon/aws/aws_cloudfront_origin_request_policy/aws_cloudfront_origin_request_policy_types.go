// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_origin_request_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CookiesConfig struct {
	// CookieBehavior is required.
	CookieBehavior terra.StringValue `hcl:"cookie_behavior,attr" validate:"required"`
	// CookiesConfigCookies is optional.
	Cookies *CookiesConfigCookies `hcl:"cookies,block"`
}

type CookiesConfigCookies struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type HeadersConfig struct {
	// HeaderBehavior is optional.
	HeaderBehavior terra.StringValue `hcl:"header_behavior,attr"`
	// HeadersConfigHeaders is optional.
	Headers *HeadersConfigHeaders `hcl:"headers,block"`
}

type HeadersConfigHeaders struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type QueryStringsConfig struct {
	// QueryStringBehavior is required.
	QueryStringBehavior terra.StringValue `hcl:"query_string_behavior,attr" validate:"required"`
	// QueryStringsConfigQueryStrings is optional.
	QueryStrings *QueryStringsConfigQueryStrings `hcl:"query_strings,block"`
}

type QueryStringsConfigQueryStrings struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type cookiesConfigAttributes struct {
	ref terra.Reference
}

func (cc cookiesConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc cookiesConfigAttributes) InternalWithRef(ref terra.Reference) cookiesConfigAttributes {
	return cookiesConfigAttributes{ref: ref}
}

func (cc cookiesConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc cookiesConfigAttributes) CookieBehavior() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("cookie_behavior"))
}

func (cc cookiesConfigAttributes) Cookies() terra.ListValue[cookiesConfigCookiesAttributes] {
	return terra.ReferenceAsList[cookiesConfigCookiesAttributes](cc.ref.Append("cookies"))
}

type cookiesConfigCookiesAttributes struct {
	ref terra.Reference
}

func (c cookiesConfigCookiesAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c cookiesConfigCookiesAttributes) InternalWithRef(ref terra.Reference) cookiesConfigCookiesAttributes {
	return cookiesConfigCookiesAttributes{ref: ref}
}

func (c cookiesConfigCookiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c cookiesConfigCookiesAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](c.ref.Append("items"))
}

type headersConfigAttributes struct {
	ref terra.Reference
}

func (hc headersConfigAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc headersConfigAttributes) InternalWithRef(ref terra.Reference) headersConfigAttributes {
	return headersConfigAttributes{ref: ref}
}

func (hc headersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc headersConfigAttributes) HeaderBehavior() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("header_behavior"))
}

func (hc headersConfigAttributes) Headers() terra.ListValue[headersConfigHeadersAttributes] {
	return terra.ReferenceAsList[headersConfigHeadersAttributes](hc.ref.Append("headers"))
}

type headersConfigHeadersAttributes struct {
	ref terra.Reference
}

func (h headersConfigHeadersAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h headersConfigHeadersAttributes) InternalWithRef(ref terra.Reference) headersConfigHeadersAttributes {
	return headersConfigHeadersAttributes{ref: ref}
}

func (h headersConfigHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h headersConfigHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](h.ref.Append("items"))
}

type queryStringsConfigAttributes struct {
	ref terra.Reference
}

func (qsc queryStringsConfigAttributes) InternalRef() (terra.Reference, error) {
	return qsc.ref, nil
}

func (qsc queryStringsConfigAttributes) InternalWithRef(ref terra.Reference) queryStringsConfigAttributes {
	return queryStringsConfigAttributes{ref: ref}
}

func (qsc queryStringsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qsc.ref.InternalTokens()
}

func (qsc queryStringsConfigAttributes) QueryStringBehavior() terra.StringValue {
	return terra.ReferenceAsString(qsc.ref.Append("query_string_behavior"))
}

func (qsc queryStringsConfigAttributes) QueryStrings() terra.ListValue[queryStringsConfigQueryStringsAttributes] {
	return terra.ReferenceAsList[queryStringsConfigQueryStringsAttributes](qsc.ref.Append("query_strings"))
}

type queryStringsConfigQueryStringsAttributes struct {
	ref terra.Reference
}

func (qs queryStringsConfigQueryStringsAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs queryStringsConfigQueryStringsAttributes) InternalWithRef(ref terra.Reference) queryStringsConfigQueryStringsAttributes {
	return queryStringsConfigQueryStringsAttributes{ref: ref}
}

func (qs queryStringsConfigQueryStringsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs queryStringsConfigQueryStringsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](qs.ref.Append("items"))
}

type CookiesConfigState struct {
	CookieBehavior string                      `json:"cookie_behavior"`
	Cookies        []CookiesConfigCookiesState `json:"cookies"`
}

type CookiesConfigCookiesState struct {
	Items []string `json:"items"`
}

type HeadersConfigState struct {
	HeaderBehavior string                      `json:"header_behavior"`
	Headers        []HeadersConfigHeadersState `json:"headers"`
}

type HeadersConfigHeadersState struct {
	Items []string `json:"items"`
}

type QueryStringsConfigState struct {
	QueryStringBehavior string                                `json:"query_string_behavior"`
	QueryStrings        []QueryStringsConfigQueryStringsState `json:"query_strings"`
}

type QueryStringsConfigQueryStringsState struct {
	Items []string `json:"items"`
}
