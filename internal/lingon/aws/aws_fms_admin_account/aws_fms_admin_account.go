// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fms_admin_account

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_fms_admin_account.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsFmsAdminAccountState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (afaa *Resource) Type() string {
	return "aws_fms_admin_account"
}

// LocalName returns the local name for [Resource].
func (afaa *Resource) LocalName() string {
	return afaa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (afaa *Resource) Configuration() interface{} {
	return afaa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (afaa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(afaa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (afaa *Resource) Dependencies() terra.Dependencies {
	return afaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (afaa *Resource) LifecycleManagement() *terra.Lifecycle {
	return afaa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (afaa *Resource) Attributes() awsFmsAdminAccountAttributes {
	return awsFmsAdminAccountAttributes{ref: terra.ReferenceResource(afaa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (afaa *Resource) ImportState(state io.Reader) error {
	afaa.state = &awsFmsAdminAccountState{}
	if err := json.NewDecoder(state).Decode(afaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", afaa.Type(), afaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (afaa *Resource) State() (*awsFmsAdminAccountState, bool) {
	return afaa.state, afaa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (afaa *Resource) StateMust() *awsFmsAdminAccountState {
	if afaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", afaa.Type(), afaa.LocalName()))
	}
	return afaa.state
}

// Args contains the configurations for aws_fms_admin_account.
type Args struct {
	// AccountId is optional.
	AccountId terra.StringValue `hcl:"account_id,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
}

type awsFmsAdminAccountAttributes struct {
	ref terra.Reference
}

// AccountId returns a reference to field account_id of aws_fms_admin_account.
func (afaa awsFmsAdminAccountAttributes) AccountId() terra.StringValue {
	return terra.ReferenceAsString(afaa.ref.Append("account_id"))
}

// Id returns a reference to field id of aws_fms_admin_account.
func (afaa awsFmsAdminAccountAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(afaa.ref.Append("id"))
}

type awsFmsAdminAccountState struct {
	AccountId string `json:"account_id"`
	Id        string `json:"id"`
}
