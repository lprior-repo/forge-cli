// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_datasync_location_nfs

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MountOptions struct {
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
}

type OnPremConfig struct {
	// AgentArns is required.
	AgentArns terra.SetValue[terra.StringValue] `hcl:"agent_arns,attr" validate:"required"`
}

type mountOptionsAttributes struct {
	ref terra.Reference
}

func (mo mountOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo mountOptionsAttributes) InternalWithRef(ref terra.Reference) mountOptionsAttributes {
	return mountOptionsAttributes{ref: ref}
}

func (mo mountOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo mountOptionsAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("version"))
}

type onPremConfigAttributes struct {
	ref terra.Reference
}

func (opc onPremConfigAttributes) InternalRef() (terra.Reference, error) {
	return opc.ref, nil
}

func (opc onPremConfigAttributes) InternalWithRef(ref terra.Reference) onPremConfigAttributes {
	return onPremConfigAttributes{ref: ref}
}

func (opc onPremConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return opc.ref.InternalTokens()
}

func (opc onPremConfigAttributes) AgentArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](opc.ref.Append("agent_arns"))
}

type MountOptionsState struct {
	Version string `json:"version"`
}

type OnPremConfigState struct {
	AgentArns []string `json:"agent_arns"`
}
