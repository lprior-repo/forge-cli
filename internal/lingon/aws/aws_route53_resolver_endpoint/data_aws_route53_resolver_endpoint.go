// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_route53_resolver_endpoint

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_route53_resolver_endpoint.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (arre *DataSource) DataSource() string {
	return "aws_route53_resolver_endpoint"
}

// LocalName returns the local name for [DataSource].
func (arre *DataSource) LocalName() string {
	return arre.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (arre *DataSource) Configuration() interface{} {
	return arre.Args
}

// Attributes returns the attributes for [DataSource].
func (arre *DataSource) Attributes() dataAwsRoute53ResolverEndpointAttributes {
	return dataAwsRoute53ResolverEndpointAttributes{ref: terra.ReferenceDataSource(arre)}
}

// DataArgs contains the configurations for aws_route53_resolver_endpoint.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// ResolverEndpointId is optional.
	ResolverEndpointId terra.StringValue `hcl:"resolver_endpoint_id,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
}

type dataAwsRoute53ResolverEndpointAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(arre.ref.Append("arn"))
}

// Direction returns a reference to field direction of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(arre.ref.Append("direction"))
}

// Id returns a reference to field id of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arre.ref.Append("id"))
}

// IpAddresses returns a reference to field ip_addresses of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) IpAddresses() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](arre.ref.Append("ip_addresses"))
}

// Name returns a reference to field name of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(arre.ref.Append("name"))
}

// ResolverEndpointId returns a reference to field resolver_endpoint_id of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) ResolverEndpointId() terra.StringValue {
	return terra.ReferenceAsString(arre.ref.Append("resolver_endpoint_id"))
}

// Status returns a reference to field status of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(arre.ref.Append("status"))
}

// VpcId returns a reference to field vpc_id of aws_route53_resolver_endpoint.
func (arre dataAwsRoute53ResolverEndpointAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(arre.ref.Append("vpc_id"))
}

func (arre dataAwsRoute53ResolverEndpointAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](arre.ref.Append("filter"))
}
