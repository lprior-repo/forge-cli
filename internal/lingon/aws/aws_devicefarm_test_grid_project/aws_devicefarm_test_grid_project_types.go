// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_devicefarm_test_grid_project

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type VpcConfig struct {
	// SecurityGroupIds is required.
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr" validate:"required"`
	// SubnetIds is required.
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr" validate:"required"`
	// VpcId is required.
	VpcId terra.StringValue `hcl:"vpc_id,attr" validate:"required"`
}

type vpcConfigAttributes struct {
	ref terra.Reference
}

func (vc vpcConfigAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc vpcConfigAttributes) InternalWithRef(ref terra.Reference) vpcConfigAttributes {
	return vpcConfigAttributes{ref: ref}
}

func (vc vpcConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc vpcConfigAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc vpcConfigAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

func (vc vpcConfigAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("vpc_id"))
}

type VpcConfigState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	SubnetIds        []string `json:"subnet_ids"`
	VpcId            string   `json:"vpc_id"`
}
