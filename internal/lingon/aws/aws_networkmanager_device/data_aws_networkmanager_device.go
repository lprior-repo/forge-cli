// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_networkmanager_device

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_networkmanager_device.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (and *DataSource) DataSource() string {
	return "aws_networkmanager_device"
}

// LocalName returns the local name for [DataSource].
func (and *DataSource) LocalName() string {
	return and.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (and *DataSource) Configuration() interface{} {
	return and.Args
}

// Attributes returns the attributes for [DataSource].
func (and *DataSource) Attributes() dataAwsNetworkmanagerDeviceAttributes {
	return dataAwsNetworkmanagerDeviceAttributes{ref: terra.ReferenceDataSource(and)}
}

// DataArgs contains the configurations for aws_networkmanager_device.
type DataArgs struct {
	// DeviceId is required.
	DeviceId terra.StringValue `hcl:"device_id,attr" validate:"required"`
	// GlobalNetworkId is required.
	GlobalNetworkId terra.StringValue `hcl:"global_network_id,attr" validate:"required"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
}

type dataAwsNetworkmanagerDeviceAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("arn"))
}

// Description returns a reference to field description of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("description"))
}

// DeviceId returns a reference to field device_id of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) DeviceId() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("device_id"))
}

// GlobalNetworkId returns a reference to field global_network_id of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) GlobalNetworkId() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("global_network_id"))
}

// Id returns a reference to field id of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("id"))
}

// Model returns a reference to field model of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) Model() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("model"))
}

// SerialNumber returns a reference to field serial_number of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) SerialNumber() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("serial_number"))
}

// SiteId returns a reference to field site_id of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) SiteId() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("site_id"))
}

// Tags returns a reference to field tags of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](and.ref.Append("tags"))
}

// Type returns a reference to field type of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("type"))
}

// Vendor returns a reference to field vendor of aws_networkmanager_device.
func (and dataAwsNetworkmanagerDeviceAttributes) Vendor() terra.StringValue {
	return terra.ReferenceAsString(and.ref.Append("vendor"))
}

func (and dataAwsNetworkmanagerDeviceAttributes) AwsLocation() terra.ListValue[DataawsLocationAttributes] {
	return terra.ReferenceAsList[DataawsLocationAttributes](and.ref.Append("aws_location"))
}

func (and dataAwsNetworkmanagerDeviceAttributes) Location() terra.ListValue[DatalocationAttributes] {
	return terra.ReferenceAsList[DatalocationAttributes](and.ref.Append("location"))
}
