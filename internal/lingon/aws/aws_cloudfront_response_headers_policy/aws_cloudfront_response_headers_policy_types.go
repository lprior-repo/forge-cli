// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_response_headers_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CorsConfig struct {
	// AccessControlAllowCredentials is required.
	AccessControlAllowCredentials terra.BoolValue `hcl:"access_control_allow_credentials,attr" validate:"required"`
	// AccessControlMaxAgeSec is optional.
	AccessControlMaxAgeSec terra.NumberValue `hcl:"access_control_max_age_sec,attr"`
	// OriginOverride is required.
	OriginOverride terra.BoolValue `hcl:"origin_override,attr" validate:"required"`
	// CorsConfigAccessControlAllowHeaders is required.
	AccessControlAllowHeaders *CorsConfigAccessControlAllowHeaders `hcl:"access_control_allow_headers,block" validate:"required"`
	// CorsConfigAccessControlAllowMethods is required.
	AccessControlAllowMethods *CorsConfigAccessControlAllowMethods `hcl:"access_control_allow_methods,block" validate:"required"`
	// CorsConfigAccessControlAllowOrigins is required.
	AccessControlAllowOrigins *CorsConfigAccessControlAllowOrigins `hcl:"access_control_allow_origins,block" validate:"required"`
	// CorsConfigAccessControlExposeHeaders is optional.
	AccessControlExposeHeaders *CorsConfigAccessControlExposeHeaders `hcl:"access_control_expose_headers,block"`
}

type CorsConfigAccessControlAllowHeaders struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CorsConfigAccessControlAllowMethods struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CorsConfigAccessControlAllowOrigins struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CorsConfigAccessControlExposeHeaders struct {
	// Items is optional.
	Items terra.SetValue[terra.StringValue] `hcl:"items,attr"`
}

type CustomHeadersConfig struct {
	// CustomHeadersConfigItems is min=0.
	Items []CustomHeadersConfigItems `hcl:"items,block" validate:"min=0"`
}

type CustomHeadersConfigItems struct {
	// Header is required.
	Header terra.StringValue `hcl:"header,attr" validate:"required"`
	// Override is required.
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type RemoveHeadersConfig struct {
	// RemoveHeadersConfigItems is min=0.
	Items []RemoveHeadersConfigItems `hcl:"items,block" validate:"min=0"`
}

type RemoveHeadersConfigItems struct {
	// Header is required.
	Header terra.StringValue `hcl:"header,attr" validate:"required"`
}

type SecurityHeadersConfig struct {
	// SecurityHeadersConfigContentSecurityPolicy is optional.
	ContentSecurityPolicy *SecurityHeadersConfigContentSecurityPolicy `hcl:"content_security_policy,block"`
	// SecurityHeadersConfigContentTypeOptions is optional.
	ContentTypeOptions *SecurityHeadersConfigContentTypeOptions `hcl:"content_type_options,block"`
	// SecurityHeadersConfigFrameOptions is optional.
	FrameOptions *SecurityHeadersConfigFrameOptions `hcl:"frame_options,block"`
	// SecurityHeadersConfigReferrerPolicy is optional.
	ReferrerPolicy *SecurityHeadersConfigReferrerPolicy `hcl:"referrer_policy,block"`
	// SecurityHeadersConfigStrictTransportSecurity is optional.
	StrictTransportSecurity *SecurityHeadersConfigStrictTransportSecurity `hcl:"strict_transport_security,block"`
	// SecurityHeadersConfigXssProtection is optional.
	XssProtection *SecurityHeadersConfigXssProtection `hcl:"xss_protection,block"`
}

type SecurityHeadersConfigContentSecurityPolicy struct {
	// ContentSecurityPolicy is required.
	ContentSecurityPolicy terra.StringValue `hcl:"content_security_policy,attr" validate:"required"`
	// Override is required.
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
}

type SecurityHeadersConfigContentTypeOptions struct {
	// Override is required.
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
}

type SecurityHeadersConfigFrameOptions struct {
	// FrameOption is required.
	FrameOption terra.StringValue `hcl:"frame_option,attr" validate:"required"`
	// Override is required.
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
}

type SecurityHeadersConfigReferrerPolicy struct {
	// Override is required.
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// ReferrerPolicy is required.
	ReferrerPolicy terra.StringValue `hcl:"referrer_policy,attr" validate:"required"`
}

type SecurityHeadersConfigStrictTransportSecurity struct {
	// AccessControlMaxAgeSec is required.
	AccessControlMaxAgeSec terra.NumberValue `hcl:"access_control_max_age_sec,attr" validate:"required"`
	// IncludeSubdomains is optional.
	IncludeSubdomains terra.BoolValue `hcl:"include_subdomains,attr"`
	// Override is required.
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// Preload is optional.
	Preload terra.BoolValue `hcl:"preload,attr"`
}

type SecurityHeadersConfigXssProtection struct {
	// ModeBlock is optional.
	ModeBlock terra.BoolValue `hcl:"mode_block,attr"`
	// Override is required.
	Override terra.BoolValue `hcl:"override,attr" validate:"required"`
	// Protection is required.
	Protection terra.BoolValue `hcl:"protection,attr" validate:"required"`
	// ReportUri is optional.
	ReportUri terra.StringValue `hcl:"report_uri,attr"`
}

type ServerTimingHeadersConfig struct {
	// Enabled is required.
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
	// SamplingRate is required.
	SamplingRate terra.NumberValue `hcl:"sampling_rate,attr" validate:"required"`
}

type corsConfigAttributes struct {
	ref terra.Reference
}

func (cc corsConfigAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc corsConfigAttributes) InternalWithRef(ref terra.Reference) corsConfigAttributes {
	return corsConfigAttributes{ref: ref}
}

func (cc corsConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc corsConfigAttributes) AccessControlAllowCredentials() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("access_control_allow_credentials"))
}

func (cc corsConfigAttributes) AccessControlMaxAgeSec() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("access_control_max_age_sec"))
}

func (cc corsConfigAttributes) OriginOverride() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("origin_override"))
}

func (cc corsConfigAttributes) AccessControlAllowHeaders() terra.ListValue[corsConfigAccessControlAllowHeadersAttributes] {
	return terra.ReferenceAsList[corsConfigAccessControlAllowHeadersAttributes](cc.ref.Append("access_control_allow_headers"))
}

func (cc corsConfigAttributes) AccessControlAllowMethods() terra.ListValue[corsConfigAccessControlAllowMethodsAttributes] {
	return terra.ReferenceAsList[corsConfigAccessControlAllowMethodsAttributes](cc.ref.Append("access_control_allow_methods"))
}

func (cc corsConfigAttributes) AccessControlAllowOrigins() terra.ListValue[corsConfigAccessControlAllowOriginsAttributes] {
	return terra.ReferenceAsList[corsConfigAccessControlAllowOriginsAttributes](cc.ref.Append("access_control_allow_origins"))
}

func (cc corsConfigAttributes) AccessControlExposeHeaders() terra.ListValue[corsConfigAccessControlExposeHeadersAttributes] {
	return terra.ReferenceAsList[corsConfigAccessControlExposeHeadersAttributes](cc.ref.Append("access_control_expose_headers"))
}

type corsConfigAccessControlAllowHeadersAttributes struct {
	ref terra.Reference
}

func (acah corsConfigAccessControlAllowHeadersAttributes) InternalRef() (terra.Reference, error) {
	return acah.ref, nil
}

func (acah corsConfigAccessControlAllowHeadersAttributes) InternalWithRef(ref terra.Reference) corsConfigAccessControlAllowHeadersAttributes {
	return corsConfigAccessControlAllowHeadersAttributes{ref: ref}
}

func (acah corsConfigAccessControlAllowHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acah.ref.InternalTokens()
}

func (acah corsConfigAccessControlAllowHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acah.ref.Append("items"))
}

type corsConfigAccessControlAllowMethodsAttributes struct {
	ref terra.Reference
}

func (acam corsConfigAccessControlAllowMethodsAttributes) InternalRef() (terra.Reference, error) {
	return acam.ref, nil
}

func (acam corsConfigAccessControlAllowMethodsAttributes) InternalWithRef(ref terra.Reference) corsConfigAccessControlAllowMethodsAttributes {
	return corsConfigAccessControlAllowMethodsAttributes{ref: ref}
}

func (acam corsConfigAccessControlAllowMethodsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acam.ref.InternalTokens()
}

func (acam corsConfigAccessControlAllowMethodsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acam.ref.Append("items"))
}

type corsConfigAccessControlAllowOriginsAttributes struct {
	ref terra.Reference
}

func (acao corsConfigAccessControlAllowOriginsAttributes) InternalRef() (terra.Reference, error) {
	return acao.ref, nil
}

func (acao corsConfigAccessControlAllowOriginsAttributes) InternalWithRef(ref terra.Reference) corsConfigAccessControlAllowOriginsAttributes {
	return corsConfigAccessControlAllowOriginsAttributes{ref: ref}
}

func (acao corsConfigAccessControlAllowOriginsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acao.ref.InternalTokens()
}

func (acao corsConfigAccessControlAllowOriginsAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](acao.ref.Append("items"))
}

type corsConfigAccessControlExposeHeadersAttributes struct {
	ref terra.Reference
}

func (aceh corsConfigAccessControlExposeHeadersAttributes) InternalRef() (terra.Reference, error) {
	return aceh.ref, nil
}

func (aceh corsConfigAccessControlExposeHeadersAttributes) InternalWithRef(ref terra.Reference) corsConfigAccessControlExposeHeadersAttributes {
	return corsConfigAccessControlExposeHeadersAttributes{ref: ref}
}

func (aceh corsConfigAccessControlExposeHeadersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aceh.ref.InternalTokens()
}

func (aceh corsConfigAccessControlExposeHeadersAttributes) Items() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aceh.ref.Append("items"))
}

type customHeadersConfigAttributes struct {
	ref terra.Reference
}

func (chc customHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return chc.ref, nil
}

func (chc customHeadersConfigAttributes) InternalWithRef(ref terra.Reference) customHeadersConfigAttributes {
	return customHeadersConfigAttributes{ref: ref}
}

func (chc customHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return chc.ref.InternalTokens()
}

func (chc customHeadersConfigAttributes) Items() terra.SetValue[customHeadersConfigItemsAttributes] {
	return terra.ReferenceAsSet[customHeadersConfigItemsAttributes](chc.ref.Append("items"))
}

type customHeadersConfigItemsAttributes struct {
	ref terra.Reference
}

func (i customHeadersConfigItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i customHeadersConfigItemsAttributes) InternalWithRef(ref terra.Reference) customHeadersConfigItemsAttributes {
	return customHeadersConfigItemsAttributes{ref: ref}
}

func (i customHeadersConfigItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i customHeadersConfigItemsAttributes) Header() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("header"))
}

func (i customHeadersConfigItemsAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(i.ref.Append("override"))
}

func (i customHeadersConfigItemsAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("value"))
}

type removeHeadersConfigAttributes struct {
	ref terra.Reference
}

func (rhc removeHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return rhc.ref, nil
}

func (rhc removeHeadersConfigAttributes) InternalWithRef(ref terra.Reference) removeHeadersConfigAttributes {
	return removeHeadersConfigAttributes{ref: ref}
}

func (rhc removeHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rhc.ref.InternalTokens()
}

func (rhc removeHeadersConfigAttributes) Items() terra.SetValue[removeHeadersConfigItemsAttributes] {
	return terra.ReferenceAsSet[removeHeadersConfigItemsAttributes](rhc.ref.Append("items"))
}

type removeHeadersConfigItemsAttributes struct {
	ref terra.Reference
}

func (i removeHeadersConfigItemsAttributes) InternalRef() (terra.Reference, error) {
	return i.ref, nil
}

func (i removeHeadersConfigItemsAttributes) InternalWithRef(ref terra.Reference) removeHeadersConfigItemsAttributes {
	return removeHeadersConfigItemsAttributes{ref: ref}
}

func (i removeHeadersConfigItemsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return i.ref.InternalTokens()
}

func (i removeHeadersConfigItemsAttributes) Header() terra.StringValue {
	return terra.ReferenceAsString(i.ref.Append("header"))
}

type securityHeadersConfigAttributes struct {
	ref terra.Reference
}

func (shc securityHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return shc.ref, nil
}

func (shc securityHeadersConfigAttributes) InternalWithRef(ref terra.Reference) securityHeadersConfigAttributes {
	return securityHeadersConfigAttributes{ref: ref}
}

func (shc securityHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return shc.ref.InternalTokens()
}

func (shc securityHeadersConfigAttributes) ContentSecurityPolicy() terra.ListValue[securityHeadersConfigContentSecurityPolicyAttributes] {
	return terra.ReferenceAsList[securityHeadersConfigContentSecurityPolicyAttributes](shc.ref.Append("content_security_policy"))
}

func (shc securityHeadersConfigAttributes) ContentTypeOptions() terra.ListValue[securityHeadersConfigContentTypeOptionsAttributes] {
	return terra.ReferenceAsList[securityHeadersConfigContentTypeOptionsAttributes](shc.ref.Append("content_type_options"))
}

func (shc securityHeadersConfigAttributes) FrameOptions() terra.ListValue[securityHeadersConfigFrameOptionsAttributes] {
	return terra.ReferenceAsList[securityHeadersConfigFrameOptionsAttributes](shc.ref.Append("frame_options"))
}

func (shc securityHeadersConfigAttributes) ReferrerPolicy() terra.ListValue[securityHeadersConfigReferrerPolicyAttributes] {
	return terra.ReferenceAsList[securityHeadersConfigReferrerPolicyAttributes](shc.ref.Append("referrer_policy"))
}

func (shc securityHeadersConfigAttributes) StrictTransportSecurity() terra.ListValue[securityHeadersConfigStrictTransportSecurityAttributes] {
	return terra.ReferenceAsList[securityHeadersConfigStrictTransportSecurityAttributes](shc.ref.Append("strict_transport_security"))
}

func (shc securityHeadersConfigAttributes) XssProtection() terra.ListValue[securityHeadersConfigXssProtectionAttributes] {
	return terra.ReferenceAsList[securityHeadersConfigXssProtectionAttributes](shc.ref.Append("xss_protection"))
}

type securityHeadersConfigContentSecurityPolicyAttributes struct {
	ref terra.Reference
}

func (csp securityHeadersConfigContentSecurityPolicyAttributes) InternalRef() (terra.Reference, error) {
	return csp.ref, nil
}

func (csp securityHeadersConfigContentSecurityPolicyAttributes) InternalWithRef(ref terra.Reference) securityHeadersConfigContentSecurityPolicyAttributes {
	return securityHeadersConfigContentSecurityPolicyAttributes{ref: ref}
}

func (csp securityHeadersConfigContentSecurityPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csp.ref.InternalTokens()
}

func (csp securityHeadersConfigContentSecurityPolicyAttributes) ContentSecurityPolicy() terra.StringValue {
	return terra.ReferenceAsString(csp.ref.Append("content_security_policy"))
}

func (csp securityHeadersConfigContentSecurityPolicyAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(csp.ref.Append("override"))
}

type securityHeadersConfigContentTypeOptionsAttributes struct {
	ref terra.Reference
}

func (cto securityHeadersConfigContentTypeOptionsAttributes) InternalRef() (terra.Reference, error) {
	return cto.ref, nil
}

func (cto securityHeadersConfigContentTypeOptionsAttributes) InternalWithRef(ref terra.Reference) securityHeadersConfigContentTypeOptionsAttributes {
	return securityHeadersConfigContentTypeOptionsAttributes{ref: ref}
}

func (cto securityHeadersConfigContentTypeOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cto.ref.InternalTokens()
}

func (cto securityHeadersConfigContentTypeOptionsAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(cto.ref.Append("override"))
}

type securityHeadersConfigFrameOptionsAttributes struct {
	ref terra.Reference
}

func (fo securityHeadersConfigFrameOptionsAttributes) InternalRef() (terra.Reference, error) {
	return fo.ref, nil
}

func (fo securityHeadersConfigFrameOptionsAttributes) InternalWithRef(ref terra.Reference) securityHeadersConfigFrameOptionsAttributes {
	return securityHeadersConfigFrameOptionsAttributes{ref: ref}
}

func (fo securityHeadersConfigFrameOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fo.ref.InternalTokens()
}

func (fo securityHeadersConfigFrameOptionsAttributes) FrameOption() terra.StringValue {
	return terra.ReferenceAsString(fo.ref.Append("frame_option"))
}

func (fo securityHeadersConfigFrameOptionsAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(fo.ref.Append("override"))
}

type securityHeadersConfigReferrerPolicyAttributes struct {
	ref terra.Reference
}

func (rp securityHeadersConfigReferrerPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp securityHeadersConfigReferrerPolicyAttributes) InternalWithRef(ref terra.Reference) securityHeadersConfigReferrerPolicyAttributes {
	return securityHeadersConfigReferrerPolicyAttributes{ref: ref}
}

func (rp securityHeadersConfigReferrerPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp securityHeadersConfigReferrerPolicyAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(rp.ref.Append("override"))
}

func (rp securityHeadersConfigReferrerPolicyAttributes) ReferrerPolicy() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("referrer_policy"))
}

type securityHeadersConfigStrictTransportSecurityAttributes struct {
	ref terra.Reference
}

func (sts securityHeadersConfigStrictTransportSecurityAttributes) InternalRef() (terra.Reference, error) {
	return sts.ref, nil
}

func (sts securityHeadersConfigStrictTransportSecurityAttributes) InternalWithRef(ref terra.Reference) securityHeadersConfigStrictTransportSecurityAttributes {
	return securityHeadersConfigStrictTransportSecurityAttributes{ref: ref}
}

func (sts securityHeadersConfigStrictTransportSecurityAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sts.ref.InternalTokens()
}

func (sts securityHeadersConfigStrictTransportSecurityAttributes) AccessControlMaxAgeSec() terra.NumberValue {
	return terra.ReferenceAsNumber(sts.ref.Append("access_control_max_age_sec"))
}

func (sts securityHeadersConfigStrictTransportSecurityAttributes) IncludeSubdomains() terra.BoolValue {
	return terra.ReferenceAsBool(sts.ref.Append("include_subdomains"))
}

func (sts securityHeadersConfigStrictTransportSecurityAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(sts.ref.Append("override"))
}

func (sts securityHeadersConfigStrictTransportSecurityAttributes) Preload() terra.BoolValue {
	return terra.ReferenceAsBool(sts.ref.Append("preload"))
}

type securityHeadersConfigXssProtectionAttributes struct {
	ref terra.Reference
}

func (xp securityHeadersConfigXssProtectionAttributes) InternalRef() (terra.Reference, error) {
	return xp.ref, nil
}

func (xp securityHeadersConfigXssProtectionAttributes) InternalWithRef(ref terra.Reference) securityHeadersConfigXssProtectionAttributes {
	return securityHeadersConfigXssProtectionAttributes{ref: ref}
}

func (xp securityHeadersConfigXssProtectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return xp.ref.InternalTokens()
}

func (xp securityHeadersConfigXssProtectionAttributes) ModeBlock() terra.BoolValue {
	return terra.ReferenceAsBool(xp.ref.Append("mode_block"))
}

func (xp securityHeadersConfigXssProtectionAttributes) Override() terra.BoolValue {
	return terra.ReferenceAsBool(xp.ref.Append("override"))
}

func (xp securityHeadersConfigXssProtectionAttributes) Protection() terra.BoolValue {
	return terra.ReferenceAsBool(xp.ref.Append("protection"))
}

func (xp securityHeadersConfigXssProtectionAttributes) ReportUri() terra.StringValue {
	return terra.ReferenceAsString(xp.ref.Append("report_uri"))
}

type serverTimingHeadersConfigAttributes struct {
	ref terra.Reference
}

func (sthc serverTimingHeadersConfigAttributes) InternalRef() (terra.Reference, error) {
	return sthc.ref, nil
}

func (sthc serverTimingHeadersConfigAttributes) InternalWithRef(ref terra.Reference) serverTimingHeadersConfigAttributes {
	return serverTimingHeadersConfigAttributes{ref: ref}
}

func (sthc serverTimingHeadersConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sthc.ref.InternalTokens()
}

func (sthc serverTimingHeadersConfigAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(sthc.ref.Append("enabled"))
}

func (sthc serverTimingHeadersConfigAttributes) SamplingRate() terra.NumberValue {
	return terra.ReferenceAsNumber(sthc.ref.Append("sampling_rate"))
}

type CorsConfigState struct {
	AccessControlAllowCredentials bool                                        `json:"access_control_allow_credentials"`
	AccessControlMaxAgeSec        float64                                     `json:"access_control_max_age_sec"`
	OriginOverride                bool                                        `json:"origin_override"`
	AccessControlAllowHeaders     []CorsConfigAccessControlAllowHeadersState  `json:"access_control_allow_headers"`
	AccessControlAllowMethods     []CorsConfigAccessControlAllowMethodsState  `json:"access_control_allow_methods"`
	AccessControlAllowOrigins     []CorsConfigAccessControlAllowOriginsState  `json:"access_control_allow_origins"`
	AccessControlExposeHeaders    []CorsConfigAccessControlExposeHeadersState `json:"access_control_expose_headers"`
}

type CorsConfigAccessControlAllowHeadersState struct {
	Items []string `json:"items"`
}

type CorsConfigAccessControlAllowMethodsState struct {
	Items []string `json:"items"`
}

type CorsConfigAccessControlAllowOriginsState struct {
	Items []string `json:"items"`
}

type CorsConfigAccessControlExposeHeadersState struct {
	Items []string `json:"items"`
}

type CustomHeadersConfigState struct {
	Items []CustomHeadersConfigItemsState `json:"items"`
}

type CustomHeadersConfigItemsState struct {
	Header   string `json:"header"`
	Override bool   `json:"override"`
	Value    string `json:"value"`
}

type RemoveHeadersConfigState struct {
	Items []RemoveHeadersConfigItemsState `json:"items"`
}

type RemoveHeadersConfigItemsState struct {
	Header string `json:"header"`
}

type SecurityHeadersConfigState struct {
	ContentSecurityPolicy   []SecurityHeadersConfigContentSecurityPolicyState   `json:"content_security_policy"`
	ContentTypeOptions      []SecurityHeadersConfigContentTypeOptionsState      `json:"content_type_options"`
	FrameOptions            []SecurityHeadersConfigFrameOptionsState            `json:"frame_options"`
	ReferrerPolicy          []SecurityHeadersConfigReferrerPolicyState          `json:"referrer_policy"`
	StrictTransportSecurity []SecurityHeadersConfigStrictTransportSecurityState `json:"strict_transport_security"`
	XssProtection           []SecurityHeadersConfigXssProtectionState           `json:"xss_protection"`
}

type SecurityHeadersConfigContentSecurityPolicyState struct {
	ContentSecurityPolicy string `json:"content_security_policy"`
	Override              bool   `json:"override"`
}

type SecurityHeadersConfigContentTypeOptionsState struct {
	Override bool `json:"override"`
}

type SecurityHeadersConfigFrameOptionsState struct {
	FrameOption string `json:"frame_option"`
	Override    bool   `json:"override"`
}

type SecurityHeadersConfigReferrerPolicyState struct {
	Override       bool   `json:"override"`
	ReferrerPolicy string `json:"referrer_policy"`
}

type SecurityHeadersConfigStrictTransportSecurityState struct {
	AccessControlMaxAgeSec float64 `json:"access_control_max_age_sec"`
	IncludeSubdomains      bool    `json:"include_subdomains"`
	Override               bool    `json:"override"`
	Preload                bool    `json:"preload"`
}

type SecurityHeadersConfigXssProtectionState struct {
	ModeBlock  bool   `json:"mode_block"`
	Override   bool   `json:"override"`
	Protection bool   `json:"protection"`
	ReportUri  string `json:"report_uri"`
}

type ServerTimingHeadersConfigState struct {
	Enabled      bool    `json:"enabled"`
	SamplingRate float64 `json:"sampling_rate"`
}
