// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_autoscalingplans_scaling_plan

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ApplicationSource struct {
	// CloudformationStackArn is optional.
	CloudformationStackArn terra.StringValue `hcl:"cloudformation_stack_arn,attr"`
	// ApplicationSourceTagFilter is min=0,max=50.
	TagFilter []ApplicationSourceTagFilter `hcl:"tag_filter,block" validate:"min=0,max=50"`
}

type ApplicationSourceTagFilter struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Values is optional.
	Values terra.SetValue[terra.StringValue] `hcl:"values,attr"`
}

type ScalingInstruction struct {
	// DisableDynamicScaling is optional.
	DisableDynamicScaling terra.BoolValue `hcl:"disable_dynamic_scaling,attr"`
	// MaxCapacity is required.
	MaxCapacity terra.NumberValue `hcl:"max_capacity,attr" validate:"required"`
	// MinCapacity is required.
	MinCapacity terra.NumberValue `hcl:"min_capacity,attr" validate:"required"`
	// PredictiveScalingMaxCapacityBehavior is optional.
	PredictiveScalingMaxCapacityBehavior terra.StringValue `hcl:"predictive_scaling_max_capacity_behavior,attr"`
	// PredictiveScalingMaxCapacityBuffer is optional.
	PredictiveScalingMaxCapacityBuffer terra.NumberValue `hcl:"predictive_scaling_max_capacity_buffer,attr"`
	// PredictiveScalingMode is optional.
	PredictiveScalingMode terra.StringValue `hcl:"predictive_scaling_mode,attr"`
	// ResourceId is required.
	ResourceId terra.StringValue `hcl:"resource_id,attr" validate:"required"`
	// ScalableDimension is required.
	ScalableDimension terra.StringValue `hcl:"scalable_dimension,attr" validate:"required"`
	// ScalingPolicyUpdateBehavior is optional.
	ScalingPolicyUpdateBehavior terra.StringValue `hcl:"scaling_policy_update_behavior,attr"`
	// ScheduledActionBufferTime is optional.
	ScheduledActionBufferTime terra.NumberValue `hcl:"scheduled_action_buffer_time,attr"`
	// ServiceNamespace is required.
	ServiceNamespace terra.StringValue `hcl:"service_namespace,attr" validate:"required"`
	// ScalingInstructionCustomizedLoadMetricSpecification is optional.
	CustomizedLoadMetricSpecification *ScalingInstructionCustomizedLoadMetricSpecification `hcl:"customized_load_metric_specification,block"`
	// ScalingInstructionPredefinedLoadMetricSpecification is optional.
	PredefinedLoadMetricSpecification *ScalingInstructionPredefinedLoadMetricSpecification `hcl:"predefined_load_metric_specification,block"`
	// ScalingInstructionTargetTrackingConfiguration is min=1,max=10.
	TargetTrackingConfiguration []ScalingInstructionTargetTrackingConfiguration `hcl:"target_tracking_configuration,block" validate:"min=1,max=10"`
}

type ScalingInstructionCustomizedLoadMetricSpecification struct {
	// Dimensions is optional.
	Dimensions terra.MapValue[terra.StringValue] `hcl:"dimensions,attr"`
	// MetricName is required.
	MetricName terra.StringValue `hcl:"metric_name,attr" validate:"required"`
	// Namespace is required.
	Namespace terra.StringValue `hcl:"namespace,attr" validate:"required"`
	// Statistic is required.
	Statistic terra.StringValue `hcl:"statistic,attr" validate:"required"`
	// Unit is optional.
	Unit terra.StringValue `hcl:"unit,attr"`
}

type ScalingInstructionPredefinedLoadMetricSpecification struct {
	// PredefinedLoadMetricType is required.
	PredefinedLoadMetricType terra.StringValue `hcl:"predefined_load_metric_type,attr" validate:"required"`
	// ResourceLabel is optional.
	ResourceLabel terra.StringValue `hcl:"resource_label,attr"`
}

type ScalingInstructionTargetTrackingConfiguration struct {
	// DisableScaleIn is optional.
	DisableScaleIn terra.BoolValue `hcl:"disable_scale_in,attr"`
	// EstimatedInstanceWarmup is optional.
	EstimatedInstanceWarmup terra.NumberValue `hcl:"estimated_instance_warmup,attr"`
	// ScaleInCooldown is optional.
	ScaleInCooldown terra.NumberValue `hcl:"scale_in_cooldown,attr"`
	// ScaleOutCooldown is optional.
	ScaleOutCooldown terra.NumberValue `hcl:"scale_out_cooldown,attr"`
	// TargetValue is required.
	TargetValue terra.NumberValue `hcl:"target_value,attr" validate:"required"`
	// ScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification is optional.
	CustomizedScalingMetricSpecification *ScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification `hcl:"customized_scaling_metric_specification,block"`
	// ScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification is optional.
	PredefinedScalingMetricSpecification *ScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification `hcl:"predefined_scaling_metric_specification,block"`
}

type ScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification struct {
	// Dimensions is optional.
	Dimensions terra.MapValue[terra.StringValue] `hcl:"dimensions,attr"`
	// MetricName is required.
	MetricName terra.StringValue `hcl:"metric_name,attr" validate:"required"`
	// Namespace is required.
	Namespace terra.StringValue `hcl:"namespace,attr" validate:"required"`
	// Statistic is required.
	Statistic terra.StringValue `hcl:"statistic,attr" validate:"required"`
	// Unit is optional.
	Unit terra.StringValue `hcl:"unit,attr"`
}

type ScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification struct {
	// PredefinedScalingMetricType is required.
	PredefinedScalingMetricType terra.StringValue `hcl:"predefined_scaling_metric_type,attr" validate:"required"`
	// ResourceLabel is optional.
	ResourceLabel terra.StringValue `hcl:"resource_label,attr"`
}

type applicationSourceAttributes struct {
	ref terra.Reference
}

func (as applicationSourceAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as applicationSourceAttributes) InternalWithRef(ref terra.Reference) applicationSourceAttributes {
	return applicationSourceAttributes{ref: ref}
}

func (as applicationSourceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as applicationSourceAttributes) CloudformationStackArn() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("cloudformation_stack_arn"))
}

func (as applicationSourceAttributes) TagFilter() terra.SetValue[applicationSourceTagFilterAttributes] {
	return terra.ReferenceAsSet[applicationSourceTagFilterAttributes](as.ref.Append("tag_filter"))
}

type applicationSourceTagFilterAttributes struct {
	ref terra.Reference
}

func (tf applicationSourceTagFilterAttributes) InternalRef() (terra.Reference, error) {
	return tf.ref, nil
}

func (tf applicationSourceTagFilterAttributes) InternalWithRef(ref terra.Reference) applicationSourceTagFilterAttributes {
	return applicationSourceTagFilterAttributes{ref: ref}
}

func (tf applicationSourceTagFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tf.ref.InternalTokens()
}

func (tf applicationSourceTagFilterAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(tf.ref.Append("key"))
}

func (tf applicationSourceTagFilterAttributes) Values() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](tf.ref.Append("values"))
}

type scalingInstructionAttributes struct {
	ref terra.Reference
}

func (si scalingInstructionAttributes) InternalRef() (terra.Reference, error) {
	return si.ref, nil
}

func (si scalingInstructionAttributes) InternalWithRef(ref terra.Reference) scalingInstructionAttributes {
	return scalingInstructionAttributes{ref: ref}
}

func (si scalingInstructionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return si.ref.InternalTokens()
}

func (si scalingInstructionAttributes) DisableDynamicScaling() terra.BoolValue {
	return terra.ReferenceAsBool(si.ref.Append("disable_dynamic_scaling"))
}

func (si scalingInstructionAttributes) MaxCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(si.ref.Append("max_capacity"))
}

func (si scalingInstructionAttributes) MinCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(si.ref.Append("min_capacity"))
}

func (si scalingInstructionAttributes) PredictiveScalingMaxCapacityBehavior() terra.StringValue {
	return terra.ReferenceAsString(si.ref.Append("predictive_scaling_max_capacity_behavior"))
}

func (si scalingInstructionAttributes) PredictiveScalingMaxCapacityBuffer() terra.NumberValue {
	return terra.ReferenceAsNumber(si.ref.Append("predictive_scaling_max_capacity_buffer"))
}

func (si scalingInstructionAttributes) PredictiveScalingMode() terra.StringValue {
	return terra.ReferenceAsString(si.ref.Append("predictive_scaling_mode"))
}

func (si scalingInstructionAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(si.ref.Append("resource_id"))
}

func (si scalingInstructionAttributes) ScalableDimension() terra.StringValue {
	return terra.ReferenceAsString(si.ref.Append("scalable_dimension"))
}

func (si scalingInstructionAttributes) ScalingPolicyUpdateBehavior() terra.StringValue {
	return terra.ReferenceAsString(si.ref.Append("scaling_policy_update_behavior"))
}

func (si scalingInstructionAttributes) ScheduledActionBufferTime() terra.NumberValue {
	return terra.ReferenceAsNumber(si.ref.Append("scheduled_action_buffer_time"))
}

func (si scalingInstructionAttributes) ServiceNamespace() terra.StringValue {
	return terra.ReferenceAsString(si.ref.Append("service_namespace"))
}

func (si scalingInstructionAttributes) CustomizedLoadMetricSpecification() terra.ListValue[scalingInstructionCustomizedLoadMetricSpecificationAttributes] {
	return terra.ReferenceAsList[scalingInstructionCustomizedLoadMetricSpecificationAttributes](si.ref.Append("customized_load_metric_specification"))
}

func (si scalingInstructionAttributes) PredefinedLoadMetricSpecification() terra.ListValue[scalingInstructionPredefinedLoadMetricSpecificationAttributes] {
	return terra.ReferenceAsList[scalingInstructionPredefinedLoadMetricSpecificationAttributes](si.ref.Append("predefined_load_metric_specification"))
}

func (si scalingInstructionAttributes) TargetTrackingConfiguration() terra.SetValue[scalingInstructionTargetTrackingConfigurationAttributes] {
	return terra.ReferenceAsSet[scalingInstructionTargetTrackingConfigurationAttributes](si.ref.Append("target_tracking_configuration"))
}

type scalingInstructionCustomizedLoadMetricSpecificationAttributes struct {
	ref terra.Reference
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return clms.ref, nil
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) InternalWithRef(ref terra.Reference) scalingInstructionCustomizedLoadMetricSpecificationAttributes {
	return scalingInstructionCustomizedLoadMetricSpecificationAttributes{ref: ref}
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clms.ref.InternalTokens()
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) Dimensions() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](clms.ref.Append("dimensions"))
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(clms.ref.Append("metric_name"))
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(clms.ref.Append("namespace"))
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) Statistic() terra.StringValue {
	return terra.ReferenceAsString(clms.ref.Append("statistic"))
}

func (clms scalingInstructionCustomizedLoadMetricSpecificationAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(clms.ref.Append("unit"))
}

type scalingInstructionPredefinedLoadMetricSpecificationAttributes struct {
	ref terra.Reference
}

func (plms scalingInstructionPredefinedLoadMetricSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return plms.ref, nil
}

func (plms scalingInstructionPredefinedLoadMetricSpecificationAttributes) InternalWithRef(ref terra.Reference) scalingInstructionPredefinedLoadMetricSpecificationAttributes {
	return scalingInstructionPredefinedLoadMetricSpecificationAttributes{ref: ref}
}

func (plms scalingInstructionPredefinedLoadMetricSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return plms.ref.InternalTokens()
}

func (plms scalingInstructionPredefinedLoadMetricSpecificationAttributes) PredefinedLoadMetricType() terra.StringValue {
	return terra.ReferenceAsString(plms.ref.Append("predefined_load_metric_type"))
}

func (plms scalingInstructionPredefinedLoadMetricSpecificationAttributes) ResourceLabel() terra.StringValue {
	return terra.ReferenceAsString(plms.ref.Append("resource_label"))
}

type scalingInstructionTargetTrackingConfigurationAttributes struct {
	ref terra.Reference
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ttc.ref, nil
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) InternalWithRef(ref terra.Reference) scalingInstructionTargetTrackingConfigurationAttributes {
	return scalingInstructionTargetTrackingConfigurationAttributes{ref: ref}
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ttc.ref.InternalTokens()
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) DisableScaleIn() terra.BoolValue {
	return terra.ReferenceAsBool(ttc.ref.Append("disable_scale_in"))
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) EstimatedInstanceWarmup() terra.NumberValue {
	return terra.ReferenceAsNumber(ttc.ref.Append("estimated_instance_warmup"))
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) ScaleInCooldown() terra.NumberValue {
	return terra.ReferenceAsNumber(ttc.ref.Append("scale_in_cooldown"))
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) ScaleOutCooldown() terra.NumberValue {
	return terra.ReferenceAsNumber(ttc.ref.Append("scale_out_cooldown"))
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) TargetValue() terra.NumberValue {
	return terra.ReferenceAsNumber(ttc.ref.Append("target_value"))
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) CustomizedScalingMetricSpecification() terra.ListValue[scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes] {
	return terra.ReferenceAsList[scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes](ttc.ref.Append("customized_scaling_metric_specification"))
}

func (ttc scalingInstructionTargetTrackingConfigurationAttributes) PredefinedScalingMetricSpecification() terra.ListValue[scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes] {
	return terra.ReferenceAsList[scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes](ttc.ref.Append("predefined_scaling_metric_specification"))
}

type scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes struct {
	ref terra.Reference
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return csms.ref, nil
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) InternalWithRef(ref terra.Reference) scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes {
	return scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes{ref: ref}
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return csms.ref.InternalTokens()
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) Dimensions() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](csms.ref.Append("dimensions"))
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) MetricName() terra.StringValue {
	return terra.ReferenceAsString(csms.ref.Append("metric_name"))
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(csms.ref.Append("namespace"))
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) Statistic() terra.StringValue {
	return terra.ReferenceAsString(csms.ref.Append("statistic"))
}

func (csms scalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationAttributes) Unit() terra.StringValue {
	return terra.ReferenceAsString(csms.ref.Append("unit"))
}

type scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes struct {
	ref terra.Reference
}

func (psms scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return psms.ref, nil
}

func (psms scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes) InternalWithRef(ref terra.Reference) scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes {
	return scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes{ref: ref}
}

func (psms scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return psms.ref.InternalTokens()
}

func (psms scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes) PredefinedScalingMetricType() terra.StringValue {
	return terra.ReferenceAsString(psms.ref.Append("predefined_scaling_metric_type"))
}

func (psms scalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationAttributes) ResourceLabel() terra.StringValue {
	return terra.ReferenceAsString(psms.ref.Append("resource_label"))
}

type ApplicationSourceState struct {
	CloudformationStackArn string                            `json:"cloudformation_stack_arn"`
	TagFilter              []ApplicationSourceTagFilterState `json:"tag_filter"`
}

type ApplicationSourceTagFilterState struct {
	Key    string   `json:"key"`
	Values []string `json:"values"`
}

type ScalingInstructionState struct {
	DisableDynamicScaling                bool                                                       `json:"disable_dynamic_scaling"`
	MaxCapacity                          float64                                                    `json:"max_capacity"`
	MinCapacity                          float64                                                    `json:"min_capacity"`
	PredictiveScalingMaxCapacityBehavior string                                                     `json:"predictive_scaling_max_capacity_behavior"`
	PredictiveScalingMaxCapacityBuffer   float64                                                    `json:"predictive_scaling_max_capacity_buffer"`
	PredictiveScalingMode                string                                                     `json:"predictive_scaling_mode"`
	ResourceId                           string                                                     `json:"resource_id"`
	ScalableDimension                    string                                                     `json:"scalable_dimension"`
	ScalingPolicyUpdateBehavior          string                                                     `json:"scaling_policy_update_behavior"`
	ScheduledActionBufferTime            float64                                                    `json:"scheduled_action_buffer_time"`
	ServiceNamespace                     string                                                     `json:"service_namespace"`
	CustomizedLoadMetricSpecification    []ScalingInstructionCustomizedLoadMetricSpecificationState `json:"customized_load_metric_specification"`
	PredefinedLoadMetricSpecification    []ScalingInstructionPredefinedLoadMetricSpecificationState `json:"predefined_load_metric_specification"`
	TargetTrackingConfiguration          []ScalingInstructionTargetTrackingConfigurationState       `json:"target_tracking_configuration"`
}

type ScalingInstructionCustomizedLoadMetricSpecificationState struct {
	Dimensions map[string]string `json:"dimensions"`
	MetricName string            `json:"metric_name"`
	Namespace  string            `json:"namespace"`
	Statistic  string            `json:"statistic"`
	Unit       string            `json:"unit"`
}

type ScalingInstructionPredefinedLoadMetricSpecificationState struct {
	PredefinedLoadMetricType string `json:"predefined_load_metric_type"`
	ResourceLabel            string `json:"resource_label"`
}

type ScalingInstructionTargetTrackingConfigurationState struct {
	DisableScaleIn                       bool                                                                                     `json:"disable_scale_in"`
	EstimatedInstanceWarmup              float64                                                                                  `json:"estimated_instance_warmup"`
	ScaleInCooldown                      float64                                                                                  `json:"scale_in_cooldown"`
	ScaleOutCooldown                     float64                                                                                  `json:"scale_out_cooldown"`
	TargetValue                          float64                                                                                  `json:"target_value"`
	CustomizedScalingMetricSpecification []ScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationState `json:"customized_scaling_metric_specification"`
	PredefinedScalingMetricSpecification []ScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationState `json:"predefined_scaling_metric_specification"`
}

type ScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationState struct {
	Dimensions map[string]string `json:"dimensions"`
	MetricName string            `json:"metric_name"`
	Namespace  string            `json:"namespace"`
	Statistic  string            `json:"statistic"`
	Unit       string            `json:"unit"`
}

type ScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationState struct {
	PredefinedScalingMetricType string `json:"predefined_scaling_metric_type"`
	ResourceLabel               string `json:"resource_label"`
}
