// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_monitoring_schedule

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MonitoringScheduleConfig struct {
	// MonitoringJobDefinitionName is required.
	MonitoringJobDefinitionName terra.StringValue `hcl:"monitoring_job_definition_name,attr" validate:"required"`
	// MonitoringType is required.
	MonitoringType terra.StringValue `hcl:"monitoring_type,attr" validate:"required"`
	// MonitoringScheduleConfigScheduleConfig is optional.
	ScheduleConfig *MonitoringScheduleConfigScheduleConfig `hcl:"schedule_config,block"`
}

type MonitoringScheduleConfigScheduleConfig struct {
	// ScheduleExpression is required.
	ScheduleExpression terra.StringValue `hcl:"schedule_expression,attr" validate:"required"`
}

type monitoringScheduleConfigAttributes struct {
	ref terra.Reference
}

func (msc monitoringScheduleConfigAttributes) InternalRef() (terra.Reference, error) {
	return msc.ref, nil
}

func (msc monitoringScheduleConfigAttributes) InternalWithRef(ref terra.Reference) monitoringScheduleConfigAttributes {
	return monitoringScheduleConfigAttributes{ref: ref}
}

func (msc monitoringScheduleConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return msc.ref.InternalTokens()
}

func (msc monitoringScheduleConfigAttributes) MonitoringJobDefinitionName() terra.StringValue {
	return terra.ReferenceAsString(msc.ref.Append("monitoring_job_definition_name"))
}

func (msc monitoringScheduleConfigAttributes) MonitoringType() terra.StringValue {
	return terra.ReferenceAsString(msc.ref.Append("monitoring_type"))
}

func (msc monitoringScheduleConfigAttributes) ScheduleConfig() terra.ListValue[monitoringScheduleConfigScheduleConfigAttributes] {
	return terra.ReferenceAsList[monitoringScheduleConfigScheduleConfigAttributes](msc.ref.Append("schedule_config"))
}

type monitoringScheduleConfigScheduleConfigAttributes struct {
	ref terra.Reference
}

func (sc monitoringScheduleConfigScheduleConfigAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc monitoringScheduleConfigScheduleConfigAttributes) InternalWithRef(ref terra.Reference) monitoringScheduleConfigScheduleConfigAttributes {
	return monitoringScheduleConfigScheduleConfigAttributes{ref: ref}
}

func (sc monitoringScheduleConfigScheduleConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc monitoringScheduleConfigScheduleConfigAttributes) ScheduleExpression() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("schedule_expression"))
}

type MonitoringScheduleConfigState struct {
	MonitoringJobDefinitionName string                                        `json:"monitoring_job_definition_name"`
	MonitoringType              string                                        `json:"monitoring_type"`
	ScheduleConfig              []MonitoringScheduleConfigScheduleConfigState `json:"schedule_config"`
}

type MonitoringScheduleConfigScheduleConfigState struct {
	ScheduleExpression string `json:"schedule_expression"`
}
