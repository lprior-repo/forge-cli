// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_fleet

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type FleetInstanceSet struct {
	// InstanceIds is optional.
	InstanceIds terra.ListValue[terra.StringValue] `hcl:"instance_ids,attr"`
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// Lifecycle is optional.
	Lifecycle terra.StringValue `hcl:"lifecycle,attr"`
	// Platform is optional.
	Platform terra.StringValue `hcl:"platform,attr"`
}

type LaunchTemplateConfig struct {
	// LaunchTemplateConfigLaunchTemplateSpecification is optional.
	LaunchTemplateSpecification *LaunchTemplateConfigLaunchTemplateSpecification `hcl:"launch_template_specification,block"`
	// LaunchTemplateConfigOverride is min=0,max=300.
	Override []LaunchTemplateConfigOverride `hcl:"override,block" validate:"min=0,max=300"`
}

type LaunchTemplateConfigLaunchTemplateSpecification struct {
	// LaunchTemplateId is optional.
	LaunchTemplateId terra.StringValue `hcl:"launch_template_id,attr"`
	// LaunchTemplateName is optional.
	LaunchTemplateName terra.StringValue `hcl:"launch_template_name,attr"`
	// Version is required.
	Version terra.StringValue `hcl:"version,attr" validate:"required"`
}

type LaunchTemplateConfigOverride struct {
	// AvailabilityZone is optional.
	AvailabilityZone terra.StringValue `hcl:"availability_zone,attr"`
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// MaxPrice is optional.
	MaxPrice terra.StringValue `hcl:"max_price,attr"`
	// Priority is optional.
	Priority terra.NumberValue `hcl:"priority,attr"`
	// SubnetId is optional.
	SubnetId terra.StringValue `hcl:"subnet_id,attr"`
	// WeightedCapacity is optional.
	WeightedCapacity terra.NumberValue `hcl:"weighted_capacity,attr"`
	// LaunchTemplateConfigOverrideInstanceRequirements is optional.
	InstanceRequirements *LaunchTemplateConfigOverrideInstanceRequirements `hcl:"instance_requirements,block"`
}

type LaunchTemplateConfigOverrideInstanceRequirements struct {
	// AcceleratorManufacturers is optional.
	AcceleratorManufacturers terra.SetValue[terra.StringValue] `hcl:"accelerator_manufacturers,attr"`
	// AcceleratorNames is optional.
	AcceleratorNames terra.SetValue[terra.StringValue] `hcl:"accelerator_names,attr"`
	// AcceleratorTypes is optional.
	AcceleratorTypes terra.SetValue[terra.StringValue] `hcl:"accelerator_types,attr"`
	// AllowedInstanceTypes is optional.
	AllowedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"allowed_instance_types,attr"`
	// BareMetal is optional.
	BareMetal terra.StringValue `hcl:"bare_metal,attr"`
	// BurstablePerformance is optional.
	BurstablePerformance terra.StringValue `hcl:"burstable_performance,attr"`
	// CpuManufacturers is optional.
	CpuManufacturers terra.SetValue[terra.StringValue] `hcl:"cpu_manufacturers,attr"`
	// ExcludedInstanceTypes is optional.
	ExcludedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"excluded_instance_types,attr"`
	// InstanceGenerations is optional.
	InstanceGenerations terra.SetValue[terra.StringValue] `hcl:"instance_generations,attr"`
	// LocalStorage is optional.
	LocalStorage terra.StringValue `hcl:"local_storage,attr"`
	// LocalStorageTypes is optional.
	LocalStorageTypes terra.SetValue[terra.StringValue] `hcl:"local_storage_types,attr"`
	// OnDemandMaxPricePercentageOverLowestPrice is optional.
	OnDemandMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"on_demand_max_price_percentage_over_lowest_price,attr"`
	// RequireHibernateSupport is optional.
	RequireHibernateSupport terra.BoolValue `hcl:"require_hibernate_support,attr"`
	// SpotMaxPricePercentageOverLowestPrice is optional.
	SpotMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"spot_max_price_percentage_over_lowest_price,attr"`
	// LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount is optional.
	AcceleratorCount *LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount `hcl:"accelerator_count,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib is optional.
	AcceleratorTotalMemoryMib *LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib `hcl:"accelerator_total_memory_mib,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps is optional.
	BaselineEbsBandwidthMbps *LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps `hcl:"baseline_ebs_bandwidth_mbps,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu is optional.
	MemoryGibPerVcpu *LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu `hcl:"memory_gib_per_vcpu,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsMemoryMib is required.
	MemoryMib *LaunchTemplateConfigOverrideInstanceRequirementsMemoryMib `hcl:"memory_mib,block" validate:"required"`
	// LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps is optional.
	NetworkBandwidthGbps *LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps `hcl:"network_bandwidth_gbps,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount is optional.
	NetworkInterfaceCount *LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount `hcl:"network_interface_count,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb is optional.
	TotalLocalStorageGb *LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb `hcl:"total_local_storage_gb,block"`
	// LaunchTemplateConfigOverrideInstanceRequirementsVcpuCount is required.
	VcpuCount *LaunchTemplateConfigOverrideInstanceRequirementsVcpuCount `hcl:"vcpu_count,block" validate:"required"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryMib struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is required.
	Min terra.NumberValue `hcl:"min,attr" validate:"required"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsVcpuCount struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is required.
	Min terra.NumberValue `hcl:"min,attr" validate:"required"`
}

type OnDemandOptions struct {
	// AllocationStrategy is optional.
	AllocationStrategy terra.StringValue `hcl:"allocation_strategy,attr"`
	// MaxTotalPrice is optional.
	MaxTotalPrice terra.StringValue `hcl:"max_total_price,attr"`
	// MinTargetCapacity is optional.
	MinTargetCapacity terra.NumberValue `hcl:"min_target_capacity,attr"`
	// SingleAvailabilityZone is optional.
	SingleAvailabilityZone terra.BoolValue `hcl:"single_availability_zone,attr"`
	// SingleInstanceType is optional.
	SingleInstanceType terra.BoolValue `hcl:"single_instance_type,attr"`
}

type SpotOptions struct {
	// AllocationStrategy is optional.
	AllocationStrategy terra.StringValue `hcl:"allocation_strategy,attr"`
	// InstanceInterruptionBehavior is optional.
	InstanceInterruptionBehavior terra.StringValue `hcl:"instance_interruption_behavior,attr"`
	// InstancePoolsToUseCount is optional.
	InstancePoolsToUseCount terra.NumberValue `hcl:"instance_pools_to_use_count,attr"`
	// SpotOptionsMaintenanceStrategies is optional.
	MaintenanceStrategies *SpotOptionsMaintenanceStrategies `hcl:"maintenance_strategies,block"`
}

type SpotOptionsMaintenanceStrategies struct {
	// SpotOptionsMaintenanceStrategiesCapacityRebalance is optional.
	CapacityRebalance *SpotOptionsMaintenanceStrategiesCapacityRebalance `hcl:"capacity_rebalance,block"`
}

type SpotOptionsMaintenanceStrategiesCapacityRebalance struct {
	// ReplacementStrategy is optional.
	ReplacementStrategy terra.StringValue `hcl:"replacement_strategy,attr"`
	// TerminationDelay is optional.
	TerminationDelay terra.NumberValue `hcl:"termination_delay,attr"`
}

type TargetCapacitySpecification struct {
	// DefaultTargetCapacityType is required.
	DefaultTargetCapacityType terra.StringValue `hcl:"default_target_capacity_type,attr" validate:"required"`
	// OnDemandTargetCapacity is optional.
	OnDemandTargetCapacity terra.NumberValue `hcl:"on_demand_target_capacity,attr"`
	// SpotTargetCapacity is optional.
	SpotTargetCapacity terra.NumberValue `hcl:"spot_target_capacity,attr"`
	// TargetCapacityUnitType is optional.
	TargetCapacityUnitType terra.StringValue `hcl:"target_capacity_unit_type,attr"`
	// TotalTargetCapacity is required.
	TotalTargetCapacity terra.NumberValue `hcl:"total_target_capacity,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type fleetInstanceSetAttributes struct {
	ref terra.Reference
}

func (fis fleetInstanceSetAttributes) InternalRef() (terra.Reference, error) {
	return fis.ref, nil
}

func (fis fleetInstanceSetAttributes) InternalWithRef(ref terra.Reference) fleetInstanceSetAttributes {
	return fleetInstanceSetAttributes{ref: ref}
}

func (fis fleetInstanceSetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fis.ref.InternalTokens()
}

func (fis fleetInstanceSetAttributes) InstanceIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](fis.ref.Append("instance_ids"))
}

func (fis fleetInstanceSetAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(fis.ref.Append("instance_type"))
}

func (fis fleetInstanceSetAttributes) Lifecycle() terra.StringValue {
	return terra.ReferenceAsString(fis.ref.Append("lifecycle"))
}

func (fis fleetInstanceSetAttributes) Platform() terra.StringValue {
	return terra.ReferenceAsString(fis.ref.Append("platform"))
}

type launchTemplateConfigAttributes struct {
	ref terra.Reference
}

func (ltc launchTemplateConfigAttributes) InternalRef() (terra.Reference, error) {
	return ltc.ref, nil
}

func (ltc launchTemplateConfigAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigAttributes {
	return launchTemplateConfigAttributes{ref: ref}
}

func (ltc launchTemplateConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ltc.ref.InternalTokens()
}

func (ltc launchTemplateConfigAttributes) LaunchTemplateSpecification() terra.ListValue[launchTemplateConfigLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigLaunchTemplateSpecificationAttributes](ltc.ref.Append("launch_template_specification"))
}

func (ltc launchTemplateConfigAttributes) Override() terra.ListValue[launchTemplateConfigOverrideAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideAttributes](ltc.ref.Append("override"))
}

type launchTemplateConfigLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigLaunchTemplateSpecificationAttributes {
	return launchTemplateConfigLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) LaunchTemplateId() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_id"))
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) LaunchTemplateName() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_name"))
}

func (lts launchTemplateConfigLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type launchTemplateConfigOverrideAttributes struct {
	ref terra.Reference
}

func (o launchTemplateConfigOverrideAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o launchTemplateConfigOverrideAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideAttributes {
	return launchTemplateConfigOverrideAttributes{ref: ref}
}

func (o launchTemplateConfigOverrideAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o launchTemplateConfigOverrideAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("availability_zone"))
}

func (o launchTemplateConfigOverrideAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("instance_type"))
}

func (o launchTemplateConfigOverrideAttributes) MaxPrice() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("max_price"))
}

func (o launchTemplateConfigOverrideAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("priority"))
}

func (o launchTemplateConfigOverrideAttributes) SubnetId() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("subnet_id"))
}

func (o launchTemplateConfigOverrideAttributes) WeightedCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(o.ref.Append("weighted_capacity"))
}

func (o launchTemplateConfigOverrideAttributes) InstanceRequirements() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsAttributes](o.ref.Append("instance_requirements"))
}

type launchTemplateConfigOverrideInstanceRequirementsAttributes struct {
	ref terra.Reference
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsAttributes{ref: ref}
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_manufacturers"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_names"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_types"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) AllowedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("allowed_instance_types"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) BareMetal() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("bare_metal"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) BurstablePerformance() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("burstable_performance"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) CpuManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("cpu_manufacturers"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) ExcludedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("excluded_instance_types"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) InstanceGenerations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("instance_generations"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) LocalStorage() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("local_storage"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) LocalStorageTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("local_storage_types"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) OnDemandMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("on_demand_max_price_percentage_over_lowest_price"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) RequireHibernateSupport() terra.BoolValue {
	return terra.ReferenceAsBool(ir.ref.Append("require_hibernate_support"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) SpotMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("spot_max_price_percentage_over_lowest_price"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorCount() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes](ir.ref.Append("accelerator_count"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) AcceleratorTotalMemoryMib() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes](ir.ref.Append("accelerator_total_memory_mib"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) BaselineEbsBandwidthMbps() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes](ir.ref.Append("baseline_ebs_bandwidth_mbps"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) MemoryGibPerVcpu() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes](ir.ref.Append("memory_gib_per_vcpu"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) MemoryMib() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes](ir.ref.Append("memory_mib"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) NetworkBandwidthGbps() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes](ir.ref.Append("network_bandwidth_gbps"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) NetworkInterfaceCount() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes](ir.ref.Append("network_interface_count"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) TotalLocalStorageGb() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes](ir.ref.Append("total_local_storage_gb"))
}

func (ir launchTemplateConfigOverrideInstanceRequirementsAttributes) VcpuCount() terra.ListValue[launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes] {
	return terra.ReferenceAsList[launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes](ir.ref.Append("vcpu_count"))
}

type launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes struct {
	ref terra.Reference
}

func (ac launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes{ref: ref}
}

func (ac launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("max"))
}

func (ac launchTemplateConfigOverrideInstanceRequirementsAcceleratorCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes struct {
	ref terra.Reference
}

func (atmm launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return atmm.ref, nil
}

func (atmm launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes{ref: ref}
}

func (atmm launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atmm.ref.InternalTokens()
}

func (atmm launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("max"))
}

func (atmm launchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes struct {
	ref terra.Reference
}

func (bebm launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalRef() (terra.Reference, error) {
	return bebm.ref, nil
}

func (bebm launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes{ref: ref}
}

func (bebm launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bebm.ref.InternalTokens()
}

func (bebm launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("max"))
}

func (bebm launchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes struct {
	ref terra.Reference
}

func (mgpv launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) InternalRef() (terra.Reference, error) {
	return mgpv.ref, nil
}

func (mgpv launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes{ref: ref}
}

func (mgpv launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgpv.ref.InternalTokens()
}

func (mgpv launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("max"))
}

func (mgpv launchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes struct {
	ref terra.Reference
}

func (mm launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) InternalRef() (terra.Reference, error) {
	return mm.ref, nil
}

func (mm launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes{ref: ref}
}

func (mm launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mm.ref.InternalTokens()
}

func (mm launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("max"))
}

func (mm launchTemplateConfigOverrideInstanceRequirementsMemoryMibAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes struct {
	ref terra.Reference
}

func (nbg launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalRef() (terra.Reference, error) {
	return nbg.ref, nil
}

func (nbg launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes{ref: ref}
}

func (nbg launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nbg.ref.InternalTokens()
}

func (nbg launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("max"))
}

func (nbg launchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes struct {
	ref terra.Reference
}

func (nic launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) InternalRef() (terra.Reference, error) {
	return nic.ref, nil
}

func (nic launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes{ref: ref}
}

func (nic launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nic.ref.InternalTokens()
}

func (nic launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("max"))
}

func (nic launchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes struct {
	ref terra.Reference
}

func (tlsg launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) InternalRef() (terra.Reference, error) {
	return tlsg.ref, nil
}

func (tlsg launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes{ref: ref}
}

func (tlsg launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tlsg.ref.InternalTokens()
}

func (tlsg launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("max"))
}

func (tlsg launchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("min"))
}

type launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes struct {
	ref terra.Reference
}

func (vc launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) InternalWithRef(ref terra.Reference) launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes {
	return launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes{ref: ref}
}

func (vc launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("max"))
}

func (vc launchTemplateConfigOverrideInstanceRequirementsVcpuCountAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("min"))
}

type onDemandOptionsAttributes struct {
	ref terra.Reference
}

func (odo onDemandOptionsAttributes) InternalRef() (terra.Reference, error) {
	return odo.ref, nil
}

func (odo onDemandOptionsAttributes) InternalWithRef(ref terra.Reference) onDemandOptionsAttributes {
	return onDemandOptionsAttributes{ref: ref}
}

func (odo onDemandOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return odo.ref.InternalTokens()
}

func (odo onDemandOptionsAttributes) AllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(odo.ref.Append("allocation_strategy"))
}

func (odo onDemandOptionsAttributes) MaxTotalPrice() terra.StringValue {
	return terra.ReferenceAsString(odo.ref.Append("max_total_price"))
}

func (odo onDemandOptionsAttributes) MinTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(odo.ref.Append("min_target_capacity"))
}

func (odo onDemandOptionsAttributes) SingleAvailabilityZone() terra.BoolValue {
	return terra.ReferenceAsBool(odo.ref.Append("single_availability_zone"))
}

func (odo onDemandOptionsAttributes) SingleInstanceType() terra.BoolValue {
	return terra.ReferenceAsBool(odo.ref.Append("single_instance_type"))
}

type spotOptionsAttributes struct {
	ref terra.Reference
}

func (so spotOptionsAttributes) InternalRef() (terra.Reference, error) {
	return so.ref, nil
}

func (so spotOptionsAttributes) InternalWithRef(ref terra.Reference) spotOptionsAttributes {
	return spotOptionsAttributes{ref: ref}
}

func (so spotOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return so.ref.InternalTokens()
}

func (so spotOptionsAttributes) AllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("allocation_strategy"))
}

func (so spotOptionsAttributes) InstanceInterruptionBehavior() terra.StringValue {
	return terra.ReferenceAsString(so.ref.Append("instance_interruption_behavior"))
}

func (so spotOptionsAttributes) InstancePoolsToUseCount() terra.NumberValue {
	return terra.ReferenceAsNumber(so.ref.Append("instance_pools_to_use_count"))
}

func (so spotOptionsAttributes) MaintenanceStrategies() terra.ListValue[spotOptionsMaintenanceStrategiesAttributes] {
	return terra.ReferenceAsList[spotOptionsMaintenanceStrategiesAttributes](so.ref.Append("maintenance_strategies"))
}

type spotOptionsMaintenanceStrategiesAttributes struct {
	ref terra.Reference
}

func (ms spotOptionsMaintenanceStrategiesAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms spotOptionsMaintenanceStrategiesAttributes) InternalWithRef(ref terra.Reference) spotOptionsMaintenanceStrategiesAttributes {
	return spotOptionsMaintenanceStrategiesAttributes{ref: ref}
}

func (ms spotOptionsMaintenanceStrategiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms spotOptionsMaintenanceStrategiesAttributes) CapacityRebalance() terra.ListValue[spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes] {
	return terra.ReferenceAsList[spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes](ms.ref.Append("capacity_rebalance"))
}

type spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes struct {
	ref terra.Reference
}

func (cr spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) InternalWithRef(ref terra.Reference) spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes {
	return spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes{ref: ref}
}

func (cr spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) ReplacementStrategy() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("replacement_strategy"))
}

func (cr spotOptionsMaintenanceStrategiesCapacityRebalanceAttributes) TerminationDelay() terra.NumberValue {
	return terra.ReferenceAsNumber(cr.ref.Append("termination_delay"))
}

type targetCapacitySpecificationAttributes struct {
	ref terra.Reference
}

func (tcs targetCapacitySpecificationAttributes) InternalRef() (terra.Reference, error) {
	return tcs.ref, nil
}

func (tcs targetCapacitySpecificationAttributes) InternalWithRef(ref terra.Reference) targetCapacitySpecificationAttributes {
	return targetCapacitySpecificationAttributes{ref: ref}
}

func (tcs targetCapacitySpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tcs.ref.InternalTokens()
}

func (tcs targetCapacitySpecificationAttributes) DefaultTargetCapacityType() terra.StringValue {
	return terra.ReferenceAsString(tcs.ref.Append("default_target_capacity_type"))
}

func (tcs targetCapacitySpecificationAttributes) OnDemandTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(tcs.ref.Append("on_demand_target_capacity"))
}

func (tcs targetCapacitySpecificationAttributes) SpotTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(tcs.ref.Append("spot_target_capacity"))
}

func (tcs targetCapacitySpecificationAttributes) TargetCapacityUnitType() terra.StringValue {
	return terra.ReferenceAsString(tcs.ref.Append("target_capacity_unit_type"))
}

func (tcs targetCapacitySpecificationAttributes) TotalTargetCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(tcs.ref.Append("total_target_capacity"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type FleetInstanceSetState struct {
	InstanceIds  []string `json:"instance_ids"`
	InstanceType string   `json:"instance_type"`
	Lifecycle    string   `json:"lifecycle"`
	Platform     string   `json:"platform"`
}

type LaunchTemplateConfigState struct {
	LaunchTemplateSpecification []LaunchTemplateConfigLaunchTemplateSpecificationState `json:"launch_template_specification"`
	Override                    []LaunchTemplateConfigOverrideState                    `json:"override"`
}

type LaunchTemplateConfigLaunchTemplateSpecificationState struct {
	LaunchTemplateId   string `json:"launch_template_id"`
	LaunchTemplateName string `json:"launch_template_name"`
	Version            string `json:"version"`
}

type LaunchTemplateConfigOverrideState struct {
	AvailabilityZone     string                                                  `json:"availability_zone"`
	InstanceType         string                                                  `json:"instance_type"`
	MaxPrice             string                                                  `json:"max_price"`
	Priority             float64                                                 `json:"priority"`
	SubnetId             string                                                  `json:"subnet_id"`
	WeightedCapacity     float64                                                 `json:"weighted_capacity"`
	InstanceRequirements []LaunchTemplateConfigOverrideInstanceRequirementsState `json:"instance_requirements"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsState struct {
	AcceleratorManufacturers                  []string                                                                         `json:"accelerator_manufacturers"`
	AcceleratorNames                          []string                                                                         `json:"accelerator_names"`
	AcceleratorTypes                          []string                                                                         `json:"accelerator_types"`
	AllowedInstanceTypes                      []string                                                                         `json:"allowed_instance_types"`
	BareMetal                                 string                                                                           `json:"bare_metal"`
	BurstablePerformance                      string                                                                           `json:"burstable_performance"`
	CpuManufacturers                          []string                                                                         `json:"cpu_manufacturers"`
	ExcludedInstanceTypes                     []string                                                                         `json:"excluded_instance_types"`
	InstanceGenerations                       []string                                                                         `json:"instance_generations"`
	LocalStorage                              string                                                                           `json:"local_storage"`
	LocalStorageTypes                         []string                                                                         `json:"local_storage_types"`
	OnDemandMaxPricePercentageOverLowestPrice float64                                                                          `json:"on_demand_max_price_percentage_over_lowest_price"`
	RequireHibernateSupport                   bool                                                                             `json:"require_hibernate_support"`
	SpotMaxPricePercentageOverLowestPrice     float64                                                                          `json:"spot_max_price_percentage_over_lowest_price"`
	AcceleratorCount                          []LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountState          `json:"accelerator_count"`
	AcceleratorTotalMemoryMib                 []LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibState `json:"accelerator_total_memory_mib"`
	BaselineEbsBandwidthMbps                  []LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsState  `json:"baseline_ebs_bandwidth_mbps"`
	MemoryGibPerVcpu                          []LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuState          `json:"memory_gib_per_vcpu"`
	MemoryMib                                 []LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibState                 `json:"memory_mib"`
	NetworkBandwidthGbps                      []LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsState      `json:"network_bandwidth_gbps"`
	NetworkInterfaceCount                     []LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountState     `json:"network_interface_count"`
	TotalLocalStorageGb                       []LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbState       `json:"total_local_storage_gb"`
	VcpuCount                                 []LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountState                 `json:"vcpu_count"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsMemoryMibState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type LaunchTemplateConfigOverrideInstanceRequirementsVcpuCountState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type OnDemandOptionsState struct {
	AllocationStrategy     string  `json:"allocation_strategy"`
	MaxTotalPrice          string  `json:"max_total_price"`
	MinTargetCapacity      float64 `json:"min_target_capacity"`
	SingleAvailabilityZone bool    `json:"single_availability_zone"`
	SingleInstanceType     bool    `json:"single_instance_type"`
}

type SpotOptionsState struct {
	AllocationStrategy           string                                  `json:"allocation_strategy"`
	InstanceInterruptionBehavior string                                  `json:"instance_interruption_behavior"`
	InstancePoolsToUseCount      float64                                 `json:"instance_pools_to_use_count"`
	MaintenanceStrategies        []SpotOptionsMaintenanceStrategiesState `json:"maintenance_strategies"`
}

type SpotOptionsMaintenanceStrategiesState struct {
	CapacityRebalance []SpotOptionsMaintenanceStrategiesCapacityRebalanceState `json:"capacity_rebalance"`
}

type SpotOptionsMaintenanceStrategiesCapacityRebalanceState struct {
	ReplacementStrategy string  `json:"replacement_strategy"`
	TerminationDelay    float64 `json:"termination_delay"`
}

type TargetCapacitySpecificationState struct {
	DefaultTargetCapacityType string  `json:"default_target_capacity_type"`
	OnDemandTargetCapacity    float64 `json:"on_demand_target_capacity"`
	SpotTargetCapacity        float64 `json:"spot_target_capacity"`
	TargetCapacityUnitType    string  `json:"target_capacity_unit_type"`
	TotalTargetCapacity       float64 `json:"total_target_capacity"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
