// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_memorydb_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type clusterEndpointAttributes struct {
	ref terra.Reference
}

func (ce clusterEndpointAttributes) InternalRef() (terra.Reference, error) {
	return ce.ref, nil
}

func (ce clusterEndpointAttributes) InternalWithRef(ref terra.Reference) clusterEndpointAttributes {
	return clusterEndpointAttributes{ref: ref}
}

func (ce clusterEndpointAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ce.ref.InternalTokens()
}

func (ce clusterEndpointAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(ce.ref.Append("address"))
}

func (ce clusterEndpointAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(ce.ref.Append("port"))
}

type shardsAttributes struct {
	ref terra.Reference
}

func (s shardsAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s shardsAttributes) InternalWithRef(ref terra.Reference) shardsAttributes {
	return shardsAttributes{ref: ref}
}

func (s shardsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s shardsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s shardsAttributes) NumNodes() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("num_nodes"))
}

func (s shardsAttributes) Slots() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("slots"))
}

func (s shardsAttributes) Nodes() terra.SetValue[shardsNodesAttributes] {
	return terra.ReferenceAsSet[shardsNodesAttributes](s.ref.Append("nodes"))
}

type shardsNodesAttributes struct {
	ref terra.Reference
}

func (n shardsNodesAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n shardsNodesAttributes) InternalWithRef(ref terra.Reference) shardsNodesAttributes {
	return shardsNodesAttributes{ref: ref}
}

func (n shardsNodesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n shardsNodesAttributes) AvailabilityZone() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("availability_zone"))
}

func (n shardsNodesAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("create_time"))
}

func (n shardsNodesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(n.ref.Append("name"))
}

func (n shardsNodesAttributes) Endpoint() terra.ListValue[shardsNodesEndpointAttributes] {
	return terra.ReferenceAsList[shardsNodesEndpointAttributes](n.ref.Append("endpoint"))
}

type shardsNodesEndpointAttributes struct {
	ref terra.Reference
}

func (e shardsNodesEndpointAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e shardsNodesEndpointAttributes) InternalWithRef(ref terra.Reference) shardsNodesEndpointAttributes {
	return shardsNodesEndpointAttributes{ref: ref}
}

func (e shardsNodesEndpointAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e shardsNodesEndpointAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("address"))
}

func (e shardsNodesEndpointAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("port"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type ClusterEndpointState struct {
	Address string  `json:"address"`
	Port    float64 `json:"port"`
}

type ShardsState struct {
	Name     string             `json:"name"`
	NumNodes float64            `json:"num_nodes"`
	Slots    string             `json:"slots"`
	Nodes    []ShardsNodesState `json:"nodes"`
}

type ShardsNodesState struct {
	AvailabilityZone string                     `json:"availability_zone"`
	CreateTime       string                     `json:"create_time"`
	Name             string                     `json:"name"`
	Endpoint         []ShardsNodesEndpointState `json:"endpoint"`
}

type ShardsNodesEndpointState struct {
	Address string  `json:"address"`
	Port    float64 `json:"port"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
