// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpc_ipam_pool_cidr

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CidrAuthorizationContext struct {
	// Message is optional.
	Message terra.StringValue `hcl:"message,attr"`
	// Signature is optional.
	Signature terra.StringValue `hcl:"signature,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
}

type cidrAuthorizationContextAttributes struct {
	ref terra.Reference
}

func (cac cidrAuthorizationContextAttributes) InternalRef() (terra.Reference, error) {
	return cac.ref, nil
}

func (cac cidrAuthorizationContextAttributes) InternalWithRef(ref terra.Reference) cidrAuthorizationContextAttributes {
	return cidrAuthorizationContextAttributes{ref: ref}
}

func (cac cidrAuthorizationContextAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cac.ref.InternalTokens()
}

func (cac cidrAuthorizationContextAttributes) Message() terra.StringValue {
	return terra.ReferenceAsString(cac.ref.Append("message"))
}

func (cac cidrAuthorizationContextAttributes) Signature() terra.StringValue {
	return terra.ReferenceAsString(cac.ref.Append("signature"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type CidrAuthorizationContextState struct {
	Message   string `json:"message"`
	Signature string `json:"signature"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
}
