// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_quick_connect

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type QuickConnectConfig struct {
	// QuickConnectType is required.
	QuickConnectType terra.StringValue `hcl:"quick_connect_type,attr" validate:"required"`
	// QuickConnectConfigPhoneConfig is min=0.
	PhoneConfig []QuickConnectConfigPhoneConfig `hcl:"phone_config,block" validate:"min=0"`
	// QuickConnectConfigQueueConfig is min=0.
	QueueConfig []QuickConnectConfigQueueConfig `hcl:"queue_config,block" validate:"min=0"`
	// QuickConnectConfigUserConfig is min=0.
	UserConfig []QuickConnectConfigUserConfig `hcl:"user_config,block" validate:"min=0"`
}

type QuickConnectConfigPhoneConfig struct {
	// PhoneNumber is required.
	PhoneNumber terra.StringValue `hcl:"phone_number,attr" validate:"required"`
}

type QuickConnectConfigQueueConfig struct {
	// ContactFlowId is required.
	ContactFlowId terra.StringValue `hcl:"contact_flow_id,attr" validate:"required"`
	// QueueId is required.
	QueueId terra.StringValue `hcl:"queue_id,attr" validate:"required"`
}

type QuickConnectConfigUserConfig struct {
	// ContactFlowId is required.
	ContactFlowId terra.StringValue `hcl:"contact_flow_id,attr" validate:"required"`
	// UserId is required.
	UserId terra.StringValue `hcl:"user_id,attr" validate:"required"`
}

type quickConnectConfigAttributes struct {
	ref terra.Reference
}

func (qcc quickConnectConfigAttributes) InternalRef() (terra.Reference, error) {
	return qcc.ref, nil
}

func (qcc quickConnectConfigAttributes) InternalWithRef(ref terra.Reference) quickConnectConfigAttributes {
	return quickConnectConfigAttributes{ref: ref}
}

func (qcc quickConnectConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qcc.ref.InternalTokens()
}

func (qcc quickConnectConfigAttributes) QuickConnectType() terra.StringValue {
	return terra.ReferenceAsString(qcc.ref.Append("quick_connect_type"))
}

func (qcc quickConnectConfigAttributes) PhoneConfig() terra.ListValue[quickConnectConfigPhoneConfigAttributes] {
	return terra.ReferenceAsList[quickConnectConfigPhoneConfigAttributes](qcc.ref.Append("phone_config"))
}

func (qcc quickConnectConfigAttributes) QueueConfig() terra.ListValue[quickConnectConfigQueueConfigAttributes] {
	return terra.ReferenceAsList[quickConnectConfigQueueConfigAttributes](qcc.ref.Append("queue_config"))
}

func (qcc quickConnectConfigAttributes) UserConfig() terra.ListValue[quickConnectConfigUserConfigAttributes] {
	return terra.ReferenceAsList[quickConnectConfigUserConfigAttributes](qcc.ref.Append("user_config"))
}

type quickConnectConfigPhoneConfigAttributes struct {
	ref terra.Reference
}

func (pc quickConnectConfigPhoneConfigAttributes) InternalRef() (terra.Reference, error) {
	return pc.ref, nil
}

func (pc quickConnectConfigPhoneConfigAttributes) InternalWithRef(ref terra.Reference) quickConnectConfigPhoneConfigAttributes {
	return quickConnectConfigPhoneConfigAttributes{ref: ref}
}

func (pc quickConnectConfigPhoneConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pc.ref.InternalTokens()
}

func (pc quickConnectConfigPhoneConfigAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(pc.ref.Append("phone_number"))
}

type quickConnectConfigQueueConfigAttributes struct {
	ref terra.Reference
}

func (qc quickConnectConfigQueueConfigAttributes) InternalRef() (terra.Reference, error) {
	return qc.ref, nil
}

func (qc quickConnectConfigQueueConfigAttributes) InternalWithRef(ref terra.Reference) quickConnectConfigQueueConfigAttributes {
	return quickConnectConfigQueueConfigAttributes{ref: ref}
}

func (qc quickConnectConfigQueueConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qc.ref.InternalTokens()
}

func (qc quickConnectConfigQueueConfigAttributes) ContactFlowId() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("contact_flow_id"))
}

func (qc quickConnectConfigQueueConfigAttributes) QueueId() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("queue_id"))
}

type quickConnectConfigUserConfigAttributes struct {
	ref terra.Reference
}

func (uc quickConnectConfigUserConfigAttributes) InternalRef() (terra.Reference, error) {
	return uc.ref, nil
}

func (uc quickConnectConfigUserConfigAttributes) InternalWithRef(ref terra.Reference) quickConnectConfigUserConfigAttributes {
	return quickConnectConfigUserConfigAttributes{ref: ref}
}

func (uc quickConnectConfigUserConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uc.ref.InternalTokens()
}

func (uc quickConnectConfigUserConfigAttributes) ContactFlowId() terra.StringValue {
	return terra.ReferenceAsString(uc.ref.Append("contact_flow_id"))
}

func (uc quickConnectConfigUserConfigAttributes) UserId() terra.StringValue {
	return terra.ReferenceAsString(uc.ref.Append("user_id"))
}

type QuickConnectConfigState struct {
	QuickConnectType string                               `json:"quick_connect_type"`
	PhoneConfig      []QuickConnectConfigPhoneConfigState `json:"phone_config"`
	QueueConfig      []QuickConnectConfigQueueConfigState `json:"queue_config"`
	UserConfig       []QuickConnectConfigUserConfigState  `json:"user_config"`
}

type QuickConnectConfigPhoneConfigState struct {
	PhoneNumber string `json:"phone_number"`
}

type QuickConnectConfigQueueConfigState struct {
	ContactFlowId string `json:"contact_flow_id"`
	QueueId       string `json:"queue_id"`
}

type QuickConnectConfigUserConfigState struct {
	ContactFlowId string `json:"contact_flow_id"`
	UserId        string `json:"user_id"`
}
