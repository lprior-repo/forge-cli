// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_kendra_index

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CapacityUnits struct {
	// QueryCapacityUnits is optional.
	QueryCapacityUnits terra.NumberValue `hcl:"query_capacity_units,attr"`
	// StorageCapacityUnits is optional.
	StorageCapacityUnits terra.NumberValue `hcl:"storage_capacity_units,attr"`
}

type DocumentMetadataConfigurationUpdates struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// DocumentMetadataConfigurationUpdatesRelevance is optional.
	Relevance *DocumentMetadataConfigurationUpdatesRelevance `hcl:"relevance,block"`
	// DocumentMetadataConfigurationUpdatesSearch is optional.
	Search *DocumentMetadataConfigurationUpdatesSearch `hcl:"search,block"`
}

type DocumentMetadataConfigurationUpdatesRelevance struct {
	// Duration is optional.
	Duration terra.StringValue `hcl:"duration,attr"`
	// Freshness is optional.
	Freshness terra.BoolValue `hcl:"freshness,attr"`
	// Importance is optional.
	Importance terra.NumberValue `hcl:"importance,attr"`
	// RankOrder is optional.
	RankOrder terra.StringValue `hcl:"rank_order,attr"`
	// ValuesImportanceMap is optional.
	ValuesImportanceMap terra.MapValue[terra.NumberValue] `hcl:"values_importance_map,attr"`
}

type DocumentMetadataConfigurationUpdatesSearch struct {
	// Displayable is optional.
	Displayable terra.BoolValue `hcl:"displayable,attr"`
	// Facetable is optional.
	Facetable terra.BoolValue `hcl:"facetable,attr"`
	// Searchable is optional.
	Searchable terra.BoolValue `hcl:"searchable,attr"`
	// Sortable is optional.
	Sortable terra.BoolValue `hcl:"sortable,attr"`
}

type ServerSideEncryptionConfiguration struct {
	// KmsKeyId is optional.
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type UserGroupResolutionConfiguration struct {
	// UserGroupResolutionMode is required.
	UserGroupResolutionMode terra.StringValue `hcl:"user_group_resolution_mode,attr" validate:"required"`
}

type UserTokenConfigurations struct {
	// UserTokenConfigurationsJsonTokenTypeConfiguration is optional.
	JsonTokenTypeConfiguration *UserTokenConfigurationsJsonTokenTypeConfiguration `hcl:"json_token_type_configuration,block"`
	// UserTokenConfigurationsJwtTokenTypeConfiguration is optional.
	JwtTokenTypeConfiguration *UserTokenConfigurationsJwtTokenTypeConfiguration `hcl:"jwt_token_type_configuration,block"`
}

type UserTokenConfigurationsJsonTokenTypeConfiguration struct {
	// GroupAttributeField is required.
	GroupAttributeField terra.StringValue `hcl:"group_attribute_field,attr" validate:"required"`
	// UserNameAttributeField is required.
	UserNameAttributeField terra.StringValue `hcl:"user_name_attribute_field,attr" validate:"required"`
}

type UserTokenConfigurationsJwtTokenTypeConfiguration struct {
	// ClaimRegex is optional.
	ClaimRegex terra.StringValue `hcl:"claim_regex,attr"`
	// GroupAttributeField is optional.
	GroupAttributeField terra.StringValue `hcl:"group_attribute_field,attr"`
	// Issuer is optional.
	Issuer terra.StringValue `hcl:"issuer,attr"`
	// KeyLocation is required.
	KeyLocation terra.StringValue `hcl:"key_location,attr" validate:"required"`
	// SecretsManagerArn is optional.
	SecretsManagerArn terra.StringValue `hcl:"secrets_manager_arn,attr"`
	// Url is optional.
	Url terra.StringValue `hcl:"url,attr"`
	// UserNameAttributeField is optional.
	UserNameAttributeField terra.StringValue `hcl:"user_name_attribute_field,attr"`
}

type indexStatisticsAttributes struct {
	ref terra.Reference
}

func (is indexStatisticsAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is indexStatisticsAttributes) InternalWithRef(ref terra.Reference) indexStatisticsAttributes {
	return indexStatisticsAttributes{ref: ref}
}

func (is indexStatisticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is indexStatisticsAttributes) FaqStatistics() terra.ListValue[indexStatisticsFaqStatisticsAttributes] {
	return terra.ReferenceAsList[indexStatisticsFaqStatisticsAttributes](is.ref.Append("faq_statistics"))
}

func (is indexStatisticsAttributes) TextDocumentStatistics() terra.ListValue[indexStatisticsTextDocumentStatisticsAttributes] {
	return terra.ReferenceAsList[indexStatisticsTextDocumentStatisticsAttributes](is.ref.Append("text_document_statistics"))
}

type indexStatisticsFaqStatisticsAttributes struct {
	ref terra.Reference
}

func (fs indexStatisticsFaqStatisticsAttributes) InternalRef() (terra.Reference, error) {
	return fs.ref, nil
}

func (fs indexStatisticsFaqStatisticsAttributes) InternalWithRef(ref terra.Reference) indexStatisticsFaqStatisticsAttributes {
	return indexStatisticsFaqStatisticsAttributes{ref: ref}
}

func (fs indexStatisticsFaqStatisticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fs.ref.InternalTokens()
}

func (fs indexStatisticsFaqStatisticsAttributes) IndexedQuestionAnswersCount() terra.NumberValue {
	return terra.ReferenceAsNumber(fs.ref.Append("indexed_question_answers_count"))
}

type indexStatisticsTextDocumentStatisticsAttributes struct {
	ref terra.Reference
}

func (tds indexStatisticsTextDocumentStatisticsAttributes) InternalRef() (terra.Reference, error) {
	return tds.ref, nil
}

func (tds indexStatisticsTextDocumentStatisticsAttributes) InternalWithRef(ref terra.Reference) indexStatisticsTextDocumentStatisticsAttributes {
	return indexStatisticsTextDocumentStatisticsAttributes{ref: ref}
}

func (tds indexStatisticsTextDocumentStatisticsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tds.ref.InternalTokens()
}

func (tds indexStatisticsTextDocumentStatisticsAttributes) IndexedTextBytes() terra.NumberValue {
	return terra.ReferenceAsNumber(tds.ref.Append("indexed_text_bytes"))
}

func (tds indexStatisticsTextDocumentStatisticsAttributes) IndexedTextDocumentsCount() terra.NumberValue {
	return terra.ReferenceAsNumber(tds.ref.Append("indexed_text_documents_count"))
}

type capacityUnitsAttributes struct {
	ref terra.Reference
}

func (cu capacityUnitsAttributes) InternalRef() (terra.Reference, error) {
	return cu.ref, nil
}

func (cu capacityUnitsAttributes) InternalWithRef(ref terra.Reference) capacityUnitsAttributes {
	return capacityUnitsAttributes{ref: ref}
}

func (cu capacityUnitsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cu.ref.InternalTokens()
}

func (cu capacityUnitsAttributes) QueryCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cu.ref.Append("query_capacity_units"))
}

func (cu capacityUnitsAttributes) StorageCapacityUnits() terra.NumberValue {
	return terra.ReferenceAsNumber(cu.ref.Append("storage_capacity_units"))
}

type documentMetadataConfigurationUpdatesAttributes struct {
	ref terra.Reference
}

func (dmcu documentMetadataConfigurationUpdatesAttributes) InternalRef() (terra.Reference, error) {
	return dmcu.ref, nil
}

func (dmcu documentMetadataConfigurationUpdatesAttributes) InternalWithRef(ref terra.Reference) documentMetadataConfigurationUpdatesAttributes {
	return documentMetadataConfigurationUpdatesAttributes{ref: ref}
}

func (dmcu documentMetadataConfigurationUpdatesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dmcu.ref.InternalTokens()
}

func (dmcu documentMetadataConfigurationUpdatesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dmcu.ref.Append("name"))
}

func (dmcu documentMetadataConfigurationUpdatesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(dmcu.ref.Append("type"))
}

func (dmcu documentMetadataConfigurationUpdatesAttributes) Relevance() terra.ListValue[documentMetadataConfigurationUpdatesRelevanceAttributes] {
	return terra.ReferenceAsList[documentMetadataConfigurationUpdatesRelevanceAttributes](dmcu.ref.Append("relevance"))
}

func (dmcu documentMetadataConfigurationUpdatesAttributes) Search() terra.ListValue[documentMetadataConfigurationUpdatesSearchAttributes] {
	return terra.ReferenceAsList[documentMetadataConfigurationUpdatesSearchAttributes](dmcu.ref.Append("search"))
}

type documentMetadataConfigurationUpdatesRelevanceAttributes struct {
	ref terra.Reference
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) InternalRef() (terra.Reference, error) {
	return r.ref, nil
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) InternalWithRef(ref terra.Reference) documentMetadataConfigurationUpdatesRelevanceAttributes {
	return documentMetadataConfigurationUpdatesRelevanceAttributes{ref: ref}
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return r.ref.InternalTokens()
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("duration"))
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) Freshness() terra.BoolValue {
	return terra.ReferenceAsBool(r.ref.Append("freshness"))
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) Importance() terra.NumberValue {
	return terra.ReferenceAsNumber(r.ref.Append("importance"))
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) RankOrder() terra.StringValue {
	return terra.ReferenceAsString(r.ref.Append("rank_order"))
}

func (r documentMetadataConfigurationUpdatesRelevanceAttributes) ValuesImportanceMap() terra.MapValue[terra.NumberValue] {
	return terra.ReferenceAsMap[terra.NumberValue](r.ref.Append("values_importance_map"))
}

type documentMetadataConfigurationUpdatesSearchAttributes struct {
	ref terra.Reference
}

func (s documentMetadataConfigurationUpdatesSearchAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s documentMetadataConfigurationUpdatesSearchAttributes) InternalWithRef(ref terra.Reference) documentMetadataConfigurationUpdatesSearchAttributes {
	return documentMetadataConfigurationUpdatesSearchAttributes{ref: ref}
}

func (s documentMetadataConfigurationUpdatesSearchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s documentMetadataConfigurationUpdatesSearchAttributes) Displayable() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("displayable"))
}

func (s documentMetadataConfigurationUpdatesSearchAttributes) Facetable() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("facetable"))
}

func (s documentMetadataConfigurationUpdatesSearchAttributes) Searchable() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("searchable"))
}

func (s documentMetadataConfigurationUpdatesSearchAttributes) Sortable() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("sortable"))
}

type serverSideEncryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ssec serverSideEncryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ssec.ref, nil
}

func (ssec serverSideEncryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) serverSideEncryptionConfigurationAttributes {
	return serverSideEncryptionConfigurationAttributes{ref: ref}
}

func (ssec serverSideEncryptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ssec.ref.InternalTokens()
}

func (ssec serverSideEncryptionConfigurationAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ssec.ref.Append("kms_key_id"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type userGroupResolutionConfigurationAttributes struct {
	ref terra.Reference
}

func (ugrc userGroupResolutionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ugrc.ref, nil
}

func (ugrc userGroupResolutionConfigurationAttributes) InternalWithRef(ref terra.Reference) userGroupResolutionConfigurationAttributes {
	return userGroupResolutionConfigurationAttributes{ref: ref}
}

func (ugrc userGroupResolutionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ugrc.ref.InternalTokens()
}

func (ugrc userGroupResolutionConfigurationAttributes) UserGroupResolutionMode() terra.StringValue {
	return terra.ReferenceAsString(ugrc.ref.Append("user_group_resolution_mode"))
}

type userTokenConfigurationsAttributes struct {
	ref terra.Reference
}

func (utc userTokenConfigurationsAttributes) InternalRef() (terra.Reference, error) {
	return utc.ref, nil
}

func (utc userTokenConfigurationsAttributes) InternalWithRef(ref terra.Reference) userTokenConfigurationsAttributes {
	return userTokenConfigurationsAttributes{ref: ref}
}

func (utc userTokenConfigurationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return utc.ref.InternalTokens()
}

func (utc userTokenConfigurationsAttributes) JsonTokenTypeConfiguration() terra.ListValue[userTokenConfigurationsJsonTokenTypeConfigurationAttributes] {
	return terra.ReferenceAsList[userTokenConfigurationsJsonTokenTypeConfigurationAttributes](utc.ref.Append("json_token_type_configuration"))
}

func (utc userTokenConfigurationsAttributes) JwtTokenTypeConfiguration() terra.ListValue[userTokenConfigurationsJwtTokenTypeConfigurationAttributes] {
	return terra.ReferenceAsList[userTokenConfigurationsJwtTokenTypeConfigurationAttributes](utc.ref.Append("jwt_token_type_configuration"))
}

type userTokenConfigurationsJsonTokenTypeConfigurationAttributes struct {
	ref terra.Reference
}

func (jttc userTokenConfigurationsJsonTokenTypeConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return jttc.ref, nil
}

func (jttc userTokenConfigurationsJsonTokenTypeConfigurationAttributes) InternalWithRef(ref terra.Reference) userTokenConfigurationsJsonTokenTypeConfigurationAttributes {
	return userTokenConfigurationsJsonTokenTypeConfigurationAttributes{ref: ref}
}

func (jttc userTokenConfigurationsJsonTokenTypeConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jttc.ref.InternalTokens()
}

func (jttc userTokenConfigurationsJsonTokenTypeConfigurationAttributes) GroupAttributeField() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("group_attribute_field"))
}

func (jttc userTokenConfigurationsJsonTokenTypeConfigurationAttributes) UserNameAttributeField() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("user_name_attribute_field"))
}

type userTokenConfigurationsJwtTokenTypeConfigurationAttributes struct {
	ref terra.Reference
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return jttc.ref, nil
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) InternalWithRef(ref terra.Reference) userTokenConfigurationsJwtTokenTypeConfigurationAttributes {
	return userTokenConfigurationsJwtTokenTypeConfigurationAttributes{ref: ref}
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jttc.ref.InternalTokens()
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) ClaimRegex() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("claim_regex"))
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) GroupAttributeField() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("group_attribute_field"))
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) Issuer() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("issuer"))
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) KeyLocation() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("key_location"))
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) SecretsManagerArn() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("secrets_manager_arn"))
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) Url() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("url"))
}

func (jttc userTokenConfigurationsJwtTokenTypeConfigurationAttributes) UserNameAttributeField() terra.StringValue {
	return terra.ReferenceAsString(jttc.ref.Append("user_name_attribute_field"))
}

type IndexStatisticsState struct {
	FaqStatistics          []IndexStatisticsFaqStatisticsState          `json:"faq_statistics"`
	TextDocumentStatistics []IndexStatisticsTextDocumentStatisticsState `json:"text_document_statistics"`
}

type IndexStatisticsFaqStatisticsState struct {
	IndexedQuestionAnswersCount float64 `json:"indexed_question_answers_count"`
}

type IndexStatisticsTextDocumentStatisticsState struct {
	IndexedTextBytes          float64 `json:"indexed_text_bytes"`
	IndexedTextDocumentsCount float64 `json:"indexed_text_documents_count"`
}

type CapacityUnitsState struct {
	QueryCapacityUnits   float64 `json:"query_capacity_units"`
	StorageCapacityUnits float64 `json:"storage_capacity_units"`
}

type DocumentMetadataConfigurationUpdatesState struct {
	Name      string                                               `json:"name"`
	Type      string                                               `json:"type"`
	Relevance []DocumentMetadataConfigurationUpdatesRelevanceState `json:"relevance"`
	Search    []DocumentMetadataConfigurationUpdatesSearchState    `json:"search"`
}

type DocumentMetadataConfigurationUpdatesRelevanceState struct {
	Duration            string             `json:"duration"`
	Freshness           bool               `json:"freshness"`
	Importance          float64            `json:"importance"`
	RankOrder           string             `json:"rank_order"`
	ValuesImportanceMap map[string]float64 `json:"values_importance_map"`
}

type DocumentMetadataConfigurationUpdatesSearchState struct {
	Displayable bool `json:"displayable"`
	Facetable   bool `json:"facetable"`
	Searchable  bool `json:"searchable"`
	Sortable    bool `json:"sortable"`
}

type ServerSideEncryptionConfigurationState struct {
	KmsKeyId string `json:"kms_key_id"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type UserGroupResolutionConfigurationState struct {
	UserGroupResolutionMode string `json:"user_group_resolution_mode"`
}

type UserTokenConfigurationsState struct {
	JsonTokenTypeConfiguration []UserTokenConfigurationsJsonTokenTypeConfigurationState `json:"json_token_type_configuration"`
	JwtTokenTypeConfiguration  []UserTokenConfigurationsJwtTokenTypeConfigurationState  `json:"jwt_token_type_configuration"`
}

type UserTokenConfigurationsJsonTokenTypeConfigurationState struct {
	GroupAttributeField    string `json:"group_attribute_field"`
	UserNameAttributeField string `json:"user_name_attribute_field"`
}

type UserTokenConfigurationsJwtTokenTypeConfigurationState struct {
	ClaimRegex             string `json:"claim_regex"`
	GroupAttributeField    string `json:"group_attribute_field"`
	Issuer                 string `json:"issuer"`
	KeyLocation            string `json:"key_location"`
	SecretsManagerArn      string `json:"secrets_manager_arn"`
	Url                    string `json:"url"`
	UserNameAttributeField string `json:"user_name_attribute_field"`
}
