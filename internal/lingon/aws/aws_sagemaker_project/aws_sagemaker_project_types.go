// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_project

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ServiceCatalogProvisioningDetails struct {
	// PathId is optional.
	PathId terra.StringValue `hcl:"path_id,attr"`
	// ProductId is required.
	ProductId terra.StringValue `hcl:"product_id,attr" validate:"required"`
	// ProvisioningArtifactId is optional.
	ProvisioningArtifactId terra.StringValue `hcl:"provisioning_artifact_id,attr"`
	// ServiceCatalogProvisioningDetailsProvisioningParameter is min=0.
	ProvisioningParameter []ServiceCatalogProvisioningDetailsProvisioningParameter `hcl:"provisioning_parameter,block" validate:"min=0"`
}

type ServiceCatalogProvisioningDetailsProvisioningParameter struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is optional.
	Value terra.StringValue `hcl:"value,attr"`
}

type serviceCatalogProvisioningDetailsAttributes struct {
	ref terra.Reference
}

func (scpd serviceCatalogProvisioningDetailsAttributes) InternalRef() (terra.Reference, error) {
	return scpd.ref, nil
}

func (scpd serviceCatalogProvisioningDetailsAttributes) InternalWithRef(ref terra.Reference) serviceCatalogProvisioningDetailsAttributes {
	return serviceCatalogProvisioningDetailsAttributes{ref: ref}
}

func (scpd serviceCatalogProvisioningDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scpd.ref.InternalTokens()
}

func (scpd serviceCatalogProvisioningDetailsAttributes) PathId() terra.StringValue {
	return terra.ReferenceAsString(scpd.ref.Append("path_id"))
}

func (scpd serviceCatalogProvisioningDetailsAttributes) ProductId() terra.StringValue {
	return terra.ReferenceAsString(scpd.ref.Append("product_id"))
}

func (scpd serviceCatalogProvisioningDetailsAttributes) ProvisioningArtifactId() terra.StringValue {
	return terra.ReferenceAsString(scpd.ref.Append("provisioning_artifact_id"))
}

func (scpd serviceCatalogProvisioningDetailsAttributes) ProvisioningParameter() terra.ListValue[serviceCatalogProvisioningDetailsProvisioningParameterAttributes] {
	return terra.ReferenceAsList[serviceCatalogProvisioningDetailsProvisioningParameterAttributes](scpd.ref.Append("provisioning_parameter"))
}

type serviceCatalogProvisioningDetailsProvisioningParameterAttributes struct {
	ref terra.Reference
}

func (pp serviceCatalogProvisioningDetailsProvisioningParameterAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp serviceCatalogProvisioningDetailsProvisioningParameterAttributes) InternalWithRef(ref terra.Reference) serviceCatalogProvisioningDetailsProvisioningParameterAttributes {
	return serviceCatalogProvisioningDetailsProvisioningParameterAttributes{ref: ref}
}

func (pp serviceCatalogProvisioningDetailsProvisioningParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp serviceCatalogProvisioningDetailsProvisioningParameterAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("key"))
}

func (pp serviceCatalogProvisioningDetailsProvisioningParameterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pp.ref.Append("value"))
}

type ServiceCatalogProvisioningDetailsState struct {
	PathId                 string                                                        `json:"path_id"`
	ProductId              string                                                        `json:"product_id"`
	ProvisioningArtifactId string                                                        `json:"provisioning_artifact_id"`
	ProvisioningParameter  []ServiceCatalogProvisioningDetailsProvisioningParameterState `json:"provisioning_parameter"`
}

type ServiceCatalogProvisioningDetailsProvisioningParameterState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}
