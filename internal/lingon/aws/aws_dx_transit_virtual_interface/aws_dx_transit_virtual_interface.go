// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_dx_transit_virtual_interface

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_dx_transit_virtual_interface.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsDxTransitVirtualInterfaceState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (adtvi *Resource) Type() string {
	return "aws_dx_transit_virtual_interface"
}

// LocalName returns the local name for [Resource].
func (adtvi *Resource) LocalName() string {
	return adtvi.Name
}

// Configuration returns the configuration (args) for [Resource].
func (adtvi *Resource) Configuration() interface{} {
	return adtvi.Args
}

// DependOn is used for other resources to depend on [Resource].
func (adtvi *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(adtvi)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (adtvi *Resource) Dependencies() terra.Dependencies {
	return adtvi.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (adtvi *Resource) LifecycleManagement() *terra.Lifecycle {
	return adtvi.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (adtvi *Resource) Attributes() awsDxTransitVirtualInterfaceAttributes {
	return awsDxTransitVirtualInterfaceAttributes{ref: terra.ReferenceResource(adtvi)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (adtvi *Resource) ImportState(state io.Reader) error {
	adtvi.state = &awsDxTransitVirtualInterfaceState{}
	if err := json.NewDecoder(state).Decode(adtvi.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", adtvi.Type(), adtvi.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (adtvi *Resource) State() (*awsDxTransitVirtualInterfaceState, bool) {
	return adtvi.state, adtvi.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (adtvi *Resource) StateMust() *awsDxTransitVirtualInterfaceState {
	if adtvi.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", adtvi.Type(), adtvi.LocalName()))
	}
	return adtvi.state
}

// Args contains the configurations for aws_dx_transit_virtual_interface.
type Args struct {
	// AddressFamily is required.
	AddressFamily terra.StringValue `hcl:"address_family,attr" validate:"required"`
	// AmazonAddress is optional.
	AmazonAddress terra.StringValue `hcl:"amazon_address,attr"`
	// BgpAsn is required.
	BgpAsn terra.NumberValue `hcl:"bgp_asn,attr" validate:"required"`
	// BgpAuthKey is optional.
	BgpAuthKey terra.StringValue `hcl:"bgp_auth_key,attr"`
	// ConnectionId is required.
	ConnectionId terra.StringValue `hcl:"connection_id,attr" validate:"required"`
	// CustomerAddress is optional.
	CustomerAddress terra.StringValue `hcl:"customer_address,attr"`
	// DxGatewayId is required.
	DxGatewayId terra.StringValue `hcl:"dx_gateway_id,attr" validate:"required"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Mtu is optional.
	Mtu terra.NumberValue `hcl:"mtu,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// SitelinkEnabled is optional.
	SitelinkEnabled terra.BoolValue `hcl:"sitelink_enabled,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll is optional.
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// Vlan is required.
	Vlan terra.NumberValue `hcl:"vlan,attr" validate:"required"`
	// Timeouts is optional.
	Timeouts *Timeouts `hcl:"timeouts,block"`
}

type awsDxTransitVirtualInterfaceAttributes struct {
	ref terra.Reference
}

// AddressFamily returns a reference to field address_family of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) AddressFamily() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("address_family"))
}

// AmazonAddress returns a reference to field amazon_address of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) AmazonAddress() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("amazon_address"))
}

// AmazonSideAsn returns a reference to field amazon_side_asn of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) AmazonSideAsn() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("amazon_side_asn"))
}

// Arn returns a reference to field arn of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("arn"))
}

// AwsDevice returns a reference to field aws_device of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) AwsDevice() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("aws_device"))
}

// BgpAsn returns a reference to field bgp_asn of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) BgpAsn() terra.NumberValue {
	return terra.ReferenceAsNumber(adtvi.ref.Append("bgp_asn"))
}

// BgpAuthKey returns a reference to field bgp_auth_key of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) BgpAuthKey() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("bgp_auth_key"))
}

// ConnectionId returns a reference to field connection_id of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) ConnectionId() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("connection_id"))
}

// CustomerAddress returns a reference to field customer_address of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) CustomerAddress() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("customer_address"))
}

// DxGatewayId returns a reference to field dx_gateway_id of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) DxGatewayId() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("dx_gateway_id"))
}

// Id returns a reference to field id of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("id"))
}

// JumboFrameCapable returns a reference to field jumbo_frame_capable of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) JumboFrameCapable() terra.BoolValue {
	return terra.ReferenceAsBool(adtvi.ref.Append("jumbo_frame_capable"))
}

// Mtu returns a reference to field mtu of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) Mtu() terra.NumberValue {
	return terra.ReferenceAsNumber(adtvi.ref.Append("mtu"))
}

// Name returns a reference to field name of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(adtvi.ref.Append("name"))
}

// SitelinkEnabled returns a reference to field sitelink_enabled of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) SitelinkEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(adtvi.ref.Append("sitelink_enabled"))
}

// Tags returns a reference to field tags of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adtvi.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](adtvi.ref.Append("tags_all"))
}

// Vlan returns a reference to field vlan of aws_dx_transit_virtual_interface.
func (adtvi awsDxTransitVirtualInterfaceAttributes) Vlan() terra.NumberValue {
	return terra.ReferenceAsNumber(adtvi.ref.Append("vlan"))
}

func (adtvi awsDxTransitVirtualInterfaceAttributes) Timeouts() timeoutsAttributes {
	return terra.ReferenceAsSingle[timeoutsAttributes](adtvi.ref.Append("timeouts"))
}

type awsDxTransitVirtualInterfaceState struct {
	AddressFamily     string            `json:"address_family"`
	AmazonAddress     string            `json:"amazon_address"`
	AmazonSideAsn     string            `json:"amazon_side_asn"`
	Arn               string            `json:"arn"`
	AwsDevice         string            `json:"aws_device"`
	BgpAsn            float64           `json:"bgp_asn"`
	BgpAuthKey        string            `json:"bgp_auth_key"`
	ConnectionId      string            `json:"connection_id"`
	CustomerAddress   string            `json:"customer_address"`
	DxGatewayId       string            `json:"dx_gateway_id"`
	Id                string            `json:"id"`
	JumboFrameCapable bool              `json:"jumbo_frame_capable"`
	Mtu               float64           `json:"mtu"`
	Name              string            `json:"name"`
	SitelinkEnabled   bool              `json:"sitelink_enabled"`
	Tags              map[string]string `json:"tags"`
	TagsAll           map[string]string `json:"tags_all"`
	Vlan              float64           `json:"vlan"`
	Timeouts          *TimeoutsState    `json:"timeouts"`
}
