// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_config_remediation_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ExecutionControls struct {
	// ExecutionControlsSsmControls is optional.
	SsmControls *ExecutionControlsSsmControls `hcl:"ssm_controls,block"`
}

type ExecutionControlsSsmControls struct {
	// ConcurrentExecutionRatePercentage is optional.
	ConcurrentExecutionRatePercentage terra.NumberValue `hcl:"concurrent_execution_rate_percentage,attr"`
	// ErrorPercentage is optional.
	ErrorPercentage terra.NumberValue `hcl:"error_percentage,attr"`
}

type Parameter struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// ResourceValue is optional.
	ResourceValue terra.StringValue `hcl:"resource_value,attr"`
	// StaticValue is optional.
	StaticValue terra.StringValue `hcl:"static_value,attr"`
	// StaticValues is optional.
	StaticValues terra.ListValue[terra.StringValue] `hcl:"static_values,attr"`
}

type executionControlsAttributes struct {
	ref terra.Reference
}

func (ec executionControlsAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec executionControlsAttributes) InternalWithRef(ref terra.Reference) executionControlsAttributes {
	return executionControlsAttributes{ref: ref}
}

func (ec executionControlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec executionControlsAttributes) SsmControls() terra.ListValue[executionControlsSsmControlsAttributes] {
	return terra.ReferenceAsList[executionControlsSsmControlsAttributes](ec.ref.Append("ssm_controls"))
}

type executionControlsSsmControlsAttributes struct {
	ref terra.Reference
}

func (sc executionControlsSsmControlsAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc executionControlsSsmControlsAttributes) InternalWithRef(ref terra.Reference) executionControlsSsmControlsAttributes {
	return executionControlsSsmControlsAttributes{ref: ref}
}

func (sc executionControlsSsmControlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc executionControlsSsmControlsAttributes) ConcurrentExecutionRatePercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("concurrent_execution_rate_percentage"))
}

func (sc executionControlsSsmControlsAttributes) ErrorPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(sc.ref.Append("error_percentage"))
}

type parameterAttributes struct {
	ref terra.Reference
}

func (p parameterAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p parameterAttributes) InternalWithRef(ref terra.Reference) parameterAttributes {
	return parameterAttributes{ref: ref}
}

func (p parameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p parameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p parameterAttributes) ResourceValue() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("resource_value"))
}

func (p parameterAttributes) StaticValue() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("static_value"))
}

func (p parameterAttributes) StaticValues() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](p.ref.Append("static_values"))
}

type ExecutionControlsState struct {
	SsmControls []ExecutionControlsSsmControlsState `json:"ssm_controls"`
}

type ExecutionControlsSsmControlsState struct {
	ConcurrentExecutionRatePercentage float64 `json:"concurrent_execution_rate_percentage"`
	ErrorPercentage                   float64 `json:"error_percentage"`
}

type ParameterState struct {
	Name          string   `json:"name"`
	ResourceValue string   `json:"resource_value"`
	StaticValue   string   `json:"static_value"`
	StaticValues  []string `json:"static_values"`
}
