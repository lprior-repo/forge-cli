// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_efs_access_point

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataposixUserAttributes struct {
	ref terra.Reference
}

func (pu DataposixUserAttributes) InternalRef() (terra.Reference, error) {
	return pu.ref, nil
}

func (pu DataposixUserAttributes) InternalWithRef(ref terra.Reference) DataposixUserAttributes {
	return DataposixUserAttributes{ref: ref}
}

func (pu DataposixUserAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pu.ref.InternalTokens()
}

func (pu DataposixUserAttributes) Gid() terra.NumberValue {
	return terra.ReferenceAsNumber(pu.ref.Append("gid"))
}

func (pu DataposixUserAttributes) SecondaryGids() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](pu.ref.Append("secondary_gids"))
}

func (pu DataposixUserAttributes) Uid() terra.NumberValue {
	return terra.ReferenceAsNumber(pu.ref.Append("uid"))
}

type DatarootDirectoryAttributes struct {
	ref terra.Reference
}

func (rd DatarootDirectoryAttributes) InternalRef() (terra.Reference, error) {
	return rd.ref, nil
}

func (rd DatarootDirectoryAttributes) InternalWithRef(ref terra.Reference) DatarootDirectoryAttributes {
	return DatarootDirectoryAttributes{ref: ref}
}

func (rd DatarootDirectoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rd.ref.InternalTokens()
}

func (rd DatarootDirectoryAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(rd.ref.Append("path"))
}

func (rd DatarootDirectoryAttributes) CreationInfo() terra.ListValue[DatarootDirectoryCreationInfoAttributes] {
	return terra.ReferenceAsList[DatarootDirectoryCreationInfoAttributes](rd.ref.Append("creation_info"))
}

type DatarootDirectoryCreationInfoAttributes struct {
	ref terra.Reference
}

func (ci DatarootDirectoryCreationInfoAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci DatarootDirectoryCreationInfoAttributes) InternalWithRef(ref terra.Reference) DatarootDirectoryCreationInfoAttributes {
	return DatarootDirectoryCreationInfoAttributes{ref: ref}
}

func (ci DatarootDirectoryCreationInfoAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci DatarootDirectoryCreationInfoAttributes) OwnerGid() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("owner_gid"))
}

func (ci DatarootDirectoryCreationInfoAttributes) OwnerUid() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("owner_uid"))
}

func (ci DatarootDirectoryCreationInfoAttributes) Permissions() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("permissions"))
}

type DataPosixUserState struct {
	Gid           float64   `json:"gid"`
	SecondaryGids []float64 `json:"secondary_gids"`
	Uid           float64   `json:"uid"`
}

type DataRootDirectoryState struct {
	Path         string                               `json:"path"`
	CreationInfo []DataRootDirectoryCreationInfoState `json:"creation_info"`
}

type DataRootDirectoryCreationInfoState struct {
	OwnerGid    float64 `json:"owner_gid"`
	OwnerUid    float64 `json:"owner_uid"`
	Permissions string  `json:"permissions"`
}
