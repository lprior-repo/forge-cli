// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_network_insights_analysis

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type alternatePathHintsAttributes struct {
	ref terra.Reference
}

func (aph alternatePathHintsAttributes) InternalRef() (terra.Reference, error) {
	return aph.ref, nil
}

func (aph alternatePathHintsAttributes) InternalWithRef(ref terra.Reference) alternatePathHintsAttributes {
	return alternatePathHintsAttributes{ref: ref}
}

func (aph alternatePathHintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aph.ref.InternalTokens()
}

func (aph alternatePathHintsAttributes) ComponentArn() terra.StringValue {
	return terra.ReferenceAsString(aph.ref.Append("component_arn"))
}

func (aph alternatePathHintsAttributes) ComponentId() terra.StringValue {
	return terra.ReferenceAsString(aph.ref.Append("component_id"))
}

type explanationsAttributes struct {
	ref terra.Reference
}

func (e explanationsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e explanationsAttributes) InternalWithRef(ref terra.Reference) explanationsAttributes {
	return explanationsAttributes{ref: ref}
}

func (e explanationsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e explanationsAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("address"))
}

func (e explanationsAttributes) Addresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("addresses"))
}

func (e explanationsAttributes) AvailabilityZones() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("availability_zones"))
}

func (e explanationsAttributes) Cidrs() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("cidrs"))
}

func (e explanationsAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("direction"))
}

func (e explanationsAttributes) ExplanationCode() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("explanation_code"))
}

func (e explanationsAttributes) LoadBalancerArn() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("load_balancer_arn"))
}

func (e explanationsAttributes) LoadBalancerListenerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("load_balancer_listener_port"))
}

func (e explanationsAttributes) LoadBalancerTargetPort() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("load_balancer_target_port"))
}

func (e explanationsAttributes) MissingComponent() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("missing_component"))
}

func (e explanationsAttributes) PacketField() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("packet_field"))
}

func (e explanationsAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("port"))
}

func (e explanationsAttributes) Protocols() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](e.ref.Append("protocols"))
}

func (e explanationsAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("state"))
}

func (e explanationsAttributes) Acl() terra.ListValue[explanationsAclAttributes] {
	return terra.ReferenceAsList[explanationsAclAttributes](e.ref.Append("acl"))
}

func (e explanationsAttributes) AclRule() terra.ListValue[explanationsAclRuleAttributes] {
	return terra.ReferenceAsList[explanationsAclRuleAttributes](e.ref.Append("acl_rule"))
}

func (e explanationsAttributes) AttachedTo() terra.ListValue[explanationsAttachedToAttributes] {
	return terra.ReferenceAsList[explanationsAttachedToAttributes](e.ref.Append("attached_to"))
}

func (e explanationsAttributes) ClassicLoadBalancerListener() terra.ListValue[explanationsClassicLoadBalancerListenerAttributes] {
	return terra.ReferenceAsList[explanationsClassicLoadBalancerListenerAttributes](e.ref.Append("classic_load_balancer_listener"))
}

func (e explanationsAttributes) Component() terra.ListValue[explanationsComponentAttributes] {
	return terra.ReferenceAsList[explanationsComponentAttributes](e.ref.Append("component"))
}

func (e explanationsAttributes) CustomerGateway() terra.ListValue[explanationsCustomerGatewayAttributes] {
	return terra.ReferenceAsList[explanationsCustomerGatewayAttributes](e.ref.Append("customer_gateway"))
}

func (e explanationsAttributes) Destination() terra.ListValue[explanationsDestinationAttributes] {
	return terra.ReferenceAsList[explanationsDestinationAttributes](e.ref.Append("destination"))
}

func (e explanationsAttributes) DestinationVpc() terra.ListValue[explanationsDestinationVpcAttributes] {
	return terra.ReferenceAsList[explanationsDestinationVpcAttributes](e.ref.Append("destination_vpc"))
}

func (e explanationsAttributes) ElasticLoadBalancerListener() terra.ListValue[explanationsElasticLoadBalancerListenerAttributes] {
	return terra.ReferenceAsList[explanationsElasticLoadBalancerListenerAttributes](e.ref.Append("elastic_load_balancer_listener"))
}

func (e explanationsAttributes) IngressRouteTable() terra.ListValue[explanationsIngressRouteTableAttributes] {
	return terra.ReferenceAsList[explanationsIngressRouteTableAttributes](e.ref.Append("ingress_route_table"))
}

func (e explanationsAttributes) InternetGateway() terra.ListValue[explanationsInternetGatewayAttributes] {
	return terra.ReferenceAsList[explanationsInternetGatewayAttributes](e.ref.Append("internet_gateway"))
}

func (e explanationsAttributes) LoadBalancerTargetGroup() terra.ListValue[explanationsLoadBalancerTargetGroupAttributes] {
	return terra.ReferenceAsList[explanationsLoadBalancerTargetGroupAttributes](e.ref.Append("load_balancer_target_group"))
}

func (e explanationsAttributes) LoadBalancerTargetGroups() terra.ListValue[explanationsLoadBalancerTargetGroupsAttributes] {
	return terra.ReferenceAsList[explanationsLoadBalancerTargetGroupsAttributes](e.ref.Append("load_balancer_target_groups"))
}

func (e explanationsAttributes) NatGateway() terra.ListValue[explanationsNatGatewayAttributes] {
	return terra.ReferenceAsList[explanationsNatGatewayAttributes](e.ref.Append("nat_gateway"))
}

func (e explanationsAttributes) NetworkInterface() terra.ListValue[explanationsNetworkInterfaceAttributes] {
	return terra.ReferenceAsList[explanationsNetworkInterfaceAttributes](e.ref.Append("network_interface"))
}

func (e explanationsAttributes) PortRanges() terra.ListValue[explanationsPortRangesAttributes] {
	return terra.ReferenceAsList[explanationsPortRangesAttributes](e.ref.Append("port_ranges"))
}

func (e explanationsAttributes) PrefixList() terra.ListValue[explanationsPrefixListAttributes] {
	return terra.ReferenceAsList[explanationsPrefixListAttributes](e.ref.Append("prefix_list"))
}

func (e explanationsAttributes) RouteTable() terra.ListValue[explanationsRouteTableAttributes] {
	return terra.ReferenceAsList[explanationsRouteTableAttributes](e.ref.Append("route_table"))
}

func (e explanationsAttributes) RouteTableRoute() terra.ListValue[explanationsRouteTableRouteAttributes] {
	return terra.ReferenceAsList[explanationsRouteTableRouteAttributes](e.ref.Append("route_table_route"))
}

func (e explanationsAttributes) SecurityGroup() terra.ListValue[explanationsSecurityGroupAttributes] {
	return terra.ReferenceAsList[explanationsSecurityGroupAttributes](e.ref.Append("security_group"))
}

func (e explanationsAttributes) SecurityGroupRule() terra.ListValue[explanationsSecurityGroupRuleAttributes] {
	return terra.ReferenceAsList[explanationsSecurityGroupRuleAttributes](e.ref.Append("security_group_rule"))
}

func (e explanationsAttributes) SecurityGroups() terra.ListValue[explanationsSecurityGroupsAttributes] {
	return terra.ReferenceAsList[explanationsSecurityGroupsAttributes](e.ref.Append("security_groups"))
}

func (e explanationsAttributes) SourceVpc() terra.ListValue[explanationsSourceVpcAttributes] {
	return terra.ReferenceAsList[explanationsSourceVpcAttributes](e.ref.Append("source_vpc"))
}

func (e explanationsAttributes) Subnet() terra.ListValue[explanationsSubnetAttributes] {
	return terra.ReferenceAsList[explanationsSubnetAttributes](e.ref.Append("subnet"))
}

func (e explanationsAttributes) SubnetRouteTable() terra.ListValue[explanationsSubnetRouteTableAttributes] {
	return terra.ReferenceAsList[explanationsSubnetRouteTableAttributes](e.ref.Append("subnet_route_table"))
}

func (e explanationsAttributes) TransitGateway() terra.ListValue[explanationsTransitGatewayAttributes] {
	return terra.ReferenceAsList[explanationsTransitGatewayAttributes](e.ref.Append("transit_gateway"))
}

func (e explanationsAttributes) TransitGatewayAttachment() terra.ListValue[explanationsTransitGatewayAttachmentAttributes] {
	return terra.ReferenceAsList[explanationsTransitGatewayAttachmentAttributes](e.ref.Append("transit_gateway_attachment"))
}

func (e explanationsAttributes) TransitGatewayRouteTable() terra.ListValue[explanationsTransitGatewayRouteTableAttributes] {
	return terra.ReferenceAsList[explanationsTransitGatewayRouteTableAttributes](e.ref.Append("transit_gateway_route_table"))
}

func (e explanationsAttributes) TransitGatewayRouteTableRoute() terra.ListValue[explanationsTransitGatewayRouteTableRouteAttributes] {
	return terra.ReferenceAsList[explanationsTransitGatewayRouteTableRouteAttributes](e.ref.Append("transit_gateway_route_table_route"))
}

func (e explanationsAttributes) Vpc() terra.ListValue[explanationsVpcAttributes] {
	return terra.ReferenceAsList[explanationsVpcAttributes](e.ref.Append("vpc"))
}

func (e explanationsAttributes) VpcEndpoint() terra.ListValue[explanationsVpcEndpointAttributes] {
	return terra.ReferenceAsList[explanationsVpcEndpointAttributes](e.ref.Append("vpc_endpoint"))
}

func (e explanationsAttributes) VpcPeeringConnection() terra.ListValue[explanationsVpcPeeringConnectionAttributes] {
	return terra.ReferenceAsList[explanationsVpcPeeringConnectionAttributes](e.ref.Append("vpc_peering_connection"))
}

func (e explanationsAttributes) VpnConnection() terra.ListValue[explanationsVpnConnectionAttributes] {
	return terra.ReferenceAsList[explanationsVpnConnectionAttributes](e.ref.Append("vpn_connection"))
}

func (e explanationsAttributes) VpnGateway() terra.ListValue[explanationsVpnGatewayAttributes] {
	return terra.ReferenceAsList[explanationsVpnGatewayAttributes](e.ref.Append("vpn_gateway"))
}

type explanationsAclAttributes struct {
	ref terra.Reference
}

func (a explanationsAclAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a explanationsAclAttributes) InternalWithRef(ref terra.Reference) explanationsAclAttributes {
	return explanationsAclAttributes{ref: ref}
}

func (a explanationsAclAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a explanationsAclAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("arn"))
}

func (a explanationsAclAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("id"))
}

func (a explanationsAclAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("name"))
}

type explanationsAclRuleAttributes struct {
	ref terra.Reference
}

func (ar explanationsAclRuleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar explanationsAclRuleAttributes) InternalWithRef(ref terra.Reference) explanationsAclRuleAttributes {
	return explanationsAclRuleAttributes{ref: ref}
}

func (ar explanationsAclRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ar.ref.InternalTokens()
}

func (ar explanationsAclRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("cidr"))
}

func (ar explanationsAclRuleAttributes) Egress() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("egress"))
}

func (ar explanationsAclRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("protocol"))
}

func (ar explanationsAclRuleAttributes) RuleAction() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("rule_action"))
}

func (ar explanationsAclRuleAttributes) RuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("rule_number"))
}

func (ar explanationsAclRuleAttributes) PortRange() terra.ListValue[explanationsAclRulePortRangeAttributes] {
	return terra.ReferenceAsList[explanationsAclRulePortRangeAttributes](ar.ref.Append("port_range"))
}

type explanationsAclRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr explanationsAclRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr explanationsAclRulePortRangeAttributes) InternalWithRef(ref terra.Reference) explanationsAclRulePortRangeAttributes {
	return explanationsAclRulePortRangeAttributes{ref: ref}
}

func (pr explanationsAclRulePortRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr explanationsAclRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr explanationsAclRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type explanationsAttachedToAttributes struct {
	ref terra.Reference
}

func (at explanationsAttachedToAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at explanationsAttachedToAttributes) InternalWithRef(ref terra.Reference) explanationsAttachedToAttributes {
	return explanationsAttachedToAttributes{ref: ref}
}

func (at explanationsAttachedToAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return at.ref.InternalTokens()
}

func (at explanationsAttachedToAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("arn"))
}

func (at explanationsAttachedToAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("id"))
}

func (at explanationsAttachedToAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

type explanationsClassicLoadBalancerListenerAttributes struct {
	ref terra.Reference
}

func (clbl explanationsClassicLoadBalancerListenerAttributes) InternalRef() (terra.Reference, error) {
	return clbl.ref, nil
}

func (clbl explanationsClassicLoadBalancerListenerAttributes) InternalWithRef(ref terra.Reference) explanationsClassicLoadBalancerListenerAttributes {
	return explanationsClassicLoadBalancerListenerAttributes{ref: ref}
}

func (clbl explanationsClassicLoadBalancerListenerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clbl.ref.InternalTokens()
}

func (clbl explanationsClassicLoadBalancerListenerAttributes) InstancePort() terra.NumberValue {
	return terra.ReferenceAsNumber(clbl.ref.Append("instance_port"))
}

func (clbl explanationsClassicLoadBalancerListenerAttributes) LoadBalancerPort() terra.NumberValue {
	return terra.ReferenceAsNumber(clbl.ref.Append("load_balancer_port"))
}

type explanationsComponentAttributes struct {
	ref terra.Reference
}

func (c explanationsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c explanationsComponentAttributes) InternalWithRef(ref terra.Reference) explanationsComponentAttributes {
	return explanationsComponentAttributes{ref: ref}
}

func (c explanationsComponentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c explanationsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c explanationsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c explanationsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type explanationsCustomerGatewayAttributes struct {
	ref terra.Reference
}

func (cg explanationsCustomerGatewayAttributes) InternalRef() (terra.Reference, error) {
	return cg.ref, nil
}

func (cg explanationsCustomerGatewayAttributes) InternalWithRef(ref terra.Reference) explanationsCustomerGatewayAttributes {
	return explanationsCustomerGatewayAttributes{ref: ref}
}

func (cg explanationsCustomerGatewayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cg.ref.InternalTokens()
}

func (cg explanationsCustomerGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(cg.ref.Append("arn"))
}

func (cg explanationsCustomerGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cg.ref.Append("id"))
}

func (cg explanationsCustomerGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(cg.ref.Append("name"))
}

type explanationsDestinationAttributes struct {
	ref terra.Reference
}

func (d explanationsDestinationAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d explanationsDestinationAttributes) InternalWithRef(ref terra.Reference) explanationsDestinationAttributes {
	return explanationsDestinationAttributes{ref: ref}
}

func (d explanationsDestinationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d explanationsDestinationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("arn"))
}

func (d explanationsDestinationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("id"))
}

func (d explanationsDestinationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

type explanationsDestinationVpcAttributes struct {
	ref terra.Reference
}

func (dv explanationsDestinationVpcAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv explanationsDestinationVpcAttributes) InternalWithRef(ref terra.Reference) explanationsDestinationVpcAttributes {
	return explanationsDestinationVpcAttributes{ref: ref}
}

func (dv explanationsDestinationVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv explanationsDestinationVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("arn"))
}

func (dv explanationsDestinationVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("id"))
}

func (dv explanationsDestinationVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("name"))
}

type explanationsElasticLoadBalancerListenerAttributes struct {
	ref terra.Reference
}

func (elbl explanationsElasticLoadBalancerListenerAttributes) InternalRef() (terra.Reference, error) {
	return elbl.ref, nil
}

func (elbl explanationsElasticLoadBalancerListenerAttributes) InternalWithRef(ref terra.Reference) explanationsElasticLoadBalancerListenerAttributes {
	return explanationsElasticLoadBalancerListenerAttributes{ref: ref}
}

func (elbl explanationsElasticLoadBalancerListenerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return elbl.ref.InternalTokens()
}

func (elbl explanationsElasticLoadBalancerListenerAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(elbl.ref.Append("arn"))
}

func (elbl explanationsElasticLoadBalancerListenerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(elbl.ref.Append("id"))
}

func (elbl explanationsElasticLoadBalancerListenerAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(elbl.ref.Append("name"))
}

type explanationsIngressRouteTableAttributes struct {
	ref terra.Reference
}

func (irt explanationsIngressRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return irt.ref, nil
}

func (irt explanationsIngressRouteTableAttributes) InternalWithRef(ref terra.Reference) explanationsIngressRouteTableAttributes {
	return explanationsIngressRouteTableAttributes{ref: ref}
}

func (irt explanationsIngressRouteTableAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return irt.ref.InternalTokens()
}

func (irt explanationsIngressRouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(irt.ref.Append("arn"))
}

func (irt explanationsIngressRouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(irt.ref.Append("id"))
}

func (irt explanationsIngressRouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(irt.ref.Append("name"))
}

type explanationsInternetGatewayAttributes struct {
	ref terra.Reference
}

func (ig explanationsInternetGatewayAttributes) InternalRef() (terra.Reference, error) {
	return ig.ref, nil
}

func (ig explanationsInternetGatewayAttributes) InternalWithRef(ref terra.Reference) explanationsInternetGatewayAttributes {
	return explanationsInternetGatewayAttributes{ref: ref}
}

func (ig explanationsInternetGatewayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ig.ref.InternalTokens()
}

func (ig explanationsInternetGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ig.ref.Append("arn"))
}

func (ig explanationsInternetGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ig.ref.Append("id"))
}

func (ig explanationsInternetGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ig.ref.Append("name"))
}

type explanationsLoadBalancerTargetGroupAttributes struct {
	ref terra.Reference
}

func (lbtg explanationsLoadBalancerTargetGroupAttributes) InternalRef() (terra.Reference, error) {
	return lbtg.ref, nil
}

func (lbtg explanationsLoadBalancerTargetGroupAttributes) InternalWithRef(ref terra.Reference) explanationsLoadBalancerTargetGroupAttributes {
	return explanationsLoadBalancerTargetGroupAttributes{ref: ref}
}

func (lbtg explanationsLoadBalancerTargetGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lbtg.ref.InternalTokens()
}

func (lbtg explanationsLoadBalancerTargetGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("arn"))
}

func (lbtg explanationsLoadBalancerTargetGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("id"))
}

func (lbtg explanationsLoadBalancerTargetGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("name"))
}

type explanationsLoadBalancerTargetGroupsAttributes struct {
	ref terra.Reference
}

func (lbtg explanationsLoadBalancerTargetGroupsAttributes) InternalRef() (terra.Reference, error) {
	return lbtg.ref, nil
}

func (lbtg explanationsLoadBalancerTargetGroupsAttributes) InternalWithRef(ref terra.Reference) explanationsLoadBalancerTargetGroupsAttributes {
	return explanationsLoadBalancerTargetGroupsAttributes{ref: ref}
}

func (lbtg explanationsLoadBalancerTargetGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lbtg.ref.InternalTokens()
}

func (lbtg explanationsLoadBalancerTargetGroupsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("arn"))
}

func (lbtg explanationsLoadBalancerTargetGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("id"))
}

func (lbtg explanationsLoadBalancerTargetGroupsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lbtg.ref.Append("name"))
}

type explanationsNatGatewayAttributes struct {
	ref terra.Reference
}

func (ng explanationsNatGatewayAttributes) InternalRef() (terra.Reference, error) {
	return ng.ref, nil
}

func (ng explanationsNatGatewayAttributes) InternalWithRef(ref terra.Reference) explanationsNatGatewayAttributes {
	return explanationsNatGatewayAttributes{ref: ref}
}

func (ng explanationsNatGatewayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ng.ref.InternalTokens()
}

func (ng explanationsNatGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ng.ref.Append("arn"))
}

func (ng explanationsNatGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ng.ref.Append("id"))
}

func (ng explanationsNatGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ng.ref.Append("name"))
}

type explanationsNetworkInterfaceAttributes struct {
	ref terra.Reference
}

func (ni explanationsNetworkInterfaceAttributes) InternalRef() (terra.Reference, error) {
	return ni.ref, nil
}

func (ni explanationsNetworkInterfaceAttributes) InternalWithRef(ref terra.Reference) explanationsNetworkInterfaceAttributes {
	return explanationsNetworkInterfaceAttributes{ref: ref}
}

func (ni explanationsNetworkInterfaceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ni.ref.InternalTokens()
}

func (ni explanationsNetworkInterfaceAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("arn"))
}

func (ni explanationsNetworkInterfaceAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("id"))
}

func (ni explanationsNetworkInterfaceAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ni.ref.Append("name"))
}

type explanationsPortRangesAttributes struct {
	ref terra.Reference
}

func (pr explanationsPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr explanationsPortRangesAttributes) InternalWithRef(ref terra.Reference) explanationsPortRangesAttributes {
	return explanationsPortRangesAttributes{ref: ref}
}

func (pr explanationsPortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr explanationsPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr explanationsPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type explanationsPrefixListAttributes struct {
	ref terra.Reference
}

func (pl explanationsPrefixListAttributes) InternalRef() (terra.Reference, error) {
	return pl.ref, nil
}

func (pl explanationsPrefixListAttributes) InternalWithRef(ref terra.Reference) explanationsPrefixListAttributes {
	return explanationsPrefixListAttributes{ref: ref}
}

func (pl explanationsPrefixListAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pl.ref.InternalTokens()
}

func (pl explanationsPrefixListAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(pl.ref.Append("arn"))
}

func (pl explanationsPrefixListAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(pl.ref.Append("id"))
}

func (pl explanationsPrefixListAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pl.ref.Append("name"))
}

type explanationsRouteTableAttributes struct {
	ref terra.Reference
}

func (rt explanationsRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return rt.ref, nil
}

func (rt explanationsRouteTableAttributes) InternalWithRef(ref terra.Reference) explanationsRouteTableAttributes {
	return explanationsRouteTableAttributes{ref: ref}
}

func (rt explanationsRouteTableAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rt.ref.InternalTokens()
}

func (rt explanationsRouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("arn"))
}

func (rt explanationsRouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("id"))
}

func (rt explanationsRouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rt.ref.Append("name"))
}

type explanationsRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (rtr explanationsRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return rtr.ref, nil
}

func (rtr explanationsRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) explanationsRouteTableRouteAttributes {
	return explanationsRouteTableRouteAttributes{ref: ref}
}

func (rtr explanationsRouteTableRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rtr.ref.InternalTokens()
}

func (rtr explanationsRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_cidr"))
}

func (rtr explanationsRouteTableRouteAttributes) DestinationPrefixListId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_prefix_list_id"))
}

func (rtr explanationsRouteTableRouteAttributes) EgressOnlyInternetGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("egress_only_internet_gateway_id"))
}

func (rtr explanationsRouteTableRouteAttributes) GatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("gateway_id"))
}

func (rtr explanationsRouteTableRouteAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("instance_id"))
}

func (rtr explanationsRouteTableRouteAttributes) NatGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("nat_gateway_id"))
}

func (rtr explanationsRouteTableRouteAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("network_interface_id"))
}

func (rtr explanationsRouteTableRouteAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("origin"))
}

func (rtr explanationsRouteTableRouteAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("transit_gateway_id"))
}

func (rtr explanationsRouteTableRouteAttributes) VpcPeeringConnectionId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("vpc_peering_connection_id"))
}

type explanationsSecurityGroupAttributes struct {
	ref terra.Reference
}

func (sg explanationsSecurityGroupAttributes) InternalRef() (terra.Reference, error) {
	return sg.ref, nil
}

func (sg explanationsSecurityGroupAttributes) InternalWithRef(ref terra.Reference) explanationsSecurityGroupAttributes {
	return explanationsSecurityGroupAttributes{ref: ref}
}

func (sg explanationsSecurityGroupAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sg.ref.InternalTokens()
}

func (sg explanationsSecurityGroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("arn"))
}

func (sg explanationsSecurityGroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("id"))
}

func (sg explanationsSecurityGroupAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("name"))
}

type explanationsSecurityGroupRuleAttributes struct {
	ref terra.Reference
}

func (sgr explanationsSecurityGroupRuleAttributes) InternalRef() (terra.Reference, error) {
	return sgr.ref, nil
}

func (sgr explanationsSecurityGroupRuleAttributes) InternalWithRef(ref terra.Reference) explanationsSecurityGroupRuleAttributes {
	return explanationsSecurityGroupRuleAttributes{ref: ref}
}

func (sgr explanationsSecurityGroupRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sgr.ref.InternalTokens()
}

func (sgr explanationsSecurityGroupRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("cidr"))
}

func (sgr explanationsSecurityGroupRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("direction"))
}

func (sgr explanationsSecurityGroupRuleAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("prefix_list_id"))
}

func (sgr explanationsSecurityGroupRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("protocol"))
}

func (sgr explanationsSecurityGroupRuleAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("security_group_id"))
}

func (sgr explanationsSecurityGroupRuleAttributes) PortRange() terra.ListValue[explanationsSecurityGroupRulePortRangeAttributes] {
	return terra.ReferenceAsList[explanationsSecurityGroupRulePortRangeAttributes](sgr.ref.Append("port_range"))
}

type explanationsSecurityGroupRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr explanationsSecurityGroupRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr explanationsSecurityGroupRulePortRangeAttributes) InternalWithRef(ref terra.Reference) explanationsSecurityGroupRulePortRangeAttributes {
	return explanationsSecurityGroupRulePortRangeAttributes{ref: ref}
}

func (pr explanationsSecurityGroupRulePortRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr explanationsSecurityGroupRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr explanationsSecurityGroupRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type explanationsSecurityGroupsAttributes struct {
	ref terra.Reference
}

func (sg explanationsSecurityGroupsAttributes) InternalRef() (terra.Reference, error) {
	return sg.ref, nil
}

func (sg explanationsSecurityGroupsAttributes) InternalWithRef(ref terra.Reference) explanationsSecurityGroupsAttributes {
	return explanationsSecurityGroupsAttributes{ref: ref}
}

func (sg explanationsSecurityGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sg.ref.InternalTokens()
}

func (sg explanationsSecurityGroupsAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("arn"))
}

func (sg explanationsSecurityGroupsAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("id"))
}

func (sg explanationsSecurityGroupsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sg.ref.Append("name"))
}

type explanationsSourceVpcAttributes struct {
	ref terra.Reference
}

func (sv explanationsSourceVpcAttributes) InternalRef() (terra.Reference, error) {
	return sv.ref, nil
}

func (sv explanationsSourceVpcAttributes) InternalWithRef(ref terra.Reference) explanationsSourceVpcAttributes {
	return explanationsSourceVpcAttributes{ref: ref}
}

func (sv explanationsSourceVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sv.ref.InternalTokens()
}

func (sv explanationsSourceVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("arn"))
}

func (sv explanationsSourceVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("id"))
}

func (sv explanationsSourceVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("name"))
}

type explanationsSubnetAttributes struct {
	ref terra.Reference
}

func (s explanationsSubnetAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s explanationsSubnetAttributes) InternalWithRef(ref terra.Reference) explanationsSubnetAttributes {
	return explanationsSubnetAttributes{ref: ref}
}

func (s explanationsSubnetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s explanationsSubnetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("arn"))
}

func (s explanationsSubnetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s explanationsSubnetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

type explanationsSubnetRouteTableAttributes struct {
	ref terra.Reference
}

func (srt explanationsSubnetRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return srt.ref, nil
}

func (srt explanationsSubnetRouteTableAttributes) InternalWithRef(ref terra.Reference) explanationsSubnetRouteTableAttributes {
	return explanationsSubnetRouteTableAttributes{ref: ref}
}

func (srt explanationsSubnetRouteTableAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return srt.ref.InternalTokens()
}

func (srt explanationsSubnetRouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(srt.ref.Append("arn"))
}

func (srt explanationsSubnetRouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(srt.ref.Append("id"))
}

func (srt explanationsSubnetRouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(srt.ref.Append("name"))
}

type explanationsTransitGatewayAttributes struct {
	ref terra.Reference
}

func (tg explanationsTransitGatewayAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg explanationsTransitGatewayAttributes) InternalWithRef(ref terra.Reference) explanationsTransitGatewayAttributes {
	return explanationsTransitGatewayAttributes{ref: ref}
}

func (tg explanationsTransitGatewayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tg.ref.InternalTokens()
}

func (tg explanationsTransitGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("arn"))
}

func (tg explanationsTransitGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("id"))
}

func (tg explanationsTransitGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("name"))
}

type explanationsTransitGatewayAttachmentAttributes struct {
	ref terra.Reference
}

func (tga explanationsTransitGatewayAttachmentAttributes) InternalRef() (terra.Reference, error) {
	return tga.ref, nil
}

func (tga explanationsTransitGatewayAttachmentAttributes) InternalWithRef(ref terra.Reference) explanationsTransitGatewayAttachmentAttributes {
	return explanationsTransitGatewayAttachmentAttributes{ref: ref}
}

func (tga explanationsTransitGatewayAttachmentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tga.ref.InternalTokens()
}

func (tga explanationsTransitGatewayAttachmentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tga.ref.Append("arn"))
}

func (tga explanationsTransitGatewayAttachmentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tga.ref.Append("id"))
}

func (tga explanationsTransitGatewayAttachmentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tga.ref.Append("name"))
}

type explanationsTransitGatewayRouteTableAttributes struct {
	ref terra.Reference
}

func (tgrt explanationsTransitGatewayRouteTableAttributes) InternalRef() (terra.Reference, error) {
	return tgrt.ref, nil
}

func (tgrt explanationsTransitGatewayRouteTableAttributes) InternalWithRef(ref terra.Reference) explanationsTransitGatewayRouteTableAttributes {
	return explanationsTransitGatewayRouteTableAttributes{ref: ref}
}

func (tgrt explanationsTransitGatewayRouteTableAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tgrt.ref.InternalTokens()
}

func (tgrt explanationsTransitGatewayRouteTableAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tgrt.ref.Append("arn"))
}

func (tgrt explanationsTransitGatewayRouteTableAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tgrt.ref.Append("id"))
}

func (tgrt explanationsTransitGatewayRouteTableAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tgrt.ref.Append("name"))
}

type explanationsTransitGatewayRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return tgrtr.ref, nil
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) explanationsTransitGatewayRouteTableRouteAttributes {
	return explanationsTransitGatewayRouteTableRouteAttributes{ref: ref}
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tgrtr.ref.InternalTokens()
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("attachment_id"))
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("destination_cidr"))
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("prefix_list_id"))
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_id"))
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_type"))
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) RouteOrigin() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("route_origin"))
}

func (tgrtr explanationsTransitGatewayRouteTableRouteAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("state"))
}

type explanationsVpcAttributes struct {
	ref terra.Reference
}

func (v explanationsVpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v explanationsVpcAttributes) InternalWithRef(ref terra.Reference) explanationsVpcAttributes {
	return explanationsVpcAttributes{ref: ref}
}

func (v explanationsVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v explanationsVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("arn"))
}

func (v explanationsVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("id"))
}

func (v explanationsVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

type explanationsVpcEndpointAttributes struct {
	ref terra.Reference
}

func (ve explanationsVpcEndpointAttributes) InternalRef() (terra.Reference, error) {
	return ve.ref, nil
}

func (ve explanationsVpcEndpointAttributes) InternalWithRef(ref terra.Reference) explanationsVpcEndpointAttributes {
	return explanationsVpcEndpointAttributes{ref: ref}
}

func (ve explanationsVpcEndpointAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ve.ref.InternalTokens()
}

func (ve explanationsVpcEndpointAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("arn"))
}

func (ve explanationsVpcEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("id"))
}

func (ve explanationsVpcEndpointAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ve.ref.Append("name"))
}

type explanationsVpcPeeringConnectionAttributes struct {
	ref terra.Reference
}

func (vpc explanationsVpcPeeringConnectionAttributes) InternalRef() (terra.Reference, error) {
	return vpc.ref, nil
}

func (vpc explanationsVpcPeeringConnectionAttributes) InternalWithRef(ref terra.Reference) explanationsVpcPeeringConnectionAttributes {
	return explanationsVpcPeeringConnectionAttributes{ref: ref}
}

func (vpc explanationsVpcPeeringConnectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vpc.ref.InternalTokens()
}

func (vpc explanationsVpcPeeringConnectionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vpc.ref.Append("arn"))
}

func (vpc explanationsVpcPeeringConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vpc.ref.Append("id"))
}

func (vpc explanationsVpcPeeringConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vpc.ref.Append("name"))
}

type explanationsVpnConnectionAttributes struct {
	ref terra.Reference
}

func (vc explanationsVpnConnectionAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc explanationsVpnConnectionAttributes) InternalWithRef(ref terra.Reference) explanationsVpnConnectionAttributes {
	return explanationsVpnConnectionAttributes{ref: ref}
}

func (vc explanationsVpnConnectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc explanationsVpnConnectionAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("arn"))
}

func (vc explanationsVpnConnectionAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("id"))
}

func (vc explanationsVpnConnectionAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("name"))
}

type explanationsVpnGatewayAttributes struct {
	ref terra.Reference
}

func (vg explanationsVpnGatewayAttributes) InternalRef() (terra.Reference, error) {
	return vg.ref, nil
}

func (vg explanationsVpnGatewayAttributes) InternalWithRef(ref terra.Reference) explanationsVpnGatewayAttributes {
	return explanationsVpnGatewayAttributes{ref: ref}
}

func (vg explanationsVpnGatewayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vg.ref.InternalTokens()
}

func (vg explanationsVpnGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(vg.ref.Append("arn"))
}

func (vg explanationsVpnGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(vg.ref.Append("id"))
}

func (vg explanationsVpnGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(vg.ref.Append("name"))
}

type forwardPathComponentsAttributes struct {
	ref terra.Reference
}

func (fpc forwardPathComponentsAttributes) InternalRef() (terra.Reference, error) {
	return fpc.ref, nil
}

func (fpc forwardPathComponentsAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsAttributes {
	return forwardPathComponentsAttributes{ref: ref}
}

func (fpc forwardPathComponentsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fpc.ref.InternalTokens()
}

func (fpc forwardPathComponentsAttributes) SequenceNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(fpc.ref.Append("sequence_number"))
}

func (fpc forwardPathComponentsAttributes) AclRule() terra.ListValue[forwardPathComponentsAclRuleAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsAclRuleAttributes](fpc.ref.Append("acl_rule"))
}

func (fpc forwardPathComponentsAttributes) AdditionalDetails() terra.ListValue[forwardPathComponentsAdditionalDetailsAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsAdditionalDetailsAttributes](fpc.ref.Append("additional_details"))
}

func (fpc forwardPathComponentsAttributes) AttachedTo() terra.ListValue[forwardPathComponentsAttachedToAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsAttachedToAttributes](fpc.ref.Append("attached_to"))
}

func (fpc forwardPathComponentsAttributes) Component() terra.ListValue[forwardPathComponentsComponentAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsComponentAttributes](fpc.ref.Append("component"))
}

func (fpc forwardPathComponentsAttributes) DestinationVpc() terra.ListValue[forwardPathComponentsDestinationVpcAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsDestinationVpcAttributes](fpc.ref.Append("destination_vpc"))
}

func (fpc forwardPathComponentsAttributes) InboundHeader() terra.ListValue[forwardPathComponentsInboundHeaderAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsInboundHeaderAttributes](fpc.ref.Append("inbound_header"))
}

func (fpc forwardPathComponentsAttributes) OutboundHeader() terra.ListValue[forwardPathComponentsOutboundHeaderAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsOutboundHeaderAttributes](fpc.ref.Append("outbound_header"))
}

func (fpc forwardPathComponentsAttributes) RouteTableRoute() terra.ListValue[forwardPathComponentsRouteTableRouteAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsRouteTableRouteAttributes](fpc.ref.Append("route_table_route"))
}

func (fpc forwardPathComponentsAttributes) SecurityGroupRule() terra.ListValue[forwardPathComponentsSecurityGroupRuleAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsSecurityGroupRuleAttributes](fpc.ref.Append("security_group_rule"))
}

func (fpc forwardPathComponentsAttributes) SourceVpc() terra.ListValue[forwardPathComponentsSourceVpcAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsSourceVpcAttributes](fpc.ref.Append("source_vpc"))
}

func (fpc forwardPathComponentsAttributes) Subnet() terra.ListValue[forwardPathComponentsSubnetAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsSubnetAttributes](fpc.ref.Append("subnet"))
}

func (fpc forwardPathComponentsAttributes) TransitGateway() terra.ListValue[forwardPathComponentsTransitGatewayAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsTransitGatewayAttributes](fpc.ref.Append("transit_gateway"))
}

func (fpc forwardPathComponentsAttributes) TransitGatewayRouteTableRoute() terra.ListValue[forwardPathComponentsTransitGatewayRouteTableRouteAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsTransitGatewayRouteTableRouteAttributes](fpc.ref.Append("transit_gateway_route_table_route"))
}

func (fpc forwardPathComponentsAttributes) Vpc() terra.ListValue[forwardPathComponentsVpcAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsVpcAttributes](fpc.ref.Append("vpc"))
}

type forwardPathComponentsAclRuleAttributes struct {
	ref terra.Reference
}

func (ar forwardPathComponentsAclRuleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar forwardPathComponentsAclRuleAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsAclRuleAttributes {
	return forwardPathComponentsAclRuleAttributes{ref: ref}
}

func (ar forwardPathComponentsAclRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ar.ref.InternalTokens()
}

func (ar forwardPathComponentsAclRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("cidr"))
}

func (ar forwardPathComponentsAclRuleAttributes) Egress() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("egress"))
}

func (ar forwardPathComponentsAclRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("protocol"))
}

func (ar forwardPathComponentsAclRuleAttributes) RuleAction() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("rule_action"))
}

func (ar forwardPathComponentsAclRuleAttributes) RuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("rule_number"))
}

func (ar forwardPathComponentsAclRuleAttributes) PortRange() terra.ListValue[forwardPathComponentsAclRulePortRangeAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsAclRulePortRangeAttributes](ar.ref.Append("port_range"))
}

type forwardPathComponentsAclRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr forwardPathComponentsAclRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr forwardPathComponentsAclRulePortRangeAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsAclRulePortRangeAttributes {
	return forwardPathComponentsAclRulePortRangeAttributes{ref: ref}
}

func (pr forwardPathComponentsAclRulePortRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr forwardPathComponentsAclRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr forwardPathComponentsAclRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type forwardPathComponentsAdditionalDetailsAttributes struct {
	ref terra.Reference
}

func (ad forwardPathComponentsAdditionalDetailsAttributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad forwardPathComponentsAdditionalDetailsAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsAdditionalDetailsAttributes {
	return forwardPathComponentsAdditionalDetailsAttributes{ref: ref}
}

func (ad forwardPathComponentsAdditionalDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ad.ref.InternalTokens()
}

func (ad forwardPathComponentsAdditionalDetailsAttributes) AdditionalDetailType() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("additional_detail_type"))
}

func (ad forwardPathComponentsAdditionalDetailsAttributes) Component() terra.ListValue[forwardPathComponentsAdditionalDetailsComponentAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsAdditionalDetailsComponentAttributes](ad.ref.Append("component"))
}

type forwardPathComponentsAdditionalDetailsComponentAttributes struct {
	ref terra.Reference
}

func (c forwardPathComponentsAdditionalDetailsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c forwardPathComponentsAdditionalDetailsComponentAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsAdditionalDetailsComponentAttributes {
	return forwardPathComponentsAdditionalDetailsComponentAttributes{ref: ref}
}

func (c forwardPathComponentsAdditionalDetailsComponentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c forwardPathComponentsAdditionalDetailsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c forwardPathComponentsAdditionalDetailsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c forwardPathComponentsAdditionalDetailsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type forwardPathComponentsAttachedToAttributes struct {
	ref terra.Reference
}

func (at forwardPathComponentsAttachedToAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at forwardPathComponentsAttachedToAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsAttachedToAttributes {
	return forwardPathComponentsAttachedToAttributes{ref: ref}
}

func (at forwardPathComponentsAttachedToAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return at.ref.InternalTokens()
}

func (at forwardPathComponentsAttachedToAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("arn"))
}

func (at forwardPathComponentsAttachedToAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("id"))
}

func (at forwardPathComponentsAttachedToAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

type forwardPathComponentsComponentAttributes struct {
	ref terra.Reference
}

func (c forwardPathComponentsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c forwardPathComponentsComponentAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsComponentAttributes {
	return forwardPathComponentsComponentAttributes{ref: ref}
}

func (c forwardPathComponentsComponentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c forwardPathComponentsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c forwardPathComponentsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c forwardPathComponentsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type forwardPathComponentsDestinationVpcAttributes struct {
	ref terra.Reference
}

func (dv forwardPathComponentsDestinationVpcAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv forwardPathComponentsDestinationVpcAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsDestinationVpcAttributes {
	return forwardPathComponentsDestinationVpcAttributes{ref: ref}
}

func (dv forwardPathComponentsDestinationVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv forwardPathComponentsDestinationVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("arn"))
}

func (dv forwardPathComponentsDestinationVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("id"))
}

func (dv forwardPathComponentsDestinationVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("name"))
}

type forwardPathComponentsInboundHeaderAttributes struct {
	ref terra.Reference
}

func (ih forwardPathComponentsInboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return ih.ref, nil
}

func (ih forwardPathComponentsInboundHeaderAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsInboundHeaderAttributes {
	return forwardPathComponentsInboundHeaderAttributes{ref: ref}
}

func (ih forwardPathComponentsInboundHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ih.ref.InternalTokens()
}

func (ih forwardPathComponentsInboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("destination_addresses"))
}

func (ih forwardPathComponentsInboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ih.ref.Append("protocol"))
}

func (ih forwardPathComponentsInboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("source_addresses"))
}

func (ih forwardPathComponentsInboundHeaderAttributes) DestinationPortRanges() terra.ListValue[forwardPathComponentsInboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsInboundHeaderDestinationPortRangesAttributes](ih.ref.Append("destination_port_ranges"))
}

func (ih forwardPathComponentsInboundHeaderAttributes) SourcePortRanges() terra.ListValue[forwardPathComponentsInboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsInboundHeaderSourcePortRangesAttributes](ih.ref.Append("source_port_ranges"))
}

type forwardPathComponentsInboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr forwardPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr forwardPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsInboundHeaderDestinationPortRangesAttributes {
	return forwardPathComponentsInboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr forwardPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dpr.ref.InternalTokens()
}

func (dpr forwardPathComponentsInboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr forwardPathComponentsInboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type forwardPathComponentsInboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr forwardPathComponentsInboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr forwardPathComponentsInboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsInboundHeaderSourcePortRangesAttributes {
	return forwardPathComponentsInboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr forwardPathComponentsInboundHeaderSourcePortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spr.ref.InternalTokens()
}

func (spr forwardPathComponentsInboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr forwardPathComponentsInboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type forwardPathComponentsOutboundHeaderAttributes struct {
	ref terra.Reference
}

func (oh forwardPathComponentsOutboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return oh.ref, nil
}

func (oh forwardPathComponentsOutboundHeaderAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsOutboundHeaderAttributes {
	return forwardPathComponentsOutboundHeaderAttributes{ref: ref}
}

func (oh forwardPathComponentsOutboundHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oh.ref.InternalTokens()
}

func (oh forwardPathComponentsOutboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("destination_addresses"))
}

func (oh forwardPathComponentsOutboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(oh.ref.Append("protocol"))
}

func (oh forwardPathComponentsOutboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("source_addresses"))
}

func (oh forwardPathComponentsOutboundHeaderAttributes) DestinationPortRanges() terra.ListValue[forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes](oh.ref.Append("destination_port_ranges"))
}

func (oh forwardPathComponentsOutboundHeaderAttributes) SourcePortRanges() terra.ListValue[forwardPathComponentsOutboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsOutboundHeaderSourcePortRangesAttributes](oh.ref.Append("source_port_ranges"))
}

type forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes {
	return forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dpr.ref.InternalTokens()
}

func (dpr forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr forwardPathComponentsOutboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type forwardPathComponentsOutboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr forwardPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr forwardPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsOutboundHeaderSourcePortRangesAttributes {
	return forwardPathComponentsOutboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr forwardPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spr.ref.InternalTokens()
}

func (spr forwardPathComponentsOutboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr forwardPathComponentsOutboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type forwardPathComponentsRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return rtr.ref, nil
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsRouteTableRouteAttributes {
	return forwardPathComponentsRouteTableRouteAttributes{ref: ref}
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rtr.ref.InternalTokens()
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_cidr"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) DestinationPrefixListId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_prefix_list_id"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) EgressOnlyInternetGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("egress_only_internet_gateway_id"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) GatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("gateway_id"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("instance_id"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) NatGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("nat_gateway_id"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("network_interface_id"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("origin"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("transit_gateway_id"))
}

func (rtr forwardPathComponentsRouteTableRouteAttributes) VpcPeeringConnectionId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("vpc_peering_connection_id"))
}

type forwardPathComponentsSecurityGroupRuleAttributes struct {
	ref terra.Reference
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) InternalRef() (terra.Reference, error) {
	return sgr.ref, nil
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsSecurityGroupRuleAttributes {
	return forwardPathComponentsSecurityGroupRuleAttributes{ref: ref}
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sgr.ref.InternalTokens()
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("cidr"))
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("direction"))
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("prefix_list_id"))
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("protocol"))
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("security_group_id"))
}

func (sgr forwardPathComponentsSecurityGroupRuleAttributes) PortRange() terra.ListValue[forwardPathComponentsSecurityGroupRulePortRangeAttributes] {
	return terra.ReferenceAsList[forwardPathComponentsSecurityGroupRulePortRangeAttributes](sgr.ref.Append("port_range"))
}

type forwardPathComponentsSecurityGroupRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr forwardPathComponentsSecurityGroupRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr forwardPathComponentsSecurityGroupRulePortRangeAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsSecurityGroupRulePortRangeAttributes {
	return forwardPathComponentsSecurityGroupRulePortRangeAttributes{ref: ref}
}

func (pr forwardPathComponentsSecurityGroupRulePortRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr forwardPathComponentsSecurityGroupRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr forwardPathComponentsSecurityGroupRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type forwardPathComponentsSourceVpcAttributes struct {
	ref terra.Reference
}

func (sv forwardPathComponentsSourceVpcAttributes) InternalRef() (terra.Reference, error) {
	return sv.ref, nil
}

func (sv forwardPathComponentsSourceVpcAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsSourceVpcAttributes {
	return forwardPathComponentsSourceVpcAttributes{ref: ref}
}

func (sv forwardPathComponentsSourceVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sv.ref.InternalTokens()
}

func (sv forwardPathComponentsSourceVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("arn"))
}

func (sv forwardPathComponentsSourceVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("id"))
}

func (sv forwardPathComponentsSourceVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("name"))
}

type forwardPathComponentsSubnetAttributes struct {
	ref terra.Reference
}

func (s forwardPathComponentsSubnetAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s forwardPathComponentsSubnetAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsSubnetAttributes {
	return forwardPathComponentsSubnetAttributes{ref: ref}
}

func (s forwardPathComponentsSubnetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s forwardPathComponentsSubnetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("arn"))
}

func (s forwardPathComponentsSubnetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s forwardPathComponentsSubnetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

type forwardPathComponentsTransitGatewayAttributes struct {
	ref terra.Reference
}

func (tg forwardPathComponentsTransitGatewayAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg forwardPathComponentsTransitGatewayAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsTransitGatewayAttributes {
	return forwardPathComponentsTransitGatewayAttributes{ref: ref}
}

func (tg forwardPathComponentsTransitGatewayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tg.ref.InternalTokens()
}

func (tg forwardPathComponentsTransitGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("arn"))
}

func (tg forwardPathComponentsTransitGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("id"))
}

func (tg forwardPathComponentsTransitGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("name"))
}

type forwardPathComponentsTransitGatewayRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return tgrtr.ref, nil
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsTransitGatewayRouteTableRouteAttributes {
	return forwardPathComponentsTransitGatewayRouteTableRouteAttributes{ref: ref}
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tgrtr.ref.InternalTokens()
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("attachment_id"))
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("destination_cidr"))
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("prefix_list_id"))
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_id"))
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_type"))
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) RouteOrigin() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("route_origin"))
}

func (tgrtr forwardPathComponentsTransitGatewayRouteTableRouteAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("state"))
}

type forwardPathComponentsVpcAttributes struct {
	ref terra.Reference
}

func (v forwardPathComponentsVpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v forwardPathComponentsVpcAttributes) InternalWithRef(ref terra.Reference) forwardPathComponentsVpcAttributes {
	return forwardPathComponentsVpcAttributes{ref: ref}
}

func (v forwardPathComponentsVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v forwardPathComponentsVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("arn"))
}

func (v forwardPathComponentsVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("id"))
}

func (v forwardPathComponentsVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

type returnPathComponentsAttributes struct {
	ref terra.Reference
}

func (rpc returnPathComponentsAttributes) InternalRef() (terra.Reference, error) {
	return rpc.ref, nil
}

func (rpc returnPathComponentsAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsAttributes {
	return returnPathComponentsAttributes{ref: ref}
}

func (rpc returnPathComponentsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rpc.ref.InternalTokens()
}

func (rpc returnPathComponentsAttributes) SequenceNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(rpc.ref.Append("sequence_number"))
}

func (rpc returnPathComponentsAttributes) AclRule() terra.ListValue[returnPathComponentsAclRuleAttributes] {
	return terra.ReferenceAsList[returnPathComponentsAclRuleAttributes](rpc.ref.Append("acl_rule"))
}

func (rpc returnPathComponentsAttributes) AdditionalDetails() terra.ListValue[returnPathComponentsAdditionalDetailsAttributes] {
	return terra.ReferenceAsList[returnPathComponentsAdditionalDetailsAttributes](rpc.ref.Append("additional_details"))
}

func (rpc returnPathComponentsAttributes) AttachedTo() terra.ListValue[returnPathComponentsAttachedToAttributes] {
	return terra.ReferenceAsList[returnPathComponentsAttachedToAttributes](rpc.ref.Append("attached_to"))
}

func (rpc returnPathComponentsAttributes) Component() terra.ListValue[returnPathComponentsComponentAttributes] {
	return terra.ReferenceAsList[returnPathComponentsComponentAttributes](rpc.ref.Append("component"))
}

func (rpc returnPathComponentsAttributes) DestinationVpc() terra.ListValue[returnPathComponentsDestinationVpcAttributes] {
	return terra.ReferenceAsList[returnPathComponentsDestinationVpcAttributes](rpc.ref.Append("destination_vpc"))
}

func (rpc returnPathComponentsAttributes) InboundHeader() terra.ListValue[returnPathComponentsInboundHeaderAttributes] {
	return terra.ReferenceAsList[returnPathComponentsInboundHeaderAttributes](rpc.ref.Append("inbound_header"))
}

func (rpc returnPathComponentsAttributes) OutboundHeader() terra.ListValue[returnPathComponentsOutboundHeaderAttributes] {
	return terra.ReferenceAsList[returnPathComponentsOutboundHeaderAttributes](rpc.ref.Append("outbound_header"))
}

func (rpc returnPathComponentsAttributes) RouteTableRoute() terra.ListValue[returnPathComponentsRouteTableRouteAttributes] {
	return terra.ReferenceAsList[returnPathComponentsRouteTableRouteAttributes](rpc.ref.Append("route_table_route"))
}

func (rpc returnPathComponentsAttributes) SecurityGroupRule() terra.ListValue[returnPathComponentsSecurityGroupRuleAttributes] {
	return terra.ReferenceAsList[returnPathComponentsSecurityGroupRuleAttributes](rpc.ref.Append("security_group_rule"))
}

func (rpc returnPathComponentsAttributes) SourceVpc() terra.ListValue[returnPathComponentsSourceVpcAttributes] {
	return terra.ReferenceAsList[returnPathComponentsSourceVpcAttributes](rpc.ref.Append("source_vpc"))
}

func (rpc returnPathComponentsAttributes) Subnet() terra.ListValue[returnPathComponentsSubnetAttributes] {
	return terra.ReferenceAsList[returnPathComponentsSubnetAttributes](rpc.ref.Append("subnet"))
}

func (rpc returnPathComponentsAttributes) TransitGateway() terra.ListValue[returnPathComponentsTransitGatewayAttributes] {
	return terra.ReferenceAsList[returnPathComponentsTransitGatewayAttributes](rpc.ref.Append("transit_gateway"))
}

func (rpc returnPathComponentsAttributes) TransitGatewayRouteTableRoute() terra.ListValue[returnPathComponentsTransitGatewayRouteTableRouteAttributes] {
	return terra.ReferenceAsList[returnPathComponentsTransitGatewayRouteTableRouteAttributes](rpc.ref.Append("transit_gateway_route_table_route"))
}

func (rpc returnPathComponentsAttributes) Vpc() terra.ListValue[returnPathComponentsVpcAttributes] {
	return terra.ReferenceAsList[returnPathComponentsVpcAttributes](rpc.ref.Append("vpc"))
}

type returnPathComponentsAclRuleAttributes struct {
	ref terra.Reference
}

func (ar returnPathComponentsAclRuleAttributes) InternalRef() (terra.Reference, error) {
	return ar.ref, nil
}

func (ar returnPathComponentsAclRuleAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsAclRuleAttributes {
	return returnPathComponentsAclRuleAttributes{ref: ref}
}

func (ar returnPathComponentsAclRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ar.ref.InternalTokens()
}

func (ar returnPathComponentsAclRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("cidr"))
}

func (ar returnPathComponentsAclRuleAttributes) Egress() terra.BoolValue {
	return terra.ReferenceAsBool(ar.ref.Append("egress"))
}

func (ar returnPathComponentsAclRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("protocol"))
}

func (ar returnPathComponentsAclRuleAttributes) RuleAction() terra.StringValue {
	return terra.ReferenceAsString(ar.ref.Append("rule_action"))
}

func (ar returnPathComponentsAclRuleAttributes) RuleNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ar.ref.Append("rule_number"))
}

func (ar returnPathComponentsAclRuleAttributes) PortRange() terra.ListValue[returnPathComponentsAclRulePortRangeAttributes] {
	return terra.ReferenceAsList[returnPathComponentsAclRulePortRangeAttributes](ar.ref.Append("port_range"))
}

type returnPathComponentsAclRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr returnPathComponentsAclRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr returnPathComponentsAclRulePortRangeAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsAclRulePortRangeAttributes {
	return returnPathComponentsAclRulePortRangeAttributes{ref: ref}
}

func (pr returnPathComponentsAclRulePortRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr returnPathComponentsAclRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr returnPathComponentsAclRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type returnPathComponentsAdditionalDetailsAttributes struct {
	ref terra.Reference
}

func (ad returnPathComponentsAdditionalDetailsAttributes) InternalRef() (terra.Reference, error) {
	return ad.ref, nil
}

func (ad returnPathComponentsAdditionalDetailsAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsAdditionalDetailsAttributes {
	return returnPathComponentsAdditionalDetailsAttributes{ref: ref}
}

func (ad returnPathComponentsAdditionalDetailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ad.ref.InternalTokens()
}

func (ad returnPathComponentsAdditionalDetailsAttributes) AdditionalDetailType() terra.StringValue {
	return terra.ReferenceAsString(ad.ref.Append("additional_detail_type"))
}

func (ad returnPathComponentsAdditionalDetailsAttributes) Component() terra.ListValue[returnPathComponentsAdditionalDetailsComponentAttributes] {
	return terra.ReferenceAsList[returnPathComponentsAdditionalDetailsComponentAttributes](ad.ref.Append("component"))
}

type returnPathComponentsAdditionalDetailsComponentAttributes struct {
	ref terra.Reference
}

func (c returnPathComponentsAdditionalDetailsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c returnPathComponentsAdditionalDetailsComponentAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsAdditionalDetailsComponentAttributes {
	return returnPathComponentsAdditionalDetailsComponentAttributes{ref: ref}
}

func (c returnPathComponentsAdditionalDetailsComponentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c returnPathComponentsAdditionalDetailsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c returnPathComponentsAdditionalDetailsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c returnPathComponentsAdditionalDetailsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type returnPathComponentsAttachedToAttributes struct {
	ref terra.Reference
}

func (at returnPathComponentsAttachedToAttributes) InternalRef() (terra.Reference, error) {
	return at.ref, nil
}

func (at returnPathComponentsAttachedToAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsAttachedToAttributes {
	return returnPathComponentsAttachedToAttributes{ref: ref}
}

func (at returnPathComponentsAttachedToAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return at.ref.InternalTokens()
}

func (at returnPathComponentsAttachedToAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("arn"))
}

func (at returnPathComponentsAttachedToAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("id"))
}

func (at returnPathComponentsAttachedToAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(at.ref.Append("name"))
}

type returnPathComponentsComponentAttributes struct {
	ref terra.Reference
}

func (c returnPathComponentsComponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c returnPathComponentsComponentAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsComponentAttributes {
	return returnPathComponentsComponentAttributes{ref: ref}
}

func (c returnPathComponentsComponentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c returnPathComponentsComponentAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("arn"))
}

func (c returnPathComponentsComponentAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("id"))
}

func (c returnPathComponentsComponentAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("name"))
}

type returnPathComponentsDestinationVpcAttributes struct {
	ref terra.Reference
}

func (dv returnPathComponentsDestinationVpcAttributes) InternalRef() (terra.Reference, error) {
	return dv.ref, nil
}

func (dv returnPathComponentsDestinationVpcAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsDestinationVpcAttributes {
	return returnPathComponentsDestinationVpcAttributes{ref: ref}
}

func (dv returnPathComponentsDestinationVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dv.ref.InternalTokens()
}

func (dv returnPathComponentsDestinationVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("arn"))
}

func (dv returnPathComponentsDestinationVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("id"))
}

func (dv returnPathComponentsDestinationVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(dv.ref.Append("name"))
}

type returnPathComponentsInboundHeaderAttributes struct {
	ref terra.Reference
}

func (ih returnPathComponentsInboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return ih.ref, nil
}

func (ih returnPathComponentsInboundHeaderAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsInboundHeaderAttributes {
	return returnPathComponentsInboundHeaderAttributes{ref: ref}
}

func (ih returnPathComponentsInboundHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ih.ref.InternalTokens()
}

func (ih returnPathComponentsInboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("destination_addresses"))
}

func (ih returnPathComponentsInboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(ih.ref.Append("protocol"))
}

func (ih returnPathComponentsInboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ih.ref.Append("source_addresses"))
}

func (ih returnPathComponentsInboundHeaderAttributes) DestinationPortRanges() terra.ListValue[returnPathComponentsInboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[returnPathComponentsInboundHeaderDestinationPortRangesAttributes](ih.ref.Append("destination_port_ranges"))
}

func (ih returnPathComponentsInboundHeaderAttributes) SourcePortRanges() terra.ListValue[returnPathComponentsInboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[returnPathComponentsInboundHeaderSourcePortRangesAttributes](ih.ref.Append("source_port_ranges"))
}

type returnPathComponentsInboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr returnPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr returnPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsInboundHeaderDestinationPortRangesAttributes {
	return returnPathComponentsInboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr returnPathComponentsInboundHeaderDestinationPortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dpr.ref.InternalTokens()
}

func (dpr returnPathComponentsInboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr returnPathComponentsInboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type returnPathComponentsInboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr returnPathComponentsInboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr returnPathComponentsInboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsInboundHeaderSourcePortRangesAttributes {
	return returnPathComponentsInboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr returnPathComponentsInboundHeaderSourcePortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spr.ref.InternalTokens()
}

func (spr returnPathComponentsInboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr returnPathComponentsInboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type returnPathComponentsOutboundHeaderAttributes struct {
	ref terra.Reference
}

func (oh returnPathComponentsOutboundHeaderAttributes) InternalRef() (terra.Reference, error) {
	return oh.ref, nil
}

func (oh returnPathComponentsOutboundHeaderAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsOutboundHeaderAttributes {
	return returnPathComponentsOutboundHeaderAttributes{ref: ref}
}

func (oh returnPathComponentsOutboundHeaderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oh.ref.InternalTokens()
}

func (oh returnPathComponentsOutboundHeaderAttributes) DestinationAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("destination_addresses"))
}

func (oh returnPathComponentsOutboundHeaderAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(oh.ref.Append("protocol"))
}

func (oh returnPathComponentsOutboundHeaderAttributes) SourceAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](oh.ref.Append("source_addresses"))
}

func (oh returnPathComponentsOutboundHeaderAttributes) DestinationPortRanges() terra.ListValue[returnPathComponentsOutboundHeaderDestinationPortRangesAttributes] {
	return terra.ReferenceAsList[returnPathComponentsOutboundHeaderDestinationPortRangesAttributes](oh.ref.Append("destination_port_ranges"))
}

func (oh returnPathComponentsOutboundHeaderAttributes) SourcePortRanges() terra.ListValue[returnPathComponentsOutboundHeaderSourcePortRangesAttributes] {
	return terra.ReferenceAsList[returnPathComponentsOutboundHeaderSourcePortRangesAttributes](oh.ref.Append("source_port_ranges"))
}

type returnPathComponentsOutboundHeaderDestinationPortRangesAttributes struct {
	ref terra.Reference
}

func (dpr returnPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalRef() (terra.Reference, error) {
	return dpr.ref, nil
}

func (dpr returnPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsOutboundHeaderDestinationPortRangesAttributes {
	return returnPathComponentsOutboundHeaderDestinationPortRangesAttributes{ref: ref}
}

func (dpr returnPathComponentsOutboundHeaderDestinationPortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dpr.ref.InternalTokens()
}

func (dpr returnPathComponentsOutboundHeaderDestinationPortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("from"))
}

func (dpr returnPathComponentsOutboundHeaderDestinationPortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(dpr.ref.Append("to"))
}

type returnPathComponentsOutboundHeaderSourcePortRangesAttributes struct {
	ref terra.Reference
}

func (spr returnPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalRef() (terra.Reference, error) {
	return spr.ref, nil
}

func (spr returnPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsOutboundHeaderSourcePortRangesAttributes {
	return returnPathComponentsOutboundHeaderSourcePortRangesAttributes{ref: ref}
}

func (spr returnPathComponentsOutboundHeaderSourcePortRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return spr.ref.InternalTokens()
}

func (spr returnPathComponentsOutboundHeaderSourcePortRangesAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("from"))
}

func (spr returnPathComponentsOutboundHeaderSourcePortRangesAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(spr.ref.Append("to"))
}

type returnPathComponentsRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (rtr returnPathComponentsRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return rtr.ref, nil
}

func (rtr returnPathComponentsRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsRouteTableRouteAttributes {
	return returnPathComponentsRouteTableRouteAttributes{ref: ref}
}

func (rtr returnPathComponentsRouteTableRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rtr.ref.InternalTokens()
}

func (rtr returnPathComponentsRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_cidr"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) DestinationPrefixListId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("destination_prefix_list_id"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) EgressOnlyInternetGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("egress_only_internet_gateway_id"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) GatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("gateway_id"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) InstanceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("instance_id"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) NatGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("nat_gateway_id"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) NetworkInterfaceId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("network_interface_id"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) Origin() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("origin"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) TransitGatewayId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("transit_gateway_id"))
}

func (rtr returnPathComponentsRouteTableRouteAttributes) VpcPeeringConnectionId() terra.StringValue {
	return terra.ReferenceAsString(rtr.ref.Append("vpc_peering_connection_id"))
}

type returnPathComponentsSecurityGroupRuleAttributes struct {
	ref terra.Reference
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) InternalRef() (terra.Reference, error) {
	return sgr.ref, nil
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsSecurityGroupRuleAttributes {
	return returnPathComponentsSecurityGroupRuleAttributes{ref: ref}
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sgr.ref.InternalTokens()
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) Cidr() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("cidr"))
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) Direction() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("direction"))
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("prefix_list_id"))
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("protocol"))
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) SecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(sgr.ref.Append("security_group_id"))
}

func (sgr returnPathComponentsSecurityGroupRuleAttributes) PortRange() terra.ListValue[returnPathComponentsSecurityGroupRulePortRangeAttributes] {
	return terra.ReferenceAsList[returnPathComponentsSecurityGroupRulePortRangeAttributes](sgr.ref.Append("port_range"))
}

type returnPathComponentsSecurityGroupRulePortRangeAttributes struct {
	ref terra.Reference
}

func (pr returnPathComponentsSecurityGroupRulePortRangeAttributes) InternalRef() (terra.Reference, error) {
	return pr.ref, nil
}

func (pr returnPathComponentsSecurityGroupRulePortRangeAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsSecurityGroupRulePortRangeAttributes {
	return returnPathComponentsSecurityGroupRulePortRangeAttributes{ref: ref}
}

func (pr returnPathComponentsSecurityGroupRulePortRangeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pr.ref.InternalTokens()
}

func (pr returnPathComponentsSecurityGroupRulePortRangeAttributes) From() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("from"))
}

func (pr returnPathComponentsSecurityGroupRulePortRangeAttributes) To() terra.NumberValue {
	return terra.ReferenceAsNumber(pr.ref.Append("to"))
}

type returnPathComponentsSourceVpcAttributes struct {
	ref terra.Reference
}

func (sv returnPathComponentsSourceVpcAttributes) InternalRef() (terra.Reference, error) {
	return sv.ref, nil
}

func (sv returnPathComponentsSourceVpcAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsSourceVpcAttributes {
	return returnPathComponentsSourceVpcAttributes{ref: ref}
}

func (sv returnPathComponentsSourceVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sv.ref.InternalTokens()
}

func (sv returnPathComponentsSourceVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("arn"))
}

func (sv returnPathComponentsSourceVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("id"))
}

func (sv returnPathComponentsSourceVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(sv.ref.Append("name"))
}

type returnPathComponentsSubnetAttributes struct {
	ref terra.Reference
}

func (s returnPathComponentsSubnetAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s returnPathComponentsSubnetAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsSubnetAttributes {
	return returnPathComponentsSubnetAttributes{ref: ref}
}

func (s returnPathComponentsSubnetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s returnPathComponentsSubnetAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("arn"))
}

func (s returnPathComponentsSubnetAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("id"))
}

func (s returnPathComponentsSubnetAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

type returnPathComponentsTransitGatewayAttributes struct {
	ref terra.Reference
}

func (tg returnPathComponentsTransitGatewayAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg returnPathComponentsTransitGatewayAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsTransitGatewayAttributes {
	return returnPathComponentsTransitGatewayAttributes{ref: ref}
}

func (tg returnPathComponentsTransitGatewayAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tg.ref.InternalTokens()
}

func (tg returnPathComponentsTransitGatewayAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("arn"))
}

func (tg returnPathComponentsTransitGatewayAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("id"))
}

func (tg returnPathComponentsTransitGatewayAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("name"))
}

type returnPathComponentsTransitGatewayRouteTableRouteAttributes struct {
	ref terra.Reference
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) InternalRef() (terra.Reference, error) {
	return tgrtr.ref, nil
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsTransitGatewayRouteTableRouteAttributes {
	return returnPathComponentsTransitGatewayRouteTableRouteAttributes{ref: ref}
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tgrtr.ref.InternalTokens()
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) AttachmentId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("attachment_id"))
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) DestinationCidr() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("destination_cidr"))
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) PrefixListId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("prefix_list_id"))
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceId() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_id"))
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) ResourceType() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("resource_type"))
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) RouteOrigin() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("route_origin"))
}

func (tgrtr returnPathComponentsTransitGatewayRouteTableRouteAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(tgrtr.ref.Append("state"))
}

type returnPathComponentsVpcAttributes struct {
	ref terra.Reference
}

func (v returnPathComponentsVpcAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v returnPathComponentsVpcAttributes) InternalWithRef(ref terra.Reference) returnPathComponentsVpcAttributes {
	return returnPathComponentsVpcAttributes{ref: ref}
}

func (v returnPathComponentsVpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v returnPathComponentsVpcAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("arn"))
}

func (v returnPathComponentsVpcAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("id"))
}

func (v returnPathComponentsVpcAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(v.ref.Append("name"))
}

type AlternatePathHintsState struct {
	ComponentArn string `json:"component_arn"`
	ComponentId  string `json:"component_id"`
}

type ExplanationsState struct {
	Address                       string                                           `json:"address"`
	Addresses                     []string                                         `json:"addresses"`
	AvailabilityZones             []string                                         `json:"availability_zones"`
	Cidrs                         []string                                         `json:"cidrs"`
	Direction                     string                                           `json:"direction"`
	ExplanationCode               string                                           `json:"explanation_code"`
	LoadBalancerArn               string                                           `json:"load_balancer_arn"`
	LoadBalancerListenerPort      float64                                          `json:"load_balancer_listener_port"`
	LoadBalancerTargetPort        float64                                          `json:"load_balancer_target_port"`
	MissingComponent              string                                           `json:"missing_component"`
	PacketField                   string                                           `json:"packet_field"`
	Port                          float64                                          `json:"port"`
	Protocols                     []string                                         `json:"protocols"`
	State                         string                                           `json:"state"`
	Acl                           []ExplanationsAclState                           `json:"acl"`
	AclRule                       []ExplanationsAclRuleState                       `json:"acl_rule"`
	AttachedTo                    []ExplanationsAttachedToState                    `json:"attached_to"`
	ClassicLoadBalancerListener   []ExplanationsClassicLoadBalancerListenerState   `json:"classic_load_balancer_listener"`
	Component                     []ExplanationsComponentState                     `json:"component"`
	CustomerGateway               []ExplanationsCustomerGatewayState               `json:"customer_gateway"`
	Destination                   []ExplanationsDestinationState                   `json:"destination"`
	DestinationVpc                []ExplanationsDestinationVpcState                `json:"destination_vpc"`
	ElasticLoadBalancerListener   []ExplanationsElasticLoadBalancerListenerState   `json:"elastic_load_balancer_listener"`
	IngressRouteTable             []ExplanationsIngressRouteTableState             `json:"ingress_route_table"`
	InternetGateway               []ExplanationsInternetGatewayState               `json:"internet_gateway"`
	LoadBalancerTargetGroup       []ExplanationsLoadBalancerTargetGroupState       `json:"load_balancer_target_group"`
	LoadBalancerTargetGroups      []ExplanationsLoadBalancerTargetGroupsState      `json:"load_balancer_target_groups"`
	NatGateway                    []ExplanationsNatGatewayState                    `json:"nat_gateway"`
	NetworkInterface              []ExplanationsNetworkInterfaceState              `json:"network_interface"`
	PortRanges                    []ExplanationsPortRangesState                    `json:"port_ranges"`
	PrefixList                    []ExplanationsPrefixListState                    `json:"prefix_list"`
	RouteTable                    []ExplanationsRouteTableState                    `json:"route_table"`
	RouteTableRoute               []ExplanationsRouteTableRouteState               `json:"route_table_route"`
	SecurityGroup                 []ExplanationsSecurityGroupState                 `json:"security_group"`
	SecurityGroupRule             []ExplanationsSecurityGroupRuleState             `json:"security_group_rule"`
	SecurityGroups                []ExplanationsSecurityGroupsState                `json:"security_groups"`
	SourceVpc                     []ExplanationsSourceVpcState                     `json:"source_vpc"`
	Subnet                        []ExplanationsSubnetState                        `json:"subnet"`
	SubnetRouteTable              []ExplanationsSubnetRouteTableState              `json:"subnet_route_table"`
	TransitGateway                []ExplanationsTransitGatewayState                `json:"transit_gateway"`
	TransitGatewayAttachment      []ExplanationsTransitGatewayAttachmentState      `json:"transit_gateway_attachment"`
	TransitGatewayRouteTable      []ExplanationsTransitGatewayRouteTableState      `json:"transit_gateway_route_table"`
	TransitGatewayRouteTableRoute []ExplanationsTransitGatewayRouteTableRouteState `json:"transit_gateway_route_table_route"`
	Vpc                           []ExplanationsVpcState                           `json:"vpc"`
	VpcEndpoint                   []ExplanationsVpcEndpointState                   `json:"vpc_endpoint"`
	VpcPeeringConnection          []ExplanationsVpcPeeringConnectionState          `json:"vpc_peering_connection"`
	VpnConnection                 []ExplanationsVpnConnectionState                 `json:"vpn_connection"`
	VpnGateway                    []ExplanationsVpnGatewayState                    `json:"vpn_gateway"`
}

type ExplanationsAclState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsAclRuleState struct {
	Cidr       string                              `json:"cidr"`
	Egress     bool                                `json:"egress"`
	Protocol   string                              `json:"protocol"`
	RuleAction string                              `json:"rule_action"`
	RuleNumber float64                             `json:"rule_number"`
	PortRange  []ExplanationsAclRulePortRangeState `json:"port_range"`
}

type ExplanationsAclRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ExplanationsAttachedToState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsClassicLoadBalancerListenerState struct {
	InstancePort     float64 `json:"instance_port"`
	LoadBalancerPort float64 `json:"load_balancer_port"`
}

type ExplanationsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsCustomerGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsDestinationState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsDestinationVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsElasticLoadBalancerListenerState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsIngressRouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsInternetGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsLoadBalancerTargetGroupState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsLoadBalancerTargetGroupsState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsNatGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsNetworkInterfaceState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ExplanationsPrefixListState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsRouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsRouteTableRouteState struct {
	DestinationCidr             string `json:"destination_cidr"`
	DestinationPrefixListId     string `json:"destination_prefix_list_id"`
	EgressOnlyInternetGatewayId string `json:"egress_only_internet_gateway_id"`
	GatewayId                   string `json:"gateway_id"`
	InstanceId                  string `json:"instance_id"`
	NatGatewayId                string `json:"nat_gateway_id"`
	NetworkInterfaceId          string `json:"network_interface_id"`
	Origin                      string `json:"origin"`
	TransitGatewayId            string `json:"transit_gateway_id"`
	VpcPeeringConnectionId      string `json:"vpc_peering_connection_id"`
}

type ExplanationsSecurityGroupState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsSecurityGroupRuleState struct {
	Cidr            string                                        `json:"cidr"`
	Direction       string                                        `json:"direction"`
	PrefixListId    string                                        `json:"prefix_list_id"`
	Protocol        string                                        `json:"protocol"`
	SecurityGroupId string                                        `json:"security_group_id"`
	PortRange       []ExplanationsSecurityGroupRulePortRangeState `json:"port_range"`
}

type ExplanationsSecurityGroupRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ExplanationsSecurityGroupsState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsSourceVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsSubnetState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsSubnetRouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsTransitGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsTransitGatewayAttachmentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsTransitGatewayRouteTableState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsTransitGatewayRouteTableRouteState struct {
	AttachmentId    string `json:"attachment_id"`
	DestinationCidr string `json:"destination_cidr"`
	PrefixListId    string `json:"prefix_list_id"`
	ResourceId      string `json:"resource_id"`
	ResourceType    string `json:"resource_type"`
	RouteOrigin     string `json:"route_origin"`
	State           string `json:"state"`
}

type ExplanationsVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsVpcEndpointState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsVpcPeeringConnectionState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsVpnConnectionState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ExplanationsVpnGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsState struct {
	SequenceNumber                float64                                                   `json:"sequence_number"`
	AclRule                       []ForwardPathComponentsAclRuleState                       `json:"acl_rule"`
	AdditionalDetails             []ForwardPathComponentsAdditionalDetailsState             `json:"additional_details"`
	AttachedTo                    []ForwardPathComponentsAttachedToState                    `json:"attached_to"`
	Component                     []ForwardPathComponentsComponentState                     `json:"component"`
	DestinationVpc                []ForwardPathComponentsDestinationVpcState                `json:"destination_vpc"`
	InboundHeader                 []ForwardPathComponentsInboundHeaderState                 `json:"inbound_header"`
	OutboundHeader                []ForwardPathComponentsOutboundHeaderState                `json:"outbound_header"`
	RouteTableRoute               []ForwardPathComponentsRouteTableRouteState               `json:"route_table_route"`
	SecurityGroupRule             []ForwardPathComponentsSecurityGroupRuleState             `json:"security_group_rule"`
	SourceVpc                     []ForwardPathComponentsSourceVpcState                     `json:"source_vpc"`
	Subnet                        []ForwardPathComponentsSubnetState                        `json:"subnet"`
	TransitGateway                []ForwardPathComponentsTransitGatewayState                `json:"transit_gateway"`
	TransitGatewayRouteTableRoute []ForwardPathComponentsTransitGatewayRouteTableRouteState `json:"transit_gateway_route_table_route"`
	Vpc                           []ForwardPathComponentsVpcState                           `json:"vpc"`
}

type ForwardPathComponentsAclRuleState struct {
	Cidr       string                                       `json:"cidr"`
	Egress     bool                                         `json:"egress"`
	Protocol   string                                       `json:"protocol"`
	RuleAction string                                       `json:"rule_action"`
	RuleNumber float64                                      `json:"rule_number"`
	PortRange  []ForwardPathComponentsAclRulePortRangeState `json:"port_range"`
}

type ForwardPathComponentsAclRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsAdditionalDetailsState struct {
	AdditionalDetailType string                                                 `json:"additional_detail_type"`
	Component            []ForwardPathComponentsAdditionalDetailsComponentState `json:"component"`
}

type ForwardPathComponentsAdditionalDetailsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsAttachedToState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsDestinationVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsInboundHeaderState struct {
	DestinationAddresses  []string                                                       `json:"destination_addresses"`
	Protocol              string                                                         `json:"protocol"`
	SourceAddresses       []string                                                       `json:"source_addresses"`
	DestinationPortRanges []ForwardPathComponentsInboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ForwardPathComponentsInboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ForwardPathComponentsInboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsInboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsOutboundHeaderState struct {
	DestinationAddresses  []string                                                        `json:"destination_addresses"`
	Protocol              string                                                          `json:"protocol"`
	SourceAddresses       []string                                                        `json:"source_addresses"`
	DestinationPortRanges []ForwardPathComponentsOutboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ForwardPathComponentsOutboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ForwardPathComponentsOutboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsOutboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsRouteTableRouteState struct {
	DestinationCidr             string `json:"destination_cidr"`
	DestinationPrefixListId     string `json:"destination_prefix_list_id"`
	EgressOnlyInternetGatewayId string `json:"egress_only_internet_gateway_id"`
	GatewayId                   string `json:"gateway_id"`
	InstanceId                  string `json:"instance_id"`
	NatGatewayId                string `json:"nat_gateway_id"`
	NetworkInterfaceId          string `json:"network_interface_id"`
	Origin                      string `json:"origin"`
	TransitGatewayId            string `json:"transit_gateway_id"`
	VpcPeeringConnectionId      string `json:"vpc_peering_connection_id"`
}

type ForwardPathComponentsSecurityGroupRuleState struct {
	Cidr            string                                                 `json:"cidr"`
	Direction       string                                                 `json:"direction"`
	PrefixListId    string                                                 `json:"prefix_list_id"`
	Protocol        string                                                 `json:"protocol"`
	SecurityGroupId string                                                 `json:"security_group_id"`
	PortRange       []ForwardPathComponentsSecurityGroupRulePortRangeState `json:"port_range"`
}

type ForwardPathComponentsSecurityGroupRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ForwardPathComponentsSourceVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsSubnetState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsTransitGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ForwardPathComponentsTransitGatewayRouteTableRouteState struct {
	AttachmentId    string `json:"attachment_id"`
	DestinationCidr string `json:"destination_cidr"`
	PrefixListId    string `json:"prefix_list_id"`
	ResourceId      string `json:"resource_id"`
	ResourceType    string `json:"resource_type"`
	RouteOrigin     string `json:"route_origin"`
	State           string `json:"state"`
}

type ForwardPathComponentsVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsState struct {
	SequenceNumber                float64                                                  `json:"sequence_number"`
	AclRule                       []ReturnPathComponentsAclRuleState                       `json:"acl_rule"`
	AdditionalDetails             []ReturnPathComponentsAdditionalDetailsState             `json:"additional_details"`
	AttachedTo                    []ReturnPathComponentsAttachedToState                    `json:"attached_to"`
	Component                     []ReturnPathComponentsComponentState                     `json:"component"`
	DestinationVpc                []ReturnPathComponentsDestinationVpcState                `json:"destination_vpc"`
	InboundHeader                 []ReturnPathComponentsInboundHeaderState                 `json:"inbound_header"`
	OutboundHeader                []ReturnPathComponentsOutboundHeaderState                `json:"outbound_header"`
	RouteTableRoute               []ReturnPathComponentsRouteTableRouteState               `json:"route_table_route"`
	SecurityGroupRule             []ReturnPathComponentsSecurityGroupRuleState             `json:"security_group_rule"`
	SourceVpc                     []ReturnPathComponentsSourceVpcState                     `json:"source_vpc"`
	Subnet                        []ReturnPathComponentsSubnetState                        `json:"subnet"`
	TransitGateway                []ReturnPathComponentsTransitGatewayState                `json:"transit_gateway"`
	TransitGatewayRouteTableRoute []ReturnPathComponentsTransitGatewayRouteTableRouteState `json:"transit_gateway_route_table_route"`
	Vpc                           []ReturnPathComponentsVpcState                           `json:"vpc"`
}

type ReturnPathComponentsAclRuleState struct {
	Cidr       string                                      `json:"cidr"`
	Egress     bool                                        `json:"egress"`
	Protocol   string                                      `json:"protocol"`
	RuleAction string                                      `json:"rule_action"`
	RuleNumber float64                                     `json:"rule_number"`
	PortRange  []ReturnPathComponentsAclRulePortRangeState `json:"port_range"`
}

type ReturnPathComponentsAclRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsAdditionalDetailsState struct {
	AdditionalDetailType string                                                `json:"additional_detail_type"`
	Component            []ReturnPathComponentsAdditionalDetailsComponentState `json:"component"`
}

type ReturnPathComponentsAdditionalDetailsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsAttachedToState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsComponentState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsDestinationVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsInboundHeaderState struct {
	DestinationAddresses  []string                                                      `json:"destination_addresses"`
	Protocol              string                                                        `json:"protocol"`
	SourceAddresses       []string                                                      `json:"source_addresses"`
	DestinationPortRanges []ReturnPathComponentsInboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ReturnPathComponentsInboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ReturnPathComponentsInboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsInboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsOutboundHeaderState struct {
	DestinationAddresses  []string                                                       `json:"destination_addresses"`
	Protocol              string                                                         `json:"protocol"`
	SourceAddresses       []string                                                       `json:"source_addresses"`
	DestinationPortRanges []ReturnPathComponentsOutboundHeaderDestinationPortRangesState `json:"destination_port_ranges"`
	SourcePortRanges      []ReturnPathComponentsOutboundHeaderSourcePortRangesState      `json:"source_port_ranges"`
}

type ReturnPathComponentsOutboundHeaderDestinationPortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsOutboundHeaderSourcePortRangesState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsRouteTableRouteState struct {
	DestinationCidr             string `json:"destination_cidr"`
	DestinationPrefixListId     string `json:"destination_prefix_list_id"`
	EgressOnlyInternetGatewayId string `json:"egress_only_internet_gateway_id"`
	GatewayId                   string `json:"gateway_id"`
	InstanceId                  string `json:"instance_id"`
	NatGatewayId                string `json:"nat_gateway_id"`
	NetworkInterfaceId          string `json:"network_interface_id"`
	Origin                      string `json:"origin"`
	TransitGatewayId            string `json:"transit_gateway_id"`
	VpcPeeringConnectionId      string `json:"vpc_peering_connection_id"`
}

type ReturnPathComponentsSecurityGroupRuleState struct {
	Cidr            string                                                `json:"cidr"`
	Direction       string                                                `json:"direction"`
	PrefixListId    string                                                `json:"prefix_list_id"`
	Protocol        string                                                `json:"protocol"`
	SecurityGroupId string                                                `json:"security_group_id"`
	PortRange       []ReturnPathComponentsSecurityGroupRulePortRangeState `json:"port_range"`
}

type ReturnPathComponentsSecurityGroupRulePortRangeState struct {
	From float64 `json:"from"`
	To   float64 `json:"to"`
}

type ReturnPathComponentsSourceVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsSubnetState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsTransitGatewayState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}

type ReturnPathComponentsTransitGatewayRouteTableRouteState struct {
	AttachmentId    string `json:"attachment_id"`
	DestinationCidr string `json:"destination_cidr"`
	PrefixListId    string `json:"prefix_list_id"`
	ResourceId      string `json:"resource_id"`
	ResourceType    string `json:"resource_type"`
	RouteOrigin     string `json:"route_origin"`
	State           string `json:"state"`
}

type ReturnPathComponentsVpcState struct {
	Arn  string `json:"arn"`
	Id   string `json:"id"`
	Name string `json:"name"`
}
