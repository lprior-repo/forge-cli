// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_network_insights_analysis

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_ec2_network_insights_analysis.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aenia *DataSource) DataSource() string {
	return "aws_ec2_network_insights_analysis"
}

// LocalName returns the local name for [DataSource].
func (aenia *DataSource) LocalName() string {
	return aenia.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aenia *DataSource) Configuration() interface{} {
	return aenia.Args
}

// Attributes returns the attributes for [DataSource].
func (aenia *DataSource) Attributes() dataAwsEc2NetworkInsightsAnalysisAttributes {
	return dataAwsEc2NetworkInsightsAnalysisAttributes{ref: terra.ReferenceDataSource(aenia)}
}

// DataArgs contains the configurations for aws_ec2_network_insights_analysis.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// NetworkInsightsAnalysisId is optional.
	NetworkInsightsAnalysisId terra.StringValue `hcl:"network_insights_analysis_id,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
}

type dataAwsEc2NetworkInsightsAnalysisAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("arn"))
}

// FilterInArns returns a reference to field filter_in_arns of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) FilterInArns() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aenia.ref.Append("filter_in_arns"))
}

// Id returns a reference to field id of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("id"))
}

// NetworkInsightsAnalysisId returns a reference to field network_insights_analysis_id of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) NetworkInsightsAnalysisId() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("network_insights_analysis_id"))
}

// NetworkInsightsPathId returns a reference to field network_insights_path_id of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) NetworkInsightsPathId() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("network_insights_path_id"))
}

// PathFound returns a reference to field path_found of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) PathFound() terra.BoolValue {
	return terra.ReferenceAsBool(aenia.ref.Append("path_found"))
}

// StartDate returns a reference to field start_date of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) StartDate() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("start_date"))
}

// Status returns a reference to field status of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("status"))
}

// StatusMessage returns a reference to field status_message of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) StatusMessage() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("status_message"))
}

// Tags returns a reference to field tags of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aenia.ref.Append("tags"))
}

// WarningMessage returns a reference to field warning_message of aws_ec2_network_insights_analysis.
func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) WarningMessage() terra.StringValue {
	return terra.ReferenceAsString(aenia.ref.Append("warning_message"))
}

func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) AlternatePathHints() terra.ListValue[DataalternatePathHintsAttributes] {
	return terra.ReferenceAsList[DataalternatePathHintsAttributes](aenia.ref.Append("alternate_path_hints"))
}

func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) Explanations() terra.ListValue[DataexplanationsAttributes] {
	return terra.ReferenceAsList[DataexplanationsAttributes](aenia.ref.Append("explanations"))
}

func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) ForwardPathComponents() terra.ListValue[DataforwardPathComponentsAttributes] {
	return terra.ReferenceAsList[DataforwardPathComponentsAttributes](aenia.ref.Append("forward_path_components"))
}

func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) ReturnPathComponents() terra.ListValue[DatareturnPathComponentsAttributes] {
	return terra.ReferenceAsList[DatareturnPathComponentsAttributes](aenia.ref.Append("return_path_components"))
}

func (aenia dataAwsEc2NetworkInsightsAnalysisAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](aenia.ref.Append("filter"))
}
