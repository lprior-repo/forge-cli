// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_api_gateway_usage_plan

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ApiStages struct {
	// ApiId is required.
	ApiId terra.StringValue `hcl:"api_id,attr" validate:"required"`
	// Stage is required.
	Stage terra.StringValue `hcl:"stage,attr" validate:"required"`
	// ApiStagesThrottle is min=0.
	Throttle []ApiStagesThrottle `hcl:"throttle,block" validate:"min=0"`
}

type ApiStagesThrottle struct {
	// BurstLimit is optional.
	BurstLimit terra.NumberValue `hcl:"burst_limit,attr"`
	// Path is required.
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// RateLimit is optional.
	RateLimit terra.NumberValue `hcl:"rate_limit,attr"`
}

type QuotaSettings struct {
	// Limit is required.
	Limit terra.NumberValue `hcl:"limit,attr" validate:"required"`
	// Offset is optional.
	Offset terra.NumberValue `hcl:"offset,attr"`
	// Period is required.
	Period terra.StringValue `hcl:"period,attr" validate:"required"`
}

type ThrottleSettings struct {
	// BurstLimit is optional.
	BurstLimit terra.NumberValue `hcl:"burst_limit,attr"`
	// RateLimit is optional.
	RateLimit terra.NumberValue `hcl:"rate_limit,attr"`
}

type apiStagesAttributes struct {
	ref terra.Reference
}

func (as apiStagesAttributes) InternalRef() (terra.Reference, error) {
	return as.ref, nil
}

func (as apiStagesAttributes) InternalWithRef(ref terra.Reference) apiStagesAttributes {
	return apiStagesAttributes{ref: ref}
}

func (as apiStagesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return as.ref.InternalTokens()
}

func (as apiStagesAttributes) ApiId() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("api_id"))
}

func (as apiStagesAttributes) Stage() terra.StringValue {
	return terra.ReferenceAsString(as.ref.Append("stage"))
}

func (as apiStagesAttributes) Throttle() terra.SetValue[apiStagesThrottleAttributes] {
	return terra.ReferenceAsSet[apiStagesThrottleAttributes](as.ref.Append("throttle"))
}

type apiStagesThrottleAttributes struct {
	ref terra.Reference
}

func (t apiStagesThrottleAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t apiStagesThrottleAttributes) InternalWithRef(ref terra.Reference) apiStagesThrottleAttributes {
	return apiStagesThrottleAttributes{ref: ref}
}

func (t apiStagesThrottleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t apiStagesThrottleAttributes) BurstLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("burst_limit"))
}

func (t apiStagesThrottleAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("path"))
}

func (t apiStagesThrottleAttributes) RateLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(t.ref.Append("rate_limit"))
}

type quotaSettingsAttributes struct {
	ref terra.Reference
}

func (qs quotaSettingsAttributes) InternalRef() (terra.Reference, error) {
	return qs.ref, nil
}

func (qs quotaSettingsAttributes) InternalWithRef(ref terra.Reference) quotaSettingsAttributes {
	return quotaSettingsAttributes{ref: ref}
}

func (qs quotaSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qs.ref.InternalTokens()
}

func (qs quotaSettingsAttributes) Limit() terra.NumberValue {
	return terra.ReferenceAsNumber(qs.ref.Append("limit"))
}

func (qs quotaSettingsAttributes) Offset() terra.NumberValue {
	return terra.ReferenceAsNumber(qs.ref.Append("offset"))
}

func (qs quotaSettingsAttributes) Period() terra.StringValue {
	return terra.ReferenceAsString(qs.ref.Append("period"))
}

type throttleSettingsAttributes struct {
	ref terra.Reference
}

func (ts throttleSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ts.ref, nil
}

func (ts throttleSettingsAttributes) InternalWithRef(ref terra.Reference) throttleSettingsAttributes {
	return throttleSettingsAttributes{ref: ref}
}

func (ts throttleSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ts.ref.InternalTokens()
}

func (ts throttleSettingsAttributes) BurstLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("burst_limit"))
}

func (ts throttleSettingsAttributes) RateLimit() terra.NumberValue {
	return terra.ReferenceAsNumber(ts.ref.Append("rate_limit"))
}

type ApiStagesState struct {
	ApiId    string                   `json:"api_id"`
	Stage    string                   `json:"stage"`
	Throttle []ApiStagesThrottleState `json:"throttle"`
}

type ApiStagesThrottleState struct {
	BurstLimit float64 `json:"burst_limit"`
	Path       string  `json:"path"`
	RateLimit  float64 `json:"rate_limit"`
}

type QuotaSettingsState struct {
	Limit  float64 `json:"limit"`
	Offset float64 `json:"offset"`
	Period string  `json:"period"`
}

type ThrottleSettingsState struct {
	BurstLimit float64 `json:"burst_limit"`
	RateLimit  float64 `json:"rate_limit"`
}
