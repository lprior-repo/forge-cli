// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fsx_openzfs_snapshot

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_fsx_openzfs_snapshot.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (afos *DataSource) DataSource() string {
	return "aws_fsx_openzfs_snapshot"
}

// LocalName returns the local name for [DataSource].
func (afos *DataSource) LocalName() string {
	return afos.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (afos *DataSource) Configuration() interface{} {
	return afos.Args
}

// Attributes returns the attributes for [DataSource].
func (afos *DataSource) Attributes() dataAwsFsxOpenzfsSnapshotAttributes {
	return dataAwsFsxOpenzfsSnapshotAttributes{ref: terra.ReferenceDataSource(afos)}
}

// DataArgs contains the configurations for aws_fsx_openzfs_snapshot.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// MostRecent is optional.
	MostRecent terra.BoolValue `hcl:"most_recent,attr"`
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// SnapshotIds is optional.
	SnapshotIds terra.ListValue[terra.StringValue] `hcl:"snapshot_ids,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
}

type dataAwsFsxOpenzfsSnapshotAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(afos.ref.Append("arn"))
}

// CreationTime returns a reference to field creation_time of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) CreationTime() terra.StringValue {
	return terra.ReferenceAsString(afos.ref.Append("creation_time"))
}

// Id returns a reference to field id of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(afos.ref.Append("id"))
}

// MostRecent returns a reference to field most_recent of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) MostRecent() terra.BoolValue {
	return terra.ReferenceAsBool(afos.ref.Append("most_recent"))
}

// Name returns a reference to field name of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(afos.ref.Append("name"))
}

// SnapshotId returns a reference to field snapshot_id of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(afos.ref.Append("snapshot_id"))
}

// SnapshotIds returns a reference to field snapshot_ids of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) SnapshotIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](afos.ref.Append("snapshot_ids"))
}

// Tags returns a reference to field tags of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](afos.ref.Append("tags"))
}

// VolumeId returns a reference to field volume_id of aws_fsx_openzfs_snapshot.
func (afos dataAwsFsxOpenzfsSnapshotAttributes) VolumeId() terra.StringValue {
	return terra.ReferenceAsString(afos.ref.Append("volume_id"))
}

func (afos dataAwsFsxOpenzfsSnapshotAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](afos.ref.Append("filter"))
}
