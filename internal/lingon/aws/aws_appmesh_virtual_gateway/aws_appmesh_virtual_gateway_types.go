// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_appmesh_virtual_gateway

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Spec struct {
	// SpecBackendDefaults is optional.
	BackendDefaults *SpecBackendDefaults `hcl:"backend_defaults,block"`
	// SpecListener is min=1.
	Listener []SpecListener `hcl:"listener,block" validate:"min=1"`
	// SpecLogging is optional.
	Logging *SpecLogging `hcl:"logging,block"`
}

type SpecBackendDefaults struct {
	// SpecBackendDefaultsClientPolicy is optional.
	ClientPolicy *SpecBackendDefaultsClientPolicy `hcl:"client_policy,block"`
}

type SpecBackendDefaultsClientPolicy struct {
	// SpecBackendDefaultsClientPolicyTls is optional.
	Tls *SpecBackendDefaultsClientPolicyTls `hcl:"tls,block"`
}

type SpecBackendDefaultsClientPolicyTls struct {
	// Enforce is optional.
	Enforce terra.BoolValue `hcl:"enforce,attr"`
	// Ports is optional.
	Ports terra.SetValue[terra.NumberValue] `hcl:"ports,attr"`
	// SpecBackendDefaults65Cecba8 is optional.
	Certificate *SpecBackendDefaults65Cecba8 `hcl:"certificate,block"`
	// SpecBackendDefaults630078F7 is required.
	Validation *SpecBackendDefaults630078F7 `hcl:"validation,block" validate:"required"`
}

type SpecBackendDefaults65Cecba8 struct {
	// SpecBackendDefaults9069F2D6 is optional.
	File *SpecBackendDefaults9069F2D6 `hcl:"file,block"`
	// SpecBackendDefaultsB4A40596 is optional.
	Sds *SpecBackendDefaultsB4A40596 `hcl:"sds,block"`
}

type SpecBackendDefaults9069F2D6 struct {
	// CertificateChain is required.
	CertificateChain terra.StringValue `hcl:"certificate_chain,attr" validate:"required"`
	// PrivateKey is required.
	PrivateKey terra.StringValue `hcl:"private_key,attr" validate:"required"`
}

type SpecBackendDefaultsB4A40596 struct {
	// SecretName is required.
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
}

type SpecBackendDefaults630078F7 struct {
	// SpecBackendDefaults840A8Fda is optional.
	SubjectAlternativeNames *SpecBackendDefaults840A8Fda `hcl:"subject_alternative_names,block"`
	// SpecBackendDefaults738E8933 is required.
	Trust *SpecBackendDefaults738E8933 `hcl:"trust,block" validate:"required"`
}

type SpecBackendDefaults840A8Fda struct {
	// SpecBackendDefaults05226299 is required.
	Match *SpecBackendDefaults05226299 `hcl:"match,block" validate:"required"`
}

type SpecBackendDefaults05226299 struct {
	// Exact is required.
	Exact terra.SetValue[terra.StringValue] `hcl:"exact,attr" validate:"required"`
}

type SpecBackendDefaults738E8933 struct {
	// SpecBackendDefaultsDb1Fecb0 is optional.
	Acm *SpecBackendDefaultsDb1Fecb0 `hcl:"acm,block"`
	// SpecBackendDefaultsF332D3F5 is optional.
	File *SpecBackendDefaultsF332D3F5 `hcl:"file,block"`
	// SpecBackendDefaults79Ade431 is optional.
	Sds *SpecBackendDefaults79Ade431 `hcl:"sds,block"`
}

type SpecBackendDefaultsDb1Fecb0 struct {
	// CertificateAuthorityArns is required.
	CertificateAuthorityArns terra.SetValue[terra.StringValue] `hcl:"certificate_authority_arns,attr" validate:"required"`
}

type SpecBackendDefaultsF332D3F5 struct {
	// CertificateChain is required.
	CertificateChain terra.StringValue `hcl:"certificate_chain,attr" validate:"required"`
}

type SpecBackendDefaults79Ade431 struct {
	// SecretName is required.
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
}

type SpecListener struct {
	// SpecListenerConnectionPool is optional.
	ConnectionPool *SpecListenerConnectionPool `hcl:"connection_pool,block"`
	// SpecListenerHealthCheck is optional.
	HealthCheck *SpecListenerHealthCheck `hcl:"health_check,block"`
	// SpecListenerPortMapping is required.
	PortMapping *SpecListenerPortMapping `hcl:"port_mapping,block" validate:"required"`
	// SpecListenerTls is optional.
	Tls *SpecListenerTls `hcl:"tls,block"`
}

type SpecListenerConnectionPool struct {
	// SpecListenerConnectionPoolGrpc is optional.
	Grpc *SpecListenerConnectionPoolGrpc `hcl:"grpc,block"`
	// SpecListenerConnectionPoolHttp is optional.
	Http *SpecListenerConnectionPoolHttp `hcl:"http,block"`
	// SpecListenerConnectionPoolHttp2 is optional.
	Http2 *SpecListenerConnectionPoolHttp2 `hcl:"http2,block"`
}

type SpecListenerConnectionPoolGrpc struct {
	// MaxRequests is required.
	MaxRequests terra.NumberValue `hcl:"max_requests,attr" validate:"required"`
}

type SpecListenerConnectionPoolHttp struct {
	// MaxConnections is required.
	MaxConnections terra.NumberValue `hcl:"max_connections,attr" validate:"required"`
	// MaxPendingRequests is optional.
	MaxPendingRequests terra.NumberValue `hcl:"max_pending_requests,attr"`
}

type SpecListenerConnectionPoolHttp2 struct {
	// MaxRequests is required.
	MaxRequests terra.NumberValue `hcl:"max_requests,attr" validate:"required"`
}

type SpecListenerHealthCheck struct {
	// HealthyThreshold is required.
	HealthyThreshold terra.NumberValue `hcl:"healthy_threshold,attr" validate:"required"`
	// IntervalMillis is required.
	IntervalMillis terra.NumberValue `hcl:"interval_millis,attr" validate:"required"`
	// Path is optional.
	Path terra.StringValue `hcl:"path,attr"`
	// Port is optional.
	Port terra.NumberValue `hcl:"port,attr"`
	// Protocol is required.
	Protocol terra.StringValue `hcl:"protocol,attr" validate:"required"`
	// TimeoutMillis is required.
	TimeoutMillis terra.NumberValue `hcl:"timeout_millis,attr" validate:"required"`
	// UnhealthyThreshold is required.
	UnhealthyThreshold terra.NumberValue `hcl:"unhealthy_threshold,attr" validate:"required"`
}

type SpecListenerPortMapping struct {
	// Port is required.
	Port terra.NumberValue `hcl:"port,attr" validate:"required"`
	// Protocol is required.
	Protocol terra.StringValue `hcl:"protocol,attr" validate:"required"`
}

type SpecListenerTls struct {
	// Mode is required.
	Mode terra.StringValue `hcl:"mode,attr" validate:"required"`
	// SpecListenerTlsCertificate is required.
	Certificate *SpecListenerTlsCertificate `hcl:"certificate,block" validate:"required"`
	// SpecListenerTlsValidation is optional.
	Validation *SpecListenerTlsValidation `hcl:"validation,block"`
}

type SpecListenerTlsCertificate struct {
	// SpecListenerD7B92001 is optional.
	Acm *SpecListenerD7B92001 `hcl:"acm,block"`
	// SpecListener5Cc1671F is optional.
	File *SpecListener5Cc1671F `hcl:"file,block"`
	// SpecListener5C5E34Df is optional.
	Sds *SpecListener5C5E34Df `hcl:"sds,block"`
}

type SpecListenerD7B92001 struct {
	// CertificateArn is required.
	CertificateArn terra.StringValue `hcl:"certificate_arn,attr" validate:"required"`
}

type SpecListener5Cc1671F struct {
	// CertificateChain is required.
	CertificateChain terra.StringValue `hcl:"certificate_chain,attr" validate:"required"`
	// PrivateKey is required.
	PrivateKey terra.StringValue `hcl:"private_key,attr" validate:"required"`
}

type SpecListener5C5E34Df struct {
	// SecretName is required.
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
}

type SpecListenerTlsValidation struct {
	// SpecListener785160C2 is optional.
	SubjectAlternativeNames *SpecListener785160C2 `hcl:"subject_alternative_names,block"`
	// SpecListener668488A5 is required.
	Trust *SpecListener668488A5 `hcl:"trust,block" validate:"required"`
}

type SpecListener785160C2 struct {
	// SpecListener16Acc0F6 is required.
	Match *SpecListener16Acc0F6 `hcl:"match,block" validate:"required"`
}

type SpecListener16Acc0F6 struct {
	// Exact is required.
	Exact terra.SetValue[terra.StringValue] `hcl:"exact,attr" validate:"required"`
}

type SpecListener668488A5 struct {
	// SpecListenerD017009E is optional.
	File *SpecListenerD017009E `hcl:"file,block"`
	// SpecListenerD474D638 is optional.
	Sds *SpecListenerD474D638 `hcl:"sds,block"`
}

type SpecListenerD017009E struct {
	// CertificateChain is required.
	CertificateChain terra.StringValue `hcl:"certificate_chain,attr" validate:"required"`
}

type SpecListenerD474D638 struct {
	// SecretName is required.
	SecretName terra.StringValue `hcl:"secret_name,attr" validate:"required"`
}

type SpecLogging struct {
	// SpecLoggingAccessLog is optional.
	AccessLog *SpecLoggingAccessLog `hcl:"access_log,block"`
}

type SpecLoggingAccessLog struct {
	// SpecLoggingAccessLogFile is optional.
	File *SpecLoggingAccessLogFile `hcl:"file,block"`
}

type SpecLoggingAccessLogFile struct {
	// Path is required.
	Path terra.StringValue `hcl:"path,attr" validate:"required"`
	// SpecLogging653Ee54D is optional.
	Format *SpecLogging653Ee54D `hcl:"format,block"`
}

type SpecLogging653Ee54D struct {
	// Text is optional.
	Text terra.StringValue `hcl:"text,attr"`
	// SpecLoggingB8C4611C is min=0.
	Json []SpecLoggingB8C4611C `hcl:"json,block" validate:"min=0"`
}

type SpecLoggingB8C4611C struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type specAttributes struct {
	ref terra.Reference
}

func (s specAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s specAttributes) InternalWithRef(ref terra.Reference) specAttributes {
	return specAttributes{ref: ref}
}

func (s specAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s specAttributes) BackendDefaults() terra.ListValue[specBackendDefaultsAttributes] {
	return terra.ReferenceAsList[specBackendDefaultsAttributes](s.ref.Append("backend_defaults"))
}

func (s specAttributes) Listener() terra.ListValue[specListenerAttributes] {
	return terra.ReferenceAsList[specListenerAttributes](s.ref.Append("listener"))
}

func (s specAttributes) Logging() terra.ListValue[specLoggingAttributes] {
	return terra.ReferenceAsList[specLoggingAttributes](s.ref.Append("logging"))
}

type specBackendDefaultsAttributes struct {
	ref terra.Reference
}

func (bd specBackendDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return bd.ref, nil
}

func (bd specBackendDefaultsAttributes) InternalWithRef(ref terra.Reference) specBackendDefaultsAttributes {
	return specBackendDefaultsAttributes{ref: ref}
}

func (bd specBackendDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bd.ref.InternalTokens()
}

func (bd specBackendDefaultsAttributes) ClientPolicy() terra.ListValue[specBackendDefaultsClientPolicyAttributes] {
	return terra.ReferenceAsList[specBackendDefaultsClientPolicyAttributes](bd.ref.Append("client_policy"))
}

type specBackendDefaultsClientPolicyAttributes struct {
	ref terra.Reference
}

func (cp specBackendDefaultsClientPolicyAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp specBackendDefaultsClientPolicyAttributes) InternalWithRef(ref terra.Reference) specBackendDefaultsClientPolicyAttributes {
	return specBackendDefaultsClientPolicyAttributes{ref: ref}
}

func (cp specBackendDefaultsClientPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp specBackendDefaultsClientPolicyAttributes) Tls() terra.ListValue[specBackendDefaultsClientPolicyTlsAttributes] {
	return terra.ReferenceAsList[specBackendDefaultsClientPolicyTlsAttributes](cp.ref.Append("tls"))
}

type specBackendDefaultsClientPolicyTlsAttributes struct {
	ref terra.Reference
}

func (t specBackendDefaultsClientPolicyTlsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t specBackendDefaultsClientPolicyTlsAttributes) InternalWithRef(ref terra.Reference) specBackendDefaultsClientPolicyTlsAttributes {
	return specBackendDefaultsClientPolicyTlsAttributes{ref: ref}
}

func (t specBackendDefaultsClientPolicyTlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t specBackendDefaultsClientPolicyTlsAttributes) Enforce() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("enforce"))
}

func (t specBackendDefaultsClientPolicyTlsAttributes) Ports() terra.SetValue[terra.NumberValue] {
	return terra.ReferenceAsSet[terra.NumberValue](t.ref.Append("ports"))
}

func (t specBackendDefaultsClientPolicyTlsAttributes) Certificate() terra.ListValue[specBackendDefaults65Cecba8Attributes] {
	return terra.ReferenceAsList[specBackendDefaults65Cecba8Attributes](t.ref.Append("certificate"))
}

func (t specBackendDefaultsClientPolicyTlsAttributes) Validation() terra.ListValue[specBackendDefaults630078F7Attributes] {
	return terra.ReferenceAsList[specBackendDefaults630078F7Attributes](t.ref.Append("validation"))
}

type specBackendDefaults65Cecba8Attributes struct {
	ref terra.Reference
}

func (c specBackendDefaults65Cecba8Attributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c specBackendDefaults65Cecba8Attributes) InternalWithRef(ref terra.Reference) specBackendDefaults65Cecba8Attributes {
	return specBackendDefaults65Cecba8Attributes{ref: ref}
}

func (c specBackendDefaults65Cecba8Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c specBackendDefaults65Cecba8Attributes) File() terra.ListValue[specBackendDefaults9069F2D6Attributes] {
	return terra.ReferenceAsList[specBackendDefaults9069F2D6Attributes](c.ref.Append("file"))
}

func (c specBackendDefaults65Cecba8Attributes) Sds() terra.ListValue[specBackendDefaultsB4A40596Attributes] {
	return terra.ReferenceAsList[specBackendDefaultsB4A40596Attributes](c.ref.Append("sds"))
}

type specBackendDefaults9069F2D6Attributes struct {
	ref terra.Reference
}

func (f specBackendDefaults9069F2D6Attributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f specBackendDefaults9069F2D6Attributes) InternalWithRef(ref terra.Reference) specBackendDefaults9069F2D6Attributes {
	return specBackendDefaults9069F2D6Attributes{ref: ref}
}

func (f specBackendDefaults9069F2D6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f specBackendDefaults9069F2D6Attributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

func (f specBackendDefaults9069F2D6Attributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("private_key"))
}

type specBackendDefaultsB4A40596Attributes struct {
	ref terra.Reference
}

func (s specBackendDefaultsB4A40596Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s specBackendDefaultsB4A40596Attributes) InternalWithRef(ref terra.Reference) specBackendDefaultsB4A40596Attributes {
	return specBackendDefaultsB4A40596Attributes{ref: ref}
}

func (s specBackendDefaultsB4A40596Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s specBackendDefaultsB4A40596Attributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type specBackendDefaults630078F7Attributes struct {
	ref terra.Reference
}

func (v specBackendDefaults630078F7Attributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v specBackendDefaults630078F7Attributes) InternalWithRef(ref terra.Reference) specBackendDefaults630078F7Attributes {
	return specBackendDefaults630078F7Attributes{ref: ref}
}

func (v specBackendDefaults630078F7Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v specBackendDefaults630078F7Attributes) SubjectAlternativeNames() terra.ListValue[specBackendDefaults840A8FdaAttributes] {
	return terra.ReferenceAsList[specBackendDefaults840A8FdaAttributes](v.ref.Append("subject_alternative_names"))
}

func (v specBackendDefaults630078F7Attributes) Trust() terra.ListValue[specBackendDefaults738E8933Attributes] {
	return terra.ReferenceAsList[specBackendDefaults738E8933Attributes](v.ref.Append("trust"))
}

type specBackendDefaults840A8FdaAttributes struct {
	ref terra.Reference
}

func (san specBackendDefaults840A8FdaAttributes) InternalRef() (terra.Reference, error) {
	return san.ref, nil
}

func (san specBackendDefaults840A8FdaAttributes) InternalWithRef(ref terra.Reference) specBackendDefaults840A8FdaAttributes {
	return specBackendDefaults840A8FdaAttributes{ref: ref}
}

func (san specBackendDefaults840A8FdaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return san.ref.InternalTokens()
}

func (san specBackendDefaults840A8FdaAttributes) Match() terra.ListValue[specBackendDefaults05226299Attributes] {
	return terra.ReferenceAsList[specBackendDefaults05226299Attributes](san.ref.Append("match"))
}

type specBackendDefaults05226299Attributes struct {
	ref terra.Reference
}

func (m specBackendDefaults05226299Attributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m specBackendDefaults05226299Attributes) InternalWithRef(ref terra.Reference) specBackendDefaults05226299Attributes {
	return specBackendDefaults05226299Attributes{ref: ref}
}

func (m specBackendDefaults05226299Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m specBackendDefaults05226299Attributes) Exact() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("exact"))
}

type specBackendDefaults738E8933Attributes struct {
	ref terra.Reference
}

func (t specBackendDefaults738E8933Attributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t specBackendDefaults738E8933Attributes) InternalWithRef(ref terra.Reference) specBackendDefaults738E8933Attributes {
	return specBackendDefaults738E8933Attributes{ref: ref}
}

func (t specBackendDefaults738E8933Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t specBackendDefaults738E8933Attributes) Acm() terra.ListValue[specBackendDefaultsDb1Fecb0Attributes] {
	return terra.ReferenceAsList[specBackendDefaultsDb1Fecb0Attributes](t.ref.Append("acm"))
}

func (t specBackendDefaults738E8933Attributes) File() terra.ListValue[specBackendDefaultsF332D3F5Attributes] {
	return terra.ReferenceAsList[specBackendDefaultsF332D3F5Attributes](t.ref.Append("file"))
}

func (t specBackendDefaults738E8933Attributes) Sds() terra.ListValue[specBackendDefaults79Ade431Attributes] {
	return terra.ReferenceAsList[specBackendDefaults79Ade431Attributes](t.ref.Append("sds"))
}

type specBackendDefaultsDb1Fecb0Attributes struct {
	ref terra.Reference
}

func (a specBackendDefaultsDb1Fecb0Attributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a specBackendDefaultsDb1Fecb0Attributes) InternalWithRef(ref terra.Reference) specBackendDefaultsDb1Fecb0Attributes {
	return specBackendDefaultsDb1Fecb0Attributes{ref: ref}
}

func (a specBackendDefaultsDb1Fecb0Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a specBackendDefaultsDb1Fecb0Attributes) CertificateAuthorityArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](a.ref.Append("certificate_authority_arns"))
}

type specBackendDefaultsF332D3F5Attributes struct {
	ref terra.Reference
}

func (f specBackendDefaultsF332D3F5Attributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f specBackendDefaultsF332D3F5Attributes) InternalWithRef(ref terra.Reference) specBackendDefaultsF332D3F5Attributes {
	return specBackendDefaultsF332D3F5Attributes{ref: ref}
}

func (f specBackendDefaultsF332D3F5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f specBackendDefaultsF332D3F5Attributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

type specBackendDefaults79Ade431Attributes struct {
	ref terra.Reference
}

func (s specBackendDefaults79Ade431Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s specBackendDefaults79Ade431Attributes) InternalWithRef(ref terra.Reference) specBackendDefaults79Ade431Attributes {
	return specBackendDefaults79Ade431Attributes{ref: ref}
}

func (s specBackendDefaults79Ade431Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s specBackendDefaults79Ade431Attributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type specListenerAttributes struct {
	ref terra.Reference
}

func (l specListenerAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l specListenerAttributes) InternalWithRef(ref terra.Reference) specListenerAttributes {
	return specListenerAttributes{ref: ref}
}

func (l specListenerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l specListenerAttributes) ConnectionPool() terra.ListValue[specListenerConnectionPoolAttributes] {
	return terra.ReferenceAsList[specListenerConnectionPoolAttributes](l.ref.Append("connection_pool"))
}

func (l specListenerAttributes) HealthCheck() terra.ListValue[specListenerHealthCheckAttributes] {
	return terra.ReferenceAsList[specListenerHealthCheckAttributes](l.ref.Append("health_check"))
}

func (l specListenerAttributes) PortMapping() terra.ListValue[specListenerPortMappingAttributes] {
	return terra.ReferenceAsList[specListenerPortMappingAttributes](l.ref.Append("port_mapping"))
}

func (l specListenerAttributes) Tls() terra.ListValue[specListenerTlsAttributes] {
	return terra.ReferenceAsList[specListenerTlsAttributes](l.ref.Append("tls"))
}

type specListenerConnectionPoolAttributes struct {
	ref terra.Reference
}

func (cp specListenerConnectionPoolAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp specListenerConnectionPoolAttributes) InternalWithRef(ref terra.Reference) specListenerConnectionPoolAttributes {
	return specListenerConnectionPoolAttributes{ref: ref}
}

func (cp specListenerConnectionPoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp specListenerConnectionPoolAttributes) Grpc() terra.ListValue[specListenerConnectionPoolGrpcAttributes] {
	return terra.ReferenceAsList[specListenerConnectionPoolGrpcAttributes](cp.ref.Append("grpc"))
}

func (cp specListenerConnectionPoolAttributes) Http() terra.ListValue[specListenerConnectionPoolHttpAttributes] {
	return terra.ReferenceAsList[specListenerConnectionPoolHttpAttributes](cp.ref.Append("http"))
}

func (cp specListenerConnectionPoolAttributes) Http2() terra.ListValue[specListenerConnectionPoolHttp2Attributes] {
	return terra.ReferenceAsList[specListenerConnectionPoolHttp2Attributes](cp.ref.Append("http2"))
}

type specListenerConnectionPoolGrpcAttributes struct {
	ref terra.Reference
}

func (g specListenerConnectionPoolGrpcAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g specListenerConnectionPoolGrpcAttributes) InternalWithRef(ref terra.Reference) specListenerConnectionPoolGrpcAttributes {
	return specListenerConnectionPoolGrpcAttributes{ref: ref}
}

func (g specListenerConnectionPoolGrpcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g specListenerConnectionPoolGrpcAttributes) MaxRequests() terra.NumberValue {
	return terra.ReferenceAsNumber(g.ref.Append("max_requests"))
}

type specListenerConnectionPoolHttpAttributes struct {
	ref terra.Reference
}

func (h specListenerConnectionPoolHttpAttributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h specListenerConnectionPoolHttpAttributes) InternalWithRef(ref terra.Reference) specListenerConnectionPoolHttpAttributes {
	return specListenerConnectionPoolHttpAttributes{ref: ref}
}

func (h specListenerConnectionPoolHttpAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h specListenerConnectionPoolHttpAttributes) MaxConnections() terra.NumberValue {
	return terra.ReferenceAsNumber(h.ref.Append("max_connections"))
}

func (h specListenerConnectionPoolHttpAttributes) MaxPendingRequests() terra.NumberValue {
	return terra.ReferenceAsNumber(h.ref.Append("max_pending_requests"))
}

type specListenerConnectionPoolHttp2Attributes struct {
	ref terra.Reference
}

func (h specListenerConnectionPoolHttp2Attributes) InternalRef() (terra.Reference, error) {
	return h.ref, nil
}

func (h specListenerConnectionPoolHttp2Attributes) InternalWithRef(ref terra.Reference) specListenerConnectionPoolHttp2Attributes {
	return specListenerConnectionPoolHttp2Attributes{ref: ref}
}

func (h specListenerConnectionPoolHttp2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return h.ref.InternalTokens()
}

func (h specListenerConnectionPoolHttp2Attributes) MaxRequests() terra.NumberValue {
	return terra.ReferenceAsNumber(h.ref.Append("max_requests"))
}

type specListenerHealthCheckAttributes struct {
	ref terra.Reference
}

func (hc specListenerHealthCheckAttributes) InternalRef() (terra.Reference, error) {
	return hc.ref, nil
}

func (hc specListenerHealthCheckAttributes) InternalWithRef(ref terra.Reference) specListenerHealthCheckAttributes {
	return specListenerHealthCheckAttributes{ref: ref}
}

func (hc specListenerHealthCheckAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return hc.ref.InternalTokens()
}

func (hc specListenerHealthCheckAttributes) HealthyThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("healthy_threshold"))
}

func (hc specListenerHealthCheckAttributes) IntervalMillis() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("interval_millis"))
}

func (hc specListenerHealthCheckAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("path"))
}

func (hc specListenerHealthCheckAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("port"))
}

func (hc specListenerHealthCheckAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(hc.ref.Append("protocol"))
}

func (hc specListenerHealthCheckAttributes) TimeoutMillis() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("timeout_millis"))
}

func (hc specListenerHealthCheckAttributes) UnhealthyThreshold() terra.NumberValue {
	return terra.ReferenceAsNumber(hc.ref.Append("unhealthy_threshold"))
}

type specListenerPortMappingAttributes struct {
	ref terra.Reference
}

func (pm specListenerPortMappingAttributes) InternalRef() (terra.Reference, error) {
	return pm.ref, nil
}

func (pm specListenerPortMappingAttributes) InternalWithRef(ref terra.Reference) specListenerPortMappingAttributes {
	return specListenerPortMappingAttributes{ref: ref}
}

func (pm specListenerPortMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pm.ref.InternalTokens()
}

func (pm specListenerPortMappingAttributes) Port() terra.NumberValue {
	return terra.ReferenceAsNumber(pm.ref.Append("port"))
}

func (pm specListenerPortMappingAttributes) Protocol() terra.StringValue {
	return terra.ReferenceAsString(pm.ref.Append("protocol"))
}

type specListenerTlsAttributes struct {
	ref terra.Reference
}

func (t specListenerTlsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t specListenerTlsAttributes) InternalWithRef(ref terra.Reference) specListenerTlsAttributes {
	return specListenerTlsAttributes{ref: ref}
}

func (t specListenerTlsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t specListenerTlsAttributes) Mode() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("mode"))
}

func (t specListenerTlsAttributes) Certificate() terra.ListValue[specListenerTlsCertificateAttributes] {
	return terra.ReferenceAsList[specListenerTlsCertificateAttributes](t.ref.Append("certificate"))
}

func (t specListenerTlsAttributes) Validation() terra.ListValue[specListenerTlsValidationAttributes] {
	return terra.ReferenceAsList[specListenerTlsValidationAttributes](t.ref.Append("validation"))
}

type specListenerTlsCertificateAttributes struct {
	ref terra.Reference
}

func (c specListenerTlsCertificateAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c specListenerTlsCertificateAttributes) InternalWithRef(ref terra.Reference) specListenerTlsCertificateAttributes {
	return specListenerTlsCertificateAttributes{ref: ref}
}

func (c specListenerTlsCertificateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c specListenerTlsCertificateAttributes) Acm() terra.ListValue[specListenerD7B92001Attributes] {
	return terra.ReferenceAsList[specListenerD7B92001Attributes](c.ref.Append("acm"))
}

func (c specListenerTlsCertificateAttributes) File() terra.ListValue[specListener5Cc1671FAttributes] {
	return terra.ReferenceAsList[specListener5Cc1671FAttributes](c.ref.Append("file"))
}

func (c specListenerTlsCertificateAttributes) Sds() terra.ListValue[specListener5C5E34DfAttributes] {
	return terra.ReferenceAsList[specListener5C5E34DfAttributes](c.ref.Append("sds"))
}

type specListenerD7B92001Attributes struct {
	ref terra.Reference
}

func (a specListenerD7B92001Attributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a specListenerD7B92001Attributes) InternalWithRef(ref terra.Reference) specListenerD7B92001Attributes {
	return specListenerD7B92001Attributes{ref: ref}
}

func (a specListenerD7B92001Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a specListenerD7B92001Attributes) CertificateArn() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("certificate_arn"))
}

type specListener5Cc1671FAttributes struct {
	ref terra.Reference
}

func (f specListener5Cc1671FAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f specListener5Cc1671FAttributes) InternalWithRef(ref terra.Reference) specListener5Cc1671FAttributes {
	return specListener5Cc1671FAttributes{ref: ref}
}

func (f specListener5Cc1671FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f specListener5Cc1671FAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

func (f specListener5Cc1671FAttributes) PrivateKey() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("private_key"))
}

type specListener5C5E34DfAttributes struct {
	ref terra.Reference
}

func (s specListener5C5E34DfAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s specListener5C5E34DfAttributes) InternalWithRef(ref terra.Reference) specListener5C5E34DfAttributes {
	return specListener5C5E34DfAttributes{ref: ref}
}

func (s specListener5C5E34DfAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s specListener5C5E34DfAttributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type specListenerTlsValidationAttributes struct {
	ref terra.Reference
}

func (v specListenerTlsValidationAttributes) InternalRef() (terra.Reference, error) {
	return v.ref, nil
}

func (v specListenerTlsValidationAttributes) InternalWithRef(ref terra.Reference) specListenerTlsValidationAttributes {
	return specListenerTlsValidationAttributes{ref: ref}
}

func (v specListenerTlsValidationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return v.ref.InternalTokens()
}

func (v specListenerTlsValidationAttributes) SubjectAlternativeNames() terra.ListValue[specListener785160C2Attributes] {
	return terra.ReferenceAsList[specListener785160C2Attributes](v.ref.Append("subject_alternative_names"))
}

func (v specListenerTlsValidationAttributes) Trust() terra.ListValue[specListener668488A5Attributes] {
	return terra.ReferenceAsList[specListener668488A5Attributes](v.ref.Append("trust"))
}

type specListener785160C2Attributes struct {
	ref terra.Reference
}

func (san specListener785160C2Attributes) InternalRef() (terra.Reference, error) {
	return san.ref, nil
}

func (san specListener785160C2Attributes) InternalWithRef(ref terra.Reference) specListener785160C2Attributes {
	return specListener785160C2Attributes{ref: ref}
}

func (san specListener785160C2Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return san.ref.InternalTokens()
}

func (san specListener785160C2Attributes) Match() terra.ListValue[specListener16Acc0F6Attributes] {
	return terra.ReferenceAsList[specListener16Acc0F6Attributes](san.ref.Append("match"))
}

type specListener16Acc0F6Attributes struct {
	ref terra.Reference
}

func (m specListener16Acc0F6Attributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m specListener16Acc0F6Attributes) InternalWithRef(ref terra.Reference) specListener16Acc0F6Attributes {
	return specListener16Acc0F6Attributes{ref: ref}
}

func (m specListener16Acc0F6Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m specListener16Acc0F6Attributes) Exact() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("exact"))
}

type specListener668488A5Attributes struct {
	ref terra.Reference
}

func (t specListener668488A5Attributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t specListener668488A5Attributes) InternalWithRef(ref terra.Reference) specListener668488A5Attributes {
	return specListener668488A5Attributes{ref: ref}
}

func (t specListener668488A5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t specListener668488A5Attributes) File() terra.ListValue[specListenerD017009EAttributes] {
	return terra.ReferenceAsList[specListenerD017009EAttributes](t.ref.Append("file"))
}

func (t specListener668488A5Attributes) Sds() terra.ListValue[specListenerD474D638Attributes] {
	return terra.ReferenceAsList[specListenerD474D638Attributes](t.ref.Append("sds"))
}

type specListenerD017009EAttributes struct {
	ref terra.Reference
}

func (f specListenerD017009EAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f specListenerD017009EAttributes) InternalWithRef(ref terra.Reference) specListenerD017009EAttributes {
	return specListenerD017009EAttributes{ref: ref}
}

func (f specListenerD017009EAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f specListenerD017009EAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("certificate_chain"))
}

type specListenerD474D638Attributes struct {
	ref terra.Reference
}

func (s specListenerD474D638Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s specListenerD474D638Attributes) InternalWithRef(ref terra.Reference) specListenerD474D638Attributes {
	return specListenerD474D638Attributes{ref: ref}
}

func (s specListenerD474D638Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s specListenerD474D638Attributes) SecretName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("secret_name"))
}

type specLoggingAttributes struct {
	ref terra.Reference
}

func (l specLoggingAttributes) InternalRef() (terra.Reference, error) {
	return l.ref, nil
}

func (l specLoggingAttributes) InternalWithRef(ref terra.Reference) specLoggingAttributes {
	return specLoggingAttributes{ref: ref}
}

func (l specLoggingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return l.ref.InternalTokens()
}

func (l specLoggingAttributes) AccessLog() terra.ListValue[specLoggingAccessLogAttributes] {
	return terra.ReferenceAsList[specLoggingAccessLogAttributes](l.ref.Append("access_log"))
}

type specLoggingAccessLogAttributes struct {
	ref terra.Reference
}

func (al specLoggingAccessLogAttributes) InternalRef() (terra.Reference, error) {
	return al.ref, nil
}

func (al specLoggingAccessLogAttributes) InternalWithRef(ref terra.Reference) specLoggingAccessLogAttributes {
	return specLoggingAccessLogAttributes{ref: ref}
}

func (al specLoggingAccessLogAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return al.ref.InternalTokens()
}

func (al specLoggingAccessLogAttributes) File() terra.ListValue[specLoggingAccessLogFileAttributes] {
	return terra.ReferenceAsList[specLoggingAccessLogFileAttributes](al.ref.Append("file"))
}

type specLoggingAccessLogFileAttributes struct {
	ref terra.Reference
}

func (f specLoggingAccessLogFileAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f specLoggingAccessLogFileAttributes) InternalWithRef(ref terra.Reference) specLoggingAccessLogFileAttributes {
	return specLoggingAccessLogFileAttributes{ref: ref}
}

func (f specLoggingAccessLogFileAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f specLoggingAccessLogFileAttributes) Path() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("path"))
}

func (f specLoggingAccessLogFileAttributes) Format() terra.ListValue[specLogging653Ee54DAttributes] {
	return terra.ReferenceAsList[specLogging653Ee54DAttributes](f.ref.Append("format"))
}

type specLogging653Ee54DAttributes struct {
	ref terra.Reference
}

func (f specLogging653Ee54DAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f specLogging653Ee54DAttributes) InternalWithRef(ref terra.Reference) specLogging653Ee54DAttributes {
	return specLogging653Ee54DAttributes{ref: ref}
}

func (f specLogging653Ee54DAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f specLogging653Ee54DAttributes) Text() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("text"))
}

func (f specLogging653Ee54DAttributes) Json() terra.ListValue[specLoggingB8C4611CAttributes] {
	return terra.ReferenceAsList[specLoggingB8C4611CAttributes](f.ref.Append("json"))
}

type specLoggingB8C4611CAttributes struct {
	ref terra.Reference
}

func (j specLoggingB8C4611CAttributes) InternalRef() (terra.Reference, error) {
	return j.ref, nil
}

func (j specLoggingB8C4611CAttributes) InternalWithRef(ref terra.Reference) specLoggingB8C4611CAttributes {
	return specLoggingB8C4611CAttributes{ref: ref}
}

func (j specLoggingB8C4611CAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return j.ref.InternalTokens()
}

func (j specLoggingB8C4611CAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(j.ref.Append("key"))
}

func (j specLoggingB8C4611CAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(j.ref.Append("value"))
}

type SpecState struct {
	BackendDefaults []SpecBackendDefaultsState `json:"backend_defaults"`
	Listener        []SpecListenerState        `json:"listener"`
	Logging         []SpecLoggingState         `json:"logging"`
}

type SpecBackendDefaultsState struct {
	ClientPolicy []SpecBackendDefaultsClientPolicyState `json:"client_policy"`
}

type SpecBackendDefaultsClientPolicyState struct {
	Tls []SpecBackendDefaultsClientPolicyTlsState `json:"tls"`
}

type SpecBackendDefaultsClientPolicyTlsState struct {
	Enforce     bool                               `json:"enforce"`
	Ports       []float64                          `json:"ports"`
	Certificate []SpecBackendDefaults65Cecba8State `json:"certificate"`
	Validation  []SpecBackendDefaults630078F7State `json:"validation"`
}

type SpecBackendDefaults65Cecba8State struct {
	File []SpecBackendDefaults9069F2D6State `json:"file"`
	Sds  []SpecBackendDefaultsB4A40596State `json:"sds"`
}

type SpecBackendDefaults9069F2D6State struct {
	CertificateChain string `json:"certificate_chain"`
	PrivateKey       string `json:"private_key"`
}

type SpecBackendDefaultsB4A40596State struct {
	SecretName string `json:"secret_name"`
}

type SpecBackendDefaults630078F7State struct {
	SubjectAlternativeNames []SpecBackendDefaults840A8FdaState `json:"subject_alternative_names"`
	Trust                   []SpecBackendDefaults738E8933State `json:"trust"`
}

type SpecBackendDefaults840A8FdaState struct {
	Match []SpecBackendDefaults05226299State `json:"match"`
}

type SpecBackendDefaults05226299State struct {
	Exact []string `json:"exact"`
}

type SpecBackendDefaults738E8933State struct {
	Acm  []SpecBackendDefaultsDb1Fecb0State `json:"acm"`
	File []SpecBackendDefaultsF332D3F5State `json:"file"`
	Sds  []SpecBackendDefaults79Ade431State `json:"sds"`
}

type SpecBackendDefaultsDb1Fecb0State struct {
	CertificateAuthorityArns []string `json:"certificate_authority_arns"`
}

type SpecBackendDefaultsF332D3F5State struct {
	CertificateChain string `json:"certificate_chain"`
}

type SpecBackendDefaults79Ade431State struct {
	SecretName string `json:"secret_name"`
}

type SpecListenerState struct {
	ConnectionPool []SpecListenerConnectionPoolState `json:"connection_pool"`
	HealthCheck    []SpecListenerHealthCheckState    `json:"health_check"`
	PortMapping    []SpecListenerPortMappingState    `json:"port_mapping"`
	Tls            []SpecListenerTlsState            `json:"tls"`
}

type SpecListenerConnectionPoolState struct {
	Grpc  []SpecListenerConnectionPoolGrpcState  `json:"grpc"`
	Http  []SpecListenerConnectionPoolHttpState  `json:"http"`
	Http2 []SpecListenerConnectionPoolHttp2State `json:"http2"`
}

type SpecListenerConnectionPoolGrpcState struct {
	MaxRequests float64 `json:"max_requests"`
}

type SpecListenerConnectionPoolHttpState struct {
	MaxConnections     float64 `json:"max_connections"`
	MaxPendingRequests float64 `json:"max_pending_requests"`
}

type SpecListenerConnectionPoolHttp2State struct {
	MaxRequests float64 `json:"max_requests"`
}

type SpecListenerHealthCheckState struct {
	HealthyThreshold   float64 `json:"healthy_threshold"`
	IntervalMillis     float64 `json:"interval_millis"`
	Path               string  `json:"path"`
	Port               float64 `json:"port"`
	Protocol           string  `json:"protocol"`
	TimeoutMillis      float64 `json:"timeout_millis"`
	UnhealthyThreshold float64 `json:"unhealthy_threshold"`
}

type SpecListenerPortMappingState struct {
	Port     float64 `json:"port"`
	Protocol string  `json:"protocol"`
}

type SpecListenerTlsState struct {
	Mode        string                            `json:"mode"`
	Certificate []SpecListenerTlsCertificateState `json:"certificate"`
	Validation  []SpecListenerTlsValidationState  `json:"validation"`
}

type SpecListenerTlsCertificateState struct {
	Acm  []SpecListenerD7B92001State `json:"acm"`
	File []SpecListener5Cc1671FState `json:"file"`
	Sds  []SpecListener5C5E34DfState `json:"sds"`
}

type SpecListenerD7B92001State struct {
	CertificateArn string `json:"certificate_arn"`
}

type SpecListener5Cc1671FState struct {
	CertificateChain string `json:"certificate_chain"`
	PrivateKey       string `json:"private_key"`
}

type SpecListener5C5E34DfState struct {
	SecretName string `json:"secret_name"`
}

type SpecListenerTlsValidationState struct {
	SubjectAlternativeNames []SpecListener785160C2State `json:"subject_alternative_names"`
	Trust                   []SpecListener668488A5State `json:"trust"`
}

type SpecListener785160C2State struct {
	Match []SpecListener16Acc0F6State `json:"match"`
}

type SpecListener16Acc0F6State struct {
	Exact []string `json:"exact"`
}

type SpecListener668488A5State struct {
	File []SpecListenerD017009EState `json:"file"`
	Sds  []SpecListenerD474D638State `json:"sds"`
}

type SpecListenerD017009EState struct {
	CertificateChain string `json:"certificate_chain"`
}

type SpecListenerD474D638State struct {
	SecretName string `json:"secret_name"`
}

type SpecLoggingState struct {
	AccessLog []SpecLoggingAccessLogState `json:"access_log"`
}

type SpecLoggingAccessLogState struct {
	File []SpecLoggingAccessLogFileState `json:"file"`
}

type SpecLoggingAccessLogFileState struct {
	Path   string                     `json:"path"`
	Format []SpecLogging653Ee54DState `json:"format"`
}

type SpecLogging653Ee54DState struct {
	Text string                     `json:"text"`
	Json []SpecLoggingB8C4611CState `json:"json"`
}

type SpecLoggingB8C4611CState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}
