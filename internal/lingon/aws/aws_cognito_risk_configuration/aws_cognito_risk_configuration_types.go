// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_risk_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccountTakeoverRiskConfiguration struct {
	// AccountTakeoverRiskConfigurationActions is required.
	Actions *AccountTakeoverRiskConfigurationActions `hcl:"actions,block" validate:"required"`
	// AccountTakeoverRiskConfigurationNotifyConfiguration is required.
	NotifyConfiguration *AccountTakeoverRiskConfigurationNotifyConfiguration `hcl:"notify_configuration,block" validate:"required"`
}

type AccountTakeoverRiskConfigurationActions struct {
	// AccountTakeoverRiskConfigurationActionsHighAction is optional.
	HighAction *AccountTakeoverRiskConfigurationActionsHighAction `hcl:"high_action,block"`
	// AccountTakeoverRiskConfigurationActionsLowAction is optional.
	LowAction *AccountTakeoverRiskConfigurationActionsLowAction `hcl:"low_action,block"`
	// AccountTakeoverRiskConfigurationActionsMediumAction is optional.
	MediumAction *AccountTakeoverRiskConfigurationActionsMediumAction `hcl:"medium_action,block"`
}

type AccountTakeoverRiskConfigurationActionsHighAction struct {
	// EventAction is required.
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
	// Notify is required.
	Notify terra.BoolValue `hcl:"notify,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationActionsLowAction struct {
	// EventAction is required.
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
	// Notify is required.
	Notify terra.BoolValue `hcl:"notify,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationActionsMediumAction struct {
	// EventAction is required.
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
	// Notify is required.
	Notify terra.BoolValue `hcl:"notify,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationNotifyConfiguration struct {
	// From is optional.
	From terra.StringValue `hcl:"from,attr"`
	// ReplyTo is optional.
	ReplyTo terra.StringValue `hcl:"reply_to,attr"`
	// SourceArn is required.
	SourceArn terra.StringValue `hcl:"source_arn,attr" validate:"required"`
	// AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail is optional.
	BlockEmail *AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail `hcl:"block_email,block"`
	// AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail is optional.
	MfaEmail *AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail `hcl:"mfa_email,block"`
	// AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail is optional.
	NoActionEmail *AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail `hcl:"no_action_email,block"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail struct {
	// HtmlBody is required.
	HtmlBody terra.StringValue `hcl:"html_body,attr" validate:"required"`
	// Subject is required.
	Subject terra.StringValue `hcl:"subject,attr" validate:"required"`
	// TextBody is required.
	TextBody terra.StringValue `hcl:"text_body,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail struct {
	// HtmlBody is required.
	HtmlBody terra.StringValue `hcl:"html_body,attr" validate:"required"`
	// Subject is required.
	Subject terra.StringValue `hcl:"subject,attr" validate:"required"`
	// TextBody is required.
	TextBody terra.StringValue `hcl:"text_body,attr" validate:"required"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail struct {
	// HtmlBody is required.
	HtmlBody terra.StringValue `hcl:"html_body,attr" validate:"required"`
	// Subject is required.
	Subject terra.StringValue `hcl:"subject,attr" validate:"required"`
	// TextBody is required.
	TextBody terra.StringValue `hcl:"text_body,attr" validate:"required"`
}

type CompromisedCredentialsRiskConfiguration struct {
	// EventFilter is optional.
	EventFilter terra.SetValue[terra.StringValue] `hcl:"event_filter,attr"`
	// CompromisedCredentialsRiskConfigurationActions is required.
	Actions *CompromisedCredentialsRiskConfigurationActions `hcl:"actions,block" validate:"required"`
}

type CompromisedCredentialsRiskConfigurationActions struct {
	// EventAction is required.
	EventAction terra.StringValue `hcl:"event_action,attr" validate:"required"`
}

type RiskExceptionConfiguration struct {
	// BlockedIpRangeList is optional.
	BlockedIpRangeList terra.SetValue[terra.StringValue] `hcl:"blocked_ip_range_list,attr"`
	// SkippedIpRangeList is optional.
	SkippedIpRangeList terra.SetValue[terra.StringValue] `hcl:"skipped_ip_range_list,attr"`
}

type accountTakeoverRiskConfigurationAttributes struct {
	ref terra.Reference
}

func (atrc accountTakeoverRiskConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return atrc.ref, nil
}

func (atrc accountTakeoverRiskConfigurationAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationAttributes {
	return accountTakeoverRiskConfigurationAttributes{ref: ref}
}

func (atrc accountTakeoverRiskConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atrc.ref.InternalTokens()
}

func (atrc accountTakeoverRiskConfigurationAttributes) Actions() terra.ListValue[accountTakeoverRiskConfigurationActionsAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationActionsAttributes](atrc.ref.Append("actions"))
}

func (atrc accountTakeoverRiskConfigurationAttributes) NotifyConfiguration() terra.ListValue[accountTakeoverRiskConfigurationNotifyConfigurationAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationNotifyConfigurationAttributes](atrc.ref.Append("notify_configuration"))
}

type accountTakeoverRiskConfigurationActionsAttributes struct {
	ref terra.Reference
}

func (a accountTakeoverRiskConfigurationActionsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a accountTakeoverRiskConfigurationActionsAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationActionsAttributes {
	return accountTakeoverRiskConfigurationActionsAttributes{ref: ref}
}

func (a accountTakeoverRiskConfigurationActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a accountTakeoverRiskConfigurationActionsAttributes) HighAction() terra.ListValue[accountTakeoverRiskConfigurationActionsHighActionAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationActionsHighActionAttributes](a.ref.Append("high_action"))
}

func (a accountTakeoverRiskConfigurationActionsAttributes) LowAction() terra.ListValue[accountTakeoverRiskConfigurationActionsLowActionAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationActionsLowActionAttributes](a.ref.Append("low_action"))
}

func (a accountTakeoverRiskConfigurationActionsAttributes) MediumAction() terra.ListValue[accountTakeoverRiskConfigurationActionsMediumActionAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationActionsMediumActionAttributes](a.ref.Append("medium_action"))
}

type accountTakeoverRiskConfigurationActionsHighActionAttributes struct {
	ref terra.Reference
}

func (ha accountTakeoverRiskConfigurationActionsHighActionAttributes) InternalRef() (terra.Reference, error) {
	return ha.ref, nil
}

func (ha accountTakeoverRiskConfigurationActionsHighActionAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationActionsHighActionAttributes {
	return accountTakeoverRiskConfigurationActionsHighActionAttributes{ref: ref}
}

func (ha accountTakeoverRiskConfigurationActionsHighActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ha.ref.InternalTokens()
}

func (ha accountTakeoverRiskConfigurationActionsHighActionAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(ha.ref.Append("event_action"))
}

func (ha accountTakeoverRiskConfigurationActionsHighActionAttributes) Notify() terra.BoolValue {
	return terra.ReferenceAsBool(ha.ref.Append("notify"))
}

type accountTakeoverRiskConfigurationActionsLowActionAttributes struct {
	ref terra.Reference
}

func (la accountTakeoverRiskConfigurationActionsLowActionAttributes) InternalRef() (terra.Reference, error) {
	return la.ref, nil
}

func (la accountTakeoverRiskConfigurationActionsLowActionAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationActionsLowActionAttributes {
	return accountTakeoverRiskConfigurationActionsLowActionAttributes{ref: ref}
}

func (la accountTakeoverRiskConfigurationActionsLowActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return la.ref.InternalTokens()
}

func (la accountTakeoverRiskConfigurationActionsLowActionAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(la.ref.Append("event_action"))
}

func (la accountTakeoverRiskConfigurationActionsLowActionAttributes) Notify() terra.BoolValue {
	return terra.ReferenceAsBool(la.ref.Append("notify"))
}

type accountTakeoverRiskConfigurationActionsMediumActionAttributes struct {
	ref terra.Reference
}

func (ma accountTakeoverRiskConfigurationActionsMediumActionAttributes) InternalRef() (terra.Reference, error) {
	return ma.ref, nil
}

func (ma accountTakeoverRiskConfigurationActionsMediumActionAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationActionsMediumActionAttributes {
	return accountTakeoverRiskConfigurationActionsMediumActionAttributes{ref: ref}
}

func (ma accountTakeoverRiskConfigurationActionsMediumActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ma.ref.InternalTokens()
}

func (ma accountTakeoverRiskConfigurationActionsMediumActionAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(ma.ref.Append("event_action"))
}

func (ma accountTakeoverRiskConfigurationActionsMediumActionAttributes) Notify() terra.BoolValue {
	return terra.ReferenceAsBool(ma.ref.Append("notify"))
}

type accountTakeoverRiskConfigurationNotifyConfigurationAttributes struct {
	ref terra.Reference
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return nc.ref, nil
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationNotifyConfigurationAttributes {
	return accountTakeoverRiskConfigurationNotifyConfigurationAttributes{ref: ref}
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nc.ref.InternalTokens()
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) From() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("from"))
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) ReplyTo() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("reply_to"))
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) SourceArn() terra.StringValue {
	return terra.ReferenceAsString(nc.ref.Append("source_arn"))
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) BlockEmail() terra.ListValue[accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes](nc.ref.Append("block_email"))
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) MfaEmail() terra.ListValue[accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes](nc.ref.Append("mfa_email"))
}

func (nc accountTakeoverRiskConfigurationNotifyConfigurationAttributes) NoActionEmail() terra.ListValue[accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes] {
	return terra.ReferenceAsList[accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes](nc.ref.Append("no_action_email"))
}

type accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes struct {
	ref terra.Reference
}

func (be accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) InternalRef() (terra.Reference, error) {
	return be.ref, nil
}

func (be accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes {
	return accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes{ref: ref}
}

func (be accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return be.ref.InternalTokens()
}

func (be accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) HtmlBody() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("html_body"))
}

func (be accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("subject"))
}

func (be accountTakeoverRiskConfigurationNotifyConfigurationBlockEmailAttributes) TextBody() terra.StringValue {
	return terra.ReferenceAsString(be.ref.Append("text_body"))
}

type accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes struct {
	ref terra.Reference
}

func (me accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) InternalRef() (terra.Reference, error) {
	return me.ref, nil
}

func (me accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes {
	return accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes{ref: ref}
}

func (me accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return me.ref.InternalTokens()
}

func (me accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) HtmlBody() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("html_body"))
}

func (me accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("subject"))
}

func (me accountTakeoverRiskConfigurationNotifyConfigurationMfaEmailAttributes) TextBody() terra.StringValue {
	return terra.ReferenceAsString(me.ref.Append("text_body"))
}

type accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes struct {
	ref terra.Reference
}

func (nae accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) InternalRef() (terra.Reference, error) {
	return nae.ref, nil
}

func (nae accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) InternalWithRef(ref terra.Reference) accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes {
	return accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes{ref: ref}
}

func (nae accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nae.ref.InternalTokens()
}

func (nae accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) HtmlBody() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("html_body"))
}

func (nae accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) Subject() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("subject"))
}

func (nae accountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailAttributes) TextBody() terra.StringValue {
	return terra.ReferenceAsString(nae.ref.Append("text_body"))
}

type compromisedCredentialsRiskConfigurationAttributes struct {
	ref terra.Reference
}

func (ccrc compromisedCredentialsRiskConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ccrc.ref, nil
}

func (ccrc compromisedCredentialsRiskConfigurationAttributes) InternalWithRef(ref terra.Reference) compromisedCredentialsRiskConfigurationAttributes {
	return compromisedCredentialsRiskConfigurationAttributes{ref: ref}
}

func (ccrc compromisedCredentialsRiskConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ccrc.ref.InternalTokens()
}

func (ccrc compromisedCredentialsRiskConfigurationAttributes) EventFilter() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ccrc.ref.Append("event_filter"))
}

func (ccrc compromisedCredentialsRiskConfigurationAttributes) Actions() terra.ListValue[compromisedCredentialsRiskConfigurationActionsAttributes] {
	return terra.ReferenceAsList[compromisedCredentialsRiskConfigurationActionsAttributes](ccrc.ref.Append("actions"))
}

type compromisedCredentialsRiskConfigurationActionsAttributes struct {
	ref terra.Reference
}

func (a compromisedCredentialsRiskConfigurationActionsAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a compromisedCredentialsRiskConfigurationActionsAttributes) InternalWithRef(ref terra.Reference) compromisedCredentialsRiskConfigurationActionsAttributes {
	return compromisedCredentialsRiskConfigurationActionsAttributes{ref: ref}
}

func (a compromisedCredentialsRiskConfigurationActionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a compromisedCredentialsRiskConfigurationActionsAttributes) EventAction() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("event_action"))
}

type riskExceptionConfigurationAttributes struct {
	ref terra.Reference
}

func (rec riskExceptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rec.ref, nil
}

func (rec riskExceptionConfigurationAttributes) InternalWithRef(ref terra.Reference) riskExceptionConfigurationAttributes {
	return riskExceptionConfigurationAttributes{ref: ref}
}

func (rec riskExceptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rec.ref.InternalTokens()
}

func (rec riskExceptionConfigurationAttributes) BlockedIpRangeList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rec.ref.Append("blocked_ip_range_list"))
}

func (rec riskExceptionConfigurationAttributes) SkippedIpRangeList() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](rec.ref.Append("skipped_ip_range_list"))
}

type AccountTakeoverRiskConfigurationState struct {
	Actions             []AccountTakeoverRiskConfigurationActionsState             `json:"actions"`
	NotifyConfiguration []AccountTakeoverRiskConfigurationNotifyConfigurationState `json:"notify_configuration"`
}

type AccountTakeoverRiskConfigurationActionsState struct {
	HighAction   []AccountTakeoverRiskConfigurationActionsHighActionState   `json:"high_action"`
	LowAction    []AccountTakeoverRiskConfigurationActionsLowActionState    `json:"low_action"`
	MediumAction []AccountTakeoverRiskConfigurationActionsMediumActionState `json:"medium_action"`
}

type AccountTakeoverRiskConfigurationActionsHighActionState struct {
	EventAction string `json:"event_action"`
	Notify      bool   `json:"notify"`
}

type AccountTakeoverRiskConfigurationActionsLowActionState struct {
	EventAction string `json:"event_action"`
	Notify      bool   `json:"notify"`
}

type AccountTakeoverRiskConfigurationActionsMediumActionState struct {
	EventAction string `json:"event_action"`
	Notify      bool   `json:"notify"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationState struct {
	From          string                                                                  `json:"from"`
	ReplyTo       string                                                                  `json:"reply_to"`
	SourceArn     string                                                                  `json:"source_arn"`
	BlockEmail    []AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailState    `json:"block_email"`
	MfaEmail      []AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailState      `json:"mfa_email"`
	NoActionEmail []AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailState `json:"no_action_email"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailState struct {
	HtmlBody string `json:"html_body"`
	Subject  string `json:"subject"`
	TextBody string `json:"text_body"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailState struct {
	HtmlBody string `json:"html_body"`
	Subject  string `json:"subject"`
	TextBody string `json:"text_body"`
}

type AccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailState struct {
	HtmlBody string `json:"html_body"`
	Subject  string `json:"subject"`
	TextBody string `json:"text_body"`
}

type CompromisedCredentialsRiskConfigurationState struct {
	EventFilter []string                                              `json:"event_filter"`
	Actions     []CompromisedCredentialsRiskConfigurationActionsState `json:"actions"`
}

type CompromisedCredentialsRiskConfigurationActionsState struct {
	EventAction string `json:"event_action"`
}

type RiskExceptionConfigurationState struct {
	BlockedIpRangeList []string `json:"blocked_ip_range_list"`
	SkippedIpRangeList []string `json:"skipped_ip_range_list"`
}
