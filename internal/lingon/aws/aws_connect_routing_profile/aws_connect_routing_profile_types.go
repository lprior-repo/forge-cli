// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_connect_routing_profile

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MediaConcurrencies struct {
	// Channel is required.
	Channel terra.StringValue `hcl:"channel,attr" validate:"required"`
	// Concurrency is required.
	Concurrency terra.NumberValue `hcl:"concurrency,attr" validate:"required"`
}

type QueueConfigs struct {
	// Channel is required.
	Channel terra.StringValue `hcl:"channel,attr" validate:"required"`
	// Delay is required.
	Delay terra.NumberValue `hcl:"delay,attr" validate:"required"`
	// Priority is required.
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
	// QueueId is required.
	QueueId terra.StringValue `hcl:"queue_id,attr" validate:"required"`
}

type mediaConcurrenciesAttributes struct {
	ref terra.Reference
}

func (mc mediaConcurrenciesAttributes) InternalRef() (terra.Reference, error) {
	return mc.ref, nil
}

func (mc mediaConcurrenciesAttributes) InternalWithRef(ref terra.Reference) mediaConcurrenciesAttributes {
	return mediaConcurrenciesAttributes{ref: ref}
}

func (mc mediaConcurrenciesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mc.ref.InternalTokens()
}

func (mc mediaConcurrenciesAttributes) Channel() terra.StringValue {
	return terra.ReferenceAsString(mc.ref.Append("channel"))
}

func (mc mediaConcurrenciesAttributes) Concurrency() terra.NumberValue {
	return terra.ReferenceAsNumber(mc.ref.Append("concurrency"))
}

type queueConfigsAttributes struct {
	ref terra.Reference
}

func (qc queueConfigsAttributes) InternalRef() (terra.Reference, error) {
	return qc.ref, nil
}

func (qc queueConfigsAttributes) InternalWithRef(ref terra.Reference) queueConfigsAttributes {
	return queueConfigsAttributes{ref: ref}
}

func (qc queueConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return qc.ref.InternalTokens()
}

func (qc queueConfigsAttributes) Channel() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("channel"))
}

func (qc queueConfigsAttributes) Delay() terra.NumberValue {
	return terra.ReferenceAsNumber(qc.ref.Append("delay"))
}

func (qc queueConfigsAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(qc.ref.Append("priority"))
}

func (qc queueConfigsAttributes) QueueArn() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("queue_arn"))
}

func (qc queueConfigsAttributes) QueueId() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("queue_id"))
}

func (qc queueConfigsAttributes) QueueName() terra.StringValue {
	return terra.ReferenceAsString(qc.ref.Append("queue_name"))
}

type MediaConcurrenciesState struct {
	Channel     string  `json:"channel"`
	Concurrency float64 `json:"concurrency"`
}

type QueueConfigsState struct {
	Channel   string  `json:"channel"`
	Delay     float64 `json:"delay"`
	Priority  float64 `json:"priority"`
	QueueArn  string  `json:"queue_arn"`
	QueueId   string  `json:"queue_id"`
	QueueName string  `json:"queue_name"`
}
