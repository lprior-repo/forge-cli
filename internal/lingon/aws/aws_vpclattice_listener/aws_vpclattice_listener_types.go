// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpclattice_listener

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DefaultAction struct {
	// DefaultActionFixedResponse is optional.
	FixedResponse *DefaultActionFixedResponse `hcl:"fixed_response,block"`
	// DefaultActionForward is min=0.
	Forward []DefaultActionForward `hcl:"forward,block" validate:"min=0"`
}

type DefaultActionFixedResponse struct {
	// StatusCode is required.
	StatusCode terra.NumberValue `hcl:"status_code,attr" validate:"required"`
}

type DefaultActionForward struct {
	// DefaultActionForwardTargetGroups is min=0.
	TargetGroups []DefaultActionForwardTargetGroups `hcl:"target_groups,block" validate:"min=0"`
}

type DefaultActionForwardTargetGroups struct {
	// TargetGroupIdentifier is optional.
	TargetGroupIdentifier terra.StringValue `hcl:"target_group_identifier,attr"`
	// Weight is optional.
	Weight terra.NumberValue `hcl:"weight,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type defaultActionAttributes struct {
	ref terra.Reference
}

func (da defaultActionAttributes) InternalRef() (terra.Reference, error) {
	return da.ref, nil
}

func (da defaultActionAttributes) InternalWithRef(ref terra.Reference) defaultActionAttributes {
	return defaultActionAttributes{ref: ref}
}

func (da defaultActionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return da.ref.InternalTokens()
}

func (da defaultActionAttributes) FixedResponse() terra.ListValue[defaultActionFixedResponseAttributes] {
	return terra.ReferenceAsList[defaultActionFixedResponseAttributes](da.ref.Append("fixed_response"))
}

func (da defaultActionAttributes) Forward() terra.ListValue[defaultActionForwardAttributes] {
	return terra.ReferenceAsList[defaultActionForwardAttributes](da.ref.Append("forward"))
}

type defaultActionFixedResponseAttributes struct {
	ref terra.Reference
}

func (fr defaultActionFixedResponseAttributes) InternalRef() (terra.Reference, error) {
	return fr.ref, nil
}

func (fr defaultActionFixedResponseAttributes) InternalWithRef(ref terra.Reference) defaultActionFixedResponseAttributes {
	return defaultActionFixedResponseAttributes{ref: ref}
}

func (fr defaultActionFixedResponseAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fr.ref.InternalTokens()
}

func (fr defaultActionFixedResponseAttributes) StatusCode() terra.NumberValue {
	return terra.ReferenceAsNumber(fr.ref.Append("status_code"))
}

type defaultActionForwardAttributes struct {
	ref terra.Reference
}

func (f defaultActionForwardAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f defaultActionForwardAttributes) InternalWithRef(ref terra.Reference) defaultActionForwardAttributes {
	return defaultActionForwardAttributes{ref: ref}
}

func (f defaultActionForwardAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f defaultActionForwardAttributes) TargetGroups() terra.ListValue[defaultActionForwardTargetGroupsAttributes] {
	return terra.ReferenceAsList[defaultActionForwardTargetGroupsAttributes](f.ref.Append("target_groups"))
}

type defaultActionForwardTargetGroupsAttributes struct {
	ref terra.Reference
}

func (tg defaultActionForwardTargetGroupsAttributes) InternalRef() (terra.Reference, error) {
	return tg.ref, nil
}

func (tg defaultActionForwardTargetGroupsAttributes) InternalWithRef(ref terra.Reference) defaultActionForwardTargetGroupsAttributes {
	return defaultActionForwardTargetGroupsAttributes{ref: ref}
}

func (tg defaultActionForwardTargetGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tg.ref.InternalTokens()
}

func (tg defaultActionForwardTargetGroupsAttributes) TargetGroupIdentifier() terra.StringValue {
	return terra.ReferenceAsString(tg.ref.Append("target_group_identifier"))
}

func (tg defaultActionForwardTargetGroupsAttributes) Weight() terra.NumberValue {
	return terra.ReferenceAsNumber(tg.ref.Append("weight"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DefaultActionState struct {
	FixedResponse []DefaultActionFixedResponseState `json:"fixed_response"`
	Forward       []DefaultActionForwardState       `json:"forward"`
}

type DefaultActionFixedResponseState struct {
	StatusCode float64 `json:"status_code"`
}

type DefaultActionForwardState struct {
	TargetGroups []DefaultActionForwardTargetGroupsState `json:"target_groups"`
}

type DefaultActionForwardTargetGroupsState struct {
	TargetGroupIdentifier string  `json:"target_group_identifier"`
	Weight                float64 `json:"weight"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
