// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_waf_sql_injection_match_set

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SqlInjectionMatchTuples struct {
	// TextTransformation is required.
	TextTransformation terra.StringValue `hcl:"text_transformation,attr" validate:"required"`
	// SqlInjectionMatchTuplesFieldToMatch is required.
	FieldToMatch *SqlInjectionMatchTuplesFieldToMatch `hcl:"field_to_match,block" validate:"required"`
}

type SqlInjectionMatchTuplesFieldToMatch struct {
	// Data is optional.
	Data terra.StringValue `hcl:"data,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type sqlInjectionMatchTuplesAttributes struct {
	ref terra.Reference
}

func (simt sqlInjectionMatchTuplesAttributes) InternalRef() (terra.Reference, error) {
	return simt.ref, nil
}

func (simt sqlInjectionMatchTuplesAttributes) InternalWithRef(ref terra.Reference) sqlInjectionMatchTuplesAttributes {
	return sqlInjectionMatchTuplesAttributes{ref: ref}
}

func (simt sqlInjectionMatchTuplesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return simt.ref.InternalTokens()
}

func (simt sqlInjectionMatchTuplesAttributes) TextTransformation() terra.StringValue {
	return terra.ReferenceAsString(simt.ref.Append("text_transformation"))
}

func (simt sqlInjectionMatchTuplesAttributes) FieldToMatch() terra.ListValue[sqlInjectionMatchTuplesFieldToMatchAttributes] {
	return terra.ReferenceAsList[sqlInjectionMatchTuplesFieldToMatchAttributes](simt.ref.Append("field_to_match"))
}

type sqlInjectionMatchTuplesFieldToMatchAttributes struct {
	ref terra.Reference
}

func (ftm sqlInjectionMatchTuplesFieldToMatchAttributes) InternalRef() (terra.Reference, error) {
	return ftm.ref, nil
}

func (ftm sqlInjectionMatchTuplesFieldToMatchAttributes) InternalWithRef(ref terra.Reference) sqlInjectionMatchTuplesFieldToMatchAttributes {
	return sqlInjectionMatchTuplesFieldToMatchAttributes{ref: ref}
}

func (ftm sqlInjectionMatchTuplesFieldToMatchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ftm.ref.InternalTokens()
}

func (ftm sqlInjectionMatchTuplesFieldToMatchAttributes) Data() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("data"))
}

func (ftm sqlInjectionMatchTuplesFieldToMatchAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ftm.ref.Append("type"))
}

type SqlInjectionMatchTuplesState struct {
	TextTransformation string                                     `json:"text_transformation"`
	FieldToMatch       []SqlInjectionMatchTuplesFieldToMatchState `json:"field_to_match"`
}

type SqlInjectionMatchTuplesFieldToMatchState struct {
	Data string `json:"data"`
	Type string `json:"type"`
}
