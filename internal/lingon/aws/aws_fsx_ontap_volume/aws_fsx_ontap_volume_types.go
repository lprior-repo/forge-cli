// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fsx_ontap_volume

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type TieringPolicy struct {
	// CoolingPeriod is optional.
	CoolingPeriod terra.NumberValue `hcl:"cooling_period,attr"`
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type tieringPolicyAttributes struct {
	ref terra.Reference
}

func (tp tieringPolicyAttributes) InternalRef() (terra.Reference, error) {
	return tp.ref, nil
}

func (tp tieringPolicyAttributes) InternalWithRef(ref terra.Reference) tieringPolicyAttributes {
	return tieringPolicyAttributes{ref: ref}
}

func (tp tieringPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tp.ref.InternalTokens()
}

func (tp tieringPolicyAttributes) CoolingPeriod() terra.NumberValue {
	return terra.ReferenceAsNumber(tp.ref.Append("cooling_period"))
}

func (tp tieringPolicyAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("name"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TieringPolicyState struct {
	CoolingPeriod float64 `json:"cooling_period"`
	Name          string  `json:"name"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
