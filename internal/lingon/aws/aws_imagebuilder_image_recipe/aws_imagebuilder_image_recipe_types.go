// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_image_recipe

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type BlockDeviceMapping struct {
	// DeviceName is optional.
	DeviceName terra.StringValue `hcl:"device_name,attr"`
	// NoDevice is optional.
	NoDevice terra.BoolValue `hcl:"no_device,attr"`
	// VirtualName is optional.
	VirtualName terra.StringValue `hcl:"virtual_name,attr"`
	// BlockDeviceMappingEbs is optional.
	Ebs *BlockDeviceMappingEbs `hcl:"ebs,block"`
}

type BlockDeviceMappingEbs struct {
	// DeleteOnTermination is optional.
	DeleteOnTermination terra.StringValue `hcl:"delete_on_termination,attr"`
	// Encrypted is optional.
	Encrypted terra.StringValue `hcl:"encrypted,attr"`
	// Iops is optional.
	Iops terra.NumberValue `hcl:"iops,attr"`
	// KmsKeyId is optional.
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// SnapshotId is optional.
	SnapshotId terra.StringValue `hcl:"snapshot_id,attr"`
	// Throughput is optional.
	Throughput terra.NumberValue `hcl:"throughput,attr"`
	// VolumeSize is optional.
	VolumeSize terra.NumberValue `hcl:"volume_size,attr"`
	// VolumeType is optional.
	VolumeType terra.StringValue `hcl:"volume_type,attr"`
}

type Component struct {
	// ComponentArn is required.
	ComponentArn terra.StringValue `hcl:"component_arn,attr" validate:"required"`
	// ComponentParameter is min=0.
	Parameter []ComponentParameter `hcl:"parameter,block" validate:"min=0"`
}

type ComponentParameter struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type SystemsManagerAgent struct {
	// UninstallAfterBuild is required.
	UninstallAfterBuild terra.BoolValue `hcl:"uninstall_after_build,attr" validate:"required"`
}

type blockDeviceMappingAttributes struct {
	ref terra.Reference
}

func (bdm blockDeviceMappingAttributes) InternalRef() (terra.Reference, error) {
	return bdm.ref, nil
}

func (bdm blockDeviceMappingAttributes) InternalWithRef(ref terra.Reference) blockDeviceMappingAttributes {
	return blockDeviceMappingAttributes{ref: ref}
}

func (bdm blockDeviceMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bdm.ref.InternalTokens()
}

func (bdm blockDeviceMappingAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("device_name"))
}

func (bdm blockDeviceMappingAttributes) NoDevice() terra.BoolValue {
	return terra.ReferenceAsBool(bdm.ref.Append("no_device"))
}

func (bdm blockDeviceMappingAttributes) VirtualName() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("virtual_name"))
}

func (bdm blockDeviceMappingAttributes) Ebs() terra.ListValue[blockDeviceMappingEbsAttributes] {
	return terra.ReferenceAsList[blockDeviceMappingEbsAttributes](bdm.ref.Append("ebs"))
}

type blockDeviceMappingEbsAttributes struct {
	ref terra.Reference
}

func (e blockDeviceMappingEbsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e blockDeviceMappingEbsAttributes) InternalWithRef(ref terra.Reference) blockDeviceMappingEbsAttributes {
	return blockDeviceMappingEbsAttributes{ref: ref}
}

func (e blockDeviceMappingEbsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e blockDeviceMappingEbsAttributes) DeleteOnTermination() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("delete_on_termination"))
}

func (e blockDeviceMappingEbsAttributes) Encrypted() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("encrypted"))
}

func (e blockDeviceMappingEbsAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("iops"))
}

func (e blockDeviceMappingEbsAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kms_key_id"))
}

func (e blockDeviceMappingEbsAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("snapshot_id"))
}

func (e blockDeviceMappingEbsAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("throughput"))
}

func (e blockDeviceMappingEbsAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("volume_size"))
}

func (e blockDeviceMappingEbsAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("volume_type"))
}

type componentAttributes struct {
	ref terra.Reference
}

func (c componentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c componentAttributes) InternalWithRef(ref terra.Reference) componentAttributes {
	return componentAttributes{ref: ref}
}

func (c componentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c componentAttributes) ComponentArn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("component_arn"))
}

func (c componentAttributes) Parameter() terra.SetValue[componentParameterAttributes] {
	return terra.ReferenceAsSet[componentParameterAttributes](c.ref.Append("parameter"))
}

type componentParameterAttributes struct {
	ref terra.Reference
}

func (p componentParameterAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p componentParameterAttributes) InternalWithRef(ref terra.Reference) componentParameterAttributes {
	return componentParameterAttributes{ref: ref}
}

func (p componentParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p componentParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p componentParameterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("value"))
}

type systemsManagerAgentAttributes struct {
	ref terra.Reference
}

func (sma systemsManagerAgentAttributes) InternalRef() (terra.Reference, error) {
	return sma.ref, nil
}

func (sma systemsManagerAgentAttributes) InternalWithRef(ref terra.Reference) systemsManagerAgentAttributes {
	return systemsManagerAgentAttributes{ref: ref}
}

func (sma systemsManagerAgentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sma.ref.InternalTokens()
}

func (sma systemsManagerAgentAttributes) UninstallAfterBuild() terra.BoolValue {
	return terra.ReferenceAsBool(sma.ref.Append("uninstall_after_build"))
}

type BlockDeviceMappingState struct {
	DeviceName  string                       `json:"device_name"`
	NoDevice    bool                         `json:"no_device"`
	VirtualName string                       `json:"virtual_name"`
	Ebs         []BlockDeviceMappingEbsState `json:"ebs"`
}

type BlockDeviceMappingEbsState struct {
	DeleteOnTermination string  `json:"delete_on_termination"`
	Encrypted           string  `json:"encrypted"`
	Iops                float64 `json:"iops"`
	KmsKeyId            string  `json:"kms_key_id"`
	SnapshotId          string  `json:"snapshot_id"`
	Throughput          float64 `json:"throughput"`
	VolumeSize          float64 `json:"volume_size"`
	VolumeType          string  `json:"volume_type"`
}

type ComponentState struct {
	ComponentArn string                    `json:"component_arn"`
	Parameter    []ComponentParameterState `json:"parameter"`
}

type ComponentParameterState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type SystemsManagerAgentState struct {
	UninstallAfterBuild bool `json:"uninstall_after_build"`
}
