// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ecr_repository

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type EncryptionConfiguration struct {
	// EncryptionType is optional.
	EncryptionType terra.StringValue `hcl:"encryption_type,attr"`
	// KmsKey is optional.
	KmsKey terra.StringValue `hcl:"kms_key,attr"`
}

type ImageScanningConfiguration struct {
	// ScanOnPush is required.
	ScanOnPush terra.BoolValue `hcl:"scan_on_push,attr" validate:"required"`
}

type Timeouts struct {
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
}

type encryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec encryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec encryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) encryptionConfigurationAttributes {
	return encryptionConfigurationAttributes{ref: ref}
}

func (ec encryptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec encryptionConfigurationAttributes) EncryptionType() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("encryption_type"))
}

func (ec encryptionConfigurationAttributes) KmsKey() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("kms_key"))
}

type imageScanningConfigurationAttributes struct {
	ref terra.Reference
}

func (isc imageScanningConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return isc.ref, nil
}

func (isc imageScanningConfigurationAttributes) InternalWithRef(ref terra.Reference) imageScanningConfigurationAttributes {
	return imageScanningConfigurationAttributes{ref: ref}
}

func (isc imageScanningConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return isc.ref.InternalTokens()
}

func (isc imageScanningConfigurationAttributes) ScanOnPush() terra.BoolValue {
	return terra.ReferenceAsBool(isc.ref.Append("scan_on_push"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

type EncryptionConfigurationState struct {
	EncryptionType string `json:"encryption_type"`
	KmsKey         string `json:"kms_key"`
}

type ImageScanningConfigurationState struct {
	ScanOnPush bool `json:"scan_on_push"`
}

type TimeoutsState struct {
	Delete string `json:"delete"`
}
