// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_athena_database

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AclConfiguration struct {
	// S3AclOption is required.
	S3AclOption terra.StringValue `hcl:"s3_acl_option,attr" validate:"required"`
}

type EncryptionConfiguration struct {
	// EncryptionOption is required.
	EncryptionOption terra.StringValue `hcl:"encryption_option,attr" validate:"required"`
	// KmsKey is optional.
	KmsKey terra.StringValue `hcl:"kms_key,attr"`
}

type aclConfigurationAttributes struct {
	ref terra.Reference
}

func (ac aclConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac aclConfigurationAttributes) InternalWithRef(ref terra.Reference) aclConfigurationAttributes {
	return aclConfigurationAttributes{ref: ref}
}

func (ac aclConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac aclConfigurationAttributes) S3AclOption() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("s3_acl_option"))
}

type encryptionConfigurationAttributes struct {
	ref terra.Reference
}

func (ec encryptionConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec encryptionConfigurationAttributes) InternalWithRef(ref terra.Reference) encryptionConfigurationAttributes {
	return encryptionConfigurationAttributes{ref: ref}
}

func (ec encryptionConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec encryptionConfigurationAttributes) EncryptionOption() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("encryption_option"))
}

func (ec encryptionConfigurationAttributes) KmsKey() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("kms_key"))
}

type AclConfigurationState struct {
	S3AclOption string `json:"s3_acl_option"`
}

type EncryptionConfigurationState struct {
	EncryptionOption string `json:"encryption_option"`
	KmsKey           string `json:"kms_key"`
}
