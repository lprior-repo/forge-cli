// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_user_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccountRecoverySetting struct {
	// AccountRecoverySettingRecoveryMechanism is min=0,max=2.
	RecoveryMechanism []AccountRecoverySettingRecoveryMechanism `hcl:"recovery_mechanism,block" validate:"min=0,max=2"`
}

type AccountRecoverySettingRecoveryMechanism struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Priority is required.
	Priority terra.NumberValue `hcl:"priority,attr" validate:"required"`
}

type AdminCreateUserConfig struct {
	// AllowAdminCreateUserOnly is optional.
	AllowAdminCreateUserOnly terra.BoolValue `hcl:"allow_admin_create_user_only,attr"`
	// AdminCreateUserConfigInviteMessageTemplate is optional.
	InviteMessageTemplate *AdminCreateUserConfigInviteMessageTemplate `hcl:"invite_message_template,block"`
}

type AdminCreateUserConfigInviteMessageTemplate struct {
	// EmailMessage is optional.
	EmailMessage terra.StringValue `hcl:"email_message,attr"`
	// EmailSubject is optional.
	EmailSubject terra.StringValue `hcl:"email_subject,attr"`
	// SmsMessage is optional.
	SmsMessage terra.StringValue `hcl:"sms_message,attr"`
}

type DeviceConfiguration struct {
	// ChallengeRequiredOnNewDevice is optional.
	ChallengeRequiredOnNewDevice terra.BoolValue `hcl:"challenge_required_on_new_device,attr"`
	// DeviceOnlyRememberedOnUserPrompt is optional.
	DeviceOnlyRememberedOnUserPrompt terra.BoolValue `hcl:"device_only_remembered_on_user_prompt,attr"`
}

type EmailConfiguration struct {
	// ConfigurationSet is optional.
	ConfigurationSet terra.StringValue `hcl:"configuration_set,attr"`
	// EmailSendingAccount is optional.
	EmailSendingAccount terra.StringValue `hcl:"email_sending_account,attr"`
	// FromEmailAddress is optional.
	FromEmailAddress terra.StringValue `hcl:"from_email_address,attr"`
	// ReplyToEmailAddress is optional.
	ReplyToEmailAddress terra.StringValue `hcl:"reply_to_email_address,attr"`
	// SourceArn is optional.
	SourceArn terra.StringValue `hcl:"source_arn,attr"`
}

type LambdaConfig struct {
	// CreateAuthChallenge is optional.
	CreateAuthChallenge terra.StringValue `hcl:"create_auth_challenge,attr"`
	// CustomMessage is optional.
	CustomMessage terra.StringValue `hcl:"custom_message,attr"`
	// DefineAuthChallenge is optional.
	DefineAuthChallenge terra.StringValue `hcl:"define_auth_challenge,attr"`
	// KmsKeyId is optional.
	KmsKeyId terra.StringValue `hcl:"kms_key_id,attr"`
	// PostAuthentication is optional.
	PostAuthentication terra.StringValue `hcl:"post_authentication,attr"`
	// PostConfirmation is optional.
	PostConfirmation terra.StringValue `hcl:"post_confirmation,attr"`
	// PreAuthentication is optional.
	PreAuthentication terra.StringValue `hcl:"pre_authentication,attr"`
	// PreSignUp is optional.
	PreSignUp terra.StringValue `hcl:"pre_sign_up,attr"`
	// PreTokenGeneration is optional.
	PreTokenGeneration terra.StringValue `hcl:"pre_token_generation,attr"`
	// UserMigration is optional.
	UserMigration terra.StringValue `hcl:"user_migration,attr"`
	// VerifyAuthChallengeResponse is optional.
	VerifyAuthChallengeResponse terra.StringValue `hcl:"verify_auth_challenge_response,attr"`
	// LambdaConfigCustomEmailSender is optional.
	CustomEmailSender *LambdaConfigCustomEmailSender `hcl:"custom_email_sender,block"`
	// LambdaConfigCustomSmsSender is optional.
	CustomSmsSender *LambdaConfigCustomSmsSender `hcl:"custom_sms_sender,block"`
}

type LambdaConfigCustomEmailSender struct {
	// LambdaArn is required.
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
	// LambdaVersion is required.
	LambdaVersion terra.StringValue `hcl:"lambda_version,attr" validate:"required"`
}

type LambdaConfigCustomSmsSender struct {
	// LambdaArn is required.
	LambdaArn terra.StringValue `hcl:"lambda_arn,attr" validate:"required"`
	// LambdaVersion is required.
	LambdaVersion terra.StringValue `hcl:"lambda_version,attr" validate:"required"`
}

type PasswordPolicy struct {
	// MinimumLength is optional.
	MinimumLength terra.NumberValue `hcl:"minimum_length,attr"`
	// RequireLowercase is optional.
	RequireLowercase terra.BoolValue `hcl:"require_lowercase,attr"`
	// RequireNumbers is optional.
	RequireNumbers terra.BoolValue `hcl:"require_numbers,attr"`
	// RequireSymbols is optional.
	RequireSymbols terra.BoolValue `hcl:"require_symbols,attr"`
	// RequireUppercase is optional.
	RequireUppercase terra.BoolValue `hcl:"require_uppercase,attr"`
	// TemporaryPasswordValidityDays is optional.
	TemporaryPasswordValidityDays terra.NumberValue `hcl:"temporary_password_validity_days,attr"`
}

type Schema struct {
	// AttributeDataType is required.
	AttributeDataType terra.StringValue `hcl:"attribute_data_type,attr" validate:"required"`
	// DeveloperOnlyAttribute is optional.
	DeveloperOnlyAttribute terra.BoolValue `hcl:"developer_only_attribute,attr"`
	// Mutable is optional.
	Mutable terra.BoolValue `hcl:"mutable,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Required is optional.
	Required terra.BoolValue `hcl:"required,attr"`
	// SchemaNumberAttributeConstraints is optional.
	NumberAttributeConstraints *SchemaNumberAttributeConstraints `hcl:"number_attribute_constraints,block"`
	// SchemaStringAttributeConstraints is optional.
	StringAttributeConstraints *SchemaStringAttributeConstraints `hcl:"string_attribute_constraints,block"`
}

type SchemaNumberAttributeConstraints struct {
	// MaxValue is optional.
	MaxValue terra.StringValue `hcl:"max_value,attr"`
	// MinValue is optional.
	MinValue terra.StringValue `hcl:"min_value,attr"`
}

type SchemaStringAttributeConstraints struct {
	// MaxLength is optional.
	MaxLength terra.StringValue `hcl:"max_length,attr"`
	// MinLength is optional.
	MinLength terra.StringValue `hcl:"min_length,attr"`
}

type SmsConfiguration struct {
	// ExternalId is required.
	ExternalId terra.StringValue `hcl:"external_id,attr" validate:"required"`
	// SnsCallerArn is required.
	SnsCallerArn terra.StringValue `hcl:"sns_caller_arn,attr" validate:"required"`
	// SnsRegion is optional.
	SnsRegion terra.StringValue `hcl:"sns_region,attr"`
}

type SoftwareTokenMfaConfiguration struct {
	// Enabled is required.
	Enabled terra.BoolValue `hcl:"enabled,attr" validate:"required"`
}

type UserAttributeUpdateSettings struct {
	// AttributesRequireVerificationBeforeUpdate is required.
	AttributesRequireVerificationBeforeUpdate terra.SetValue[terra.StringValue] `hcl:"attributes_require_verification_before_update,attr" validate:"required"`
}

type UserPoolAddOns struct {
	// AdvancedSecurityMode is required.
	AdvancedSecurityMode terra.StringValue `hcl:"advanced_security_mode,attr" validate:"required"`
}

type UsernameConfiguration struct {
	// CaseSensitive is required.
	CaseSensitive terra.BoolValue `hcl:"case_sensitive,attr" validate:"required"`
}

type VerificationMessageTemplate struct {
	// DefaultEmailOption is optional.
	DefaultEmailOption terra.StringValue `hcl:"default_email_option,attr"`
	// EmailMessage is optional.
	EmailMessage terra.StringValue `hcl:"email_message,attr"`
	// EmailMessageByLink is optional.
	EmailMessageByLink terra.StringValue `hcl:"email_message_by_link,attr"`
	// EmailSubject is optional.
	EmailSubject terra.StringValue `hcl:"email_subject,attr"`
	// EmailSubjectByLink is optional.
	EmailSubjectByLink terra.StringValue `hcl:"email_subject_by_link,attr"`
	// SmsMessage is optional.
	SmsMessage terra.StringValue `hcl:"sms_message,attr"`
}

type accountRecoverySettingAttributes struct {
	ref terra.Reference
}

func (ars accountRecoverySettingAttributes) InternalRef() (terra.Reference, error) {
	return ars.ref, nil
}

func (ars accountRecoverySettingAttributes) InternalWithRef(ref terra.Reference) accountRecoverySettingAttributes {
	return accountRecoverySettingAttributes{ref: ref}
}

func (ars accountRecoverySettingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ars.ref.InternalTokens()
}

func (ars accountRecoverySettingAttributes) RecoveryMechanism() terra.SetValue[accountRecoverySettingRecoveryMechanismAttributes] {
	return terra.ReferenceAsSet[accountRecoverySettingRecoveryMechanismAttributes](ars.ref.Append("recovery_mechanism"))
}

type accountRecoverySettingRecoveryMechanismAttributes struct {
	ref terra.Reference
}

func (rm accountRecoverySettingRecoveryMechanismAttributes) InternalRef() (terra.Reference, error) {
	return rm.ref, nil
}

func (rm accountRecoverySettingRecoveryMechanismAttributes) InternalWithRef(ref terra.Reference) accountRecoverySettingRecoveryMechanismAttributes {
	return accountRecoverySettingRecoveryMechanismAttributes{ref: ref}
}

func (rm accountRecoverySettingRecoveryMechanismAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rm.ref.InternalTokens()
}

func (rm accountRecoverySettingRecoveryMechanismAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(rm.ref.Append("name"))
}

func (rm accountRecoverySettingRecoveryMechanismAttributes) Priority() terra.NumberValue {
	return terra.ReferenceAsNumber(rm.ref.Append("priority"))
}

type adminCreateUserConfigAttributes struct {
	ref terra.Reference
}

func (acuc adminCreateUserConfigAttributes) InternalRef() (terra.Reference, error) {
	return acuc.ref, nil
}

func (acuc adminCreateUserConfigAttributes) InternalWithRef(ref terra.Reference) adminCreateUserConfigAttributes {
	return adminCreateUserConfigAttributes{ref: ref}
}

func (acuc adminCreateUserConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acuc.ref.InternalTokens()
}

func (acuc adminCreateUserConfigAttributes) AllowAdminCreateUserOnly() terra.BoolValue {
	return terra.ReferenceAsBool(acuc.ref.Append("allow_admin_create_user_only"))
}

func (acuc adminCreateUserConfigAttributes) InviteMessageTemplate() terra.ListValue[adminCreateUserConfigInviteMessageTemplateAttributes] {
	return terra.ReferenceAsList[adminCreateUserConfigInviteMessageTemplateAttributes](acuc.ref.Append("invite_message_template"))
}

type adminCreateUserConfigInviteMessageTemplateAttributes struct {
	ref terra.Reference
}

func (imt adminCreateUserConfigInviteMessageTemplateAttributes) InternalRef() (terra.Reference, error) {
	return imt.ref, nil
}

func (imt adminCreateUserConfigInviteMessageTemplateAttributes) InternalWithRef(ref terra.Reference) adminCreateUserConfigInviteMessageTemplateAttributes {
	return adminCreateUserConfigInviteMessageTemplateAttributes{ref: ref}
}

func (imt adminCreateUserConfigInviteMessageTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return imt.ref.InternalTokens()
}

func (imt adminCreateUserConfigInviteMessageTemplateAttributes) EmailMessage() terra.StringValue {
	return terra.ReferenceAsString(imt.ref.Append("email_message"))
}

func (imt adminCreateUserConfigInviteMessageTemplateAttributes) EmailSubject() terra.StringValue {
	return terra.ReferenceAsString(imt.ref.Append("email_subject"))
}

func (imt adminCreateUserConfigInviteMessageTemplateAttributes) SmsMessage() terra.StringValue {
	return terra.ReferenceAsString(imt.ref.Append("sms_message"))
}

type deviceConfigurationAttributes struct {
	ref terra.Reference
}

func (dc deviceConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc deviceConfigurationAttributes) InternalWithRef(ref terra.Reference) deviceConfigurationAttributes {
	return deviceConfigurationAttributes{ref: ref}
}

func (dc deviceConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc deviceConfigurationAttributes) ChallengeRequiredOnNewDevice() terra.BoolValue {
	return terra.ReferenceAsBool(dc.ref.Append("challenge_required_on_new_device"))
}

func (dc deviceConfigurationAttributes) DeviceOnlyRememberedOnUserPrompt() terra.BoolValue {
	return terra.ReferenceAsBool(dc.ref.Append("device_only_remembered_on_user_prompt"))
}

type emailConfigurationAttributes struct {
	ref terra.Reference
}

func (ec emailConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ec.ref, nil
}

func (ec emailConfigurationAttributes) InternalWithRef(ref terra.Reference) emailConfigurationAttributes {
	return emailConfigurationAttributes{ref: ref}
}

func (ec emailConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ec.ref.InternalTokens()
}

func (ec emailConfigurationAttributes) ConfigurationSet() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("configuration_set"))
}

func (ec emailConfigurationAttributes) EmailSendingAccount() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("email_sending_account"))
}

func (ec emailConfigurationAttributes) FromEmailAddress() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("from_email_address"))
}

func (ec emailConfigurationAttributes) ReplyToEmailAddress() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("reply_to_email_address"))
}

func (ec emailConfigurationAttributes) SourceArn() terra.StringValue {
	return terra.ReferenceAsString(ec.ref.Append("source_arn"))
}

type lambdaConfigAttributes struct {
	ref terra.Reference
}

func (lc lambdaConfigAttributes) InternalRef() (terra.Reference, error) {
	return lc.ref, nil
}

func (lc lambdaConfigAttributes) InternalWithRef(ref terra.Reference) lambdaConfigAttributes {
	return lambdaConfigAttributes{ref: ref}
}

func (lc lambdaConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lc.ref.InternalTokens()
}

func (lc lambdaConfigAttributes) CreateAuthChallenge() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("create_auth_challenge"))
}

func (lc lambdaConfigAttributes) CustomMessage() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("custom_message"))
}

func (lc lambdaConfigAttributes) DefineAuthChallenge() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("define_auth_challenge"))
}

func (lc lambdaConfigAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("kms_key_id"))
}

func (lc lambdaConfigAttributes) PostAuthentication() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("post_authentication"))
}

func (lc lambdaConfigAttributes) PostConfirmation() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("post_confirmation"))
}

func (lc lambdaConfigAttributes) PreAuthentication() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("pre_authentication"))
}

func (lc lambdaConfigAttributes) PreSignUp() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("pre_sign_up"))
}

func (lc lambdaConfigAttributes) PreTokenGeneration() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("pre_token_generation"))
}

func (lc lambdaConfigAttributes) UserMigration() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("user_migration"))
}

func (lc lambdaConfigAttributes) VerifyAuthChallengeResponse() terra.StringValue {
	return terra.ReferenceAsString(lc.ref.Append("verify_auth_challenge_response"))
}

func (lc lambdaConfigAttributes) CustomEmailSender() terra.ListValue[lambdaConfigCustomEmailSenderAttributes] {
	return terra.ReferenceAsList[lambdaConfigCustomEmailSenderAttributes](lc.ref.Append("custom_email_sender"))
}

func (lc lambdaConfigAttributes) CustomSmsSender() terra.ListValue[lambdaConfigCustomSmsSenderAttributes] {
	return terra.ReferenceAsList[lambdaConfigCustomSmsSenderAttributes](lc.ref.Append("custom_sms_sender"))
}

type lambdaConfigCustomEmailSenderAttributes struct {
	ref terra.Reference
}

func (ces lambdaConfigCustomEmailSenderAttributes) InternalRef() (terra.Reference, error) {
	return ces.ref, nil
}

func (ces lambdaConfigCustomEmailSenderAttributes) InternalWithRef(ref terra.Reference) lambdaConfigCustomEmailSenderAttributes {
	return lambdaConfigCustomEmailSenderAttributes{ref: ref}
}

func (ces lambdaConfigCustomEmailSenderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ces.ref.InternalTokens()
}

func (ces lambdaConfigCustomEmailSenderAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceAsString(ces.ref.Append("lambda_arn"))
}

func (ces lambdaConfigCustomEmailSenderAttributes) LambdaVersion() terra.StringValue {
	return terra.ReferenceAsString(ces.ref.Append("lambda_version"))
}

type lambdaConfigCustomSmsSenderAttributes struct {
	ref terra.Reference
}

func (css lambdaConfigCustomSmsSenderAttributes) InternalRef() (terra.Reference, error) {
	return css.ref, nil
}

func (css lambdaConfigCustomSmsSenderAttributes) InternalWithRef(ref terra.Reference) lambdaConfigCustomSmsSenderAttributes {
	return lambdaConfigCustomSmsSenderAttributes{ref: ref}
}

func (css lambdaConfigCustomSmsSenderAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return css.ref.InternalTokens()
}

func (css lambdaConfigCustomSmsSenderAttributes) LambdaArn() terra.StringValue {
	return terra.ReferenceAsString(css.ref.Append("lambda_arn"))
}

func (css lambdaConfigCustomSmsSenderAttributes) LambdaVersion() terra.StringValue {
	return terra.ReferenceAsString(css.ref.Append("lambda_version"))
}

type passwordPolicyAttributes struct {
	ref terra.Reference
}

func (pp passwordPolicyAttributes) InternalRef() (terra.Reference, error) {
	return pp.ref, nil
}

func (pp passwordPolicyAttributes) InternalWithRef(ref terra.Reference) passwordPolicyAttributes {
	return passwordPolicyAttributes{ref: ref}
}

func (pp passwordPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pp.ref.InternalTokens()
}

func (pp passwordPolicyAttributes) MinimumLength() terra.NumberValue {
	return terra.ReferenceAsNumber(pp.ref.Append("minimum_length"))
}

func (pp passwordPolicyAttributes) RequireLowercase() terra.BoolValue {
	return terra.ReferenceAsBool(pp.ref.Append("require_lowercase"))
}

func (pp passwordPolicyAttributes) RequireNumbers() terra.BoolValue {
	return terra.ReferenceAsBool(pp.ref.Append("require_numbers"))
}

func (pp passwordPolicyAttributes) RequireSymbols() terra.BoolValue {
	return terra.ReferenceAsBool(pp.ref.Append("require_symbols"))
}

func (pp passwordPolicyAttributes) RequireUppercase() terra.BoolValue {
	return terra.ReferenceAsBool(pp.ref.Append("require_uppercase"))
}

func (pp passwordPolicyAttributes) TemporaryPasswordValidityDays() terra.NumberValue {
	return terra.ReferenceAsNumber(pp.ref.Append("temporary_password_validity_days"))
}

type schemaAttributes struct {
	ref terra.Reference
}

func (s schemaAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s schemaAttributes) InternalWithRef(ref terra.Reference) schemaAttributes {
	return schemaAttributes{ref: ref}
}

func (s schemaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s schemaAttributes) AttributeDataType() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("attribute_data_type"))
}

func (s schemaAttributes) DeveloperOnlyAttribute() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("developer_only_attribute"))
}

func (s schemaAttributes) Mutable() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("mutable"))
}

func (s schemaAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s schemaAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("required"))
}

func (s schemaAttributes) NumberAttributeConstraints() terra.ListValue[schemaNumberAttributeConstraintsAttributes] {
	return terra.ReferenceAsList[schemaNumberAttributeConstraintsAttributes](s.ref.Append("number_attribute_constraints"))
}

func (s schemaAttributes) StringAttributeConstraints() terra.ListValue[schemaStringAttributeConstraintsAttributes] {
	return terra.ReferenceAsList[schemaStringAttributeConstraintsAttributes](s.ref.Append("string_attribute_constraints"))
}

type schemaNumberAttributeConstraintsAttributes struct {
	ref terra.Reference
}

func (nac schemaNumberAttributeConstraintsAttributes) InternalRef() (terra.Reference, error) {
	return nac.ref, nil
}

func (nac schemaNumberAttributeConstraintsAttributes) InternalWithRef(ref terra.Reference) schemaNumberAttributeConstraintsAttributes {
	return schemaNumberAttributeConstraintsAttributes{ref: ref}
}

func (nac schemaNumberAttributeConstraintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nac.ref.InternalTokens()
}

func (nac schemaNumberAttributeConstraintsAttributes) MaxValue() terra.StringValue {
	return terra.ReferenceAsString(nac.ref.Append("max_value"))
}

func (nac schemaNumberAttributeConstraintsAttributes) MinValue() terra.StringValue {
	return terra.ReferenceAsString(nac.ref.Append("min_value"))
}

type schemaStringAttributeConstraintsAttributes struct {
	ref terra.Reference
}

func (sac schemaStringAttributeConstraintsAttributes) InternalRef() (terra.Reference, error) {
	return sac.ref, nil
}

func (sac schemaStringAttributeConstraintsAttributes) InternalWithRef(ref terra.Reference) schemaStringAttributeConstraintsAttributes {
	return schemaStringAttributeConstraintsAttributes{ref: ref}
}

func (sac schemaStringAttributeConstraintsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sac.ref.InternalTokens()
}

func (sac schemaStringAttributeConstraintsAttributes) MaxLength() terra.StringValue {
	return terra.ReferenceAsString(sac.ref.Append("max_length"))
}

func (sac schemaStringAttributeConstraintsAttributes) MinLength() terra.StringValue {
	return terra.ReferenceAsString(sac.ref.Append("min_length"))
}

type smsConfigurationAttributes struct {
	ref terra.Reference
}

func (sc smsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return sc.ref, nil
}

func (sc smsConfigurationAttributes) InternalWithRef(ref terra.Reference) smsConfigurationAttributes {
	return smsConfigurationAttributes{ref: ref}
}

func (sc smsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sc.ref.InternalTokens()
}

func (sc smsConfigurationAttributes) ExternalId() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("external_id"))
}

func (sc smsConfigurationAttributes) SnsCallerArn() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("sns_caller_arn"))
}

func (sc smsConfigurationAttributes) SnsRegion() terra.StringValue {
	return terra.ReferenceAsString(sc.ref.Append("sns_region"))
}

type softwareTokenMfaConfigurationAttributes struct {
	ref terra.Reference
}

func (stmc softwareTokenMfaConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return stmc.ref, nil
}

func (stmc softwareTokenMfaConfigurationAttributes) InternalWithRef(ref terra.Reference) softwareTokenMfaConfigurationAttributes {
	return softwareTokenMfaConfigurationAttributes{ref: ref}
}

func (stmc softwareTokenMfaConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return stmc.ref.InternalTokens()
}

func (stmc softwareTokenMfaConfigurationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(stmc.ref.Append("enabled"))
}

type userAttributeUpdateSettingsAttributes struct {
	ref terra.Reference
}

func (uaus userAttributeUpdateSettingsAttributes) InternalRef() (terra.Reference, error) {
	return uaus.ref, nil
}

func (uaus userAttributeUpdateSettingsAttributes) InternalWithRef(ref terra.Reference) userAttributeUpdateSettingsAttributes {
	return userAttributeUpdateSettingsAttributes{ref: ref}
}

func (uaus userAttributeUpdateSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uaus.ref.InternalTokens()
}

func (uaus userAttributeUpdateSettingsAttributes) AttributesRequireVerificationBeforeUpdate() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](uaus.ref.Append("attributes_require_verification_before_update"))
}

type userPoolAddOnsAttributes struct {
	ref terra.Reference
}

func (upao userPoolAddOnsAttributes) InternalRef() (terra.Reference, error) {
	return upao.ref, nil
}

func (upao userPoolAddOnsAttributes) InternalWithRef(ref terra.Reference) userPoolAddOnsAttributes {
	return userPoolAddOnsAttributes{ref: ref}
}

func (upao userPoolAddOnsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return upao.ref.InternalTokens()
}

func (upao userPoolAddOnsAttributes) AdvancedSecurityMode() terra.StringValue {
	return terra.ReferenceAsString(upao.ref.Append("advanced_security_mode"))
}

type usernameConfigurationAttributes struct {
	ref terra.Reference
}

func (uc usernameConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return uc.ref, nil
}

func (uc usernameConfigurationAttributes) InternalWithRef(ref terra.Reference) usernameConfigurationAttributes {
	return usernameConfigurationAttributes{ref: ref}
}

func (uc usernameConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uc.ref.InternalTokens()
}

func (uc usernameConfigurationAttributes) CaseSensitive() terra.BoolValue {
	return terra.ReferenceAsBool(uc.ref.Append("case_sensitive"))
}

type verificationMessageTemplateAttributes struct {
	ref terra.Reference
}

func (vmt verificationMessageTemplateAttributes) InternalRef() (terra.Reference, error) {
	return vmt.ref, nil
}

func (vmt verificationMessageTemplateAttributes) InternalWithRef(ref terra.Reference) verificationMessageTemplateAttributes {
	return verificationMessageTemplateAttributes{ref: ref}
}

func (vmt verificationMessageTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vmt.ref.InternalTokens()
}

func (vmt verificationMessageTemplateAttributes) DefaultEmailOption() terra.StringValue {
	return terra.ReferenceAsString(vmt.ref.Append("default_email_option"))
}

func (vmt verificationMessageTemplateAttributes) EmailMessage() terra.StringValue {
	return terra.ReferenceAsString(vmt.ref.Append("email_message"))
}

func (vmt verificationMessageTemplateAttributes) EmailMessageByLink() terra.StringValue {
	return terra.ReferenceAsString(vmt.ref.Append("email_message_by_link"))
}

func (vmt verificationMessageTemplateAttributes) EmailSubject() terra.StringValue {
	return terra.ReferenceAsString(vmt.ref.Append("email_subject"))
}

func (vmt verificationMessageTemplateAttributes) EmailSubjectByLink() terra.StringValue {
	return terra.ReferenceAsString(vmt.ref.Append("email_subject_by_link"))
}

func (vmt verificationMessageTemplateAttributes) SmsMessage() terra.StringValue {
	return terra.ReferenceAsString(vmt.ref.Append("sms_message"))
}

type AccountRecoverySettingState struct {
	RecoveryMechanism []AccountRecoverySettingRecoveryMechanismState `json:"recovery_mechanism"`
}

type AccountRecoverySettingRecoveryMechanismState struct {
	Name     string  `json:"name"`
	Priority float64 `json:"priority"`
}

type AdminCreateUserConfigState struct {
	AllowAdminCreateUserOnly bool                                              `json:"allow_admin_create_user_only"`
	InviteMessageTemplate    []AdminCreateUserConfigInviteMessageTemplateState `json:"invite_message_template"`
}

type AdminCreateUserConfigInviteMessageTemplateState struct {
	EmailMessage string `json:"email_message"`
	EmailSubject string `json:"email_subject"`
	SmsMessage   string `json:"sms_message"`
}

type DeviceConfigurationState struct {
	ChallengeRequiredOnNewDevice     bool `json:"challenge_required_on_new_device"`
	DeviceOnlyRememberedOnUserPrompt bool `json:"device_only_remembered_on_user_prompt"`
}

type EmailConfigurationState struct {
	ConfigurationSet    string `json:"configuration_set"`
	EmailSendingAccount string `json:"email_sending_account"`
	FromEmailAddress    string `json:"from_email_address"`
	ReplyToEmailAddress string `json:"reply_to_email_address"`
	SourceArn           string `json:"source_arn"`
}

type LambdaConfigState struct {
	CreateAuthChallenge         string                               `json:"create_auth_challenge"`
	CustomMessage               string                               `json:"custom_message"`
	DefineAuthChallenge         string                               `json:"define_auth_challenge"`
	KmsKeyId                    string                               `json:"kms_key_id"`
	PostAuthentication          string                               `json:"post_authentication"`
	PostConfirmation            string                               `json:"post_confirmation"`
	PreAuthentication           string                               `json:"pre_authentication"`
	PreSignUp                   string                               `json:"pre_sign_up"`
	PreTokenGeneration          string                               `json:"pre_token_generation"`
	UserMigration               string                               `json:"user_migration"`
	VerifyAuthChallengeResponse string                               `json:"verify_auth_challenge_response"`
	CustomEmailSender           []LambdaConfigCustomEmailSenderState `json:"custom_email_sender"`
	CustomSmsSender             []LambdaConfigCustomSmsSenderState   `json:"custom_sms_sender"`
}

type LambdaConfigCustomEmailSenderState struct {
	LambdaArn     string `json:"lambda_arn"`
	LambdaVersion string `json:"lambda_version"`
}

type LambdaConfigCustomSmsSenderState struct {
	LambdaArn     string `json:"lambda_arn"`
	LambdaVersion string `json:"lambda_version"`
}

type PasswordPolicyState struct {
	MinimumLength                 float64 `json:"minimum_length"`
	RequireLowercase              bool    `json:"require_lowercase"`
	RequireNumbers                bool    `json:"require_numbers"`
	RequireSymbols                bool    `json:"require_symbols"`
	RequireUppercase              bool    `json:"require_uppercase"`
	TemporaryPasswordValidityDays float64 `json:"temporary_password_validity_days"`
}

type SchemaState struct {
	AttributeDataType          string                                  `json:"attribute_data_type"`
	DeveloperOnlyAttribute     bool                                    `json:"developer_only_attribute"`
	Mutable                    bool                                    `json:"mutable"`
	Name                       string                                  `json:"name"`
	Required                   bool                                    `json:"required"`
	NumberAttributeConstraints []SchemaNumberAttributeConstraintsState `json:"number_attribute_constraints"`
	StringAttributeConstraints []SchemaStringAttributeConstraintsState `json:"string_attribute_constraints"`
}

type SchemaNumberAttributeConstraintsState struct {
	MaxValue string `json:"max_value"`
	MinValue string `json:"min_value"`
}

type SchemaStringAttributeConstraintsState struct {
	MaxLength string `json:"max_length"`
	MinLength string `json:"min_length"`
}

type SmsConfigurationState struct {
	ExternalId   string `json:"external_id"`
	SnsCallerArn string `json:"sns_caller_arn"`
	SnsRegion    string `json:"sns_region"`
}

type SoftwareTokenMfaConfigurationState struct {
	Enabled bool `json:"enabled"`
}

type UserAttributeUpdateSettingsState struct {
	AttributesRequireVerificationBeforeUpdate []string `json:"attributes_require_verification_before_update"`
}

type UserPoolAddOnsState struct {
	AdvancedSecurityMode string `json:"advanced_security_mode"`
}

type UsernameConfigurationState struct {
	CaseSensitive bool `json:"case_sensitive"`
}

type VerificationMessageTemplateState struct {
	DefaultEmailOption string `json:"default_email_option"`
	EmailMessage       string `json:"email_message"`
	EmailMessageByLink string `json:"email_message_by_link"`
	EmailSubject       string `json:"email_subject"`
	EmailSubjectByLink string `json:"email_subject_by_link"`
	SmsMessage         string `json:"sms_message"`
}
