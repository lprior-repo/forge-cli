// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_lambda_function_event_invoke_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DestinationConfig struct {
	// DestinationConfigOnFailure is optional.
	OnFailure *DestinationConfigOnFailure `hcl:"on_failure,block"`
	// DestinationConfigOnSuccess is optional.
	OnSuccess *DestinationConfigOnSuccess `hcl:"on_success,block"`
}

type DestinationConfigOnFailure struct {
	// Destination is required.
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
}

type DestinationConfigOnSuccess struct {
	// Destination is required.
	Destination terra.StringValue `hcl:"destination,attr" validate:"required"`
}

type destinationConfigAttributes struct {
	ref terra.Reference
}

func (dc destinationConfigAttributes) InternalRef() (terra.Reference, error) {
	return dc.ref, nil
}

func (dc destinationConfigAttributes) InternalWithRef(ref terra.Reference) destinationConfigAttributes {
	return destinationConfigAttributes{ref: ref}
}

func (dc destinationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dc.ref.InternalTokens()
}

func (dc destinationConfigAttributes) OnFailure() terra.ListValue[destinationConfigOnFailureAttributes] {
	return terra.ReferenceAsList[destinationConfigOnFailureAttributes](dc.ref.Append("on_failure"))
}

func (dc destinationConfigAttributes) OnSuccess() terra.ListValue[destinationConfigOnSuccessAttributes] {
	return terra.ReferenceAsList[destinationConfigOnSuccessAttributes](dc.ref.Append("on_success"))
}

type destinationConfigOnFailureAttributes struct {
	ref terra.Reference
}

func (of destinationConfigOnFailureAttributes) InternalRef() (terra.Reference, error) {
	return of.ref, nil
}

func (of destinationConfigOnFailureAttributes) InternalWithRef(ref terra.Reference) destinationConfigOnFailureAttributes {
	return destinationConfigOnFailureAttributes{ref: ref}
}

func (of destinationConfigOnFailureAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return of.ref.InternalTokens()
}

func (of destinationConfigOnFailureAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(of.ref.Append("destination"))
}

type destinationConfigOnSuccessAttributes struct {
	ref terra.Reference
}

func (os destinationConfigOnSuccessAttributes) InternalRef() (terra.Reference, error) {
	return os.ref, nil
}

func (os destinationConfigOnSuccessAttributes) InternalWithRef(ref terra.Reference) destinationConfigOnSuccessAttributes {
	return destinationConfigOnSuccessAttributes{ref: ref}
}

func (os destinationConfigOnSuccessAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return os.ref.InternalTokens()
}

func (os destinationConfigOnSuccessAttributes) Destination() terra.StringValue {
	return terra.ReferenceAsString(os.ref.Append("destination"))
}

type DestinationConfigState struct {
	OnFailure []DestinationConfigOnFailureState `json:"on_failure"`
	OnSuccess []DestinationConfigOnSuccessState `json:"on_success"`
}

type DestinationConfigOnFailureState struct {
	Destination string `json:"destination"`
}

type DestinationConfigOnSuccessState struct {
	Destination string `json:"destination"`
}
