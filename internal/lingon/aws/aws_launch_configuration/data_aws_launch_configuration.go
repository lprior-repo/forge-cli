// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_launch_configuration

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_launch_configuration.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alc *DataSource) DataSource() string {
	return "aws_launch_configuration"
}

// LocalName returns the local name for [DataSource].
func (alc *DataSource) LocalName() string {
	return alc.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alc *DataSource) Configuration() interface{} {
	return alc.Args
}

// Attributes returns the attributes for [DataSource].
func (alc *DataSource) Attributes() dataAwsLaunchConfigurationAttributes {
	return dataAwsLaunchConfigurationAttributes{ref: terra.ReferenceDataSource(alc)}
}

// DataArgs contains the configurations for aws_launch_configuration.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
}

type dataAwsLaunchConfigurationAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("arn"))
}

// AssociatePublicIpAddress returns a reference to field associate_public_ip_address of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) AssociatePublicIpAddress() terra.BoolValue {
	return terra.ReferenceAsBool(alc.ref.Append("associate_public_ip_address"))
}

// EbsOptimized returns a reference to field ebs_optimized of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) EbsOptimized() terra.BoolValue {
	return terra.ReferenceAsBool(alc.ref.Append("ebs_optimized"))
}

// EnableMonitoring returns a reference to field enable_monitoring of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) EnableMonitoring() terra.BoolValue {
	return terra.ReferenceAsBool(alc.ref.Append("enable_monitoring"))
}

// IamInstanceProfile returns a reference to field iam_instance_profile of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) IamInstanceProfile() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("iam_instance_profile"))
}

// Id returns a reference to field id of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("id"))
}

// ImageId returns a reference to field image_id of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) ImageId() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("image_id"))
}

// InstanceType returns a reference to field instance_type of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("instance_type"))
}

// KeyName returns a reference to field key_name of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) KeyName() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("key_name"))
}

// Name returns a reference to field name of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("name"))
}

// PlacementTenancy returns a reference to field placement_tenancy of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) PlacementTenancy() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("placement_tenancy"))
}

// SecurityGroups returns a reference to field security_groups of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](alc.ref.Append("security_groups"))
}

// SpotPrice returns a reference to field spot_price of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) SpotPrice() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("spot_price"))
}

// UserData returns a reference to field user_data of aws_launch_configuration.
func (alc dataAwsLaunchConfigurationAttributes) UserData() terra.StringValue {
	return terra.ReferenceAsString(alc.ref.Append("user_data"))
}

func (alc dataAwsLaunchConfigurationAttributes) EbsBlockDevice() terra.SetValue[DataebsBlockDeviceAttributes] {
	return terra.ReferenceAsSet[DataebsBlockDeviceAttributes](alc.ref.Append("ebs_block_device"))
}

func (alc dataAwsLaunchConfigurationAttributes) EphemeralBlockDevice() terra.SetValue[DataephemeralBlockDeviceAttributes] {
	return terra.ReferenceAsSet[DataephemeralBlockDeviceAttributes](alc.ref.Append("ephemeral_block_device"))
}

func (alc dataAwsLaunchConfigurationAttributes) MetadataOptions() terra.ListValue[DatametadataOptionsAttributes] {
	return terra.ReferenceAsList[DatametadataOptionsAttributes](alc.ref.Append("metadata_options"))
}

func (alc dataAwsLaunchConfigurationAttributes) RootBlockDevice() terra.ListValue[DatarootBlockDeviceAttributes] {
	return terra.ReferenceAsList[DatarootBlockDeviceAttributes](alc.ref.Append("root_block_device"))
}
