// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_securityhub_organization_configuration

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_securityhub_organization_configuration.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsSecurityhubOrganizationConfigurationState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (asoc *Resource) Type() string {
	return "aws_securityhub_organization_configuration"
}

// LocalName returns the local name for [Resource].
func (asoc *Resource) LocalName() string {
	return asoc.Name
}

// Configuration returns the configuration (args) for [Resource].
func (asoc *Resource) Configuration() interface{} {
	return asoc.Args
}

// DependOn is used for other resources to depend on [Resource].
func (asoc *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(asoc)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (asoc *Resource) Dependencies() terra.Dependencies {
	return asoc.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (asoc *Resource) LifecycleManagement() *terra.Lifecycle {
	return asoc.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (asoc *Resource) Attributes() awsSecurityhubOrganizationConfigurationAttributes {
	return awsSecurityhubOrganizationConfigurationAttributes{ref: terra.ReferenceResource(asoc)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (asoc *Resource) ImportState(state io.Reader) error {
	asoc.state = &awsSecurityhubOrganizationConfigurationState{}
	if err := json.NewDecoder(state).Decode(asoc.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", asoc.Type(), asoc.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (asoc *Resource) State() (*awsSecurityhubOrganizationConfigurationState, bool) {
	return asoc.state, asoc.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (asoc *Resource) StateMust() *awsSecurityhubOrganizationConfigurationState {
	if asoc.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", asoc.Type(), asoc.LocalName()))
	}
	return asoc.state
}

// Args contains the configurations for aws_securityhub_organization_configuration.
type Args struct {
	// AutoEnable is required.
	AutoEnable terra.BoolValue `hcl:"auto_enable,attr" validate:"required"`
	// AutoEnableStandards is optional.
	AutoEnableStandards terra.StringValue `hcl:"auto_enable_standards,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
}

type awsSecurityhubOrganizationConfigurationAttributes struct {
	ref terra.Reference
}

// AutoEnable returns a reference to field auto_enable of aws_securityhub_organization_configuration.
func (asoc awsSecurityhubOrganizationConfigurationAttributes) AutoEnable() terra.BoolValue {
	return terra.ReferenceAsBool(asoc.ref.Append("auto_enable"))
}

// AutoEnableStandards returns a reference to field auto_enable_standards of aws_securityhub_organization_configuration.
func (asoc awsSecurityhubOrganizationConfigurationAttributes) AutoEnableStandards() terra.StringValue {
	return terra.ReferenceAsString(asoc.ref.Append("auto_enable_standards"))
}

// Id returns a reference to field id of aws_securityhub_organization_configuration.
func (asoc awsSecurityhubOrganizationConfigurationAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(asoc.ref.Append("id"))
}

type awsSecurityhubOrganizationConfigurationState struct {
	AutoEnable          bool   `json:"auto_enable"`
	AutoEnableStandards string `json:"auto_enable_standards"`
	Id                  string `json:"id"`
}
