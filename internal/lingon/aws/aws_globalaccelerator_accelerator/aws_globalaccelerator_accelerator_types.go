// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_globalaccelerator_accelerator

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Attributes struct {
	// FlowLogsEnabled is optional.
	FlowLogsEnabled terra.BoolValue `hcl:"flow_logs_enabled,attr"`
	// FlowLogsS3Bucket is optional.
	FlowLogsS3Bucket terra.StringValue `hcl:"flow_logs_s3_bucket,attr"`
	// FlowLogsS3Prefix is optional.
	FlowLogsS3Prefix terra.StringValue `hcl:"flow_logs_s3_prefix,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type ipSetsAttributes struct {
	ref terra.Reference
}

func (is ipSetsAttributes) InternalRef() (terra.Reference, error) {
	return is.ref, nil
}

func (is ipSetsAttributes) InternalWithRef(ref terra.Reference) ipSetsAttributes {
	return ipSetsAttributes{ref: ref}
}

func (is ipSetsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return is.ref.InternalTokens()
}

func (is ipSetsAttributes) IpAddresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](is.ref.Append("ip_addresses"))
}

func (is ipSetsAttributes) IpFamily() terra.StringValue {
	return terra.ReferenceAsString(is.ref.Append("ip_family"))
}

type attributesAttributes struct {
	ref terra.Reference
}

func (a attributesAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a attributesAttributes) InternalWithRef(ref terra.Reference) attributesAttributes {
	return attributesAttributes{ref: ref}
}

func (a attributesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a attributesAttributes) FlowLogsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(a.ref.Append("flow_logs_enabled"))
}

func (a attributesAttributes) FlowLogsS3Bucket() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("flow_logs_s3_bucket"))
}

func (a attributesAttributes) FlowLogsS3Prefix() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("flow_logs_s3_prefix"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type IpSetsState struct {
	IpAddresses []string `json:"ip_addresses"`
	IpFamily    string   `json:"ip_family"`
}

type AttributesState struct {
	FlowLogsEnabled  bool   `json:"flow_logs_enabled"`
	FlowLogsS3Bucket string `json:"flow_logs_s3_bucket"`
	FlowLogsS3Prefix string `json:"flow_logs_s3_prefix"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Update string `json:"update"`
}
