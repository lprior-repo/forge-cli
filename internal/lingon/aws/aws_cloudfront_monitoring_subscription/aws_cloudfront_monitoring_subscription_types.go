// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cloudfront_monitoring_subscription

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MonitoringSubscription struct {
	// MonitoringSubscriptionRealtimeMetricsSubscriptionConfig is required.
	RealtimeMetricsSubscriptionConfig *MonitoringSubscriptionRealtimeMetricsSubscriptionConfig `hcl:"realtime_metrics_subscription_config,block" validate:"required"`
}

type MonitoringSubscriptionRealtimeMetricsSubscriptionConfig struct {
	// RealtimeMetricsSubscriptionStatus is required.
	RealtimeMetricsSubscriptionStatus terra.StringValue `hcl:"realtime_metrics_subscription_status,attr" validate:"required"`
}

type monitoringSubscriptionAttributes struct {
	ref terra.Reference
}

func (ms monitoringSubscriptionAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms monitoringSubscriptionAttributes) InternalWithRef(ref terra.Reference) monitoringSubscriptionAttributes {
	return monitoringSubscriptionAttributes{ref: ref}
}

func (ms monitoringSubscriptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms monitoringSubscriptionAttributes) RealtimeMetricsSubscriptionConfig() terra.ListValue[monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes] {
	return terra.ReferenceAsList[monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes](ms.ref.Append("realtime_metrics_subscription_config"))
}

type monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes struct {
	ref terra.Reference
}

func (rmsc monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes) InternalRef() (terra.Reference, error) {
	return rmsc.ref, nil
}

func (rmsc monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes) InternalWithRef(ref terra.Reference) monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes {
	return monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes{ref: ref}
}

func (rmsc monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rmsc.ref.InternalTokens()
}

func (rmsc monitoringSubscriptionRealtimeMetricsSubscriptionConfigAttributes) RealtimeMetricsSubscriptionStatus() terra.StringValue {
	return terra.ReferenceAsString(rmsc.ref.Append("realtime_metrics_subscription_status"))
}

type MonitoringSubscriptionState struct {
	RealtimeMetricsSubscriptionConfig []MonitoringSubscriptionRealtimeMetricsSubscriptionConfigState `json:"realtime_metrics_subscription_config"`
}

type MonitoringSubscriptionRealtimeMetricsSubscriptionConfigState struct {
	RealtimeMetricsSubscriptionStatus string `json:"realtime_metrics_subscription_status"`
}
