// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_apigatewayv2_domain_name

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DomainNameConfiguration struct {
	// CertificateArn is required.
	CertificateArn terra.StringValue `hcl:"certificate_arn,attr" validate:"required"`
	// EndpointType is required.
	EndpointType terra.StringValue `hcl:"endpoint_type,attr" validate:"required"`
	// OwnershipVerificationCertificateArn is optional.
	OwnershipVerificationCertificateArn terra.StringValue `hcl:"ownership_verification_certificate_arn,attr"`
	// SecurityPolicy is required.
	SecurityPolicy terra.StringValue `hcl:"security_policy,attr" validate:"required"`
}

type MutualTlsAuthentication struct {
	// TruststoreUri is required.
	TruststoreUri terra.StringValue `hcl:"truststore_uri,attr" validate:"required"`
	// TruststoreVersion is optional.
	TruststoreVersion terra.StringValue `hcl:"truststore_version,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type domainNameConfigurationAttributes struct {
	ref terra.Reference
}

func (dnc domainNameConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return dnc.ref, nil
}

func (dnc domainNameConfigurationAttributes) InternalWithRef(ref terra.Reference) domainNameConfigurationAttributes {
	return domainNameConfigurationAttributes{ref: ref}
}

func (dnc domainNameConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dnc.ref.InternalTokens()
}

func (dnc domainNameConfigurationAttributes) CertificateArn() terra.StringValue {
	return terra.ReferenceAsString(dnc.ref.Append("certificate_arn"))
}

func (dnc domainNameConfigurationAttributes) EndpointType() terra.StringValue {
	return terra.ReferenceAsString(dnc.ref.Append("endpoint_type"))
}

func (dnc domainNameConfigurationAttributes) HostedZoneId() terra.StringValue {
	return terra.ReferenceAsString(dnc.ref.Append("hosted_zone_id"))
}

func (dnc domainNameConfigurationAttributes) OwnershipVerificationCertificateArn() terra.StringValue {
	return terra.ReferenceAsString(dnc.ref.Append("ownership_verification_certificate_arn"))
}

func (dnc domainNameConfigurationAttributes) SecurityPolicy() terra.StringValue {
	return terra.ReferenceAsString(dnc.ref.Append("security_policy"))
}

func (dnc domainNameConfigurationAttributes) TargetDomainName() terra.StringValue {
	return terra.ReferenceAsString(dnc.ref.Append("target_domain_name"))
}

type mutualTlsAuthenticationAttributes struct {
	ref terra.Reference
}

func (mta mutualTlsAuthenticationAttributes) InternalRef() (terra.Reference, error) {
	return mta.ref, nil
}

func (mta mutualTlsAuthenticationAttributes) InternalWithRef(ref terra.Reference) mutualTlsAuthenticationAttributes {
	return mutualTlsAuthenticationAttributes{ref: ref}
}

func (mta mutualTlsAuthenticationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mta.ref.InternalTokens()
}

func (mta mutualTlsAuthenticationAttributes) TruststoreUri() terra.StringValue {
	return terra.ReferenceAsString(mta.ref.Append("truststore_uri"))
}

func (mta mutualTlsAuthenticationAttributes) TruststoreVersion() terra.StringValue {
	return terra.ReferenceAsString(mta.ref.Append("truststore_version"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DomainNameConfigurationState struct {
	CertificateArn                      string `json:"certificate_arn"`
	EndpointType                        string `json:"endpoint_type"`
	HostedZoneId                        string `json:"hosted_zone_id"`
	OwnershipVerificationCertificateArn string `json:"ownership_verification_certificate_arn"`
	SecurityPolicy                      string `json:"security_policy"`
	TargetDomainName                    string `json:"target_domain_name"`
}

type MutualTlsAuthenticationState struct {
	TruststoreUri     string `json:"truststore_uri"`
	TruststoreVersion string `json:"truststore_version"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Update string `json:"update"`
}
