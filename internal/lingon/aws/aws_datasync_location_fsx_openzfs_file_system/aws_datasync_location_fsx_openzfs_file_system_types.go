// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_datasync_location_fsx_openzfs_file_system

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Protocol struct {
	// ProtocolNfs is required.
	Nfs *ProtocolNfs `hcl:"nfs,block" validate:"required"`
}

type ProtocolNfs struct {
	// ProtocolNfsMountOptions is required.
	MountOptions *ProtocolNfsMountOptions `hcl:"mount_options,block" validate:"required"`
}

type ProtocolNfsMountOptions struct {
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
}

type protocolAttributes struct {
	ref terra.Reference
}

func (p protocolAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p protocolAttributes) InternalWithRef(ref terra.Reference) protocolAttributes {
	return protocolAttributes{ref: ref}
}

func (p protocolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p protocolAttributes) Nfs() terra.ListValue[protocolNfsAttributes] {
	return terra.ReferenceAsList[protocolNfsAttributes](p.ref.Append("nfs"))
}

type protocolNfsAttributes struct {
	ref terra.Reference
}

func (n protocolNfsAttributes) InternalRef() (terra.Reference, error) {
	return n.ref, nil
}

func (n protocolNfsAttributes) InternalWithRef(ref terra.Reference) protocolNfsAttributes {
	return protocolNfsAttributes{ref: ref}
}

func (n protocolNfsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return n.ref.InternalTokens()
}

func (n protocolNfsAttributes) MountOptions() terra.ListValue[protocolNfsMountOptionsAttributes] {
	return terra.ReferenceAsList[protocolNfsMountOptionsAttributes](n.ref.Append("mount_options"))
}

type protocolNfsMountOptionsAttributes struct {
	ref terra.Reference
}

func (mo protocolNfsMountOptionsAttributes) InternalRef() (terra.Reference, error) {
	return mo.ref, nil
}

func (mo protocolNfsMountOptionsAttributes) InternalWithRef(ref terra.Reference) protocolNfsMountOptionsAttributes {
	return protocolNfsMountOptionsAttributes{ref: ref}
}

func (mo protocolNfsMountOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mo.ref.InternalTokens()
}

func (mo protocolNfsMountOptionsAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(mo.ref.Append("version"))
}

type ProtocolState struct {
	Nfs []ProtocolNfsState `json:"nfs"`
}

type ProtocolNfsState struct {
	MountOptions []ProtocolNfsMountOptionsState `json:"mount_options"`
}

type ProtocolNfsMountOptionsState struct {
	Version string `json:"version"`
}
