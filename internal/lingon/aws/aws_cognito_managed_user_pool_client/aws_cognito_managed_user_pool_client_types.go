// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_cognito_managed_user_pool_client

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AnalyticsConfiguration struct {
	// ApplicationArn is optional.
	ApplicationArn terra.StringValue `hcl:"application_arn,attr"`
	// ApplicationId is optional.
	ApplicationId terra.StringValue `hcl:"application_id,attr"`
	// ExternalId is optional.
	ExternalId terra.StringValue `hcl:"external_id,attr"`
	// RoleArn is optional.
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
	// UserDataShared is optional.
	UserDataShared terra.BoolValue `hcl:"user_data_shared,attr"`
}

type TokenValidityUnits struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// IdToken is optional.
	IdToken terra.StringValue `hcl:"id_token,attr"`
	// RefreshToken is optional.
	RefreshToken terra.StringValue `hcl:"refresh_token,attr"`
}

type analyticsConfigurationAttributes struct {
	ref terra.Reference
}

func (ac analyticsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac analyticsConfigurationAttributes) InternalWithRef(ref terra.Reference) analyticsConfigurationAttributes {
	return analyticsConfigurationAttributes{ref: ref}
}

func (ac analyticsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac analyticsConfigurationAttributes) ApplicationArn() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("application_arn"))
}

func (ac analyticsConfigurationAttributes) ApplicationId() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("application_id"))
}

func (ac analyticsConfigurationAttributes) ExternalId() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("external_id"))
}

func (ac analyticsConfigurationAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ac.ref.Append("role_arn"))
}

func (ac analyticsConfigurationAttributes) UserDataShared() terra.BoolValue {
	return terra.ReferenceAsBool(ac.ref.Append("user_data_shared"))
}

type tokenValidityUnitsAttributes struct {
	ref terra.Reference
}

func (tvu tokenValidityUnitsAttributes) InternalRef() (terra.Reference, error) {
	return tvu.ref, nil
}

func (tvu tokenValidityUnitsAttributes) InternalWithRef(ref terra.Reference) tokenValidityUnitsAttributes {
	return tokenValidityUnitsAttributes{ref: ref}
}

func (tvu tokenValidityUnitsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tvu.ref.InternalTokens()
}

func (tvu tokenValidityUnitsAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(tvu.ref.Append("access_token"))
}

func (tvu tokenValidityUnitsAttributes) IdToken() terra.StringValue {
	return terra.ReferenceAsString(tvu.ref.Append("id_token"))
}

func (tvu tokenValidityUnitsAttributes) RefreshToken() terra.StringValue {
	return terra.ReferenceAsString(tvu.ref.Append("refresh_token"))
}

type AnalyticsConfigurationState struct {
	ApplicationArn string `json:"application_arn"`
	ApplicationId  string `json:"application_id"`
	ExternalId     string `json:"external_id"`
	RoleArn        string `json:"role_arn"`
	UserDataShared bool   `json:"user_data_shared"`
}

type TokenValidityUnitsState struct {
	AccessToken  string `json:"access_token"`
	IdToken      string `json:"id_token"`
	RefreshToken string `json:"refresh_token"`
}
