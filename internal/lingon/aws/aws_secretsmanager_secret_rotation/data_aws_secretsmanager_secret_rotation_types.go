// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_secretsmanager_secret_rotation

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatarotationRulesAttributes struct {
	ref terra.Reference
}

func (rr DatarotationRulesAttributes) InternalRef() (terra.Reference, error) {
	return rr.ref, nil
}

func (rr DatarotationRulesAttributes) InternalWithRef(ref terra.Reference) DatarotationRulesAttributes {
	return DatarotationRulesAttributes{ref: ref}
}

func (rr DatarotationRulesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rr.ref.InternalTokens()
}

func (rr DatarotationRulesAttributes) AutomaticallyAfterDays() terra.NumberValue {
	return terra.ReferenceAsNumber(rr.ref.Append("automatically_after_days"))
}

func (rr DatarotationRulesAttributes) Duration() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("duration"))
}

func (rr DatarotationRulesAttributes) ScheduleExpression() terra.StringValue {
	return terra.ReferenceAsString(rr.ref.Append("schedule_expression"))
}

type DataRotationRulesState struct {
	AutomaticallyAfterDays float64 `json:"automatically_after_days"`
	Duration               string  `json:"duration"`
	ScheduleExpression     string  `json:"schedule_expression"`
}
