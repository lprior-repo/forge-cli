// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3_bucket_acl

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AccessControlPolicy struct {
	// AccessControlPolicyGrant is min=0.
	Grant []AccessControlPolicyGrant `hcl:"grant,block" validate:"min=0"`
	// AccessControlPolicyOwner is required.
	Owner *AccessControlPolicyOwner `hcl:"owner,block" validate:"required"`
}

type AccessControlPolicyGrant struct {
	// Permission is required.
	Permission terra.StringValue `hcl:"permission,attr" validate:"required"`
	// AccessControlPolicyGrantGrantee is optional.
	Grantee *AccessControlPolicyGrantGrantee `hcl:"grantee,block"`
}

type AccessControlPolicyGrantGrantee struct {
	// EmailAddress is optional.
	EmailAddress terra.StringValue `hcl:"email_address,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
	// Uri is optional.
	Uri terra.StringValue `hcl:"uri,attr"`
}

type AccessControlPolicyOwner struct {
	// DisplayName is optional.
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Id is required.
	Id terra.StringValue `hcl:"id,attr" validate:"required"`
}

type accessControlPolicyAttributes struct {
	ref terra.Reference
}

func (acp accessControlPolicyAttributes) InternalRef() (terra.Reference, error) {
	return acp.ref, nil
}

func (acp accessControlPolicyAttributes) InternalWithRef(ref terra.Reference) accessControlPolicyAttributes {
	return accessControlPolicyAttributes{ref: ref}
}

func (acp accessControlPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return acp.ref.InternalTokens()
}

func (acp accessControlPolicyAttributes) Grant() terra.SetValue[accessControlPolicyGrantAttributes] {
	return terra.ReferenceAsSet[accessControlPolicyGrantAttributes](acp.ref.Append("grant"))
}

func (acp accessControlPolicyAttributes) Owner() terra.ListValue[accessControlPolicyOwnerAttributes] {
	return terra.ReferenceAsList[accessControlPolicyOwnerAttributes](acp.ref.Append("owner"))
}

type accessControlPolicyGrantAttributes struct {
	ref terra.Reference
}

func (g accessControlPolicyGrantAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g accessControlPolicyGrantAttributes) InternalWithRef(ref terra.Reference) accessControlPolicyGrantAttributes {
	return accessControlPolicyGrantAttributes{ref: ref}
}

func (g accessControlPolicyGrantAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g accessControlPolicyGrantAttributes) Permission() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("permission"))
}

func (g accessControlPolicyGrantAttributes) Grantee() terra.ListValue[accessControlPolicyGrantGranteeAttributes] {
	return terra.ReferenceAsList[accessControlPolicyGrantGranteeAttributes](g.ref.Append("grantee"))
}

type accessControlPolicyGrantGranteeAttributes struct {
	ref terra.Reference
}

func (g accessControlPolicyGrantGranteeAttributes) InternalRef() (terra.Reference, error) {
	return g.ref, nil
}

func (g accessControlPolicyGrantGranteeAttributes) InternalWithRef(ref terra.Reference) accessControlPolicyGrantGranteeAttributes {
	return accessControlPolicyGrantGranteeAttributes{ref: ref}
}

func (g accessControlPolicyGrantGranteeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return g.ref.InternalTokens()
}

func (g accessControlPolicyGrantGranteeAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("display_name"))
}

func (g accessControlPolicyGrantGranteeAttributes) EmailAddress() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("email_address"))
}

func (g accessControlPolicyGrantGranteeAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("id"))
}

func (g accessControlPolicyGrantGranteeAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("type"))
}

func (g accessControlPolicyGrantGranteeAttributes) Uri() terra.StringValue {
	return terra.ReferenceAsString(g.ref.Append("uri"))
}

type accessControlPolicyOwnerAttributes struct {
	ref terra.Reference
}

func (o accessControlPolicyOwnerAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o accessControlPolicyOwnerAttributes) InternalWithRef(ref terra.Reference) accessControlPolicyOwnerAttributes {
	return accessControlPolicyOwnerAttributes{ref: ref}
}

func (o accessControlPolicyOwnerAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o accessControlPolicyOwnerAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("display_name"))
}

func (o accessControlPolicyOwnerAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("id"))
}

type AccessControlPolicyState struct {
	Grant []AccessControlPolicyGrantState `json:"grant"`
	Owner []AccessControlPolicyOwnerState `json:"owner"`
}

type AccessControlPolicyGrantState struct {
	Permission string                                 `json:"permission"`
	Grantee    []AccessControlPolicyGrantGranteeState `json:"grantee"`
}

type AccessControlPolicyGrantGranteeState struct {
	DisplayName  string `json:"display_name"`
	EmailAddress string `json:"email_address"`
	Id           string `json:"id"`
	Type         string `json:"type"`
	Uri          string `json:"uri"`
}

type AccessControlPolicyOwnerState struct {
	DisplayName string `json:"display_name"`
	Id          string `json:"id"`
}
