// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_workspaces_directory

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SelfServicePermissions struct {
	// ChangeComputeType is optional.
	ChangeComputeType terra.BoolValue `hcl:"change_compute_type,attr"`
	// IncreaseVolumeSize is optional.
	IncreaseVolumeSize terra.BoolValue `hcl:"increase_volume_size,attr"`
	// RebuildWorkspace is optional.
	RebuildWorkspace terra.BoolValue `hcl:"rebuild_workspace,attr"`
	// RestartWorkspace is optional.
	RestartWorkspace terra.BoolValue `hcl:"restart_workspace,attr"`
	// SwitchRunningMode is optional.
	SwitchRunningMode terra.BoolValue `hcl:"switch_running_mode,attr"`
}

type WorkspaceAccessProperties struct {
	// DeviceTypeAndroid is optional.
	DeviceTypeAndroid terra.StringValue `hcl:"device_type_android,attr"`
	// DeviceTypeChromeos is optional.
	DeviceTypeChromeos terra.StringValue `hcl:"device_type_chromeos,attr"`
	// DeviceTypeIos is optional.
	DeviceTypeIos terra.StringValue `hcl:"device_type_ios,attr"`
	// DeviceTypeLinux is optional.
	DeviceTypeLinux terra.StringValue `hcl:"device_type_linux,attr"`
	// DeviceTypeOsx is optional.
	DeviceTypeOsx terra.StringValue `hcl:"device_type_osx,attr"`
	// DeviceTypeWeb is optional.
	DeviceTypeWeb terra.StringValue `hcl:"device_type_web,attr"`
	// DeviceTypeWindows is optional.
	DeviceTypeWindows terra.StringValue `hcl:"device_type_windows,attr"`
	// DeviceTypeZeroclient is optional.
	DeviceTypeZeroclient terra.StringValue `hcl:"device_type_zeroclient,attr"`
}

type WorkspaceCreationProperties struct {
	// CustomSecurityGroupId is optional.
	CustomSecurityGroupId terra.StringValue `hcl:"custom_security_group_id,attr"`
	// DefaultOu is optional.
	DefaultOu terra.StringValue `hcl:"default_ou,attr"`
	// EnableInternetAccess is optional.
	EnableInternetAccess terra.BoolValue `hcl:"enable_internet_access,attr"`
	// EnableMaintenanceMode is optional.
	EnableMaintenanceMode terra.BoolValue `hcl:"enable_maintenance_mode,attr"`
	// UserEnabledAsLocalAdministrator is optional.
	UserEnabledAsLocalAdministrator terra.BoolValue `hcl:"user_enabled_as_local_administrator,attr"`
}

type selfServicePermissionsAttributes struct {
	ref terra.Reference
}

func (ssp selfServicePermissionsAttributes) InternalRef() (terra.Reference, error) {
	return ssp.ref, nil
}

func (ssp selfServicePermissionsAttributes) InternalWithRef(ref terra.Reference) selfServicePermissionsAttributes {
	return selfServicePermissionsAttributes{ref: ref}
}

func (ssp selfServicePermissionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ssp.ref.InternalTokens()
}

func (ssp selfServicePermissionsAttributes) ChangeComputeType() terra.BoolValue {
	return terra.ReferenceAsBool(ssp.ref.Append("change_compute_type"))
}

func (ssp selfServicePermissionsAttributes) IncreaseVolumeSize() terra.BoolValue {
	return terra.ReferenceAsBool(ssp.ref.Append("increase_volume_size"))
}

func (ssp selfServicePermissionsAttributes) RebuildWorkspace() terra.BoolValue {
	return terra.ReferenceAsBool(ssp.ref.Append("rebuild_workspace"))
}

func (ssp selfServicePermissionsAttributes) RestartWorkspace() terra.BoolValue {
	return terra.ReferenceAsBool(ssp.ref.Append("restart_workspace"))
}

func (ssp selfServicePermissionsAttributes) SwitchRunningMode() terra.BoolValue {
	return terra.ReferenceAsBool(ssp.ref.Append("switch_running_mode"))
}

type workspaceAccessPropertiesAttributes struct {
	ref terra.Reference
}

func (wap workspaceAccessPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return wap.ref, nil
}

func (wap workspaceAccessPropertiesAttributes) InternalWithRef(ref terra.Reference) workspaceAccessPropertiesAttributes {
	return workspaceAccessPropertiesAttributes{ref: ref}
}

func (wap workspaceAccessPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wap.ref.InternalTokens()
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeAndroid() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_android"))
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeChromeos() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_chromeos"))
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeIos() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_ios"))
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeLinux() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_linux"))
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeOsx() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_osx"))
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeWeb() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_web"))
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeWindows() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_windows"))
}

func (wap workspaceAccessPropertiesAttributes) DeviceTypeZeroclient() terra.StringValue {
	return terra.ReferenceAsString(wap.ref.Append("device_type_zeroclient"))
}

type workspaceCreationPropertiesAttributes struct {
	ref terra.Reference
}

func (wcp workspaceCreationPropertiesAttributes) InternalRef() (terra.Reference, error) {
	return wcp.ref, nil
}

func (wcp workspaceCreationPropertiesAttributes) InternalWithRef(ref terra.Reference) workspaceCreationPropertiesAttributes {
	return workspaceCreationPropertiesAttributes{ref: ref}
}

func (wcp workspaceCreationPropertiesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wcp.ref.InternalTokens()
}

func (wcp workspaceCreationPropertiesAttributes) CustomSecurityGroupId() terra.StringValue {
	return terra.ReferenceAsString(wcp.ref.Append("custom_security_group_id"))
}

func (wcp workspaceCreationPropertiesAttributes) DefaultOu() terra.StringValue {
	return terra.ReferenceAsString(wcp.ref.Append("default_ou"))
}

func (wcp workspaceCreationPropertiesAttributes) EnableInternetAccess() terra.BoolValue {
	return terra.ReferenceAsBool(wcp.ref.Append("enable_internet_access"))
}

func (wcp workspaceCreationPropertiesAttributes) EnableMaintenanceMode() terra.BoolValue {
	return terra.ReferenceAsBool(wcp.ref.Append("enable_maintenance_mode"))
}

func (wcp workspaceCreationPropertiesAttributes) UserEnabledAsLocalAdministrator() terra.BoolValue {
	return terra.ReferenceAsBool(wcp.ref.Append("user_enabled_as_local_administrator"))
}

type SelfServicePermissionsState struct {
	ChangeComputeType  bool `json:"change_compute_type"`
	IncreaseVolumeSize bool `json:"increase_volume_size"`
	RebuildWorkspace   bool `json:"rebuild_workspace"`
	RestartWorkspace   bool `json:"restart_workspace"`
	SwitchRunningMode  bool `json:"switch_running_mode"`
}

type WorkspaceAccessPropertiesState struct {
	DeviceTypeAndroid    string `json:"device_type_android"`
	DeviceTypeChromeos   string `json:"device_type_chromeos"`
	DeviceTypeIos        string `json:"device_type_ios"`
	DeviceTypeLinux      string `json:"device_type_linux"`
	DeviceTypeOsx        string `json:"device_type_osx"`
	DeviceTypeWeb        string `json:"device_type_web"`
	DeviceTypeWindows    string `json:"device_type_windows"`
	DeviceTypeZeroclient string `json:"device_type_zeroclient"`
}

type WorkspaceCreationPropertiesState struct {
	CustomSecurityGroupId           string `json:"custom_security_group_id"`
	DefaultOu                       string `json:"default_ou"`
	EnableInternetAccess            bool   `json:"enable_internet_access"`
	EnableMaintenanceMode           bool   `json:"enable_maintenance_mode"`
	UserEnabledAsLocalAdministrator bool   `json:"user_enabled_as_local_administrator"`
}
