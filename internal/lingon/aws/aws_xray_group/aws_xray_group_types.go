// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_xray_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type InsightsConfiguration struct {
	// InsightsEnabled is required.
	InsightsEnabled terra.BoolValue `hcl:"insights_enabled,attr" validate:"required"`
	// NotificationsEnabled is optional.
	NotificationsEnabled terra.BoolValue `hcl:"notifications_enabled,attr"`
}

type insightsConfigurationAttributes struct {
	ref terra.Reference
}

func (ic insightsConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic insightsConfigurationAttributes) InternalWithRef(ref terra.Reference) insightsConfigurationAttributes {
	return insightsConfigurationAttributes{ref: ref}
}

func (ic insightsConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic insightsConfigurationAttributes) InsightsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("insights_enabled"))
}

func (ic insightsConfigurationAttributes) NotificationsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ic.ref.Append("notifications_enabled"))
}

type InsightsConfigurationState struct {
	InsightsEnabled      bool `json:"insights_enabled"`
	NotificationsEnabled bool `json:"notifications_enabled"`
}
