// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_servicecatalog_launch_paths

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataTimeouts struct {
	// Read is optional.
	Read terra.StringValue `hcl:"read,attr"`
}

type DatasummariesAttributes struct {
	ref terra.Reference
}

func (s DatasummariesAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DatasummariesAttributes) InternalWithRef(ref terra.Reference) DatasummariesAttributes {
	return DatasummariesAttributes{ref: ref}
}

func (s DatasummariesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DatasummariesAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DatasummariesAttributes) PathId() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("path_id"))
}

func (s DatasummariesAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](s.ref.Append("tags"))
}

func (s DatasummariesAttributes) ConstraintSummaries() terra.ListValue[DatasummariesConstraintSummariesAttributes] {
	return terra.ReferenceAsList[DatasummariesConstraintSummariesAttributes](s.ref.Append("constraint_summaries"))
}

type DatasummariesConstraintSummariesAttributes struct {
	ref terra.Reference
}

func (cs DatasummariesConstraintSummariesAttributes) InternalRef() (terra.Reference, error) {
	return cs.ref, nil
}

func (cs DatasummariesConstraintSummariesAttributes) InternalWithRef(ref terra.Reference) DatasummariesConstraintSummariesAttributes {
	return DatasummariesConstraintSummariesAttributes{ref: ref}
}

func (cs DatasummariesConstraintSummariesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cs.ref.InternalTokens()
}

func (cs DatasummariesConstraintSummariesAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("description"))
}

func (cs DatasummariesConstraintSummariesAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cs.ref.Append("type"))
}

type DatatimeoutsAttributes struct {
	ref terra.Reference
}

func (t DatatimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DatatimeoutsAttributes) InternalWithRef(ref terra.Reference) DatatimeoutsAttributes {
	return DatatimeoutsAttributes{ref: ref}
}

func (t DatatimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DatatimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataSummariesState struct {
	Name                string                                  `json:"name"`
	PathId              string                                  `json:"path_id"`
	Tags                map[string]string                       `json:"tags"`
	ConstraintSummaries []DataSummariesConstraintSummariesState `json:"constraint_summaries"`
}

type DataSummariesConstraintSummariesState struct {
	Description string `json:"description"`
	Type        string `json:"type"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
