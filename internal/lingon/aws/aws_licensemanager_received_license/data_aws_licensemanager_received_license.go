// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_licensemanager_received_license

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_licensemanager_received_license.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (alrl *DataSource) DataSource() string {
	return "aws_licensemanager_received_license"
}

// LocalName returns the local name for [DataSource].
func (alrl *DataSource) LocalName() string {
	return alrl.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (alrl *DataSource) Configuration() interface{} {
	return alrl.Args
}

// Attributes returns the attributes for [DataSource].
func (alrl *DataSource) Attributes() dataAwsLicensemanagerReceivedLicenseAttributes {
	return dataAwsLicensemanagerReceivedLicenseAttributes{ref: terra.ReferenceDataSource(alrl)}
}

// DataArgs contains the configurations for aws_licensemanager_received_license.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// LicenseArn is required.
	LicenseArn terra.StringValue `hcl:"license_arn,attr" validate:"required"`
}

type dataAwsLicensemanagerReceivedLicenseAttributes struct {
	ref terra.Reference
}

// Beneficiary returns a reference to field beneficiary of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) Beneficiary() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("beneficiary"))
}

// CreateTime returns a reference to field create_time of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) CreateTime() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("create_time"))
}

// HomeRegion returns a reference to field home_region of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) HomeRegion() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("home_region"))
}

// Id returns a reference to field id of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("id"))
}

// LicenseArn returns a reference to field license_arn of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) LicenseArn() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("license_arn"))
}

// LicenseName returns a reference to field license_name of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) LicenseName() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("license_name"))
}

// ProductName returns a reference to field product_name of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) ProductName() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("product_name"))
}

// ProductSku returns a reference to field product_sku of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) ProductSku() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("product_sku"))
}

// Status returns a reference to field status of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("status"))
}

// Version returns a reference to field version of aws_licensemanager_received_license.
func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(alrl.ref.Append("version"))
}

func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) ConsumptionConfiguration() terra.ListValue[DataconsumptionConfigurationAttributes] {
	return terra.ReferenceAsList[DataconsumptionConfigurationAttributes](alrl.ref.Append("consumption_configuration"))
}

func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) Entitlements() terra.SetValue[DataentitlementsAttributes] {
	return terra.ReferenceAsSet[DataentitlementsAttributes](alrl.ref.Append("entitlements"))
}

func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) Issuer() terra.ListValue[DataissuerAttributes] {
	return terra.ReferenceAsList[DataissuerAttributes](alrl.ref.Append("issuer"))
}

func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) LicenseMetadata() terra.SetValue[DatalicenseMetadataAttributes] {
	return terra.ReferenceAsSet[DatalicenseMetadataAttributes](alrl.ref.Append("license_metadata"))
}

func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) ReceivedMetadata() terra.ListValue[DatareceivedMetadataAttributes] {
	return terra.ReferenceAsList[DatareceivedMetadataAttributes](alrl.ref.Append("received_metadata"))
}

func (alrl dataAwsLicensemanagerReceivedLicenseAttributes) Validity() terra.ListValue[DatavalidityAttributes] {
	return terra.ReferenceAsList[DatavalidityAttributes](alrl.ref.Append("validity"))
}
