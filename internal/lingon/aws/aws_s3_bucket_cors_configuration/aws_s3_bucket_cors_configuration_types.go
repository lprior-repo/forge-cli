// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3_bucket_cors_configuration

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type CorsRule struct {
	// AllowedHeaders is optional.
	AllowedHeaders terra.SetValue[terra.StringValue] `hcl:"allowed_headers,attr"`
	// AllowedMethods is required.
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr" validate:"required"`
	// AllowedOrigins is required.
	AllowedOrigins terra.SetValue[terra.StringValue] `hcl:"allowed_origins,attr" validate:"required"`
	// ExposeHeaders is optional.
	ExposeHeaders terra.SetValue[terra.StringValue] `hcl:"expose_headers,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// MaxAgeSeconds is optional.
	MaxAgeSeconds terra.NumberValue `hcl:"max_age_seconds,attr"`
}

type corsRuleAttributes struct {
	ref terra.Reference
}

func (cr corsRuleAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr corsRuleAttributes) InternalWithRef(ref terra.Reference) corsRuleAttributes {
	return corsRuleAttributes{ref: ref}
}

func (cr corsRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr corsRuleAttributes) AllowedHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("allowed_headers"))
}

func (cr corsRuleAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("allowed_methods"))
}

func (cr corsRuleAttributes) AllowedOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("allowed_origins"))
}

func (cr corsRuleAttributes) ExposeHeaders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cr.ref.Append("expose_headers"))
}

func (cr corsRuleAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("id"))
}

func (cr corsRuleAttributes) MaxAgeSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(cr.ref.Append("max_age_seconds"))
}

type CorsRuleState struct {
	AllowedHeaders []string `json:"allowed_headers"`
	AllowedMethods []string `json:"allowed_methods"`
	AllowedOrigins []string `json:"allowed_origins"`
	ExposeHeaders  []string `json:"expose_headers"`
	Id             string   `json:"id"`
	MaxAgeSeconds  float64  `json:"max_age_seconds"`
}
