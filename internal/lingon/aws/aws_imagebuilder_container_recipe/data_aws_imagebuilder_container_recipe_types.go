// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_imagebuilder_container_recipe

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatacomponentAttributes struct {
	ref terra.Reference
}

func (c DatacomponentAttributes) InternalRef() (terra.Reference, error) {
	return c.ref, nil
}

func (c DatacomponentAttributes) InternalWithRef(ref terra.Reference) DatacomponentAttributes {
	return DatacomponentAttributes{ref: ref}
}

func (c DatacomponentAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return c.ref.InternalTokens()
}

func (c DatacomponentAttributes) ComponentArn() terra.StringValue {
	return terra.ReferenceAsString(c.ref.Append("component_arn"))
}

func (c DatacomponentAttributes) Parameter() terra.SetValue[DatacomponentParameterAttributes] {
	return terra.ReferenceAsSet[DatacomponentParameterAttributes](c.ref.Append("parameter"))
}

type DatacomponentParameterAttributes struct {
	ref terra.Reference
}

func (p DatacomponentParameterAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p DatacomponentParameterAttributes) InternalWithRef(ref terra.Reference) DatacomponentParameterAttributes {
	return DatacomponentParameterAttributes{ref: ref}
}

func (p DatacomponentParameterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p DatacomponentParameterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("name"))
}

func (p DatacomponentParameterAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("value"))
}

type DatainstanceConfigurationAttributes struct {
	ref terra.Reference
}

func (ic DatainstanceConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return ic.ref, nil
}

func (ic DatainstanceConfigurationAttributes) InternalWithRef(ref terra.Reference) DatainstanceConfigurationAttributes {
	return DatainstanceConfigurationAttributes{ref: ref}
}

func (ic DatainstanceConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ic.ref.InternalTokens()
}

func (ic DatainstanceConfigurationAttributes) Image() terra.StringValue {
	return terra.ReferenceAsString(ic.ref.Append("image"))
}

func (ic DatainstanceConfigurationAttributes) BlockDeviceMapping() terra.SetValue[DatainstanceConfigurationBlockDeviceMappingAttributes] {
	return terra.ReferenceAsSet[DatainstanceConfigurationBlockDeviceMappingAttributes](ic.ref.Append("block_device_mapping"))
}

type DatainstanceConfigurationBlockDeviceMappingAttributes struct {
	ref terra.Reference
}

func (bdm DatainstanceConfigurationBlockDeviceMappingAttributes) InternalRef() (terra.Reference, error) {
	return bdm.ref, nil
}

func (bdm DatainstanceConfigurationBlockDeviceMappingAttributes) InternalWithRef(ref terra.Reference) DatainstanceConfigurationBlockDeviceMappingAttributes {
	return DatainstanceConfigurationBlockDeviceMappingAttributes{ref: ref}
}

func (bdm DatainstanceConfigurationBlockDeviceMappingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return bdm.ref.InternalTokens()
}

func (bdm DatainstanceConfigurationBlockDeviceMappingAttributes) DeviceName() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("device_name"))
}

func (bdm DatainstanceConfigurationBlockDeviceMappingAttributes) NoDevice() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("no_device"))
}

func (bdm DatainstanceConfigurationBlockDeviceMappingAttributes) VirtualName() terra.StringValue {
	return terra.ReferenceAsString(bdm.ref.Append("virtual_name"))
}

func (bdm DatainstanceConfigurationBlockDeviceMappingAttributes) Ebs() terra.ListValue[DatainstanceConfigurationBlockDeviceMappingEbsAttributes] {
	return terra.ReferenceAsList[DatainstanceConfigurationBlockDeviceMappingEbsAttributes](bdm.ref.Append("ebs"))
}

type DatainstanceConfigurationBlockDeviceMappingEbsAttributes struct {
	ref terra.Reference
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) InternalRef() (terra.Reference, error) {
	return e.ref, nil
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) InternalWithRef(ref terra.Reference) DatainstanceConfigurationBlockDeviceMappingEbsAttributes {
	return DatainstanceConfigurationBlockDeviceMappingEbsAttributes{ref: ref}
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return e.ref.InternalTokens()
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) DeleteOnTermination() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("delete_on_termination"))
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) Encrypted() terra.BoolValue {
	return terra.ReferenceAsBool(e.ref.Append("encrypted"))
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) Iops() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("iops"))
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("kms_key_id"))
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) SnapshotId() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("snapshot_id"))
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) Throughput() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("throughput"))
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) VolumeSize() terra.NumberValue {
	return terra.ReferenceAsNumber(e.ref.Append("volume_size"))
}

func (e DatainstanceConfigurationBlockDeviceMappingEbsAttributes) VolumeType() terra.StringValue {
	return terra.ReferenceAsString(e.ref.Append("volume_type"))
}

type DatatargetRepositoryAttributes struct {
	ref terra.Reference
}

func (tr DatatargetRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return tr.ref, nil
}

func (tr DatatargetRepositoryAttributes) InternalWithRef(ref terra.Reference) DatatargetRepositoryAttributes {
	return DatatargetRepositoryAttributes{ref: ref}
}

func (tr DatatargetRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tr.ref.InternalTokens()
}

func (tr DatatargetRepositoryAttributes) RepositoryName() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("repository_name"))
}

func (tr DatatargetRepositoryAttributes) Service() terra.StringValue {
	return terra.ReferenceAsString(tr.ref.Append("service"))
}

type DataComponentState struct {
	ComponentArn string                        `json:"component_arn"`
	Parameter    []DataComponentParameterState `json:"parameter"`
}

type DataComponentParameterState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type DataInstanceConfigurationState struct {
	Image              string                                             `json:"image"`
	BlockDeviceMapping []DataInstanceConfigurationBlockDeviceMappingState `json:"block_device_mapping"`
}

type DataInstanceConfigurationBlockDeviceMappingState struct {
	DeviceName  string                                                `json:"device_name"`
	NoDevice    string                                                `json:"no_device"`
	VirtualName string                                                `json:"virtual_name"`
	Ebs         []DataInstanceConfigurationBlockDeviceMappingEbsState `json:"ebs"`
}

type DataInstanceConfigurationBlockDeviceMappingEbsState struct {
	DeleteOnTermination bool    `json:"delete_on_termination"`
	Encrypted           bool    `json:"encrypted"`
	Iops                float64 `json:"iops"`
	KmsKeyId            string  `json:"kms_key_id"`
	SnapshotId          string  `json:"snapshot_id"`
	Throughput          float64 `json:"throughput"`
	VolumeSize          float64 `json:"volume_size"`
	VolumeType          string  `json:"volume_type"`
}

type DataTargetRepositoryState struct {
	RepositoryName string `json:"repository_name"`
	Service        string `json:"service"`
}
