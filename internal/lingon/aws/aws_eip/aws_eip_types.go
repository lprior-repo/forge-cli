// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_eip

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Read is optional.
	Read terra.StringValue `hcl:"read,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type TimeoutsState struct {
	Delete string `json:"delete"`
	Read   string `json:"read"`
	Update string `json:"update"`
}
