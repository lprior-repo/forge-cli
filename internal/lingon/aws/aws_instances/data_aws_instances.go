// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_instances

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_instances.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (ai *DataSource) DataSource() string {
	return "aws_instances"
}

// LocalName returns the local name for [DataSource].
func (ai *DataSource) LocalName() string {
	return ai.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (ai *DataSource) Configuration() interface{} {
	return ai.Args
}

// Attributes returns the attributes for [DataSource].
func (ai *DataSource) Attributes() dataAwsInstancesAttributes {
	return dataAwsInstancesAttributes{ref: terra.ReferenceDataSource(ai)}
}

// DataArgs contains the configurations for aws_instances.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// InstanceStateNames is optional.
	InstanceStateNames terra.SetValue[terra.StringValue] `hcl:"instance_state_names,attr"`
	// InstanceTags is optional.
	InstanceTags terra.MapValue[terra.StringValue] `hcl:"instance_tags,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts is optional.
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsInstancesAttributes struct {
	ref terra.Reference
}

// Id returns a reference to field id of aws_instances.
func (ai dataAwsInstancesAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ai.ref.Append("id"))
}

// Ids returns a reference to field ids of aws_instances.
func (ai dataAwsInstancesAttributes) Ids() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ai.ref.Append("ids"))
}

// InstanceStateNames returns a reference to field instance_state_names of aws_instances.
func (ai dataAwsInstancesAttributes) InstanceStateNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ai.ref.Append("instance_state_names"))
}

// InstanceTags returns a reference to field instance_tags of aws_instances.
func (ai dataAwsInstancesAttributes) InstanceTags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ai.ref.Append("instance_tags"))
}

// Ipv6Addresses returns a reference to field ipv6_addresses of aws_instances.
func (ai dataAwsInstancesAttributes) Ipv6Addresses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ai.ref.Append("ipv6_addresses"))
}

// PrivateIps returns a reference to field private_ips of aws_instances.
func (ai dataAwsInstancesAttributes) PrivateIps() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ai.ref.Append("private_ips"))
}

// PublicIps returns a reference to field public_ips of aws_instances.
func (ai dataAwsInstancesAttributes) PublicIps() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](ai.ref.Append("public_ips"))
}

func (ai dataAwsInstancesAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](ai.ref.Append("filter"))
}

func (ai dataAwsInstancesAttributes) Timeouts() DatatimeoutsAttributes {
	return terra.ReferenceAsSingle[DatatimeoutsAttributes](ai.ref.Append("timeouts"))
}
