// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_rds_reserved_instance

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type recurringChargesAttributes struct {
	ref terra.Reference
}

func (rc recurringChargesAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc recurringChargesAttributes) InternalWithRef(ref terra.Reference) recurringChargesAttributes {
	return recurringChargesAttributes{ref: ref}
}

func (rc recurringChargesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc recurringChargesAttributes) RecurringChargeAmount() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("recurring_charge_amount"))
}

func (rc recurringChargesAttributes) RecurringChargeFrequency() terra.StringValue {
	return terra.ReferenceAsString(rc.ref.Append("recurring_charge_frequency"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type RecurringChargesState struct {
	RecurringChargeAmount    float64 `json:"recurring_charge_amount"`
	RecurringChargeFrequency string  `json:"recurring_charge_frequency"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
