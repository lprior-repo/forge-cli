// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_acm_certificate

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_acm_certificate.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aac *DataSource) DataSource() string {
	return "aws_acm_certificate"
}

// LocalName returns the local name for [DataSource].
func (aac *DataSource) LocalName() string {
	return aac.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aac *DataSource) Configuration() interface{} {
	return aac.Args
}

// Attributes returns the attributes for [DataSource].
func (aac *DataSource) Attributes() dataAwsAcmCertificateAttributes {
	return dataAwsAcmCertificateAttributes{ref: terra.ReferenceDataSource(aac)}
}

// DataArgs contains the configurations for aws_acm_certificate.
type DataArgs struct {
	// Domain is required.
	Domain terra.StringValue `hcl:"domain,attr" validate:"required"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// KeyTypes is optional.
	KeyTypes terra.SetValue[terra.StringValue] `hcl:"key_types,attr"`
	// MostRecent is optional.
	MostRecent terra.BoolValue `hcl:"most_recent,attr"`
	// Statuses is optional.
	Statuses terra.ListValue[terra.StringValue] `hcl:"statuses,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Types is optional.
	Types terra.ListValue[terra.StringValue] `hcl:"types,attr"`
}

type dataAwsAcmCertificateAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("arn"))
}

// Certificate returns a reference to field certificate of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Certificate() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("certificate"))
}

// CertificateChain returns a reference to field certificate_chain of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) CertificateChain() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("certificate_chain"))
}

// Domain returns a reference to field domain of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Domain() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("domain"))
}

// Id returns a reference to field id of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("id"))
}

// KeyTypes returns a reference to field key_types of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) KeyTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aac.ref.Append("key_types"))
}

// MostRecent returns a reference to field most_recent of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) MostRecent() terra.BoolValue {
	return terra.ReferenceAsBool(aac.ref.Append("most_recent"))
}

// Status returns a reference to field status of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(aac.ref.Append("status"))
}

// Statuses returns a reference to field statuses of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Statuses() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aac.ref.Append("statuses"))
}

// Tags returns a reference to field tags of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aac.ref.Append("tags"))
}

// Types returns a reference to field types of aws_acm_certificate.
func (aac dataAwsAcmCertificateAttributes) Types() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aac.ref.Append("types"))
}
