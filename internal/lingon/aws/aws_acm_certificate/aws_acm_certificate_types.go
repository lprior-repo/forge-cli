// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_acm_certificate

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Options struct {
	// CertificateTransparencyLoggingPreference is optional.
	CertificateTransparencyLoggingPreference terra.StringValue `hcl:"certificate_transparency_logging_preference,attr"`
}

type ValidationOption struct {
	// DomainName is required.
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// ValidationDomain is required.
	ValidationDomain terra.StringValue `hcl:"validation_domain,attr" validate:"required"`
}

type domainValidationOptionsAttributes struct {
	ref terra.Reference
}

func (dvo domainValidationOptionsAttributes) InternalRef() (terra.Reference, error) {
	return dvo.ref, nil
}

func (dvo domainValidationOptionsAttributes) InternalWithRef(ref terra.Reference) domainValidationOptionsAttributes {
	return domainValidationOptionsAttributes{ref: ref}
}

func (dvo domainValidationOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dvo.ref.InternalTokens()
}

func (dvo domainValidationOptionsAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(dvo.ref.Append("domain_name"))
}

func (dvo domainValidationOptionsAttributes) ResourceRecordName() terra.StringValue {
	return terra.ReferenceAsString(dvo.ref.Append("resource_record_name"))
}

func (dvo domainValidationOptionsAttributes) ResourceRecordType() terra.StringValue {
	return terra.ReferenceAsString(dvo.ref.Append("resource_record_type"))
}

func (dvo domainValidationOptionsAttributes) ResourceRecordValue() terra.StringValue {
	return terra.ReferenceAsString(dvo.ref.Append("resource_record_value"))
}

type renewalSummaryAttributes struct {
	ref terra.Reference
}

func (rs renewalSummaryAttributes) InternalRef() (terra.Reference, error) {
	return rs.ref, nil
}

func (rs renewalSummaryAttributes) InternalWithRef(ref terra.Reference) renewalSummaryAttributes {
	return renewalSummaryAttributes{ref: ref}
}

func (rs renewalSummaryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rs.ref.InternalTokens()
}

func (rs renewalSummaryAttributes) RenewalStatus() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("renewal_status"))
}

func (rs renewalSummaryAttributes) RenewalStatusReason() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("renewal_status_reason"))
}

func (rs renewalSummaryAttributes) UpdatedAt() terra.StringValue {
	return terra.ReferenceAsString(rs.ref.Append("updated_at"))
}

type optionsAttributes struct {
	ref terra.Reference
}

func (o optionsAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o optionsAttributes) InternalWithRef(ref terra.Reference) optionsAttributes {
	return optionsAttributes{ref: ref}
}

func (o optionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o optionsAttributes) CertificateTransparencyLoggingPreference() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("certificate_transparency_logging_preference"))
}

type validationOptionAttributes struct {
	ref terra.Reference
}

func (vo validationOptionAttributes) InternalRef() (terra.Reference, error) {
	return vo.ref, nil
}

func (vo validationOptionAttributes) InternalWithRef(ref terra.Reference) validationOptionAttributes {
	return validationOptionAttributes{ref: ref}
}

func (vo validationOptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vo.ref.InternalTokens()
}

func (vo validationOptionAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(vo.ref.Append("domain_name"))
}

func (vo validationOptionAttributes) ValidationDomain() terra.StringValue {
	return terra.ReferenceAsString(vo.ref.Append("validation_domain"))
}

type DomainValidationOptionsState struct {
	DomainName          string `json:"domain_name"`
	ResourceRecordName  string `json:"resource_record_name"`
	ResourceRecordType  string `json:"resource_record_type"`
	ResourceRecordValue string `json:"resource_record_value"`
}

type RenewalSummaryState struct {
	RenewalStatus       string `json:"renewal_status"`
	RenewalStatusReason string `json:"renewal_status_reason"`
	UpdatedAt           string `json:"updated_at"`
}

type OptionsState struct {
	CertificateTransparencyLoggingPreference string `json:"certificate_transparency_logging_preference"`
}

type ValidationOptionState struct {
	DomainName       string `json:"domain_name"`
	ValidationDomain string `json:"validation_domain"`
}
