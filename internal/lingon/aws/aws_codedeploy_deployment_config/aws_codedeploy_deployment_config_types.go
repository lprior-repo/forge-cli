// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_codedeploy_deployment_config

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MinimumHealthyHosts struct {
	// Type is optional.
	Type terra.StringValue `hcl:"type,attr"`
	// Value is optional.
	Value terra.NumberValue `hcl:"value,attr"`
}

type TrafficRoutingConfig struct {
	// Type is optional.
	Type terra.StringValue `hcl:"type,attr"`
	// TrafficRoutingConfigTimeBasedCanary is optional.
	TimeBasedCanary *TrafficRoutingConfigTimeBasedCanary `hcl:"time_based_canary,block"`
	// TrafficRoutingConfigTimeBasedLinear is optional.
	TimeBasedLinear *TrafficRoutingConfigTimeBasedLinear `hcl:"time_based_linear,block"`
}

type TrafficRoutingConfigTimeBasedCanary struct {
	// Interval is optional.
	Interval terra.NumberValue `hcl:"interval,attr"`
	// Percentage is optional.
	Percentage terra.NumberValue `hcl:"percentage,attr"`
}

type TrafficRoutingConfigTimeBasedLinear struct {
	// Interval is optional.
	Interval terra.NumberValue `hcl:"interval,attr"`
	// Percentage is optional.
	Percentage terra.NumberValue `hcl:"percentage,attr"`
}

type minimumHealthyHostsAttributes struct {
	ref terra.Reference
}

func (mhh minimumHealthyHostsAttributes) InternalRef() (terra.Reference, error) {
	return mhh.ref, nil
}

func (mhh minimumHealthyHostsAttributes) InternalWithRef(ref terra.Reference) minimumHealthyHostsAttributes {
	return minimumHealthyHostsAttributes{ref: ref}
}

func (mhh minimumHealthyHostsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mhh.ref.InternalTokens()
}

func (mhh minimumHealthyHostsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(mhh.ref.Append("type"))
}

func (mhh minimumHealthyHostsAttributes) Value() terra.NumberValue {
	return terra.ReferenceAsNumber(mhh.ref.Append("value"))
}

type trafficRoutingConfigAttributes struct {
	ref terra.Reference
}

func (trc trafficRoutingConfigAttributes) InternalRef() (terra.Reference, error) {
	return trc.ref, nil
}

func (trc trafficRoutingConfigAttributes) InternalWithRef(ref terra.Reference) trafficRoutingConfigAttributes {
	return trafficRoutingConfigAttributes{ref: ref}
}

func (trc trafficRoutingConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return trc.ref.InternalTokens()
}

func (trc trafficRoutingConfigAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(trc.ref.Append("type"))
}

func (trc trafficRoutingConfigAttributes) TimeBasedCanary() terra.ListValue[trafficRoutingConfigTimeBasedCanaryAttributes] {
	return terra.ReferenceAsList[trafficRoutingConfigTimeBasedCanaryAttributes](trc.ref.Append("time_based_canary"))
}

func (trc trafficRoutingConfigAttributes) TimeBasedLinear() terra.ListValue[trafficRoutingConfigTimeBasedLinearAttributes] {
	return terra.ReferenceAsList[trafficRoutingConfigTimeBasedLinearAttributes](trc.ref.Append("time_based_linear"))
}

type trafficRoutingConfigTimeBasedCanaryAttributes struct {
	ref terra.Reference
}

func (tbc trafficRoutingConfigTimeBasedCanaryAttributes) InternalRef() (terra.Reference, error) {
	return tbc.ref, nil
}

func (tbc trafficRoutingConfigTimeBasedCanaryAttributes) InternalWithRef(ref terra.Reference) trafficRoutingConfigTimeBasedCanaryAttributes {
	return trafficRoutingConfigTimeBasedCanaryAttributes{ref: ref}
}

func (tbc trafficRoutingConfigTimeBasedCanaryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbc.ref.InternalTokens()
}

func (tbc trafficRoutingConfigTimeBasedCanaryAttributes) Interval() terra.NumberValue {
	return terra.ReferenceAsNumber(tbc.ref.Append("interval"))
}

func (tbc trafficRoutingConfigTimeBasedCanaryAttributes) Percentage() terra.NumberValue {
	return terra.ReferenceAsNumber(tbc.ref.Append("percentage"))
}

type trafficRoutingConfigTimeBasedLinearAttributes struct {
	ref terra.Reference
}

func (tbl trafficRoutingConfigTimeBasedLinearAttributes) InternalRef() (terra.Reference, error) {
	return tbl.ref, nil
}

func (tbl trafficRoutingConfigTimeBasedLinearAttributes) InternalWithRef(ref terra.Reference) trafficRoutingConfigTimeBasedLinearAttributes {
	return trafficRoutingConfigTimeBasedLinearAttributes{ref: ref}
}

func (tbl trafficRoutingConfigTimeBasedLinearAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbl.ref.InternalTokens()
}

func (tbl trafficRoutingConfigTimeBasedLinearAttributes) Interval() terra.NumberValue {
	return terra.ReferenceAsNumber(tbl.ref.Append("interval"))
}

func (tbl trafficRoutingConfigTimeBasedLinearAttributes) Percentage() terra.NumberValue {
	return terra.ReferenceAsNumber(tbl.ref.Append("percentage"))
}

type MinimumHealthyHostsState struct {
	Type  string  `json:"type"`
	Value float64 `json:"value"`
}

type TrafficRoutingConfigState struct {
	Type            string                                     `json:"type"`
	TimeBasedCanary []TrafficRoutingConfigTimeBasedCanaryState `json:"time_based_canary"`
	TimeBasedLinear []TrafficRoutingConfigTimeBasedLinearState `json:"time_based_linear"`
}

type TrafficRoutingConfigTimeBasedCanaryState struct {
	Interval   float64 `json:"interval"`
	Percentage float64 `json:"percentage"`
}

type TrafficRoutingConfigTimeBasedLinearState struct {
	Interval   float64 `json:"interval"`
	Percentage float64 `json:"percentage"`
}
