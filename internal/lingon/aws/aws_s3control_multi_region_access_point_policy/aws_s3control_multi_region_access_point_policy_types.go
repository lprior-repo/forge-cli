// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_s3control_multi_region_access_point_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Details struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Policy is required.
	Policy terra.StringValue `hcl:"policy,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type detailsAttributes struct {
	ref terra.Reference
}

func (d detailsAttributes) InternalRef() (terra.Reference, error) {
	return d.ref, nil
}

func (d detailsAttributes) InternalWithRef(ref terra.Reference) detailsAttributes {
	return detailsAttributes{ref: ref}
}

func (d detailsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return d.ref.InternalTokens()
}

func (d detailsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("name"))
}

func (d detailsAttributes) Policy() terra.StringValue {
	return terra.ReferenceAsString(d.ref.Append("policy"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type DetailsState struct {
	Name   string `json:"name"`
	Policy string `json:"policy"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Update string `json:"update"`
}
