// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_domain

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DefaultSpaceSettings struct {
	// ExecutionRole is required.
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups is optional.
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// DefaultSpaceSettingsJupyterServerAppSettings is optional.
	JupyterServerAppSettings *DefaultSpaceSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// DefaultSpaceSettingsKernelGatewayAppSettings is optional.
	KernelGatewayAppSettings *DefaultSpaceSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
}

type DefaultSpaceSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns is optional.
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository is min=0,max=10.
	CodeRepository []DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl is required.
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultSpaceSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns is optional.
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage is min=0,max=30.
	CustomImage []DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName is required.
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName is required.
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber is optional.
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettings struct {
	// ExecutionRole is required.
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups is optional.
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// DefaultUserSettingsCanvasAppSettings is optional.
	CanvasAppSettings *DefaultUserSettingsCanvasAppSettings `hcl:"canvas_app_settings,block"`
	// DefaultUserSettingsJupyterServerAppSettings is optional.
	JupyterServerAppSettings *DefaultUserSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// DefaultUserSettingsKernelGatewayAppSettings is optional.
	KernelGatewayAppSettings *DefaultUserSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
	// DefaultUserSettingsRSessionAppSettings is optional.
	RSessionAppSettings *DefaultUserSettingsRSessionAppSettings `hcl:"r_session_app_settings,block"`
	// DefaultUserSettingsRStudioServerProAppSettings is optional.
	RStudioServerProAppSettings *DefaultUserSettingsRStudioServerProAppSettings `hcl:"r_studio_server_pro_app_settings,block"`
	// DefaultUserSettingsSharingSettings is optional.
	SharingSettings *DefaultUserSettingsSharingSettings `hcl:"sharing_settings,block"`
	// DefaultUserSettingsTensorBoardAppSettings is optional.
	TensorBoardAppSettings *DefaultUserSettingsTensorBoardAppSettings `hcl:"tensor_board_app_settings,block"`
}

type DefaultUserSettingsCanvasAppSettings struct {
	// DefaultUserSettingsCanvasAppSettingsModelRegisterSettings is optional.
	ModelRegisterSettings *DefaultUserSettingsCanvasAppSettingsModelRegisterSettings `hcl:"model_register_settings,block"`
	// DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings is optional.
	TimeSeriesForecastingSettings *DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings `hcl:"time_series_forecasting_settings,block"`
}

type DefaultUserSettingsCanvasAppSettingsModelRegisterSettings struct {
	// CrossAccountModelRegisterRoleArn is optional.
	CrossAccountModelRegisterRoleArn terra.StringValue `hcl:"cross_account_model_register_role_arn,attr"`
	// Status is optional.
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings struct {
	// AmazonForecastRoleArn is optional.
	AmazonForecastRoleArn terra.StringValue `hcl:"amazon_forecast_role_arn,attr"`
	// Status is optional.
	Status terra.StringValue `hcl:"status,attr"`
}

type DefaultUserSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns is optional.
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsJupyterServerAppSettingsCodeRepository is min=0,max=10.
	CodeRepository []DefaultUserSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl is required.
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns is optional.
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// DefaultUserSettingsKernelGatewayAppSettingsCustomImage is min=0,max=30.
	CustomImage []DefaultUserSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName is required.
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName is required.
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber is optional.
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsRSessionAppSettings struct {
	// DefaultUserSettingsRSessionAppSettingsCustomImage is min=0,max=30.
	CustomImage []DefaultUserSettingsRSessionAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// DefaultUserSettingsRSessionAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *DefaultUserSettingsRSessionAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsRSessionAppSettingsCustomImage struct {
	// AppImageConfigName is required.
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName is required.
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber is optional.
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type DefaultUserSettingsRSessionAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DefaultUserSettingsRStudioServerProAppSettings struct {
	// AccessStatus is optional.
	AccessStatus terra.StringValue `hcl:"access_status,attr"`
	// UserGroup is optional.
	UserGroup terra.StringValue `hcl:"user_group,attr"`
}

type DefaultUserSettingsSharingSettings struct {
	// NotebookOutputOption is optional.
	NotebookOutputOption terra.StringValue `hcl:"notebook_output_option,attr"`
	// S3KmsKeyId is optional.
	S3KmsKeyId terra.StringValue `hcl:"s3_kms_key_id,attr"`
	// S3OutputPath is optional.
	S3OutputPath terra.StringValue `hcl:"s3_output_path,attr"`
}

type DefaultUserSettingsTensorBoardAppSettings struct {
	// DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type DomainSettings struct {
	// ExecutionRoleIdentityConfig is optional.
	ExecutionRoleIdentityConfig terra.StringValue `hcl:"execution_role_identity_config,attr"`
	// SecurityGroupIds is optional.
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// DomainSettingsRStudioServerProDomainSettings is optional.
	RStudioServerProDomainSettings *DomainSettingsRStudioServerProDomainSettings `hcl:"r_studio_server_pro_domain_settings,block"`
}

type DomainSettingsRStudioServerProDomainSettings struct {
	// DomainExecutionRoleArn is required.
	DomainExecutionRoleArn terra.StringValue `hcl:"domain_execution_role_arn,attr" validate:"required"`
	// RStudioConnectUrl is optional.
	RStudioConnectUrl terra.StringValue `hcl:"r_studio_connect_url,attr"`
	// RStudioPackageManagerUrl is optional.
	RStudioPackageManagerUrl terra.StringValue `hcl:"r_studio_package_manager_url,attr"`
	// DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type RetentionPolicy struct {
	// HomeEfsFileSystem is optional.
	HomeEfsFileSystem terra.StringValue `hcl:"home_efs_file_system,attr"`
}

type defaultSpaceSettingsAttributes struct {
	ref terra.Reference
}

func (dss defaultSpaceSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dss.ref, nil
}

func (dss defaultSpaceSettingsAttributes) InternalWithRef(ref terra.Reference) defaultSpaceSettingsAttributes {
	return defaultSpaceSettingsAttributes{ref: ref}
}

func (dss defaultSpaceSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dss.ref.InternalTokens()
}

func (dss defaultSpaceSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(dss.ref.Append("execution_role"))
}

func (dss defaultSpaceSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dss.ref.Append("security_groups"))
}

func (dss defaultSpaceSettingsAttributes) JupyterServerAppSettings() terra.ListValue[defaultSpaceSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultSpaceSettingsJupyterServerAppSettingsAttributes](dss.ref.Append("jupyter_server_app_settings"))
}

func (dss defaultSpaceSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[defaultSpaceSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultSpaceSettingsKernelGatewayAppSettingsAttributes](dss.ref.Append("kernel_gateway_app_settings"))
}

type defaultSpaceSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas defaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas defaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultSpaceSettingsJupyterServerAppSettingsAttributes {
	return defaultSpaceSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas defaultSpaceSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas defaultSpaceSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas defaultSpaceSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas defaultSpaceSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr defaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs defaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type defaultSpaceSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas defaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas defaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultSpaceSettingsKernelGatewayAppSettingsAttributes {
	return defaultSpaceSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas defaultSpaceSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas defaultSpaceSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas defaultSpaceSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas defaultSpaceSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci defaultSpaceSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs defaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type defaultUserSettingsAttributes struct {
	ref terra.Reference
}

func (dus defaultUserSettingsAttributes) InternalRef() (terra.Reference, error) {
	return dus.ref, nil
}

func (dus defaultUserSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsAttributes {
	return defaultUserSettingsAttributes{ref: ref}
}

func (dus defaultUserSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return dus.ref.InternalTokens()
}

func (dus defaultUserSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(dus.ref.Append("execution_role"))
}

func (dus defaultUserSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](dus.ref.Append("security_groups"))
}

func (dus defaultUserSettingsAttributes) CanvasAppSettings() terra.ListValue[defaultUserSettingsCanvasAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsCanvasAppSettingsAttributes](dus.ref.Append("canvas_app_settings"))
}

func (dus defaultUserSettingsAttributes) JupyterServerAppSettings() terra.ListValue[defaultUserSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsJupyterServerAppSettingsAttributes](dus.ref.Append("jupyter_server_app_settings"))
}

func (dus defaultUserSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[defaultUserSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsKernelGatewayAppSettingsAttributes](dus.ref.Append("kernel_gateway_app_settings"))
}

func (dus defaultUserSettingsAttributes) RSessionAppSettings() terra.ListValue[defaultUserSettingsRSessionAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsRSessionAppSettingsAttributes](dus.ref.Append("r_session_app_settings"))
}

func (dus defaultUserSettingsAttributes) RStudioServerProAppSettings() terra.ListValue[defaultUserSettingsRStudioServerProAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsRStudioServerProAppSettingsAttributes](dus.ref.Append("r_studio_server_pro_app_settings"))
}

func (dus defaultUserSettingsAttributes) SharingSettings() terra.ListValue[defaultUserSettingsSharingSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsSharingSettingsAttributes](dus.ref.Append("sharing_settings"))
}

func (dus defaultUserSettingsAttributes) TensorBoardAppSettings() terra.ListValue[defaultUserSettingsTensorBoardAppSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsTensorBoardAppSettingsAttributes](dus.ref.Append("tensor_board_app_settings"))
}

type defaultUserSettingsCanvasAppSettingsAttributes struct {
	ref terra.Reference
}

func (cas defaultUserSettingsCanvasAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return cas.ref, nil
}

func (cas defaultUserSettingsCanvasAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsCanvasAppSettingsAttributes {
	return defaultUserSettingsCanvasAppSettingsAttributes{ref: ref}
}

func (cas defaultUserSettingsCanvasAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cas.ref.InternalTokens()
}

func (cas defaultUserSettingsCanvasAppSettingsAttributes) ModelRegisterSettings() terra.ListValue[defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes](cas.ref.Append("model_register_settings"))
}

func (cas defaultUserSettingsCanvasAppSettingsAttributes) TimeSeriesForecastingSettings() terra.ListValue[defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes](cas.ref.Append("time_series_forecasting_settings"))
}

type defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes struct {
	ref terra.Reference
}

func (mrs defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mrs.ref, nil
}

func (mrs defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes {
	return defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes{ref: ref}
}

func (mrs defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrs.ref.InternalTokens()
}

func (mrs defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) CrossAccountModelRegisterRoleArn() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("cross_account_model_register_role_arn"))
}

func (mrs defaultUserSettingsCanvasAppSettingsModelRegisterSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("status"))
}

type defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes struct {
	ref terra.Reference
}

func (tsfs defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tsfs.ref, nil
}

func (tsfs defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes {
	return defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes{ref: ref}
}

func (tsfs defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsfs.ref.InternalTokens()
}

func (tsfs defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) AmazonForecastRoleArn() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("amazon_forecast_role_arn"))
}

func (tsfs defaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("status"))
}

type defaultUserSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas defaultUserSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas defaultUserSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsJupyterServerAppSettingsAttributes {
	return defaultUserSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas defaultUserSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas defaultUserSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas defaultUserSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas defaultUserSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr defaultUserSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs defaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type defaultUserSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas defaultUserSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas defaultUserSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsKernelGatewayAppSettingsAttributes {
	return defaultUserSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas defaultUserSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas defaultUserSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas defaultUserSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas defaultUserSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci defaultUserSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs defaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type defaultUserSettingsRSessionAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsas defaultUserSettingsRSessionAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsas.ref, nil
}

func (rsas defaultUserSettingsRSessionAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsRSessionAppSettingsAttributes {
	return defaultUserSettingsRSessionAppSettingsAttributes{ref: ref}
}

func (rsas defaultUserSettingsRSessionAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsas.ref.InternalTokens()
}

func (rsas defaultUserSettingsRSessionAppSettingsAttributes) CustomImage() terra.ListValue[defaultUserSettingsRSessionAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsRSessionAppSettingsCustomImageAttributes](rsas.ref.Append("custom_image"))
}

func (rsas defaultUserSettingsRSessionAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes](rsas.ref.Append("default_resource_spec"))
}

type defaultUserSettingsRSessionAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci defaultUserSettingsRSessionAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci defaultUserSettingsRSessionAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsRSessionAppSettingsCustomImageAttributes {
	return defaultUserSettingsRSessionAppSettingsCustomImageAttributes{ref: ref}
}

func (ci defaultUserSettingsRSessionAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci defaultUserSettingsRSessionAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci defaultUserSettingsRSessionAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci defaultUserSettingsRSessionAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes {
	return defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs defaultUserSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type defaultUserSettingsRStudioServerProAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsspas defaultUserSettingsRStudioServerProAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspas.ref, nil
}

func (rsspas defaultUserSettingsRStudioServerProAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsRStudioServerProAppSettingsAttributes {
	return defaultUserSettingsRStudioServerProAppSettingsAttributes{ref: ref}
}

func (rsspas defaultUserSettingsRStudioServerProAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspas.ref.InternalTokens()
}

func (rsspas defaultUserSettingsRStudioServerProAppSettingsAttributes) AccessStatus() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("access_status"))
}

func (rsspas defaultUserSettingsRStudioServerProAppSettingsAttributes) UserGroup() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("user_group"))
}

type defaultUserSettingsSharingSettingsAttributes struct {
	ref terra.Reference
}

func (ss defaultUserSettingsSharingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss defaultUserSettingsSharingSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsSharingSettingsAttributes {
	return defaultUserSettingsSharingSettingsAttributes{ref: ref}
}

func (ss defaultUserSettingsSharingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss defaultUserSettingsSharingSettingsAttributes) NotebookOutputOption() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("notebook_output_option"))
}

func (ss defaultUserSettingsSharingSettingsAttributes) S3KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_kms_key_id"))
}

func (ss defaultUserSettingsSharingSettingsAttributes) S3OutputPath() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_output_path"))
}

type defaultUserSettingsTensorBoardAppSettingsAttributes struct {
	ref terra.Reference
}

func (tbas defaultUserSettingsTensorBoardAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tbas.ref, nil
}

func (tbas defaultUserSettingsTensorBoardAppSettingsAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsTensorBoardAppSettingsAttributes {
	return defaultUserSettingsTensorBoardAppSettingsAttributes{ref: ref}
}

func (tbas defaultUserSettingsTensorBoardAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbas.ref.InternalTokens()
}

func (tbas defaultUserSettingsTensorBoardAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes](tbas.ref.Append("default_resource_spec"))
}

type defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes {
	return defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs defaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type domainSettingsAttributes struct {
	ref terra.Reference
}

func (ds domainSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ds.ref, nil
}

func (ds domainSettingsAttributes) InternalWithRef(ref terra.Reference) domainSettingsAttributes {
	return domainSettingsAttributes{ref: ref}
}

func (ds domainSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ds.ref.InternalTokens()
}

func (ds domainSettingsAttributes) ExecutionRoleIdentityConfig() terra.StringValue {
	return terra.ReferenceAsString(ds.ref.Append("execution_role_identity_config"))
}

func (ds domainSettingsAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ds.ref.Append("security_group_ids"))
}

func (ds domainSettingsAttributes) RStudioServerProDomainSettings() terra.ListValue[domainSettingsRStudioServerProDomainSettingsAttributes] {
	return terra.ReferenceAsList[domainSettingsRStudioServerProDomainSettingsAttributes](ds.ref.Append("r_studio_server_pro_domain_settings"))
}

type domainSettingsRStudioServerProDomainSettingsAttributes struct {
	ref terra.Reference
}

func (rsspds domainSettingsRStudioServerProDomainSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspds.ref, nil
}

func (rsspds domainSettingsRStudioServerProDomainSettingsAttributes) InternalWithRef(ref terra.Reference) domainSettingsRStudioServerProDomainSettingsAttributes {
	return domainSettingsRStudioServerProDomainSettingsAttributes{ref: ref}
}

func (rsspds domainSettingsRStudioServerProDomainSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspds.ref.InternalTokens()
}

func (rsspds domainSettingsRStudioServerProDomainSettingsAttributes) DomainExecutionRoleArn() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("domain_execution_role_arn"))
}

func (rsspds domainSettingsRStudioServerProDomainSettingsAttributes) RStudioConnectUrl() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("r_studio_connect_url"))
}

func (rsspds domainSettingsRStudioServerProDomainSettingsAttributes) RStudioPackageManagerUrl() terra.StringValue {
	return terra.ReferenceAsString(rsspds.ref.Append("r_studio_package_manager_url"))
}

func (rsspds domainSettingsRStudioServerProDomainSettingsAttributes) DefaultResourceSpec() terra.ListValue[domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes](rsspds.ref.Append("default_resource_spec"))
}

type domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes {
	return domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs domainSettingsRStudioServerProDomainSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type retentionPolicyAttributes struct {
	ref terra.Reference
}

func (rp retentionPolicyAttributes) InternalRef() (terra.Reference, error) {
	return rp.ref, nil
}

func (rp retentionPolicyAttributes) InternalWithRef(ref terra.Reference) retentionPolicyAttributes {
	return retentionPolicyAttributes{ref: ref}
}

func (rp retentionPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rp.ref.InternalTokens()
}

func (rp retentionPolicyAttributes) HomeEfsFileSystem() terra.StringValue {
	return terra.ReferenceAsString(rp.ref.Append("home_efs_file_system"))
}

type DefaultSpaceSettingsState struct {
	ExecutionRole            string                                              `json:"execution_role"`
	SecurityGroups           []string                                            `json:"security_groups"`
	JupyterServerAppSettings []DefaultSpaceSettingsJupyterServerAppSettingsState `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings []DefaultSpaceSettingsKernelGatewayAppSettingsState `json:"kernel_gateway_app_settings"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                               `json:"lifecycle_config_arns"`
	CodeRepository      []DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type DefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                               `json:"lifecycle_config_arns"`
	CustomImage         []DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsState struct {
	ExecutionRole               string                                                `json:"execution_role"`
	SecurityGroups              []string                                              `json:"security_groups"`
	CanvasAppSettings           []DefaultUserSettingsCanvasAppSettingsState           `json:"canvas_app_settings"`
	JupyterServerAppSettings    []DefaultUserSettingsJupyterServerAppSettingsState    `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings    []DefaultUserSettingsKernelGatewayAppSettingsState    `json:"kernel_gateway_app_settings"`
	RSessionAppSettings         []DefaultUserSettingsRSessionAppSettingsState         `json:"r_session_app_settings"`
	RStudioServerProAppSettings []DefaultUserSettingsRStudioServerProAppSettingsState `json:"r_studio_server_pro_app_settings"`
	SharingSettings             []DefaultUserSettingsSharingSettingsState             `json:"sharing_settings"`
	TensorBoardAppSettings      []DefaultUserSettingsTensorBoardAppSettingsState      `json:"tensor_board_app_settings"`
}

type DefaultUserSettingsCanvasAppSettingsState struct {
	ModelRegisterSettings         []DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsState         `json:"model_register_settings"`
	TimeSeriesForecastingSettings []DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState `json:"time_series_forecasting_settings"`
}

type DefaultUserSettingsCanvasAppSettingsModelRegisterSettingsState struct {
	CrossAccountModelRegisterRoleArn string `json:"cross_account_model_register_role_arn"`
	Status                           string `json:"status"`
}

type DefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState struct {
	AmazonForecastRoleArn string `json:"amazon_forecast_role_arn"`
	Status                string `json:"status"`
}

type DefaultUserSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                              `json:"lifecycle_config_arns"`
	CodeRepository      []DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type DefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                              `json:"lifecycle_config_arns"`
	CustomImage         []DefaultUserSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsRSessionAppSettingsState struct {
	CustomImage         []DefaultUserSettingsRSessionAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsRSessionAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type DefaultUserSettingsRSessionAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DefaultUserSettingsRStudioServerProAppSettingsState struct {
	AccessStatus string `json:"access_status"`
	UserGroup    string `json:"user_group"`
}

type DefaultUserSettingsSharingSettingsState struct {
	NotebookOutputOption string `json:"notebook_output_option"`
	S3KmsKeyId           string `json:"s3_kms_key_id"`
	S3OutputPath         string `json:"s3_output_path"`
}

type DefaultUserSettingsTensorBoardAppSettingsState struct {
	DefaultResourceSpec []DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type DomainSettingsState struct {
	ExecutionRoleIdentityConfig    string                                              `json:"execution_role_identity_config"`
	SecurityGroupIds               []string                                            `json:"security_group_ids"`
	RStudioServerProDomainSettings []DomainSettingsRStudioServerProDomainSettingsState `json:"r_studio_server_pro_domain_settings"`
}

type DomainSettingsRStudioServerProDomainSettingsState struct {
	DomainExecutionRoleArn   string                                                                 `json:"domain_execution_role_arn"`
	RStudioConnectUrl        string                                                                 `json:"r_studio_connect_url"`
	RStudioPackageManagerUrl string                                                                 `json:"r_studio_package_manager_url"`
	DefaultResourceSpec      []DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type DomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type RetentionPolicyState struct {
	HomeEfsFileSystem string `json:"home_efs_file_system"`
}
