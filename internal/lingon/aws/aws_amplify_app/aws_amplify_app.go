// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_amplify_app

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

/*
Resource is the resource aws_amplify_app.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type Resource struct {
	Name      string
	Args      Args
	state     *awsAmplifyAppState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (aaa *Resource) Type() string {
	return "aws_amplify_app"
}

// LocalName returns the local name for [Resource].
func (aaa *Resource) LocalName() string {
	return aaa.Name
}

// Configuration returns the configuration (args) for [Resource].
func (aaa *Resource) Configuration() interface{} {
	return aaa.Args
}

// DependOn is used for other resources to depend on [Resource].
func (aaa *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(aaa)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (aaa *Resource) Dependencies() terra.Dependencies {
	return aaa.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (aaa *Resource) LifecycleManagement() *terra.Lifecycle {
	return aaa.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (aaa *Resource) Attributes() awsAmplifyAppAttributes {
	return awsAmplifyAppAttributes{ref: terra.ReferenceResource(aaa)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (aaa *Resource) ImportState(state io.Reader) error {
	aaa.state = &awsAmplifyAppState{}
	if err := json.NewDecoder(state).Decode(aaa.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", aaa.Type(), aaa.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (aaa *Resource) State() (*awsAmplifyAppState, bool) {
	return aaa.state, aaa.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (aaa *Resource) StateMust() *awsAmplifyAppState {
	if aaa.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", aaa.Type(), aaa.LocalName()))
	}
	return aaa.state
}

// Args contains the configurations for aws_amplify_app.
type Args struct {
	// AccessToken is optional.
	AccessToken terra.StringValue `hcl:"access_token,attr"`
	// AutoBranchCreationPatterns is optional.
	AutoBranchCreationPatterns terra.SetValue[terra.StringValue] `hcl:"auto_branch_creation_patterns,attr"`
	// BasicAuthCredentials is optional.
	BasicAuthCredentials terra.StringValue `hcl:"basic_auth_credentials,attr"`
	// BuildSpec is optional.
	BuildSpec terra.StringValue `hcl:"build_spec,attr"`
	// Description is optional.
	Description terra.StringValue `hcl:"description,attr"`
	// EnableAutoBranchCreation is optional.
	EnableAutoBranchCreation terra.BoolValue `hcl:"enable_auto_branch_creation,attr"`
	// EnableBasicAuth is optional.
	EnableBasicAuth terra.BoolValue `hcl:"enable_basic_auth,attr"`
	// EnableBranchAutoBuild is optional.
	EnableBranchAutoBuild terra.BoolValue `hcl:"enable_branch_auto_build,attr"`
	// EnableBranchAutoDeletion is optional.
	EnableBranchAutoDeletion terra.BoolValue `hcl:"enable_branch_auto_deletion,attr"`
	// EnvironmentVariables is optional.
	EnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"environment_variables,attr"`
	// IamServiceRoleArn is optional.
	IamServiceRoleArn terra.StringValue `hcl:"iam_service_role_arn,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// OauthToken is optional.
	OauthToken terra.StringValue `hcl:"oauth_token,attr"`
	// Platform is optional.
	Platform terra.StringValue `hcl:"platform,attr"`
	// Repository is optional.
	Repository terra.StringValue `hcl:"repository,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// TagsAll is optional.
	TagsAll terra.MapValue[terra.StringValue] `hcl:"tags_all,attr"`
	// AutoBranchCreationConfig is optional.
	AutoBranchCreationConfig *AutoBranchCreationConfig `hcl:"auto_branch_creation_config,block"`
	// CustomRule is min=0.
	CustomRule []CustomRule `hcl:"custom_rule,block" validate:"min=0"`
}

type awsAmplifyAppAttributes struct {
	ref terra.Reference
}

// AccessToken returns a reference to field access_token of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) AccessToken() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("access_token"))
}

// Arn returns a reference to field arn of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("arn"))
}

// AutoBranchCreationPatterns returns a reference to field auto_branch_creation_patterns of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) AutoBranchCreationPatterns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aaa.ref.Append("auto_branch_creation_patterns"))
}

// BasicAuthCredentials returns a reference to field basic_auth_credentials of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) BasicAuthCredentials() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("basic_auth_credentials"))
}

// BuildSpec returns a reference to field build_spec of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) BuildSpec() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("build_spec"))
}

// DefaultDomain returns a reference to field default_domain of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) DefaultDomain() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("default_domain"))
}

// Description returns a reference to field description of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("description"))
}

// EnableAutoBranchCreation returns a reference to field enable_auto_branch_creation of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) EnableAutoBranchCreation() terra.BoolValue {
	return terra.ReferenceAsBool(aaa.ref.Append("enable_auto_branch_creation"))
}

// EnableBasicAuth returns a reference to field enable_basic_auth of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) EnableBasicAuth() terra.BoolValue {
	return terra.ReferenceAsBool(aaa.ref.Append("enable_basic_auth"))
}

// EnableBranchAutoBuild returns a reference to field enable_branch_auto_build of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) EnableBranchAutoBuild() terra.BoolValue {
	return terra.ReferenceAsBool(aaa.ref.Append("enable_branch_auto_build"))
}

// EnableBranchAutoDeletion returns a reference to field enable_branch_auto_deletion of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) EnableBranchAutoDeletion() terra.BoolValue {
	return terra.ReferenceAsBool(aaa.ref.Append("enable_branch_auto_deletion"))
}

// EnvironmentVariables returns a reference to field environment_variables of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) EnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaa.ref.Append("environment_variables"))
}

// IamServiceRoleArn returns a reference to field iam_service_role_arn of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) IamServiceRoleArn() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("iam_service_role_arn"))
}

// Id returns a reference to field id of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("id"))
}

// Name returns a reference to field name of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("name"))
}

// OauthToken returns a reference to field oauth_token of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) OauthToken() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("oauth_token"))
}

// Platform returns a reference to field platform of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) Platform() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("platform"))
}

// Repository returns a reference to field repository of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) Repository() terra.StringValue {
	return terra.ReferenceAsString(aaa.ref.Append("repository"))
}

// Tags returns a reference to field tags of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaa.ref.Append("tags"))
}

// TagsAll returns a reference to field tags_all of aws_amplify_app.
func (aaa awsAmplifyAppAttributes) TagsAll() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aaa.ref.Append("tags_all"))
}

func (aaa awsAmplifyAppAttributes) ProductionBranch() terra.ListValue[productionBranchAttributes] {
	return terra.ReferenceAsList[productionBranchAttributes](aaa.ref.Append("production_branch"))
}

func (aaa awsAmplifyAppAttributes) AutoBranchCreationConfig() terra.ListValue[autoBranchCreationConfigAttributes] {
	return terra.ReferenceAsList[autoBranchCreationConfigAttributes](aaa.ref.Append("auto_branch_creation_config"))
}

func (aaa awsAmplifyAppAttributes) CustomRule() terra.ListValue[customRuleAttributes] {
	return terra.ReferenceAsList[customRuleAttributes](aaa.ref.Append("custom_rule"))
}

type awsAmplifyAppState struct {
	AccessToken                string                          `json:"access_token"`
	Arn                        string                          `json:"arn"`
	AutoBranchCreationPatterns []string                        `json:"auto_branch_creation_patterns"`
	BasicAuthCredentials       string                          `json:"basic_auth_credentials"`
	BuildSpec                  string                          `json:"build_spec"`
	DefaultDomain              string                          `json:"default_domain"`
	Description                string                          `json:"description"`
	EnableAutoBranchCreation   bool                            `json:"enable_auto_branch_creation"`
	EnableBasicAuth            bool                            `json:"enable_basic_auth"`
	EnableBranchAutoBuild      bool                            `json:"enable_branch_auto_build"`
	EnableBranchAutoDeletion   bool                            `json:"enable_branch_auto_deletion"`
	EnvironmentVariables       map[string]string               `json:"environment_variables"`
	IamServiceRoleArn          string                          `json:"iam_service_role_arn"`
	Id                         string                          `json:"id"`
	Name                       string                          `json:"name"`
	OauthToken                 string                          `json:"oauth_token"`
	Platform                   string                          `json:"platform"`
	Repository                 string                          `json:"repository"`
	Tags                       map[string]string               `json:"tags"`
	TagsAll                    map[string]string               `json:"tags_all"`
	ProductionBranch           []ProductionBranchState         `json:"production_branch"`
	AutoBranchCreationConfig   []AutoBranchCreationConfigState `json:"auto_branch_creation_config"`
	CustomRule                 []CustomRuleState               `json:"custom_rule"`
}
