// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_amplify_app

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AutoBranchCreationConfig struct {
	// BasicAuthCredentials is optional.
	BasicAuthCredentials terra.StringValue `hcl:"basic_auth_credentials,attr"`
	// BuildSpec is optional.
	BuildSpec terra.StringValue `hcl:"build_spec,attr"`
	// EnableAutoBuild is optional.
	EnableAutoBuild terra.BoolValue `hcl:"enable_auto_build,attr"`
	// EnableBasicAuth is optional.
	EnableBasicAuth terra.BoolValue `hcl:"enable_basic_auth,attr"`
	// EnablePerformanceMode is optional.
	EnablePerformanceMode terra.BoolValue `hcl:"enable_performance_mode,attr"`
	// EnablePullRequestPreview is optional.
	EnablePullRequestPreview terra.BoolValue `hcl:"enable_pull_request_preview,attr"`
	// EnvironmentVariables is optional.
	EnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"environment_variables,attr"`
	// Framework is optional.
	Framework terra.StringValue `hcl:"framework,attr"`
	// PullRequestEnvironmentName is optional.
	PullRequestEnvironmentName terra.StringValue `hcl:"pull_request_environment_name,attr"`
	// Stage is optional.
	Stage terra.StringValue `hcl:"stage,attr"`
}

type CustomRule struct {
	// Condition is optional.
	Condition terra.StringValue `hcl:"condition,attr"`
	// Source is required.
	Source terra.StringValue `hcl:"source,attr" validate:"required"`
	// Status is optional.
	Status terra.StringValue `hcl:"status,attr"`
	// Target is required.
	Target terra.StringValue `hcl:"target,attr" validate:"required"`
}

type productionBranchAttributes struct {
	ref terra.Reference
}

func (pb productionBranchAttributes) InternalRef() (terra.Reference, error) {
	return pb.ref, nil
}

func (pb productionBranchAttributes) InternalWithRef(ref terra.Reference) productionBranchAttributes {
	return productionBranchAttributes{ref: ref}
}

func (pb productionBranchAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pb.ref.InternalTokens()
}

func (pb productionBranchAttributes) BranchName() terra.StringValue {
	return terra.ReferenceAsString(pb.ref.Append("branch_name"))
}

func (pb productionBranchAttributes) LastDeployTime() terra.StringValue {
	return terra.ReferenceAsString(pb.ref.Append("last_deploy_time"))
}

func (pb productionBranchAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(pb.ref.Append("status"))
}

func (pb productionBranchAttributes) ThumbnailUrl() terra.StringValue {
	return terra.ReferenceAsString(pb.ref.Append("thumbnail_url"))
}

type autoBranchCreationConfigAttributes struct {
	ref terra.Reference
}

func (abcc autoBranchCreationConfigAttributes) InternalRef() (terra.Reference, error) {
	return abcc.ref, nil
}

func (abcc autoBranchCreationConfigAttributes) InternalWithRef(ref terra.Reference) autoBranchCreationConfigAttributes {
	return autoBranchCreationConfigAttributes{ref: ref}
}

func (abcc autoBranchCreationConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return abcc.ref.InternalTokens()
}

func (abcc autoBranchCreationConfigAttributes) BasicAuthCredentials() terra.StringValue {
	return terra.ReferenceAsString(abcc.ref.Append("basic_auth_credentials"))
}

func (abcc autoBranchCreationConfigAttributes) BuildSpec() terra.StringValue {
	return terra.ReferenceAsString(abcc.ref.Append("build_spec"))
}

func (abcc autoBranchCreationConfigAttributes) EnableAutoBuild() terra.BoolValue {
	return terra.ReferenceAsBool(abcc.ref.Append("enable_auto_build"))
}

func (abcc autoBranchCreationConfigAttributes) EnableBasicAuth() terra.BoolValue {
	return terra.ReferenceAsBool(abcc.ref.Append("enable_basic_auth"))
}

func (abcc autoBranchCreationConfigAttributes) EnablePerformanceMode() terra.BoolValue {
	return terra.ReferenceAsBool(abcc.ref.Append("enable_performance_mode"))
}

func (abcc autoBranchCreationConfigAttributes) EnablePullRequestPreview() terra.BoolValue {
	return terra.ReferenceAsBool(abcc.ref.Append("enable_pull_request_preview"))
}

func (abcc autoBranchCreationConfigAttributes) EnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](abcc.ref.Append("environment_variables"))
}

func (abcc autoBranchCreationConfigAttributes) Framework() terra.StringValue {
	return terra.ReferenceAsString(abcc.ref.Append("framework"))
}

func (abcc autoBranchCreationConfigAttributes) PullRequestEnvironmentName() terra.StringValue {
	return terra.ReferenceAsString(abcc.ref.Append("pull_request_environment_name"))
}

func (abcc autoBranchCreationConfigAttributes) Stage() terra.StringValue {
	return terra.ReferenceAsString(abcc.ref.Append("stage"))
}

type customRuleAttributes struct {
	ref terra.Reference
}

func (cr customRuleAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr customRuleAttributes) InternalWithRef(ref terra.Reference) customRuleAttributes {
	return customRuleAttributes{ref: ref}
}

func (cr customRuleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr customRuleAttributes) Condition() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("condition"))
}

func (cr customRuleAttributes) Source() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("source"))
}

func (cr customRuleAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("status"))
}

func (cr customRuleAttributes) Target() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("target"))
}

type ProductionBranchState struct {
	BranchName     string `json:"branch_name"`
	LastDeployTime string `json:"last_deploy_time"`
	Status         string `json:"status"`
	ThumbnailUrl   string `json:"thumbnail_url"`
}

type AutoBranchCreationConfigState struct {
	BasicAuthCredentials       string            `json:"basic_auth_credentials"`
	BuildSpec                  string            `json:"build_spec"`
	EnableAutoBuild            bool              `json:"enable_auto_build"`
	EnableBasicAuth            bool              `json:"enable_basic_auth"`
	EnablePerformanceMode      bool              `json:"enable_performance_mode"`
	EnablePullRequestPreview   bool              `json:"enable_pull_request_preview"`
	EnvironmentVariables       map[string]string `json:"environment_variables"`
	Framework                  string            `json:"framework"`
	PullRequestEnvironmentName string            `json:"pull_request_environment_name"`
	Stage                      string            `json:"stage"`
}

type CustomRuleState struct {
	Condition string `json:"condition"`
	Source    string `json:"source"`
	Status    string `json:"status"`
	Target    string `json:"target"`
}
