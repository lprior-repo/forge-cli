// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_autoscaling_group

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type InitialLifecycleHook struct {
	// DefaultResult is optional.
	DefaultResult terra.StringValue `hcl:"default_result,attr"`
	// HeartbeatTimeout is optional.
	HeartbeatTimeout terra.NumberValue `hcl:"heartbeat_timeout,attr"`
	// LifecycleTransition is required.
	LifecycleTransition terra.StringValue `hcl:"lifecycle_transition,attr" validate:"required"`
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// NotificationMetadata is optional.
	NotificationMetadata terra.StringValue `hcl:"notification_metadata,attr"`
	// NotificationTargetArn is optional.
	NotificationTargetArn terra.StringValue `hcl:"notification_target_arn,attr"`
	// RoleArn is optional.
	RoleArn terra.StringValue `hcl:"role_arn,attr"`
}

type InstanceRefresh struct {
	// Strategy is required.
	Strategy terra.StringValue `hcl:"strategy,attr" validate:"required"`
	// Triggers is optional.
	Triggers terra.SetValue[terra.StringValue] `hcl:"triggers,attr"`
	// InstanceRefreshPreferences is optional.
	Preferences *InstanceRefreshPreferences `hcl:"preferences,block"`
}

type InstanceRefreshPreferences struct {
	// AutoRollback is optional.
	AutoRollback terra.BoolValue `hcl:"auto_rollback,attr"`
	// CheckpointDelay is optional.
	CheckpointDelay terra.StringValue `hcl:"checkpoint_delay,attr"`
	// CheckpointPercentages is optional.
	CheckpointPercentages terra.ListValue[terra.NumberValue] `hcl:"checkpoint_percentages,attr"`
	// InstanceWarmup is optional.
	InstanceWarmup terra.StringValue `hcl:"instance_warmup,attr"`
	// MinHealthyPercentage is optional.
	MinHealthyPercentage terra.NumberValue `hcl:"min_healthy_percentage,attr"`
	// SkipMatching is optional.
	SkipMatching terra.BoolValue `hcl:"skip_matching,attr"`
}

type LaunchTemplate struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Name is optional.
	Name terra.StringValue `hcl:"name,attr"`
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
}

type MixedInstancesPolicy struct {
	// MixedInstancesPolicyInstancesDistribution is optional.
	InstancesDistribution *MixedInstancesPolicyInstancesDistribution `hcl:"instances_distribution,block"`
	// MixedInstancesPolicyLaunchTemplate is required.
	LaunchTemplate *MixedInstancesPolicyLaunchTemplate `hcl:"launch_template,block" validate:"required"`
}

type MixedInstancesPolicyInstancesDistribution struct {
	// OnDemandAllocationStrategy is optional.
	OnDemandAllocationStrategy terra.StringValue `hcl:"on_demand_allocation_strategy,attr"`
	// OnDemandBaseCapacity is optional.
	OnDemandBaseCapacity terra.NumberValue `hcl:"on_demand_base_capacity,attr"`
	// OnDemandPercentageAboveBaseCapacity is optional.
	OnDemandPercentageAboveBaseCapacity terra.NumberValue `hcl:"on_demand_percentage_above_base_capacity,attr"`
	// SpotAllocationStrategy is optional.
	SpotAllocationStrategy terra.StringValue `hcl:"spot_allocation_strategy,attr"`
	// SpotInstancePools is optional.
	SpotInstancePools terra.NumberValue `hcl:"spot_instance_pools,attr"`
	// SpotMaxPrice is optional.
	SpotMaxPrice terra.StringValue `hcl:"spot_max_price,attr"`
}

type MixedInstancesPolicyLaunchTemplate struct {
	// MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification is required.
	LaunchTemplateSpecification *MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification `hcl:"launch_template_specification,block" validate:"required"`
	// MixedInstancesPolicyLaunchTemplateOverride is min=0.
	Override []MixedInstancesPolicyLaunchTemplateOverride `hcl:"override,block" validate:"min=0"`
}

type MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification struct {
	// LaunchTemplateId is optional.
	LaunchTemplateId terra.StringValue `hcl:"launch_template_id,attr"`
	// LaunchTemplateName is optional.
	LaunchTemplateName terra.StringValue `hcl:"launch_template_name,attr"`
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
}

type MixedInstancesPolicyLaunchTemplateOverride struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// WeightedCapacity is optional.
	WeightedCapacity terra.StringValue `hcl:"weighted_capacity,attr"`
	// MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirements is optional.
	InstanceRequirements *MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirements `hcl:"instance_requirements,block"`
	// MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecification is optional.
	LaunchTemplateSpecification *MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecification `hcl:"launch_template_specification,block"`
}

type MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirements struct {
	// AcceleratorManufacturers is optional.
	AcceleratorManufacturers terra.SetValue[terra.StringValue] `hcl:"accelerator_manufacturers,attr"`
	// AcceleratorNames is optional.
	AcceleratorNames terra.SetValue[terra.StringValue] `hcl:"accelerator_names,attr"`
	// AcceleratorTypes is optional.
	AcceleratorTypes terra.SetValue[terra.StringValue] `hcl:"accelerator_types,attr"`
	// AllowedInstanceTypes is optional.
	AllowedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"allowed_instance_types,attr"`
	// BareMetal is optional.
	BareMetal terra.StringValue `hcl:"bare_metal,attr"`
	// BurstablePerformance is optional.
	BurstablePerformance terra.StringValue `hcl:"burstable_performance,attr"`
	// CpuManufacturers is optional.
	CpuManufacturers terra.SetValue[terra.StringValue] `hcl:"cpu_manufacturers,attr"`
	// ExcludedInstanceTypes is optional.
	ExcludedInstanceTypes terra.SetValue[terra.StringValue] `hcl:"excluded_instance_types,attr"`
	// InstanceGenerations is optional.
	InstanceGenerations terra.SetValue[terra.StringValue] `hcl:"instance_generations,attr"`
	// LocalStorage is optional.
	LocalStorage terra.StringValue `hcl:"local_storage,attr"`
	// LocalStorageTypes is optional.
	LocalStorageTypes terra.SetValue[terra.StringValue] `hcl:"local_storage_types,attr"`
	// OnDemandMaxPricePercentageOverLowestPrice is optional.
	OnDemandMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"on_demand_max_price_percentage_over_lowest_price,attr"`
	// RequireHibernateSupport is optional.
	RequireHibernateSupport terra.BoolValue `hcl:"require_hibernate_support,attr"`
	// SpotMaxPricePercentageOverLowestPrice is optional.
	SpotMaxPricePercentageOverLowestPrice terra.NumberValue `hcl:"spot_max_price_percentage_over_lowest_price,attr"`
	// MixedInstancesPolicyLaunchTemplateC3678D5F is optional.
	AcceleratorCount *MixedInstancesPolicyLaunchTemplateC3678D5F `hcl:"accelerator_count,block"`
	// MixedInstancesPolicyLaunchTemplate6C0Fca9B is optional.
	AcceleratorTotalMemoryMib *MixedInstancesPolicyLaunchTemplate6C0Fca9B `hcl:"accelerator_total_memory_mib,block"`
	// MixedInstancesPolicyLaunchTemplate4Fae6914 is optional.
	BaselineEbsBandwidthMbps *MixedInstancesPolicyLaunchTemplate4Fae6914 `hcl:"baseline_ebs_bandwidth_mbps,block"`
	// MixedInstancesPolicyLaunchTemplate350Ca5Ee is optional.
	MemoryGibPerVcpu *MixedInstancesPolicyLaunchTemplate350Ca5Ee `hcl:"memory_gib_per_vcpu,block"`
	// MixedInstancesPolicyLaunchTemplate63E5E570 is optional.
	MemoryMib *MixedInstancesPolicyLaunchTemplate63E5E570 `hcl:"memory_mib,block"`
	// MixedInstancesPolicyLaunchTemplate8C621E58 is optional.
	NetworkBandwidthGbps *MixedInstancesPolicyLaunchTemplate8C621E58 `hcl:"network_bandwidth_gbps,block"`
	// MixedInstancesPolicyLaunchTemplateA5F576Dc is optional.
	NetworkInterfaceCount *MixedInstancesPolicyLaunchTemplateA5F576Dc `hcl:"network_interface_count,block"`
	// MixedInstancesPolicyLaunchTemplate3345B281 is optional.
	TotalLocalStorageGb *MixedInstancesPolicyLaunchTemplate3345B281 `hcl:"total_local_storage_gb,block"`
	// MixedInstancesPolicyLaunchTemplate106Aadb5 is optional.
	VcpuCount *MixedInstancesPolicyLaunchTemplate106Aadb5 `hcl:"vcpu_count,block"`
}

type MixedInstancesPolicyLaunchTemplateC3678D5F struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate6C0Fca9B struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate4Fae6914 struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate350Ca5Ee struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate63E5E570 struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate8C621E58 struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplateA5F576Dc struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate3345B281 struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplate106Aadb5 struct {
	// Max is optional.
	Max terra.NumberValue `hcl:"max,attr"`
	// Min is optional.
	Min terra.NumberValue `hcl:"min,attr"`
}

type MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecification struct {
	// LaunchTemplateId is optional.
	LaunchTemplateId terra.StringValue `hcl:"launch_template_id,attr"`
	// LaunchTemplateName is optional.
	LaunchTemplateName terra.StringValue `hcl:"launch_template_name,attr"`
	// Version is optional.
	Version terra.StringValue `hcl:"version,attr"`
}

type Tag struct {
	// Key is required.
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// PropagateAtLaunch is required.
	PropagateAtLaunch terra.BoolValue `hcl:"propagate_at_launch,attr" validate:"required"`
	// Value is required.
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type Timeouts struct {
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type WarmPool struct {
	// MaxGroupPreparedCapacity is optional.
	MaxGroupPreparedCapacity terra.NumberValue `hcl:"max_group_prepared_capacity,attr"`
	// MinSize is optional.
	MinSize terra.NumberValue `hcl:"min_size,attr"`
	// PoolState is optional.
	PoolState terra.StringValue `hcl:"pool_state,attr"`
	// WarmPoolInstanceReusePolicy is optional.
	InstanceReusePolicy *WarmPoolInstanceReusePolicy `hcl:"instance_reuse_policy,block"`
}

type WarmPoolInstanceReusePolicy struct {
	// ReuseOnScaleIn is optional.
	ReuseOnScaleIn terra.BoolValue `hcl:"reuse_on_scale_in,attr"`
}

type initialLifecycleHookAttributes struct {
	ref terra.Reference
}

func (ilh initialLifecycleHookAttributes) InternalRef() (terra.Reference, error) {
	return ilh.ref, nil
}

func (ilh initialLifecycleHookAttributes) InternalWithRef(ref terra.Reference) initialLifecycleHookAttributes {
	return initialLifecycleHookAttributes{ref: ref}
}

func (ilh initialLifecycleHookAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ilh.ref.InternalTokens()
}

func (ilh initialLifecycleHookAttributes) DefaultResult() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("default_result"))
}

func (ilh initialLifecycleHookAttributes) HeartbeatTimeout() terra.NumberValue {
	return terra.ReferenceAsNumber(ilh.ref.Append("heartbeat_timeout"))
}

func (ilh initialLifecycleHookAttributes) LifecycleTransition() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("lifecycle_transition"))
}

func (ilh initialLifecycleHookAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("name"))
}

func (ilh initialLifecycleHookAttributes) NotificationMetadata() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("notification_metadata"))
}

func (ilh initialLifecycleHookAttributes) NotificationTargetArn() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("notification_target_arn"))
}

func (ilh initialLifecycleHookAttributes) RoleArn() terra.StringValue {
	return terra.ReferenceAsString(ilh.ref.Append("role_arn"))
}

type instanceRefreshAttributes struct {
	ref terra.Reference
}

func (ir instanceRefreshAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir instanceRefreshAttributes) InternalWithRef(ref terra.Reference) instanceRefreshAttributes {
	return instanceRefreshAttributes{ref: ref}
}

func (ir instanceRefreshAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir instanceRefreshAttributes) Strategy() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("strategy"))
}

func (ir instanceRefreshAttributes) Triggers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("triggers"))
}

func (ir instanceRefreshAttributes) Preferences() terra.ListValue[instanceRefreshPreferencesAttributes] {
	return terra.ReferenceAsList[instanceRefreshPreferencesAttributes](ir.ref.Append("preferences"))
}

type instanceRefreshPreferencesAttributes struct {
	ref terra.Reference
}

func (p instanceRefreshPreferencesAttributes) InternalRef() (terra.Reference, error) {
	return p.ref, nil
}

func (p instanceRefreshPreferencesAttributes) InternalWithRef(ref terra.Reference) instanceRefreshPreferencesAttributes {
	return instanceRefreshPreferencesAttributes{ref: ref}
}

func (p instanceRefreshPreferencesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return p.ref.InternalTokens()
}

func (p instanceRefreshPreferencesAttributes) AutoRollback() terra.BoolValue {
	return terra.ReferenceAsBool(p.ref.Append("auto_rollback"))
}

func (p instanceRefreshPreferencesAttributes) CheckpointDelay() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("checkpoint_delay"))
}

func (p instanceRefreshPreferencesAttributes) CheckpointPercentages() terra.ListValue[terra.NumberValue] {
	return terra.ReferenceAsList[terra.NumberValue](p.ref.Append("checkpoint_percentages"))
}

func (p instanceRefreshPreferencesAttributes) InstanceWarmup() terra.StringValue {
	return terra.ReferenceAsString(p.ref.Append("instance_warmup"))
}

func (p instanceRefreshPreferencesAttributes) MinHealthyPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(p.ref.Append("min_healthy_percentage"))
}

func (p instanceRefreshPreferencesAttributes) SkipMatching() terra.BoolValue {
	return terra.ReferenceAsBool(p.ref.Append("skip_matching"))
}

type launchTemplateAttributes struct {
	ref terra.Reference
}

func (lt launchTemplateAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt launchTemplateAttributes) InternalWithRef(ref terra.Reference) launchTemplateAttributes {
	return launchTemplateAttributes{ref: ref}
}

func (lt launchTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt launchTemplateAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("id"))
}

func (lt launchTemplateAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

func (lt launchTemplateAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("version"))
}

type mixedInstancesPolicyAttributes struct {
	ref terra.Reference
}

func (mip mixedInstancesPolicyAttributes) InternalRef() (terra.Reference, error) {
	return mip.ref, nil
}

func (mip mixedInstancesPolicyAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyAttributes {
	return mixedInstancesPolicyAttributes{ref: ref}
}

func (mip mixedInstancesPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mip.ref.InternalTokens()
}

func (mip mixedInstancesPolicyAttributes) InstancesDistribution() terra.ListValue[mixedInstancesPolicyInstancesDistributionAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyInstancesDistributionAttributes](mip.ref.Append("instances_distribution"))
}

func (mip mixedInstancesPolicyAttributes) LaunchTemplate() terra.ListValue[mixedInstancesPolicyLaunchTemplateAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplateAttributes](mip.ref.Append("launch_template"))
}

type mixedInstancesPolicyInstancesDistributionAttributes struct {
	ref terra.Reference
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) InternalRef() (terra.Reference, error) {
	return id.ref, nil
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyInstancesDistributionAttributes {
	return mixedInstancesPolicyInstancesDistributionAttributes{ref: ref}
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return id.ref.InternalTokens()
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) OnDemandAllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("on_demand_allocation_strategy"))
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) OnDemandBaseCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("on_demand_base_capacity"))
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) OnDemandPercentageAboveBaseCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("on_demand_percentage_above_base_capacity"))
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) SpotAllocationStrategy() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("spot_allocation_strategy"))
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) SpotInstancePools() terra.NumberValue {
	return terra.ReferenceAsNumber(id.ref.Append("spot_instance_pools"))
}

func (id mixedInstancesPolicyInstancesDistributionAttributes) SpotMaxPrice() terra.StringValue {
	return terra.ReferenceAsString(id.ref.Append("spot_max_price"))
}

type mixedInstancesPolicyLaunchTemplateAttributes struct {
	ref terra.Reference
}

func (lt mixedInstancesPolicyLaunchTemplateAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt mixedInstancesPolicyLaunchTemplateAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplateAttributes {
	return mixedInstancesPolicyLaunchTemplateAttributes{ref: ref}
}

func (lt mixedInstancesPolicyLaunchTemplateAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt mixedInstancesPolicyLaunchTemplateAttributes) LaunchTemplateSpecification() terra.ListValue[mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes](lt.ref.Append("launch_template_specification"))
}

func (lt mixedInstancesPolicyLaunchTemplateAttributes) Override() terra.ListValue[mixedInstancesPolicyLaunchTemplateOverrideAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplateOverrideAttributes](lt.ref.Append("override"))
}

type mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes {
	return mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) LaunchTemplateId() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_id"))
}

func (lts mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) LaunchTemplateName() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_name"))
}

func (lts mixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type mixedInstancesPolicyLaunchTemplateOverrideAttributes struct {
	ref terra.Reference
}

func (o mixedInstancesPolicyLaunchTemplateOverrideAttributes) InternalRef() (terra.Reference, error) {
	return o.ref, nil
}

func (o mixedInstancesPolicyLaunchTemplateOverrideAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplateOverrideAttributes {
	return mixedInstancesPolicyLaunchTemplateOverrideAttributes{ref: ref}
}

func (o mixedInstancesPolicyLaunchTemplateOverrideAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return o.ref.InternalTokens()
}

func (o mixedInstancesPolicyLaunchTemplateOverrideAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("instance_type"))
}

func (o mixedInstancesPolicyLaunchTemplateOverrideAttributes) WeightedCapacity() terra.StringValue {
	return terra.ReferenceAsString(o.ref.Append("weighted_capacity"))
}

func (o mixedInstancesPolicyLaunchTemplateOverrideAttributes) InstanceRequirements() terra.ListValue[mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes](o.ref.Append("instance_requirements"))
}

func (o mixedInstancesPolicyLaunchTemplateOverrideAttributes) LaunchTemplateSpecification() terra.ListValue[mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes](o.ref.Append("launch_template_specification"))
}

type mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes struct {
	ref terra.Reference
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InternalRef() (terra.Reference, error) {
	return ir.ref, nil
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes {
	return mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes{ref: ref}
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ir.ref.InternalTokens()
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_manufacturers"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorNames() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_names"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("accelerator_types"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AllowedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("allowed_instance_types"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) BareMetal() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("bare_metal"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) BurstablePerformance() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("burstable_performance"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) CpuManufacturers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("cpu_manufacturers"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) ExcludedInstanceTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("excluded_instance_types"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) InstanceGenerations() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("instance_generations"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) LocalStorage() terra.StringValue {
	return terra.ReferenceAsString(ir.ref.Append("local_storage"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) LocalStorageTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ir.ref.Append("local_storage_types"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) OnDemandMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("on_demand_max_price_percentage_over_lowest_price"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) RequireHibernateSupport() terra.BoolValue {
	return terra.ReferenceAsBool(ir.ref.Append("require_hibernate_support"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) SpotMaxPricePercentageOverLowestPrice() terra.NumberValue {
	return terra.ReferenceAsNumber(ir.ref.Append("spot_max_price_percentage_over_lowest_price"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorCount() terra.ListValue[mixedInstancesPolicyLaunchTemplateC3678D5FAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplateC3678D5FAttributes](ir.ref.Append("accelerator_count"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) AcceleratorTotalMemoryMib() terra.ListValue[mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes](ir.ref.Append("accelerator_total_memory_mib"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) BaselineEbsBandwidthMbps() terra.ListValue[mixedInstancesPolicyLaunchTemplate4Fae6914Attributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplate4Fae6914Attributes](ir.ref.Append("baseline_ebs_bandwidth_mbps"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) MemoryGibPerVcpu() terra.ListValue[mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes](ir.ref.Append("memory_gib_per_vcpu"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) MemoryMib() terra.ListValue[mixedInstancesPolicyLaunchTemplate63E5E570Attributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplate63E5E570Attributes](ir.ref.Append("memory_mib"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) NetworkBandwidthGbps() terra.ListValue[mixedInstancesPolicyLaunchTemplate8C621E58Attributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplate8C621E58Attributes](ir.ref.Append("network_bandwidth_gbps"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) NetworkInterfaceCount() terra.ListValue[mixedInstancesPolicyLaunchTemplateA5F576DcAttributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplateA5F576DcAttributes](ir.ref.Append("network_interface_count"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) TotalLocalStorageGb() terra.ListValue[mixedInstancesPolicyLaunchTemplate3345B281Attributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplate3345B281Attributes](ir.ref.Append("total_local_storage_gb"))
}

func (ir mixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsAttributes) VcpuCount() terra.ListValue[mixedInstancesPolicyLaunchTemplate106Aadb5Attributes] {
	return terra.ReferenceAsList[mixedInstancesPolicyLaunchTemplate106Aadb5Attributes](ir.ref.Append("vcpu_count"))
}

type mixedInstancesPolicyLaunchTemplateC3678D5FAttributes struct {
	ref terra.Reference
}

func (ac mixedInstancesPolicyLaunchTemplateC3678D5FAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac mixedInstancesPolicyLaunchTemplateC3678D5FAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplateC3678D5FAttributes {
	return mixedInstancesPolicyLaunchTemplateC3678D5FAttributes{ref: ref}
}

func (ac mixedInstancesPolicyLaunchTemplateC3678D5FAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac mixedInstancesPolicyLaunchTemplateC3678D5FAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("max"))
}

func (ac mixedInstancesPolicyLaunchTemplateC3678D5FAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(ac.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes struct {
	ref terra.Reference
}

func (atmm mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) InternalRef() (terra.Reference, error) {
	return atmm.ref, nil
}

func (atmm mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes {
	return mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes{ref: ref}
}

func (atmm mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return atmm.ref.InternalTokens()
}

func (atmm mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("max"))
}

func (atmm mixedInstancesPolicyLaunchTemplate6C0Fca9BAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(atmm.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplate4Fae6914Attributes struct {
	ref terra.Reference
}

func (bebm mixedInstancesPolicyLaunchTemplate4Fae6914Attributes) InternalRef() (terra.Reference, error) {
	return bebm.ref, nil
}

func (bebm mixedInstancesPolicyLaunchTemplate4Fae6914Attributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplate4Fae6914Attributes {
	return mixedInstancesPolicyLaunchTemplate4Fae6914Attributes{ref: ref}
}

func (bebm mixedInstancesPolicyLaunchTemplate4Fae6914Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return bebm.ref.InternalTokens()
}

func (bebm mixedInstancesPolicyLaunchTemplate4Fae6914Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("max"))
}

func (bebm mixedInstancesPolicyLaunchTemplate4Fae6914Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(bebm.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes struct {
	ref terra.Reference
}

func (mgpv mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) InternalRef() (terra.Reference, error) {
	return mgpv.ref, nil
}

func (mgpv mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes {
	return mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes{ref: ref}
}

func (mgpv mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mgpv.ref.InternalTokens()
}

func (mgpv mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("max"))
}

func (mgpv mixedInstancesPolicyLaunchTemplate350Ca5EeAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mgpv.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplate63E5E570Attributes struct {
	ref terra.Reference
}

func (mm mixedInstancesPolicyLaunchTemplate63E5E570Attributes) InternalRef() (terra.Reference, error) {
	return mm.ref, nil
}

func (mm mixedInstancesPolicyLaunchTemplate63E5E570Attributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplate63E5E570Attributes {
	return mixedInstancesPolicyLaunchTemplate63E5E570Attributes{ref: ref}
}

func (mm mixedInstancesPolicyLaunchTemplate63E5E570Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return mm.ref.InternalTokens()
}

func (mm mixedInstancesPolicyLaunchTemplate63E5E570Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("max"))
}

func (mm mixedInstancesPolicyLaunchTemplate63E5E570Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(mm.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplate8C621E58Attributes struct {
	ref terra.Reference
}

func (nbg mixedInstancesPolicyLaunchTemplate8C621E58Attributes) InternalRef() (terra.Reference, error) {
	return nbg.ref, nil
}

func (nbg mixedInstancesPolicyLaunchTemplate8C621E58Attributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplate8C621E58Attributes {
	return mixedInstancesPolicyLaunchTemplate8C621E58Attributes{ref: ref}
}

func (nbg mixedInstancesPolicyLaunchTemplate8C621E58Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return nbg.ref.InternalTokens()
}

func (nbg mixedInstancesPolicyLaunchTemplate8C621E58Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("max"))
}

func (nbg mixedInstancesPolicyLaunchTemplate8C621E58Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nbg.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplateA5F576DcAttributes struct {
	ref terra.Reference
}

func (nic mixedInstancesPolicyLaunchTemplateA5F576DcAttributes) InternalRef() (terra.Reference, error) {
	return nic.ref, nil
}

func (nic mixedInstancesPolicyLaunchTemplateA5F576DcAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplateA5F576DcAttributes {
	return mixedInstancesPolicyLaunchTemplateA5F576DcAttributes{ref: ref}
}

func (nic mixedInstancesPolicyLaunchTemplateA5F576DcAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return nic.ref.InternalTokens()
}

func (nic mixedInstancesPolicyLaunchTemplateA5F576DcAttributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("max"))
}

func (nic mixedInstancesPolicyLaunchTemplateA5F576DcAttributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(nic.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplate3345B281Attributes struct {
	ref terra.Reference
}

func (tlsg mixedInstancesPolicyLaunchTemplate3345B281Attributes) InternalRef() (terra.Reference, error) {
	return tlsg.ref, nil
}

func (tlsg mixedInstancesPolicyLaunchTemplate3345B281Attributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplate3345B281Attributes {
	return mixedInstancesPolicyLaunchTemplate3345B281Attributes{ref: ref}
}

func (tlsg mixedInstancesPolicyLaunchTemplate3345B281Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return tlsg.ref.InternalTokens()
}

func (tlsg mixedInstancesPolicyLaunchTemplate3345B281Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("max"))
}

func (tlsg mixedInstancesPolicyLaunchTemplate3345B281Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(tlsg.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplate106Aadb5Attributes struct {
	ref terra.Reference
}

func (vc mixedInstancesPolicyLaunchTemplate106Aadb5Attributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc mixedInstancesPolicyLaunchTemplate106Aadb5Attributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplate106Aadb5Attributes {
	return mixedInstancesPolicyLaunchTemplate106Aadb5Attributes{ref: ref}
}

func (vc mixedInstancesPolicyLaunchTemplate106Aadb5Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc mixedInstancesPolicyLaunchTemplate106Aadb5Attributes) Max() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("max"))
}

func (vc mixedInstancesPolicyLaunchTemplate106Aadb5Attributes) Min() terra.NumberValue {
	return terra.ReferenceAsNumber(vc.ref.Append("min"))
}

type mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes struct {
	ref terra.Reference
}

func (lts mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) InternalRef() (terra.Reference, error) {
	return lts.ref, nil
}

func (lts mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) InternalWithRef(ref terra.Reference) mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes {
	return mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes{ref: ref}
}

func (lts mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lts.ref.InternalTokens()
}

func (lts mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) LaunchTemplateId() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_id"))
}

func (lts mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) LaunchTemplateName() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("launch_template_name"))
}

func (lts mixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationAttributes) Version() terra.StringValue {
	return terra.ReferenceAsString(lts.ref.Append("version"))
}

type tagAttributes struct {
	ref terra.Reference
}

func (t tagAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t tagAttributes) InternalWithRef(ref terra.Reference) tagAttributes {
	return tagAttributes{ref: ref}
}

func (t tagAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t tagAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("key"))
}

func (t tagAttributes) PropagateAtLaunch() terra.BoolValue {
	return terra.ReferenceAsBool(t.ref.Append("propagate_at_launch"))
}

func (t tagAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("value"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type warmPoolAttributes struct {
	ref terra.Reference
}

func (wp warmPoolAttributes) InternalRef() (terra.Reference, error) {
	return wp.ref, nil
}

func (wp warmPoolAttributes) InternalWithRef(ref terra.Reference) warmPoolAttributes {
	return warmPoolAttributes{ref: ref}
}

func (wp warmPoolAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return wp.ref.InternalTokens()
}

func (wp warmPoolAttributes) MaxGroupPreparedCapacity() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("max_group_prepared_capacity"))
}

func (wp warmPoolAttributes) MinSize() terra.NumberValue {
	return terra.ReferenceAsNumber(wp.ref.Append("min_size"))
}

func (wp warmPoolAttributes) PoolState() terra.StringValue {
	return terra.ReferenceAsString(wp.ref.Append("pool_state"))
}

func (wp warmPoolAttributes) InstanceReusePolicy() terra.ListValue[warmPoolInstanceReusePolicyAttributes] {
	return terra.ReferenceAsList[warmPoolInstanceReusePolicyAttributes](wp.ref.Append("instance_reuse_policy"))
}

type warmPoolInstanceReusePolicyAttributes struct {
	ref terra.Reference
}

func (irp warmPoolInstanceReusePolicyAttributes) InternalRef() (terra.Reference, error) {
	return irp.ref, nil
}

func (irp warmPoolInstanceReusePolicyAttributes) InternalWithRef(ref terra.Reference) warmPoolInstanceReusePolicyAttributes {
	return warmPoolInstanceReusePolicyAttributes{ref: ref}
}

func (irp warmPoolInstanceReusePolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return irp.ref.InternalTokens()
}

func (irp warmPoolInstanceReusePolicyAttributes) ReuseOnScaleIn() terra.BoolValue {
	return terra.ReferenceAsBool(irp.ref.Append("reuse_on_scale_in"))
}

type InitialLifecycleHookState struct {
	DefaultResult         string  `json:"default_result"`
	HeartbeatTimeout      float64 `json:"heartbeat_timeout"`
	LifecycleTransition   string  `json:"lifecycle_transition"`
	Name                  string  `json:"name"`
	NotificationMetadata  string  `json:"notification_metadata"`
	NotificationTargetArn string  `json:"notification_target_arn"`
	RoleArn               string  `json:"role_arn"`
}

type InstanceRefreshState struct {
	Strategy    string                            `json:"strategy"`
	Triggers    []string                          `json:"triggers"`
	Preferences []InstanceRefreshPreferencesState `json:"preferences"`
}

type InstanceRefreshPreferencesState struct {
	AutoRollback          bool      `json:"auto_rollback"`
	CheckpointDelay       string    `json:"checkpoint_delay"`
	CheckpointPercentages []float64 `json:"checkpoint_percentages"`
	InstanceWarmup        string    `json:"instance_warmup"`
	MinHealthyPercentage  float64   `json:"min_healthy_percentage"`
	SkipMatching          bool      `json:"skip_matching"`
}

type LaunchTemplateState struct {
	Id      string `json:"id"`
	Name    string `json:"name"`
	Version string `json:"version"`
}

type MixedInstancesPolicyState struct {
	InstancesDistribution []MixedInstancesPolicyInstancesDistributionState `json:"instances_distribution"`
	LaunchTemplate        []MixedInstancesPolicyLaunchTemplateState        `json:"launch_template"`
}

type MixedInstancesPolicyInstancesDistributionState struct {
	OnDemandAllocationStrategy          string  `json:"on_demand_allocation_strategy"`
	OnDemandBaseCapacity                float64 `json:"on_demand_base_capacity"`
	OnDemandPercentageAboveBaseCapacity float64 `json:"on_demand_percentage_above_base_capacity"`
	SpotAllocationStrategy              string  `json:"spot_allocation_strategy"`
	SpotInstancePools                   float64 `json:"spot_instance_pools"`
	SpotMaxPrice                        string  `json:"spot_max_price"`
}

type MixedInstancesPolicyLaunchTemplateState struct {
	LaunchTemplateSpecification []MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationState `json:"launch_template_specification"`
	Override                    []MixedInstancesPolicyLaunchTemplateOverrideState                    `json:"override"`
}

type MixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationState struct {
	LaunchTemplateId   string `json:"launch_template_id"`
	LaunchTemplateName string `json:"launch_template_name"`
	Version            string `json:"version"`
}

type MixedInstancesPolicyLaunchTemplateOverrideState struct {
	InstanceType                string                                                                       `json:"instance_type"`
	WeightedCapacity            string                                                                       `json:"weighted_capacity"`
	InstanceRequirements        []MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsState        `json:"instance_requirements"`
	LaunchTemplateSpecification []MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationState `json:"launch_template_specification"`
}

type MixedInstancesPolicyLaunchTemplateOverrideInstanceRequirementsState struct {
	AcceleratorManufacturers                  []string                                          `json:"accelerator_manufacturers"`
	AcceleratorNames                          []string                                          `json:"accelerator_names"`
	AcceleratorTypes                          []string                                          `json:"accelerator_types"`
	AllowedInstanceTypes                      []string                                          `json:"allowed_instance_types"`
	BareMetal                                 string                                            `json:"bare_metal"`
	BurstablePerformance                      string                                            `json:"burstable_performance"`
	CpuManufacturers                          []string                                          `json:"cpu_manufacturers"`
	ExcludedInstanceTypes                     []string                                          `json:"excluded_instance_types"`
	InstanceGenerations                       []string                                          `json:"instance_generations"`
	LocalStorage                              string                                            `json:"local_storage"`
	LocalStorageTypes                         []string                                          `json:"local_storage_types"`
	OnDemandMaxPricePercentageOverLowestPrice float64                                           `json:"on_demand_max_price_percentage_over_lowest_price"`
	RequireHibernateSupport                   bool                                              `json:"require_hibernate_support"`
	SpotMaxPricePercentageOverLowestPrice     float64                                           `json:"spot_max_price_percentage_over_lowest_price"`
	AcceleratorCount                          []MixedInstancesPolicyLaunchTemplateC3678D5FState `json:"accelerator_count"`
	AcceleratorTotalMemoryMib                 []MixedInstancesPolicyLaunchTemplate6C0Fca9BState `json:"accelerator_total_memory_mib"`
	BaselineEbsBandwidthMbps                  []MixedInstancesPolicyLaunchTemplate4Fae6914State `json:"baseline_ebs_bandwidth_mbps"`
	MemoryGibPerVcpu                          []MixedInstancesPolicyLaunchTemplate350Ca5EeState `json:"memory_gib_per_vcpu"`
	MemoryMib                                 []MixedInstancesPolicyLaunchTemplate63E5E570State `json:"memory_mib"`
	NetworkBandwidthGbps                      []MixedInstancesPolicyLaunchTemplate8C621E58State `json:"network_bandwidth_gbps"`
	NetworkInterfaceCount                     []MixedInstancesPolicyLaunchTemplateA5F576DcState `json:"network_interface_count"`
	TotalLocalStorageGb                       []MixedInstancesPolicyLaunchTemplate3345B281State `json:"total_local_storage_gb"`
	VcpuCount                                 []MixedInstancesPolicyLaunchTemplate106Aadb5State `json:"vcpu_count"`
}

type MixedInstancesPolicyLaunchTemplateC3678D5FState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate6C0Fca9BState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate4Fae6914State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate350Ca5EeState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate63E5E570State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate8C621E58State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplateA5F576DcState struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate3345B281State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplate106Aadb5State struct {
	Max float64 `json:"max"`
	Min float64 `json:"min"`
}

type MixedInstancesPolicyLaunchTemplateOverrideLaunchTemplateSpecificationState struct {
	LaunchTemplateId   string `json:"launch_template_id"`
	LaunchTemplateName string `json:"launch_template_name"`
	Version            string `json:"version"`
}

type TagState struct {
	Key               string `json:"key"`
	PropagateAtLaunch bool   `json:"propagate_at_launch"`
	Value             string `json:"value"`
}

type TimeoutsState struct {
	Delete string `json:"delete"`
	Update string `json:"update"`
}

type WarmPoolState struct {
	MaxGroupPreparedCapacity float64                            `json:"max_group_prepared_capacity"`
	MinSize                  float64                            `json:"min_size"`
	PoolState                string                             `json:"pool_state"`
	InstanceReusePolicy      []WarmPoolInstanceReusePolicyState `json:"instance_reuse_policy"`
}

type WarmPoolInstanceReusePolicyState struct {
	ReuseOnScaleIn bool `json:"reuse_on_scale_in"`
}
