// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_client_vpn_endpoint

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_ec2_client_vpn_endpoint.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (aecve *DataSource) DataSource() string {
	return "aws_ec2_client_vpn_endpoint"
}

// LocalName returns the local name for [DataSource].
func (aecve *DataSource) LocalName() string {
	return aecve.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (aecve *DataSource) Configuration() interface{} {
	return aecve.Args
}

// Attributes returns the attributes for [DataSource].
func (aecve *DataSource) Attributes() dataAwsEc2ClientVpnEndpointAttributes {
	return dataAwsEc2ClientVpnEndpointAttributes{ref: terra.ReferenceDataSource(aecve)}
}

// DataArgs contains the configurations for aws_ec2_client_vpn_endpoint.
type DataArgs struct {
	// ClientVpnEndpointId is optional.
	ClientVpnEndpointId terra.StringValue `hcl:"client_vpn_endpoint_id,attr"`
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// Tags is optional.
	Tags terra.MapValue[terra.StringValue] `hcl:"tags,attr"`
	// Filter is min=0.
	Filter []DataFilter `hcl:"filter,block" validate:"min=0"`
	// Timeouts is optional.
	Timeouts *DataTimeouts `hcl:"timeouts,block"`
}

type dataAwsEc2ClientVpnEndpointAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("arn"))
}

// ClientCidrBlock returns a reference to field client_cidr_block of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) ClientCidrBlock() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("client_cidr_block"))
}

// ClientVpnEndpointId returns a reference to field client_vpn_endpoint_id of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) ClientVpnEndpointId() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("client_vpn_endpoint_id"))
}

// Description returns a reference to field description of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("description"))
}

// DnsName returns a reference to field dns_name of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) DnsName() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("dns_name"))
}

// DnsServers returns a reference to field dns_servers of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) DnsServers() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aecve.ref.Append("dns_servers"))
}

// Id returns a reference to field id of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("id"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) SecurityGroupIds() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aecve.ref.Append("security_group_ids"))
}

// SelfServicePortal returns a reference to field self_service_portal of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) SelfServicePortal() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("self_service_portal"))
}

// ServerCertificateArn returns a reference to field server_certificate_arn of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) ServerCertificateArn() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("server_certificate_arn"))
}

// SessionTimeoutHours returns a reference to field session_timeout_hours of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) SessionTimeoutHours() terra.NumberValue {
	return terra.ReferenceAsNumber(aecve.ref.Append("session_timeout_hours"))
}

// SplitTunnel returns a reference to field split_tunnel of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) SplitTunnel() terra.BoolValue {
	return terra.ReferenceAsBool(aecve.ref.Append("split_tunnel"))
}

// Tags returns a reference to field tags of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) Tags() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](aecve.ref.Append("tags"))
}

// TransportProtocol returns a reference to field transport_protocol of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) TransportProtocol() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("transport_protocol"))
}

// VpcId returns a reference to field vpc_id of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(aecve.ref.Append("vpc_id"))
}

// VpnPort returns a reference to field vpn_port of aws_ec2_client_vpn_endpoint.
func (aecve dataAwsEc2ClientVpnEndpointAttributes) VpnPort() terra.NumberValue {
	return terra.ReferenceAsNumber(aecve.ref.Append("vpn_port"))
}

func (aecve dataAwsEc2ClientVpnEndpointAttributes) AuthenticationOptions() terra.ListValue[DataauthenticationOptionsAttributes] {
	return terra.ReferenceAsList[DataauthenticationOptionsAttributes](aecve.ref.Append("authentication_options"))
}

func (aecve dataAwsEc2ClientVpnEndpointAttributes) ClientConnectOptions() terra.ListValue[DataclientConnectOptionsAttributes] {
	return terra.ReferenceAsList[DataclientConnectOptionsAttributes](aecve.ref.Append("client_connect_options"))
}

func (aecve dataAwsEc2ClientVpnEndpointAttributes) ClientLoginBannerOptions() terra.ListValue[DataclientLoginBannerOptionsAttributes] {
	return terra.ReferenceAsList[DataclientLoginBannerOptionsAttributes](aecve.ref.Append("client_login_banner_options"))
}

func (aecve dataAwsEc2ClientVpnEndpointAttributes) ConnectionLogOptions() terra.ListValue[DataconnectionLogOptionsAttributes] {
	return terra.ReferenceAsList[DataconnectionLogOptionsAttributes](aecve.ref.Append("connection_log_options"))
}

func (aecve dataAwsEc2ClientVpnEndpointAttributes) Filter() terra.SetValue[DatafilterAttributes] {
	return terra.ReferenceAsSet[DatafilterAttributes](aecve.ref.Append("filter"))
}

func (aecve dataAwsEc2ClientVpnEndpointAttributes) Timeouts() DatatimeoutsAttributes {
	return terra.ReferenceAsSingle[DatatimeoutsAttributes](aecve.ref.Append("timeouts"))
}
