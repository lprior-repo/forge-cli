// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_client_vpn_endpoint

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataFilter struct {
	// Name is required.
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// Values is required.
	Values terra.ListValue[terra.StringValue] `hcl:"values,attr" validate:"required"`
}

type DataTimeouts struct {
	// Read is optional.
	Read terra.StringValue `hcl:"read,attr"`
}

type DataauthenticationOptionsAttributes struct {
	ref terra.Reference
}

func (ao DataauthenticationOptionsAttributes) InternalRef() (terra.Reference, error) {
	return ao.ref, nil
}

func (ao DataauthenticationOptionsAttributes) InternalWithRef(ref terra.Reference) DataauthenticationOptionsAttributes {
	return DataauthenticationOptionsAttributes{ref: ref}
}

func (ao DataauthenticationOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ao.ref.InternalTokens()
}

func (ao DataauthenticationOptionsAttributes) ActiveDirectoryId() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("active_directory_id"))
}

func (ao DataauthenticationOptionsAttributes) RootCertificateChainArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("root_certificate_chain_arn"))
}

func (ao DataauthenticationOptionsAttributes) SamlProviderArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("saml_provider_arn"))
}

func (ao DataauthenticationOptionsAttributes) SelfServiceSamlProviderArn() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("self_service_saml_provider_arn"))
}

func (ao DataauthenticationOptionsAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ao.ref.Append("type"))
}

type DataclientConnectOptionsAttributes struct {
	ref terra.Reference
}

func (cco DataclientConnectOptionsAttributes) InternalRef() (terra.Reference, error) {
	return cco.ref, nil
}

func (cco DataclientConnectOptionsAttributes) InternalWithRef(ref terra.Reference) DataclientConnectOptionsAttributes {
	return DataclientConnectOptionsAttributes{ref: ref}
}

func (cco DataclientConnectOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cco.ref.InternalTokens()
}

func (cco DataclientConnectOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cco.ref.Append("enabled"))
}

func (cco DataclientConnectOptionsAttributes) LambdaFunctionArn() terra.StringValue {
	return terra.ReferenceAsString(cco.ref.Append("lambda_function_arn"))
}

type DataclientLoginBannerOptionsAttributes struct {
	ref terra.Reference
}

func (clbo DataclientLoginBannerOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clbo.ref, nil
}

func (clbo DataclientLoginBannerOptionsAttributes) InternalWithRef(ref terra.Reference) DataclientLoginBannerOptionsAttributes {
	return DataclientLoginBannerOptionsAttributes{ref: ref}
}

func (clbo DataclientLoginBannerOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clbo.ref.InternalTokens()
}

func (clbo DataclientLoginBannerOptionsAttributes) BannerText() terra.StringValue {
	return terra.ReferenceAsString(clbo.ref.Append("banner_text"))
}

func (clbo DataclientLoginBannerOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(clbo.ref.Append("enabled"))
}

type DataconnectionLogOptionsAttributes struct {
	ref terra.Reference
}

func (clo DataconnectionLogOptionsAttributes) InternalRef() (terra.Reference, error) {
	return clo.ref, nil
}

func (clo DataconnectionLogOptionsAttributes) InternalWithRef(ref terra.Reference) DataconnectionLogOptionsAttributes {
	return DataconnectionLogOptionsAttributes{ref: ref}
}

func (clo DataconnectionLogOptionsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return clo.ref.InternalTokens()
}

func (clo DataconnectionLogOptionsAttributes) CloudwatchLogGroup() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_log_group"))
}

func (clo DataconnectionLogOptionsAttributes) CloudwatchLogStream() terra.StringValue {
	return terra.ReferenceAsString(clo.ref.Append("cloudwatch_log_stream"))
}

func (clo DataconnectionLogOptionsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(clo.ref.Append("enabled"))
}

type DatafilterAttributes struct {
	ref terra.Reference
}

func (f DatafilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f DatafilterAttributes) InternalWithRef(ref terra.Reference) DatafilterAttributes {
	return DatafilterAttributes{ref: ref}
}

func (f DatafilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f DatafilterAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("name"))
}

func (f DatafilterAttributes) Values() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](f.ref.Append("values"))
}

type DatatimeoutsAttributes struct {
	ref terra.Reference
}

func (t DatatimeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t DatatimeoutsAttributes) InternalWithRef(ref terra.Reference) DatatimeoutsAttributes {
	return DatatimeoutsAttributes{ref: ref}
}

func (t DatatimeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t DatatimeoutsAttributes) Read() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("read"))
}

type DataAuthenticationOptionsState struct {
	ActiveDirectoryId          string `json:"active_directory_id"`
	RootCertificateChainArn    string `json:"root_certificate_chain_arn"`
	SamlProviderArn            string `json:"saml_provider_arn"`
	SelfServiceSamlProviderArn string `json:"self_service_saml_provider_arn"`
	Type                       string `json:"type"`
}

type DataClientConnectOptionsState struct {
	Enabled           bool   `json:"enabled"`
	LambdaFunctionArn string `json:"lambda_function_arn"`
}

type DataClientLoginBannerOptionsState struct {
	BannerText string `json:"banner_text"`
	Enabled    bool   `json:"enabled"`
}

type DataConnectionLogOptionsState struct {
	CloudwatchLogGroup  string `json:"cloudwatch_log_group"`
	CloudwatchLogStream string `json:"cloudwatch_log_stream"`
	Enabled             bool   `json:"enabled"`
}

type DataFilterState struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}

type DataTimeoutsState struct {
	Read string `json:"read"`
}
