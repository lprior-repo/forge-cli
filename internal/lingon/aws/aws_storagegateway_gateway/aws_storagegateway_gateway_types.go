// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_storagegateway_gateway

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type MaintenanceStartTime struct {
	// DayOfMonth is optional.
	DayOfMonth terra.StringValue `hcl:"day_of_month,attr"`
	// DayOfWeek is optional.
	DayOfWeek terra.StringValue `hcl:"day_of_week,attr"`
	// HourOfDay is required.
	HourOfDay terra.NumberValue `hcl:"hour_of_day,attr" validate:"required"`
	// MinuteOfHour is optional.
	MinuteOfHour terra.NumberValue `hcl:"minute_of_hour,attr"`
}

type SmbActiveDirectorySettings struct {
	// DomainControllers is optional.
	DomainControllers terra.SetValue[terra.StringValue] `hcl:"domain_controllers,attr"`
	// DomainName is required.
	DomainName terra.StringValue `hcl:"domain_name,attr" validate:"required"`
	// OrganizationalUnit is optional.
	OrganizationalUnit terra.StringValue `hcl:"organizational_unit,attr"`
	// Password is required.
	Password terra.StringValue `hcl:"password,attr" validate:"required"`
	// TimeoutInSeconds is optional.
	TimeoutInSeconds terra.NumberValue `hcl:"timeout_in_seconds,attr"`
	// Username is required.
	Username terra.StringValue `hcl:"username,attr" validate:"required"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
}

type gatewayNetworkInterfaceAttributes struct {
	ref terra.Reference
}

func (gni gatewayNetworkInterfaceAttributes) InternalRef() (terra.Reference, error) {
	return gni.ref, nil
}

func (gni gatewayNetworkInterfaceAttributes) InternalWithRef(ref terra.Reference) gatewayNetworkInterfaceAttributes {
	return gatewayNetworkInterfaceAttributes{ref: ref}
}

func (gni gatewayNetworkInterfaceAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gni.ref.InternalTokens()
}

func (gni gatewayNetworkInterfaceAttributes) Ipv4Address() terra.StringValue {
	return terra.ReferenceAsString(gni.ref.Append("ipv4_address"))
}

type maintenanceStartTimeAttributes struct {
	ref terra.Reference
}

func (mst maintenanceStartTimeAttributes) InternalRef() (terra.Reference, error) {
	return mst.ref, nil
}

func (mst maintenanceStartTimeAttributes) InternalWithRef(ref terra.Reference) maintenanceStartTimeAttributes {
	return maintenanceStartTimeAttributes{ref: ref}
}

func (mst maintenanceStartTimeAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mst.ref.InternalTokens()
}

func (mst maintenanceStartTimeAttributes) DayOfMonth() terra.StringValue {
	return terra.ReferenceAsString(mst.ref.Append("day_of_month"))
}

func (mst maintenanceStartTimeAttributes) DayOfWeek() terra.StringValue {
	return terra.ReferenceAsString(mst.ref.Append("day_of_week"))
}

func (mst maintenanceStartTimeAttributes) HourOfDay() terra.NumberValue {
	return terra.ReferenceAsNumber(mst.ref.Append("hour_of_day"))
}

func (mst maintenanceStartTimeAttributes) MinuteOfHour() terra.NumberValue {
	return terra.ReferenceAsNumber(mst.ref.Append("minute_of_hour"))
}

type smbActiveDirectorySettingsAttributes struct {
	ref terra.Reference
}

func (sads smbActiveDirectorySettingsAttributes) InternalRef() (terra.Reference, error) {
	return sads.ref, nil
}

func (sads smbActiveDirectorySettingsAttributes) InternalWithRef(ref terra.Reference) smbActiveDirectorySettingsAttributes {
	return smbActiveDirectorySettingsAttributes{ref: ref}
}

func (sads smbActiveDirectorySettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sads.ref.InternalTokens()
}

func (sads smbActiveDirectorySettingsAttributes) ActiveDirectoryStatus() terra.StringValue {
	return terra.ReferenceAsString(sads.ref.Append("active_directory_status"))
}

func (sads smbActiveDirectorySettingsAttributes) DomainControllers() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sads.ref.Append("domain_controllers"))
}

func (sads smbActiveDirectorySettingsAttributes) DomainName() terra.StringValue {
	return terra.ReferenceAsString(sads.ref.Append("domain_name"))
}

func (sads smbActiveDirectorySettingsAttributes) OrganizationalUnit() terra.StringValue {
	return terra.ReferenceAsString(sads.ref.Append("organizational_unit"))
}

func (sads smbActiveDirectorySettingsAttributes) Password() terra.StringValue {
	return terra.ReferenceAsString(sads.ref.Append("password"))
}

func (sads smbActiveDirectorySettingsAttributes) TimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(sads.ref.Append("timeout_in_seconds"))
}

func (sads smbActiveDirectorySettingsAttributes) Username() terra.StringValue {
	return terra.ReferenceAsString(sads.ref.Append("username"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

type GatewayNetworkInterfaceState struct {
	Ipv4Address string `json:"ipv4_address"`
}

type MaintenanceStartTimeState struct {
	DayOfMonth   string  `json:"day_of_month"`
	DayOfWeek    string  `json:"day_of_week"`
	HourOfDay    float64 `json:"hour_of_day"`
	MinuteOfHour float64 `json:"minute_of_hour"`
}

type SmbActiveDirectorySettingsState struct {
	ActiveDirectoryStatus string   `json:"active_directory_status"`
	DomainControllers     []string `json:"domain_controllers"`
	DomainName            string   `json:"domain_name"`
	OrganizationalUnit    string   `json:"organizational_unit"`
	Password              string   `json:"password"`
	TimeoutInSeconds      float64  `json:"timeout_in_seconds"`
	Username              string   `json:"username"`
}

type TimeoutsState struct {
	Create string `json:"create"`
}
