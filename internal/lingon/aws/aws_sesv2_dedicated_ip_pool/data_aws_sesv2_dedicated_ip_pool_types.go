// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sesv2_dedicated_ip_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatadedicatedIpsAttributes struct {
	ref terra.Reference
}

func (di DatadedicatedIpsAttributes) InternalRef() (terra.Reference, error) {
	return di.ref, nil
}

func (di DatadedicatedIpsAttributes) InternalWithRef(ref terra.Reference) DatadedicatedIpsAttributes {
	return DatadedicatedIpsAttributes{ref: ref}
}

func (di DatadedicatedIpsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return di.ref.InternalTokens()
}

func (di DatadedicatedIpsAttributes) Ip() terra.StringValue {
	return terra.ReferenceAsString(di.ref.Append("ip"))
}

func (di DatadedicatedIpsAttributes) WarmupPercentage() terra.NumberValue {
	return terra.ReferenceAsNumber(di.ref.Append("warmup_percentage"))
}

func (di DatadedicatedIpsAttributes) WarmupStatus() terra.StringValue {
	return terra.ReferenceAsString(di.ref.Append("warmup_status"))
}

type DataDedicatedIpsState struct {
	Ip               string  `json:"ip"`
	WarmupPercentage float64 `json:"warmup_percentage"`
	WarmupStatus     string  `json:"warmup_status"`
}
