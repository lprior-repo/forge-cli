// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_sagemaker_user_profile

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type UserSettings struct {
	// ExecutionRole is required.
	ExecutionRole terra.StringValue `hcl:"execution_role,attr" validate:"required"`
	// SecurityGroups is optional.
	SecurityGroups terra.SetValue[terra.StringValue] `hcl:"security_groups,attr"`
	// UserSettingsCanvasAppSettings is optional.
	CanvasAppSettings *UserSettingsCanvasAppSettings `hcl:"canvas_app_settings,block"`
	// UserSettingsJupyterServerAppSettings is optional.
	JupyterServerAppSettings *UserSettingsJupyterServerAppSettings `hcl:"jupyter_server_app_settings,block"`
	// UserSettingsKernelGatewayAppSettings is optional.
	KernelGatewayAppSettings *UserSettingsKernelGatewayAppSettings `hcl:"kernel_gateway_app_settings,block"`
	// UserSettingsRSessionAppSettings is optional.
	RSessionAppSettings *UserSettingsRSessionAppSettings `hcl:"r_session_app_settings,block"`
	// UserSettingsRStudioServerProAppSettings is optional.
	RStudioServerProAppSettings *UserSettingsRStudioServerProAppSettings `hcl:"r_studio_server_pro_app_settings,block"`
	// UserSettingsSharingSettings is optional.
	SharingSettings *UserSettingsSharingSettings `hcl:"sharing_settings,block"`
	// UserSettingsTensorBoardAppSettings is optional.
	TensorBoardAppSettings *UserSettingsTensorBoardAppSettings `hcl:"tensor_board_app_settings,block"`
}

type UserSettingsCanvasAppSettings struct {
	// UserSettingsCanvasAppSettingsModelRegisterSettings is optional.
	ModelRegisterSettings *UserSettingsCanvasAppSettingsModelRegisterSettings `hcl:"model_register_settings,block"`
	// UserSettingsCanvasAppSettingsTimeSeriesForecastingSettings is optional.
	TimeSeriesForecastingSettings *UserSettingsCanvasAppSettingsTimeSeriesForecastingSettings `hcl:"time_series_forecasting_settings,block"`
}

type UserSettingsCanvasAppSettingsModelRegisterSettings struct {
	// CrossAccountModelRegisterRoleArn is optional.
	CrossAccountModelRegisterRoleArn terra.StringValue `hcl:"cross_account_model_register_role_arn,attr"`
	// Status is optional.
	Status terra.StringValue `hcl:"status,attr"`
}

type UserSettingsCanvasAppSettingsTimeSeriesForecastingSettings struct {
	// AmazonForecastRoleArn is optional.
	AmazonForecastRoleArn terra.StringValue `hcl:"amazon_forecast_role_arn,attr"`
	// Status is optional.
	Status terra.StringValue `hcl:"status,attr"`
}

type UserSettingsJupyterServerAppSettings struct {
	// LifecycleConfigArns is optional.
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// UserSettingsJupyterServerAppSettingsCodeRepository is min=0,max=10.
	CodeRepository []UserSettingsJupyterServerAppSettingsCodeRepository `hcl:"code_repository,block" validate:"min=0,max=10"`
	// UserSettingsJupyterServerAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *UserSettingsJupyterServerAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsJupyterServerAppSettingsCodeRepository struct {
	// RepositoryUrl is required.
	RepositoryUrl terra.StringValue `hcl:"repository_url,attr" validate:"required"`
}

type UserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsKernelGatewayAppSettings struct {
	// LifecycleConfigArns is optional.
	LifecycleConfigArns terra.SetValue[terra.StringValue] `hcl:"lifecycle_config_arns,attr"`
	// UserSettingsKernelGatewayAppSettingsCustomImage is min=0,max=30.
	CustomImage []UserSettingsKernelGatewayAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// UserSettingsKernelGatewayAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *UserSettingsKernelGatewayAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsKernelGatewayAppSettingsCustomImage struct {
	// AppImageConfigName is required.
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName is required.
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber is optional.
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type UserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsRSessionAppSettings struct {
	// UserSettingsRSessionAppSettingsCustomImage is min=0,max=30.
	CustomImage []UserSettingsRSessionAppSettingsCustomImage `hcl:"custom_image,block" validate:"min=0,max=30"`
	// UserSettingsRSessionAppSettingsDefaultResourceSpec is optional.
	DefaultResourceSpec *UserSettingsRSessionAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block"`
}

type UserSettingsRSessionAppSettingsCustomImage struct {
	// AppImageConfigName is required.
	AppImageConfigName terra.StringValue `hcl:"app_image_config_name,attr" validate:"required"`
	// ImageName is required.
	ImageName terra.StringValue `hcl:"image_name,attr" validate:"required"`
	// ImageVersionNumber is optional.
	ImageVersionNumber terra.NumberValue `hcl:"image_version_number,attr"`
}

type UserSettingsRSessionAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type UserSettingsRStudioServerProAppSettings struct {
	// AccessStatus is optional.
	AccessStatus terra.StringValue `hcl:"access_status,attr"`
	// UserGroup is optional.
	UserGroup terra.StringValue `hcl:"user_group,attr"`
}

type UserSettingsSharingSettings struct {
	// NotebookOutputOption is optional.
	NotebookOutputOption terra.StringValue `hcl:"notebook_output_option,attr"`
	// S3KmsKeyId is optional.
	S3KmsKeyId terra.StringValue `hcl:"s3_kms_key_id,attr"`
	// S3OutputPath is optional.
	S3OutputPath terra.StringValue `hcl:"s3_output_path,attr"`
}

type UserSettingsTensorBoardAppSettings struct {
	// UserSettingsTensorBoardAppSettingsDefaultResourceSpec is required.
	DefaultResourceSpec *UserSettingsTensorBoardAppSettingsDefaultResourceSpec `hcl:"default_resource_spec,block" validate:"required"`
}

type UserSettingsTensorBoardAppSettingsDefaultResourceSpec struct {
	// InstanceType is optional.
	InstanceType terra.StringValue `hcl:"instance_type,attr"`
	// LifecycleConfigArn is optional.
	LifecycleConfigArn terra.StringValue `hcl:"lifecycle_config_arn,attr"`
	// SagemakerImageArn is optional.
	SagemakerImageArn terra.StringValue `hcl:"sagemaker_image_arn,attr"`
	// SagemakerImageVersionArn is optional.
	SagemakerImageVersionArn terra.StringValue `hcl:"sagemaker_image_version_arn,attr"`
}

type userSettingsAttributes struct {
	ref terra.Reference
}

func (us userSettingsAttributes) InternalRef() (terra.Reference, error) {
	return us.ref, nil
}

func (us userSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsAttributes {
	return userSettingsAttributes{ref: ref}
}

func (us userSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return us.ref.InternalTokens()
}

func (us userSettingsAttributes) ExecutionRole() terra.StringValue {
	return terra.ReferenceAsString(us.ref.Append("execution_role"))
}

func (us userSettingsAttributes) SecurityGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](us.ref.Append("security_groups"))
}

func (us userSettingsAttributes) CanvasAppSettings() terra.ListValue[userSettingsCanvasAppSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsCanvasAppSettingsAttributes](us.ref.Append("canvas_app_settings"))
}

func (us userSettingsAttributes) JupyterServerAppSettings() terra.ListValue[userSettingsJupyterServerAppSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsJupyterServerAppSettingsAttributes](us.ref.Append("jupyter_server_app_settings"))
}

func (us userSettingsAttributes) KernelGatewayAppSettings() terra.ListValue[userSettingsKernelGatewayAppSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsKernelGatewayAppSettingsAttributes](us.ref.Append("kernel_gateway_app_settings"))
}

func (us userSettingsAttributes) RSessionAppSettings() terra.ListValue[userSettingsRSessionAppSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsRSessionAppSettingsAttributes](us.ref.Append("r_session_app_settings"))
}

func (us userSettingsAttributes) RStudioServerProAppSettings() terra.ListValue[userSettingsRStudioServerProAppSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsRStudioServerProAppSettingsAttributes](us.ref.Append("r_studio_server_pro_app_settings"))
}

func (us userSettingsAttributes) SharingSettings() terra.ListValue[userSettingsSharingSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsSharingSettingsAttributes](us.ref.Append("sharing_settings"))
}

func (us userSettingsAttributes) TensorBoardAppSettings() terra.ListValue[userSettingsTensorBoardAppSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsTensorBoardAppSettingsAttributes](us.ref.Append("tensor_board_app_settings"))
}

type userSettingsCanvasAppSettingsAttributes struct {
	ref terra.Reference
}

func (cas userSettingsCanvasAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return cas.ref, nil
}

func (cas userSettingsCanvasAppSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsCanvasAppSettingsAttributes {
	return userSettingsCanvasAppSettingsAttributes{ref: ref}
}

func (cas userSettingsCanvasAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cas.ref.InternalTokens()
}

func (cas userSettingsCanvasAppSettingsAttributes) ModelRegisterSettings() terra.ListValue[userSettingsCanvasAppSettingsModelRegisterSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsCanvasAppSettingsModelRegisterSettingsAttributes](cas.ref.Append("model_register_settings"))
}

func (cas userSettingsCanvasAppSettingsAttributes) TimeSeriesForecastingSettings() terra.ListValue[userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes] {
	return terra.ReferenceAsList[userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes](cas.ref.Append("time_series_forecasting_settings"))
}

type userSettingsCanvasAppSettingsModelRegisterSettingsAttributes struct {
	ref terra.Reference
}

func (mrs userSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalRef() (terra.Reference, error) {
	return mrs.ref, nil
}

func (mrs userSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsCanvasAppSettingsModelRegisterSettingsAttributes {
	return userSettingsCanvasAppSettingsModelRegisterSettingsAttributes{ref: ref}
}

func (mrs userSettingsCanvasAppSettingsModelRegisterSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return mrs.ref.InternalTokens()
}

func (mrs userSettingsCanvasAppSettingsModelRegisterSettingsAttributes) CrossAccountModelRegisterRoleArn() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("cross_account_model_register_role_arn"))
}

func (mrs userSettingsCanvasAppSettingsModelRegisterSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(mrs.ref.Append("status"))
}

type userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes struct {
	ref terra.Reference
}

func (tsfs userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tsfs.ref, nil
}

func (tsfs userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes {
	return userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes{ref: ref}
}

func (tsfs userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tsfs.ref.InternalTokens()
}

func (tsfs userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) AmazonForecastRoleArn() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("amazon_forecast_role_arn"))
}

func (tsfs userSettingsCanvasAppSettingsTimeSeriesForecastingSettingsAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(tsfs.ref.Append("status"))
}

type userSettingsJupyterServerAppSettingsAttributes struct {
	ref terra.Reference
}

func (jsas userSettingsJupyterServerAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return jsas.ref, nil
}

func (jsas userSettingsJupyterServerAppSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsJupyterServerAppSettingsAttributes {
	return userSettingsJupyterServerAppSettingsAttributes{ref: ref}
}

func (jsas userSettingsJupyterServerAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return jsas.ref.InternalTokens()
}

func (jsas userSettingsJupyterServerAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](jsas.ref.Append("lifecycle_config_arns"))
}

func (jsas userSettingsJupyterServerAppSettingsAttributes) CodeRepository() terra.SetValue[userSettingsJupyterServerAppSettingsCodeRepositoryAttributes] {
	return terra.ReferenceAsSet[userSettingsJupyterServerAppSettingsCodeRepositoryAttributes](jsas.ref.Append("code_repository"))
}

func (jsas userSettingsJupyterServerAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes](jsas.ref.Append("default_resource_spec"))
}

type userSettingsJupyterServerAppSettingsCodeRepositoryAttributes struct {
	ref terra.Reference
}

func (cr userSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalRef() (terra.Reference, error) {
	return cr.ref, nil
}

func (cr userSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalWithRef(ref terra.Reference) userSettingsJupyterServerAppSettingsCodeRepositoryAttributes {
	return userSettingsJupyterServerAppSettingsCodeRepositoryAttributes{ref: ref}
}

func (cr userSettingsJupyterServerAppSettingsCodeRepositoryAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cr.ref.InternalTokens()
}

func (cr userSettingsJupyterServerAppSettingsCodeRepositoryAttributes) RepositoryUrl() terra.StringValue {
	return terra.ReferenceAsString(cr.ref.Append("repository_url"))
}

type userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes {
	return userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs userSettingsJupyterServerAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type userSettingsKernelGatewayAppSettingsAttributes struct {
	ref terra.Reference
}

func (kgas userSettingsKernelGatewayAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return kgas.ref, nil
}

func (kgas userSettingsKernelGatewayAppSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsKernelGatewayAppSettingsAttributes {
	return userSettingsKernelGatewayAppSettingsAttributes{ref: ref}
}

func (kgas userSettingsKernelGatewayAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return kgas.ref.InternalTokens()
}

func (kgas userSettingsKernelGatewayAppSettingsAttributes) LifecycleConfigArns() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](kgas.ref.Append("lifecycle_config_arns"))
}

func (kgas userSettingsKernelGatewayAppSettingsAttributes) CustomImage() terra.ListValue[userSettingsKernelGatewayAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[userSettingsKernelGatewayAppSettingsCustomImageAttributes](kgas.ref.Append("custom_image"))
}

func (kgas userSettingsKernelGatewayAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes](kgas.ref.Append("default_resource_spec"))
}

type userSettingsKernelGatewayAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci userSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci userSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) userSettingsKernelGatewayAppSettingsCustomImageAttributes {
	return userSettingsKernelGatewayAppSettingsCustomImageAttributes{ref: ref}
}

func (ci userSettingsKernelGatewayAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci userSettingsKernelGatewayAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci userSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci userSettingsKernelGatewayAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes {
	return userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs userSettingsKernelGatewayAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type userSettingsRSessionAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsas userSettingsRSessionAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsas.ref, nil
}

func (rsas userSettingsRSessionAppSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsRSessionAppSettingsAttributes {
	return userSettingsRSessionAppSettingsAttributes{ref: ref}
}

func (rsas userSettingsRSessionAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsas.ref.InternalTokens()
}

func (rsas userSettingsRSessionAppSettingsAttributes) CustomImage() terra.ListValue[userSettingsRSessionAppSettingsCustomImageAttributes] {
	return terra.ReferenceAsList[userSettingsRSessionAppSettingsCustomImageAttributes](rsas.ref.Append("custom_image"))
}

func (rsas userSettingsRSessionAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[userSettingsRSessionAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[userSettingsRSessionAppSettingsDefaultResourceSpecAttributes](rsas.ref.Append("default_resource_spec"))
}

type userSettingsRSessionAppSettingsCustomImageAttributes struct {
	ref terra.Reference
}

func (ci userSettingsRSessionAppSettingsCustomImageAttributes) InternalRef() (terra.Reference, error) {
	return ci.ref, nil
}

func (ci userSettingsRSessionAppSettingsCustomImageAttributes) InternalWithRef(ref terra.Reference) userSettingsRSessionAppSettingsCustomImageAttributes {
	return userSettingsRSessionAppSettingsCustomImageAttributes{ref: ref}
}

func (ci userSettingsRSessionAppSettingsCustomImageAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ci.ref.InternalTokens()
}

func (ci userSettingsRSessionAppSettingsCustomImageAttributes) AppImageConfigName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("app_image_config_name"))
}

func (ci userSettingsRSessionAppSettingsCustomImageAttributes) ImageName() terra.StringValue {
	return terra.ReferenceAsString(ci.ref.Append("image_name"))
}

func (ci userSettingsRSessionAppSettingsCustomImageAttributes) ImageVersionNumber() terra.NumberValue {
	return terra.ReferenceAsNumber(ci.ref.Append("image_version_number"))
}

type userSettingsRSessionAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs userSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs userSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) userSettingsRSessionAppSettingsDefaultResourceSpecAttributes {
	return userSettingsRSessionAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs userSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs userSettingsRSessionAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs userSettingsRSessionAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs userSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs userSettingsRSessionAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type userSettingsRStudioServerProAppSettingsAttributes struct {
	ref terra.Reference
}

func (rsspas userSettingsRStudioServerProAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rsspas.ref, nil
}

func (rsspas userSettingsRStudioServerProAppSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsRStudioServerProAppSettingsAttributes {
	return userSettingsRStudioServerProAppSettingsAttributes{ref: ref}
}

func (rsspas userSettingsRStudioServerProAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rsspas.ref.InternalTokens()
}

func (rsspas userSettingsRStudioServerProAppSettingsAttributes) AccessStatus() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("access_status"))
}

func (rsspas userSettingsRStudioServerProAppSettingsAttributes) UserGroup() terra.StringValue {
	return terra.ReferenceAsString(rsspas.ref.Append("user_group"))
}

type userSettingsSharingSettingsAttributes struct {
	ref terra.Reference
}

func (ss userSettingsSharingSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ss.ref, nil
}

func (ss userSettingsSharingSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsSharingSettingsAttributes {
	return userSettingsSharingSettingsAttributes{ref: ref}
}

func (ss userSettingsSharingSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ss.ref.InternalTokens()
}

func (ss userSettingsSharingSettingsAttributes) NotebookOutputOption() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("notebook_output_option"))
}

func (ss userSettingsSharingSettingsAttributes) S3KmsKeyId() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_kms_key_id"))
}

func (ss userSettingsSharingSettingsAttributes) S3OutputPath() terra.StringValue {
	return terra.ReferenceAsString(ss.ref.Append("s3_output_path"))
}

type userSettingsTensorBoardAppSettingsAttributes struct {
	ref terra.Reference
}

func (tbas userSettingsTensorBoardAppSettingsAttributes) InternalRef() (terra.Reference, error) {
	return tbas.ref, nil
}

func (tbas userSettingsTensorBoardAppSettingsAttributes) InternalWithRef(ref terra.Reference) userSettingsTensorBoardAppSettingsAttributes {
	return userSettingsTensorBoardAppSettingsAttributes{ref: ref}
}

func (tbas userSettingsTensorBoardAppSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tbas.ref.InternalTokens()
}

func (tbas userSettingsTensorBoardAppSettingsAttributes) DefaultResourceSpec() terra.ListValue[userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes] {
	return terra.ReferenceAsList[userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes](tbas.ref.Append("default_resource_spec"))
}

type userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes struct {
	ref terra.Reference
}

func (drs userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalRef() (terra.Reference, error) {
	return drs.ref, nil
}

func (drs userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalWithRef(ref terra.Reference) userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes {
	return userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes{ref: ref}
}

func (drs userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return drs.ref.InternalTokens()
}

func (drs userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) InstanceType() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("instance_type"))
}

func (drs userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) LifecycleConfigArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("lifecycle_config_arn"))
}

func (drs userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_arn"))
}

func (drs userSettingsTensorBoardAppSettingsDefaultResourceSpecAttributes) SagemakerImageVersionArn() terra.StringValue {
	return terra.ReferenceAsString(drs.ref.Append("sagemaker_image_version_arn"))
}

type UserSettingsState struct {
	ExecutionRole               string                                         `json:"execution_role"`
	SecurityGroups              []string                                       `json:"security_groups"`
	CanvasAppSettings           []UserSettingsCanvasAppSettingsState           `json:"canvas_app_settings"`
	JupyterServerAppSettings    []UserSettingsJupyterServerAppSettingsState    `json:"jupyter_server_app_settings"`
	KernelGatewayAppSettings    []UserSettingsKernelGatewayAppSettingsState    `json:"kernel_gateway_app_settings"`
	RSessionAppSettings         []UserSettingsRSessionAppSettingsState         `json:"r_session_app_settings"`
	RStudioServerProAppSettings []UserSettingsRStudioServerProAppSettingsState `json:"r_studio_server_pro_app_settings"`
	SharingSettings             []UserSettingsSharingSettingsState             `json:"sharing_settings"`
	TensorBoardAppSettings      []UserSettingsTensorBoardAppSettingsState      `json:"tensor_board_app_settings"`
}

type UserSettingsCanvasAppSettingsState struct {
	ModelRegisterSettings         []UserSettingsCanvasAppSettingsModelRegisterSettingsState         `json:"model_register_settings"`
	TimeSeriesForecastingSettings []UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState `json:"time_series_forecasting_settings"`
}

type UserSettingsCanvasAppSettingsModelRegisterSettingsState struct {
	CrossAccountModelRegisterRoleArn string `json:"cross_account_model_register_role_arn"`
	Status                           string `json:"status"`
}

type UserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsState struct {
	AmazonForecastRoleArn string `json:"amazon_forecast_role_arn"`
	Status                string `json:"status"`
}

type UserSettingsJupyterServerAppSettingsState struct {
	LifecycleConfigArns []string                                                       `json:"lifecycle_config_arns"`
	CodeRepository      []UserSettingsJupyterServerAppSettingsCodeRepositoryState      `json:"code_repository"`
	DefaultResourceSpec []UserSettingsJupyterServerAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsJupyterServerAppSettingsCodeRepositoryState struct {
	RepositoryUrl string `json:"repository_url"`
}

type UserSettingsJupyterServerAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type UserSettingsKernelGatewayAppSettingsState struct {
	LifecycleConfigArns []string                                                       `json:"lifecycle_config_arns"`
	CustomImage         []UserSettingsKernelGatewayAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []UserSettingsKernelGatewayAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsKernelGatewayAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type UserSettingsKernelGatewayAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type UserSettingsRSessionAppSettingsState struct {
	CustomImage         []UserSettingsRSessionAppSettingsCustomImageState         `json:"custom_image"`
	DefaultResourceSpec []UserSettingsRSessionAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsRSessionAppSettingsCustomImageState struct {
	AppImageConfigName string  `json:"app_image_config_name"`
	ImageName          string  `json:"image_name"`
	ImageVersionNumber float64 `json:"image_version_number"`
}

type UserSettingsRSessionAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}

type UserSettingsRStudioServerProAppSettingsState struct {
	AccessStatus string `json:"access_status"`
	UserGroup    string `json:"user_group"`
}

type UserSettingsSharingSettingsState struct {
	NotebookOutputOption string `json:"notebook_output_option"`
	S3KmsKeyId           string `json:"s3_kms_key_id"`
	S3OutputPath         string `json:"s3_output_path"`
}

type UserSettingsTensorBoardAppSettingsState struct {
	DefaultResourceSpec []UserSettingsTensorBoardAppSettingsDefaultResourceSpecState `json:"default_resource_spec"`
}

type UserSettingsTensorBoardAppSettingsDefaultResourceSpecState struct {
	InstanceType             string `json:"instance_type"`
	LifecycleConfigArn       string `json:"lifecycle_config_arn"`
	SagemakerImageArn        string `json:"sagemaker_image_arn"`
	SagemakerImageVersionArn string `json:"sagemaker_image_version_arn"`
}
