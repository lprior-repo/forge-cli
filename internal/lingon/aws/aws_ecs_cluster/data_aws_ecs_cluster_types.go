// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ecs_cluster

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DataserviceConnectDefaultsAttributes struct {
	ref terra.Reference
}

func (scd DataserviceConnectDefaultsAttributes) InternalRef() (terra.Reference, error) {
	return scd.ref, nil
}

func (scd DataserviceConnectDefaultsAttributes) InternalWithRef(ref terra.Reference) DataserviceConnectDefaultsAttributes {
	return DataserviceConnectDefaultsAttributes{ref: ref}
}

func (scd DataserviceConnectDefaultsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return scd.ref.InternalTokens()
}

func (scd DataserviceConnectDefaultsAttributes) Namespace() terra.StringValue {
	return terra.ReferenceAsString(scd.ref.Append("namespace"))
}

type DatasettingAttributes struct {
	ref terra.Reference
}

func (s DatasettingAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s DatasettingAttributes) InternalWithRef(ref terra.Reference) DatasettingAttributes {
	return DatasettingAttributes{ref: ref}
}

func (s DatasettingAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s DatasettingAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("name"))
}

func (s DatasettingAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("value"))
}

type DataServiceConnectDefaultsState struct {
	Namespace string `json:"namespace"`
}

type DataSettingState struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}
