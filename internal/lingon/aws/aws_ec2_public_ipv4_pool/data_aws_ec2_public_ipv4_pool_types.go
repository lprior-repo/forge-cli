// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_ec2_public_ipv4_pool

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatapoolAddressRangesAttributes struct {
	ref terra.Reference
}

func (par DatapoolAddressRangesAttributes) InternalRef() (terra.Reference, error) {
	return par.ref, nil
}

func (par DatapoolAddressRangesAttributes) InternalWithRef(ref terra.Reference) DatapoolAddressRangesAttributes {
	return DatapoolAddressRangesAttributes{ref: ref}
}

func (par DatapoolAddressRangesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return par.ref.InternalTokens()
}

func (par DatapoolAddressRangesAttributes) AddressCount() terra.NumberValue {
	return terra.ReferenceAsNumber(par.ref.Append("address_count"))
}

func (par DatapoolAddressRangesAttributes) AvailableAddressCount() terra.NumberValue {
	return terra.ReferenceAsNumber(par.ref.Append("available_address_count"))
}

func (par DatapoolAddressRangesAttributes) FirstAddress() terra.StringValue {
	return terra.ReferenceAsString(par.ref.Append("first_address"))
}

func (par DatapoolAddressRangesAttributes) LastAddress() terra.StringValue {
	return terra.ReferenceAsString(par.ref.Append("last_address"))
}

type DataPoolAddressRangesState struct {
	AddressCount          float64 `json:"address_count"`
	AvailableAddressCount float64 `json:"available_address_count"`
	FirstAddress          string  `json:"first_address"`
	LastAddress           string  `json:"last_address"`
}
