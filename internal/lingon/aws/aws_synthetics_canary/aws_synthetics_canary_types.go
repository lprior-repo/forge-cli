// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_synthetics_canary

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ArtifactConfig struct {
	// ArtifactConfigS3Encryption is optional.
	S3Encryption *ArtifactConfigS3Encryption `hcl:"s3_encryption,block"`
}

type ArtifactConfigS3Encryption struct {
	// EncryptionMode is optional.
	EncryptionMode terra.StringValue `hcl:"encryption_mode,attr"`
	// KmsKeyArn is optional.
	KmsKeyArn terra.StringValue `hcl:"kms_key_arn,attr"`
}

type RunConfig struct {
	// ActiveTracing is optional.
	ActiveTracing terra.BoolValue `hcl:"active_tracing,attr"`
	// EnvironmentVariables is optional.
	EnvironmentVariables terra.MapValue[terra.StringValue] `hcl:"environment_variables,attr"`
	// MemoryInMb is optional.
	MemoryInMb terra.NumberValue `hcl:"memory_in_mb,attr"`
	// TimeoutInSeconds is optional.
	TimeoutInSeconds terra.NumberValue `hcl:"timeout_in_seconds,attr"`
}

type Schedule struct {
	// DurationInSeconds is optional.
	DurationInSeconds terra.NumberValue `hcl:"duration_in_seconds,attr"`
	// Expression is required.
	Expression terra.StringValue `hcl:"expression,attr" validate:"required"`
}

type VpcConfig struct {
	// SecurityGroupIds is optional.
	SecurityGroupIds terra.SetValue[terra.StringValue] `hcl:"security_group_ids,attr"`
	// SubnetIds is optional.
	SubnetIds terra.SetValue[terra.StringValue] `hcl:"subnet_ids,attr"`
}

type timelineAttributes struct {
	ref terra.Reference
}

func (t timelineAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timelineAttributes) InternalWithRef(ref terra.Reference) timelineAttributes {
	return timelineAttributes{ref: ref}
}

func (t timelineAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timelineAttributes) Created() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("created"))
}

func (t timelineAttributes) LastModified() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("last_modified"))
}

func (t timelineAttributes) LastStarted() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("last_started"))
}

func (t timelineAttributes) LastStopped() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("last_stopped"))
}

type artifactConfigAttributes struct {
	ref terra.Reference
}

func (ac artifactConfigAttributes) InternalRef() (terra.Reference, error) {
	return ac.ref, nil
}

func (ac artifactConfigAttributes) InternalWithRef(ref terra.Reference) artifactConfigAttributes {
	return artifactConfigAttributes{ref: ref}
}

func (ac artifactConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ac.ref.InternalTokens()
}

func (ac artifactConfigAttributes) S3Encryption() terra.ListValue[artifactConfigS3EncryptionAttributes] {
	return terra.ReferenceAsList[artifactConfigS3EncryptionAttributes](ac.ref.Append("s3_encryption"))
}

type artifactConfigS3EncryptionAttributes struct {
	ref terra.Reference
}

func (se artifactConfigS3EncryptionAttributes) InternalRef() (terra.Reference, error) {
	return se.ref, nil
}

func (se artifactConfigS3EncryptionAttributes) InternalWithRef(ref terra.Reference) artifactConfigS3EncryptionAttributes {
	return artifactConfigS3EncryptionAttributes{ref: ref}
}

func (se artifactConfigS3EncryptionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return se.ref.InternalTokens()
}

func (se artifactConfigS3EncryptionAttributes) EncryptionMode() terra.StringValue {
	return terra.ReferenceAsString(se.ref.Append("encryption_mode"))
}

func (se artifactConfigS3EncryptionAttributes) KmsKeyArn() terra.StringValue {
	return terra.ReferenceAsString(se.ref.Append("kms_key_arn"))
}

type runConfigAttributes struct {
	ref terra.Reference
}

func (rc runConfigAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc runConfigAttributes) InternalWithRef(ref terra.Reference) runConfigAttributes {
	return runConfigAttributes{ref: ref}
}

func (rc runConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc runConfigAttributes) ActiveTracing() terra.BoolValue {
	return terra.ReferenceAsBool(rc.ref.Append("active_tracing"))
}

func (rc runConfigAttributes) EnvironmentVariables() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](rc.ref.Append("environment_variables"))
}

func (rc runConfigAttributes) MemoryInMb() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("memory_in_mb"))
}

func (rc runConfigAttributes) TimeoutInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(rc.ref.Append("timeout_in_seconds"))
}

type scheduleAttributes struct {
	ref terra.Reference
}

func (s scheduleAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s scheduleAttributes) InternalWithRef(ref terra.Reference) scheduleAttributes {
	return scheduleAttributes{ref: ref}
}

func (s scheduleAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s scheduleAttributes) DurationInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(s.ref.Append("duration_in_seconds"))
}

func (s scheduleAttributes) Expression() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("expression"))
}

type vpcConfigAttributes struct {
	ref terra.Reference
}

func (vc vpcConfigAttributes) InternalRef() (terra.Reference, error) {
	return vc.ref, nil
}

func (vc vpcConfigAttributes) InternalWithRef(ref terra.Reference) vpcConfigAttributes {
	return vpcConfigAttributes{ref: ref}
}

func (vc vpcConfigAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return vc.ref.InternalTokens()
}

func (vc vpcConfigAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("security_group_ids"))
}

func (vc vpcConfigAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](vc.ref.Append("subnet_ids"))
}

func (vc vpcConfigAttributes) VpcId() terra.StringValue {
	return terra.ReferenceAsString(vc.ref.Append("vpc_id"))
}

type TimelineState struct {
	Created      string `json:"created"`
	LastModified string `json:"last_modified"`
	LastStarted  string `json:"last_started"`
	LastStopped  string `json:"last_stopped"`
}

type ArtifactConfigState struct {
	S3Encryption []ArtifactConfigS3EncryptionState `json:"s3_encryption"`
}

type ArtifactConfigS3EncryptionState struct {
	EncryptionMode string `json:"encryption_mode"`
	KmsKeyArn      string `json:"kms_key_arn"`
}

type RunConfigState struct {
	ActiveTracing        bool              `json:"active_tracing"`
	EnvironmentVariables map[string]string `json:"environment_variables"`
	MemoryInMb           float64           `json:"memory_in_mb"`
	TimeoutInSeconds     float64           `json:"timeout_in_seconds"`
}

type ScheduleState struct {
	DurationInSeconds float64 `json:"duration_in_seconds"`
	Expression        string  `json:"expression"`
}

type VpcConfigState struct {
	SecurityGroupIds []string `json:"security_group_ids"`
	SubnetIds        []string `json:"subnet_ids"`
	VpcId            string   `json:"vpc_id"`
}
