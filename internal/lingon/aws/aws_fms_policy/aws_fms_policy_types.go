// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fms_policy

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ExcludeMap struct {
	// Account is optional.
	Account terra.SetValue[terra.StringValue] `hcl:"account,attr"`
	// Orgunit is optional.
	Orgunit terra.SetValue[terra.StringValue] `hcl:"orgunit,attr"`
}

type IncludeMap struct {
	// Account is optional.
	Account terra.SetValue[terra.StringValue] `hcl:"account,attr"`
	// Orgunit is optional.
	Orgunit terra.SetValue[terra.StringValue] `hcl:"orgunit,attr"`
}

type SecurityServicePolicyData struct {
	// ManagedServiceData is optional.
	ManagedServiceData terra.StringValue `hcl:"managed_service_data,attr"`
	// Type is required.
	Type terra.StringValue `hcl:"type,attr" validate:"required"`
}

type excludeMapAttributes struct {
	ref terra.Reference
}

func (em excludeMapAttributes) InternalRef() (terra.Reference, error) {
	return em.ref, nil
}

func (em excludeMapAttributes) InternalWithRef(ref terra.Reference) excludeMapAttributes {
	return excludeMapAttributes{ref: ref}
}

func (em excludeMapAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return em.ref.InternalTokens()
}

func (em excludeMapAttributes) Account() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](em.ref.Append("account"))
}

func (em excludeMapAttributes) Orgunit() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](em.ref.Append("orgunit"))
}

type includeMapAttributes struct {
	ref terra.Reference
}

func (im includeMapAttributes) InternalRef() (terra.Reference, error) {
	return im.ref, nil
}

func (im includeMapAttributes) InternalWithRef(ref terra.Reference) includeMapAttributes {
	return includeMapAttributes{ref: ref}
}

func (im includeMapAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return im.ref.InternalTokens()
}

func (im includeMapAttributes) Account() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](im.ref.Append("account"))
}

func (im includeMapAttributes) Orgunit() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](im.ref.Append("orgunit"))
}

type securityServicePolicyDataAttributes struct {
	ref terra.Reference
}

func (sspd securityServicePolicyDataAttributes) InternalRef() (terra.Reference, error) {
	return sspd.ref, nil
}

func (sspd securityServicePolicyDataAttributes) InternalWithRef(ref terra.Reference) securityServicePolicyDataAttributes {
	return securityServicePolicyDataAttributes{ref: ref}
}

func (sspd securityServicePolicyDataAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sspd.ref.InternalTokens()
}

func (sspd securityServicePolicyDataAttributes) ManagedServiceData() terra.StringValue {
	return terra.ReferenceAsString(sspd.ref.Append("managed_service_data"))
}

func (sspd securityServicePolicyDataAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(sspd.ref.Append("type"))
}

type ExcludeMapState struct {
	Account []string `json:"account"`
	Orgunit []string `json:"orgunit"`
}

type IncludeMapState struct {
	Account []string `json:"account"`
	Orgunit []string `json:"orgunit"`
}

type SecurityServicePolicyDataState struct {
	ManagedServiceData string `json:"managed_service_data"`
	Type               string `json:"type"`
}
