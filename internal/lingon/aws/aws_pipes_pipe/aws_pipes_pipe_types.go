// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_pipes_pipe

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type SourceParameters struct {
	// SourceParametersFilterCriteria is optional.
	FilterCriteria *SourceParametersFilterCriteria `hcl:"filter_criteria,block"`
}

type SourceParametersFilterCriteria struct {
	// SourceParametersFilterCriteriaFilter is min=0,max=5.
	Filter []SourceParametersFilterCriteriaFilter `hcl:"filter,block" validate:"min=0,max=5"`
}

type SourceParametersFilterCriteriaFilter struct {
	// Pattern is required.
	Pattern terra.StringValue `hcl:"pattern,attr" validate:"required"`
}

type TargetParameters struct {
	// InputTemplate is optional.
	InputTemplate terra.StringValue `hcl:"input_template,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type sourceParametersAttributes struct {
	ref terra.Reference
}

func (sp sourceParametersAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp sourceParametersAttributes) InternalWithRef(ref terra.Reference) sourceParametersAttributes {
	return sourceParametersAttributes{ref: ref}
}

func (sp sourceParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp sourceParametersAttributes) FilterCriteria() terra.ListValue[sourceParametersFilterCriteriaAttributes] {
	return terra.ReferenceAsList[sourceParametersFilterCriteriaAttributes](sp.ref.Append("filter_criteria"))
}

type sourceParametersFilterCriteriaAttributes struct {
	ref terra.Reference
}

func (fc sourceParametersFilterCriteriaAttributes) InternalRef() (terra.Reference, error) {
	return fc.ref, nil
}

func (fc sourceParametersFilterCriteriaAttributes) InternalWithRef(ref terra.Reference) sourceParametersFilterCriteriaAttributes {
	return sourceParametersFilterCriteriaAttributes{ref: ref}
}

func (fc sourceParametersFilterCriteriaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fc.ref.InternalTokens()
}

func (fc sourceParametersFilterCriteriaAttributes) Filter() terra.ListValue[sourceParametersFilterCriteriaFilterAttributes] {
	return terra.ReferenceAsList[sourceParametersFilterCriteriaFilterAttributes](fc.ref.Append("filter"))
}

type sourceParametersFilterCriteriaFilterAttributes struct {
	ref terra.Reference
}

func (f sourceParametersFilterCriteriaFilterAttributes) InternalRef() (terra.Reference, error) {
	return f.ref, nil
}

func (f sourceParametersFilterCriteriaFilterAttributes) InternalWithRef(ref terra.Reference) sourceParametersFilterCriteriaFilterAttributes {
	return sourceParametersFilterCriteriaFilterAttributes{ref: ref}
}

func (f sourceParametersFilterCriteriaFilterAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return f.ref.InternalTokens()
}

func (f sourceParametersFilterCriteriaFilterAttributes) Pattern() terra.StringValue {
	return terra.ReferenceAsString(f.ref.Append("pattern"))
}

type targetParametersAttributes struct {
	ref terra.Reference
}

func (tp targetParametersAttributes) InternalRef() (terra.Reference, error) {
	return tp.ref, nil
}

func (tp targetParametersAttributes) InternalWithRef(ref terra.Reference) targetParametersAttributes {
	return targetParametersAttributes{ref: ref}
}

func (tp targetParametersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return tp.ref.InternalTokens()
}

func (tp targetParametersAttributes) InputTemplate() terra.StringValue {
	return terra.ReferenceAsString(tp.ref.Append("input_template"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type SourceParametersState struct {
	FilterCriteria []SourceParametersFilterCriteriaState `json:"filter_criteria"`
}

type SourceParametersFilterCriteriaState struct {
	Filter []SourceParametersFilterCriteriaFilterState `json:"filter"`
}

type SourceParametersFilterCriteriaFilterState struct {
	Pattern string `json:"pattern"`
}

type TargetParametersState struct {
	InputTemplate string `json:"input_template"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
