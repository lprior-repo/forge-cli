// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_fsx_data_repository_association

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type S3 struct {
	// S3AutoExportPolicy is optional.
	AutoExportPolicy *S3AutoExportPolicy `hcl:"auto_export_policy,block"`
	// S3AutoImportPolicy is optional.
	AutoImportPolicy *S3AutoImportPolicy `hcl:"auto_import_policy,block"`
}

type S3AutoExportPolicy struct {
	// Events is optional.
	Events terra.ListValue[terra.StringValue] `hcl:"events,attr"`
}

type S3AutoImportPolicy struct {
	// Events is optional.
	Events terra.ListValue[terra.StringValue] `hcl:"events,attr"`
}

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type s3Attributes struct {
	ref terra.Reference
}

func (s s3Attributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s s3Attributes) InternalWithRef(ref terra.Reference) s3Attributes {
	return s3Attributes{ref: ref}
}

func (s s3Attributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s s3Attributes) AutoExportPolicy() terra.ListValue[s3AutoExportPolicyAttributes] {
	return terra.ReferenceAsList[s3AutoExportPolicyAttributes](s.ref.Append("auto_export_policy"))
}

func (s s3Attributes) AutoImportPolicy() terra.ListValue[s3AutoImportPolicyAttributes] {
	return terra.ReferenceAsList[s3AutoImportPolicyAttributes](s.ref.Append("auto_import_policy"))
}

type s3AutoExportPolicyAttributes struct {
	ref terra.Reference
}

func (aep s3AutoExportPolicyAttributes) InternalRef() (terra.Reference, error) {
	return aep.ref, nil
}

func (aep s3AutoExportPolicyAttributes) InternalWithRef(ref terra.Reference) s3AutoExportPolicyAttributes {
	return s3AutoExportPolicyAttributes{ref: ref}
}

func (aep s3AutoExportPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aep.ref.InternalTokens()
}

func (aep s3AutoExportPolicyAttributes) Events() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aep.ref.Append("events"))
}

type s3AutoImportPolicyAttributes struct {
	ref terra.Reference
}

func (aip s3AutoImportPolicyAttributes) InternalRef() (terra.Reference, error) {
	return aip.ref, nil
}

func (aip s3AutoImportPolicyAttributes) InternalWithRef(ref terra.Reference) s3AutoImportPolicyAttributes {
	return s3AutoImportPolicyAttributes{ref: ref}
}

func (aip s3AutoImportPolicyAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aip.ref.InternalTokens()
}

func (aip s3AutoImportPolicyAttributes) Events() terra.ListValue[terra.StringValue] {
	return terra.ReferenceAsList[terra.StringValue](aip.ref.Append("events"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type S3State struct {
	AutoExportPolicy []S3AutoExportPolicyState `json:"auto_export_policy"`
	AutoImportPolicy []S3AutoImportPolicyState `json:"auto_import_policy"`
}

type S3AutoExportPolicyState struct {
	Events []string `json:"events"`
}

type S3AutoImportPolicyState struct {
	Events []string `json:"events"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
