// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_vpc_endpoint_service

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Timeouts struct {
	// Create is optional.
	Create terra.StringValue `hcl:"create,attr"`
	// Delete is optional.
	Delete terra.StringValue `hcl:"delete,attr"`
	// Update is optional.
	Update terra.StringValue `hcl:"update,attr"`
}

type privateDnsNameConfigurationAttributes struct {
	ref terra.Reference
}

func (pdnc privateDnsNameConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return pdnc.ref, nil
}

func (pdnc privateDnsNameConfigurationAttributes) InternalWithRef(ref terra.Reference) privateDnsNameConfigurationAttributes {
	return privateDnsNameConfigurationAttributes{ref: ref}
}

func (pdnc privateDnsNameConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return pdnc.ref.InternalTokens()
}

func (pdnc privateDnsNameConfigurationAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(pdnc.ref.Append("name"))
}

func (pdnc privateDnsNameConfigurationAttributes) State() terra.StringValue {
	return terra.ReferenceAsString(pdnc.ref.Append("state"))
}

func (pdnc privateDnsNameConfigurationAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(pdnc.ref.Append("type"))
}

func (pdnc privateDnsNameConfigurationAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(pdnc.ref.Append("value"))
}

type timeoutsAttributes struct {
	ref terra.Reference
}

func (t timeoutsAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t timeoutsAttributes) InternalWithRef(ref terra.Reference) timeoutsAttributes {
	return timeoutsAttributes{ref: ref}
}

func (t timeoutsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t timeoutsAttributes) Create() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("create"))
}

func (t timeoutsAttributes) Delete() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("delete"))
}

func (t timeoutsAttributes) Update() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("update"))
}

type PrivateDnsNameConfigurationState struct {
	Name  string `json:"name"`
	State string `json:"state"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

type TimeoutsState struct {
	Create string `json:"create"`
	Delete string `json:"delete"`
	Update string `json:"update"`
}
