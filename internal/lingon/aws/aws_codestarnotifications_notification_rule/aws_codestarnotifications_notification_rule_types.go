// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_codestarnotifications_notification_rule

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Target struct {
	// Address is required.
	Address terra.StringValue `hcl:"address,attr" validate:"required"`
	// Type is optional.
	Type terra.StringValue `hcl:"type,attr"`
}

type targetAttributes struct {
	ref terra.Reference
}

func (t targetAttributes) InternalRef() (terra.Reference, error) {
	return t.ref, nil
}

func (t targetAttributes) InternalWithRef(ref terra.Reference) targetAttributes {
	return targetAttributes{ref: ref}
}

func (t targetAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return t.ref.InternalTokens()
}

func (t targetAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("address"))
}

func (t targetAttributes) Status() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("status"))
}

func (t targetAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(t.ref.Append("type"))
}

type TargetState struct {
	Address string `json:"address"`
	Status  string `json:"status"`
	Type    string `json:"type"`
}
