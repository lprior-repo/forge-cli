// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_media_convert_queue

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type ReservationPlanSettings struct {
	// Commitment is required.
	Commitment terra.StringValue `hcl:"commitment,attr" validate:"required"`
	// RenewalType is required.
	RenewalType terra.StringValue `hcl:"renewal_type,attr" validate:"required"`
	// ReservedSlots is required.
	ReservedSlots terra.NumberValue `hcl:"reserved_slots,attr" validate:"required"`
}

type reservationPlanSettingsAttributes struct {
	ref terra.Reference
}

func (rps reservationPlanSettingsAttributes) InternalRef() (terra.Reference, error) {
	return rps.ref, nil
}

func (rps reservationPlanSettingsAttributes) InternalWithRef(ref terra.Reference) reservationPlanSettingsAttributes {
	return reservationPlanSettingsAttributes{ref: ref}
}

func (rps reservationPlanSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rps.ref.InternalTokens()
}

func (rps reservationPlanSettingsAttributes) Commitment() terra.StringValue {
	return terra.ReferenceAsString(rps.ref.Append("commitment"))
}

func (rps reservationPlanSettingsAttributes) RenewalType() terra.StringValue {
	return terra.ReferenceAsString(rps.ref.Append("renewal_type"))
}

func (rps reservationPlanSettingsAttributes) ReservedSlots() terra.NumberValue {
	return terra.ReferenceAsNumber(rps.ref.Append("reserved_slots"))
}

type ReservationPlanSettingsState struct {
	Commitment    string  `json:"commitment"`
	RenewalType   string  `json:"renewal_type"`
	ReservedSlots float64 `json:"reserved_slots"`
}
