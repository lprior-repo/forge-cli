// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_redshiftserverless_workgroup

import "github.com/golingon/lingon/pkg/terra"

var _ terra.DataSource = (*DataSource)(nil)

/*
DataSource is the data source aws_redshiftserverless_workgroup.

Documentation: https://registry.terraform.io/providers/hashicorp/aws/5.0.0/docs
*/
type DataSource struct {
	Name string
	Args DataArgs
}

// DataSource returns the Terraform object type for [DataSource].
func (arw *DataSource) DataSource() string {
	return "aws_redshiftserverless_workgroup"
}

// LocalName returns the local name for [DataSource].
func (arw *DataSource) LocalName() string {
	return arw.Name
}

// Configuration returns the configuration (args) for [DataSource].
func (arw *DataSource) Configuration() interface{} {
	return arw.Args
}

// Attributes returns the attributes for [DataSource].
func (arw *DataSource) Attributes() dataAwsRedshiftserverlessWorkgroupAttributes {
	return dataAwsRedshiftserverlessWorkgroupAttributes{ref: terra.ReferenceDataSource(arw)}
}

// DataArgs contains the configurations for aws_redshiftserverless_workgroup.
type DataArgs struct {
	// Id is optional.
	Id terra.StringValue `hcl:"id,attr"`
	// WorkgroupName is required.
	WorkgroupName terra.StringValue `hcl:"workgroup_name,attr" validate:"required"`
}

type dataAwsRedshiftserverlessWorkgroupAttributes struct {
	ref terra.Reference
}

// Arn returns a reference to field arn of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) Arn() terra.StringValue {
	return terra.ReferenceAsString(arw.ref.Append("arn"))
}

// EnhancedVpcRouting returns a reference to field enhanced_vpc_routing of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) EnhancedVpcRouting() terra.BoolValue {
	return terra.ReferenceAsBool(arw.ref.Append("enhanced_vpc_routing"))
}

// Id returns a reference to field id of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(arw.ref.Append("id"))
}

// NamespaceName returns a reference to field namespace_name of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) NamespaceName() terra.StringValue {
	return terra.ReferenceAsString(arw.ref.Append("namespace_name"))
}

// PubliclyAccessible returns a reference to field publicly_accessible of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) PubliclyAccessible() terra.BoolValue {
	return terra.ReferenceAsBool(arw.ref.Append("publicly_accessible"))
}

// SecurityGroupIds returns a reference to field security_group_ids of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) SecurityGroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](arw.ref.Append("security_group_ids"))
}

// SubnetIds returns a reference to field subnet_ids of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) SubnetIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](arw.ref.Append("subnet_ids"))
}

// WorkgroupId returns a reference to field workgroup_id of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) WorkgroupId() terra.StringValue {
	return terra.ReferenceAsString(arw.ref.Append("workgroup_id"))
}

// WorkgroupName returns a reference to field workgroup_name of aws_redshiftserverless_workgroup.
func (arw dataAwsRedshiftserverlessWorkgroupAttributes) WorkgroupName() terra.StringValue {
	return terra.ReferenceAsString(arw.ref.Append("workgroup_name"))
}

func (arw dataAwsRedshiftserverlessWorkgroupAttributes) Endpoint() terra.ListValue[DataendpointAttributes] {
	return terra.ReferenceAsList[DataendpointAttributes](arw.ref.Append("endpoint"))
}
