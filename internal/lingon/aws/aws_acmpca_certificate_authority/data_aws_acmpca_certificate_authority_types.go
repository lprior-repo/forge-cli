// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package aws_acmpca_certificate_authority

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type DatarevocationConfigurationAttributes struct {
	ref terra.Reference
}

func (rc DatarevocationConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return rc.ref, nil
}

func (rc DatarevocationConfigurationAttributes) InternalWithRef(ref terra.Reference) DatarevocationConfigurationAttributes {
	return DatarevocationConfigurationAttributes{ref: ref}
}

func (rc DatarevocationConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return rc.ref.InternalTokens()
}

func (rc DatarevocationConfigurationAttributes) CrlConfiguration() terra.ListValue[DatarevocationConfigurationCrlConfigurationAttributes] {
	return terra.ReferenceAsList[DatarevocationConfigurationCrlConfigurationAttributes](rc.ref.Append("crl_configuration"))
}

func (rc DatarevocationConfigurationAttributes) OcspConfiguration() terra.ListValue[DatarevocationConfigurationOcspConfigurationAttributes] {
	return terra.ReferenceAsList[DatarevocationConfigurationOcspConfigurationAttributes](rc.ref.Append("ocsp_configuration"))
}

type DatarevocationConfigurationCrlConfigurationAttributes struct {
	ref terra.Reference
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) InternalWithRef(ref terra.Reference) DatarevocationConfigurationCrlConfigurationAttributes {
	return DatarevocationConfigurationCrlConfigurationAttributes{ref: ref}
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) CustomCname() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("custom_cname"))
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("enabled"))
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) ExpirationInDays() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("expiration_in_days"))
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) S3BucketName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("s3_bucket_name"))
}

func (cc DatarevocationConfigurationCrlConfigurationAttributes) S3ObjectAcl() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("s3_object_acl"))
}

type DatarevocationConfigurationOcspConfigurationAttributes struct {
	ref terra.Reference
}

func (oc DatarevocationConfigurationOcspConfigurationAttributes) InternalRef() (terra.Reference, error) {
	return oc.ref, nil
}

func (oc DatarevocationConfigurationOcspConfigurationAttributes) InternalWithRef(ref terra.Reference) DatarevocationConfigurationOcspConfigurationAttributes {
	return DatarevocationConfigurationOcspConfigurationAttributes{ref: ref}
}

func (oc DatarevocationConfigurationOcspConfigurationAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oc.ref.InternalTokens()
}

func (oc DatarevocationConfigurationOcspConfigurationAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(oc.ref.Append("enabled"))
}

func (oc DatarevocationConfigurationOcspConfigurationAttributes) OcspCustomCname() terra.StringValue {
	return terra.ReferenceAsString(oc.ref.Append("ocsp_custom_cname"))
}

type DataRevocationConfigurationState struct {
	CrlConfiguration  []DataRevocationConfigurationCrlConfigurationState  `json:"crl_configuration"`
	OcspConfiguration []DataRevocationConfigurationOcspConfigurationState `json:"ocsp_configuration"`
}

type DataRevocationConfigurationCrlConfigurationState struct {
	CustomCname      string  `json:"custom_cname"`
	Enabled          bool    `json:"enabled"`
	ExpirationInDays float64 `json:"expiration_in_days"`
	S3BucketName     string  `json:"s3_bucket_name"`
	S3ObjectAcl      string  `json:"s3_object_acl"`
}

type DataRevocationConfigurationOcspConfigurationState struct {
	Enabled         bool   `json:"enabled"`
	OcspCustomCname string `json:"ocsp_custom_cname"`
}
